"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[7188],{28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>o});var i=s(96540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},66954:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"user-manual/gaussian-splatting/rendering/performance","title":"Performance","description":"Rendering splats can be expensive on both the CPU and GPU. Here are some strategies to achieve good performance:","source":"@site/docs/user-manual/gaussian-splatting/rendering/performance.md","sourceDirName":"user-manual/gaussian-splatting/rendering","slug":"/user-manual/gaussian-splatting/rendering/performance","permalink":"/ja/user-manual/gaussian-splatting/rendering/performance","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/gaussian-splatting/rendering/performance.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Performance","sidebar_position":5},"sidebar":"userManualSidebar","previous":{"title":"Custom Shaders","permalink":"/ja/user-manual/gaussian-splatting/rendering/custom-shaders"},"next":{"title":"\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3","permalink":"/ja/user-manual/animation/"}}');var t=s(74848),a=s(28453);const r={title:"Performance",sidebar_position:5},o=void 0,l={},c=[{value:"Limit Gaussian Count",id:"limit-gaussian-count",level:2},{value:"Fill Rate Considerations",id:"fill-rate-considerations",level:2},{value:"Configure Scene Settings",id:"configure-scene-settings",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Rendering splats can be expensive on both the CPU and GPU. Here are some strategies to achieve good performance:"}),"\n",(0,t.jsx)(n.h2,{id:"limit-gaussian-count",children:"Limit Gaussian Count"}),"\n",(0,t.jsxs)(n.p,{children:["Be mindful of the number of Gaussians in your scene since every Gaussian is sorted on camera depth every frame. You can check the number contained within a particular GSplat asset by using the ",(0,t.jsx)(n.a,{href:"https://github.com/playcanvas/supersplat/wiki/Inspecting-Splat-Data",children:"SPLAT DATA Panel"})," in the ",(0,t.jsx)(n.a,{href:"https://superspl.at/editor",children:"SuperSplat Editor"}),". Use SuperSplat to trim unwanted Gaussians from your PLY files."]}),"\n",(0,t.jsx)(n.h2,{id:"fill-rate-considerations",children:"Fill Rate Considerations"}),"\n",(0,t.jsx)(n.p,{children:"3D Gaussian Splatting is particularly expensive in terms of fill rate (fragment operations). This is because:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"High Overdraw"}),": Each Gaussian splat is rendered as a textured billboard (quad) that often overlaps with many other splats"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Transparency Blending"}),": Splats use alpha blending to achieve smooth appearance, requiring expensive per-fragment blending operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fragment Density"}),": Dense splat clouds can result in dozens or even hundreds of fragments being processed for each final pixel"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This high fragment cost is why optimizing pixel count and rendering settings is crucial for 3DGS performance."}),"\n",(0,t.jsx)(n.h3,{id:"configure-scene-settings",children:"Configure Scene Settings"}),"\n",(0,t.jsx)(n.p,{children:"Given the fragment-heavy nature of Gaussian splatting, these settings have a significant impact on performance:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Disable ",(0,t.jsx)(n.code,{children:"Anti-Alias"})]}),": Anti-aliasing multiplies the number of fragments processed per pixel, which is especially costly for splat rendering"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Disable ",(0,t.jsx)(n.code,{children:"Device Pixel Ratio"})]}),": This reduces the overall pixel resolution, directly reducing the number of fragments that need to be processed"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Both settings help reduce the fragment processing load, which is the primary bottleneck in 3DGS rendering."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);