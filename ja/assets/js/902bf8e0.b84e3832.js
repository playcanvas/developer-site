"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[25713],{7184:(e,n,t)=>{t.d(n,{C:()=>E,G:()=>R});var a=t(11470),s=t(19365),r=t(59849),o=t(96540),i=t(95293),l=t(9764),c=t(18676),p=t(58817),d=t(19748),h=t(83395),u=t(43025),m=t(10977),y=t(7306),b=t(68869),x=t(78692),g=t(8939),f=t(40050),w=t(93953),v=t(27351),j=t(74848);const S="// \u2191 imports hidden",R=({code:e,label:n,filename:t,language:i="jsx",showDemo:c=!1,showViewSourceButton:p=!0,showControls:d=!0,children:h})=>{const[u,m]=(0,o.useState)(0);if(!h||!e)return console.error("CodeExample: code and children are required"),null;return(0,j.jsxs)(a.A,{defaultValue:u>0?"Code":c?"Demo":"Code",children:[(0,j.jsx)(s.A,{value:"Demo",children:(0,j.jsxs)("div",{className:"code-example-demo",children:[h,p&&(0,j.jsxs)("div",{className:"code-example-demo-footer",children:[n," - ",(0,j.jsx)("a",{href:"#",onClick:e=>{e.preventDefault(),m(e=>e+1)},children:"View Code"})]}),(0,j.jsx)("div",{className:"code-example-controls",children:(0,j.jsx)(l.XA,{fill:!0,hidden:!1===d})})]})}),(0,j.jsx)(s.A,{value:"Code",children:(0,j.jsx)(r.A,{language:i,title:t,children:e.includes(S)?S+e.split(S)[1]:e})})]},u)},C=e=>{const{width:n=8,depth:t=8,intensity:a=.75}=e,s=(0,o.useMemo)(()=>new w.e(n,1,t),[n,t]);return(0,j.jsxs)(c.w,{children:[(0,j.jsx)(d.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:v.au1,shadowUpdateMode:v.M5l,vsmBlurSize:8,shadowIntensity:a,intensity:0}),(0,j.jsx)(h.e,{script:g.X,intensity:a,scale:s})]})},E=({children:e,useLight:n=!0,useControls:t=!1,useGrid:a=!1,useShadow:s=!1,camera:r=[0,0,10],sceneOffset:l=[0,-.501,0],exposure:d=1})=>{const{colorMode:g}=(0,i.G)(),w=(0,m.n)(),{asset:v}=(0,y.yj)("/assets/helipad.png"),S="dark"===g?"#2a2a2a":"#e4e0e0",[R,E]=(0,o.useState)(!1),[N,D]=(0,o.useState)(!1),A=(0,o.useCallback)(()=>E(!0),[]),k=(0,o.useCallback)(()=>E(!1),[]),M=(0,o.useCallback)(()=>D(!0),[]),G=(0,o.useCallback)(()=>D(!1),[]);return(0,o.useEffect)(()=>{const e=w.graphicsDevice.canvas;e.style.cursor=R?"grabbing":N?"grab":"default"},[R,N,w]),(0,o.useEffect)(()=>{const e=()=>E(!1);return w.graphicsDevice.canvas.addEventListener("pointerup",e),()=>w.graphicsDevice?.canvas.removeEventListener("pointerup",e)},[w]),(0,j.jsxs)(c.w,{children:[(0,j.jsxs)(c.w,{name:"camera",position:r,children:[(0,j.jsx)(p.i,{clearColor:S,renderSceneColorMap:!0}),t&&(0,j.jsx)(h.e,{script:b.a,enableFly:!1,pitchRange:new f.Z(-90,-5)})]}),n&&(0,j.jsx)(u.O,{envAtlas:v,showSkybox:!1,exposure:d}),a&&(0,j.jsx)(c.w,{name:"grid",scale:[1e3,1,1e3],position:[0,-.5,0],children:(0,j.jsx)(h.e,{script:x.x})}),s&&(0,j.jsx)(c.w,{position:l,children:(0,j.jsx)(C,{})}),(0,j.jsx)(c.w,{onPointerOver:M,onPointerOut:G,onPointerDown:A,onPointerUp:k,children:e})]})}},24421:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(18676),s=t(19748),r=t(83395),o=t(93953),i=t(27351),l=t(8939),c=t(96540),p=t(74848);const d=e=>{const{width:n=2,depth:t=2,intensity:d=.75}=e,h=(0,c.useMemo)(()=>new o.e(n,1,t),[n,t]);return(0,p.jsxs)(a.w,{position:[0,.001,0],children:[(0,p.jsx)(s.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:i.au1,shadowUpdateMode:i.M5l,vsmBlurSize:8,shadowIntensity:d,intensity:0}),(0,p.jsx)(r.e,{script:l.X,intensity:d,scale:h})]})}},49801:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(18676),s=t(83395),r=t(78692),o=t(74848);const i=({...e})=>(0,o.jsx)(a.w,{scale:[1e3,1,1e3],children:(0,o.jsx)(s.e,{script:r.x,...e})})},53558:(e,n,t)=>{t.d(n,{A:()=>g});var a=t(96540),s=t(68869),r=t(8939),o=t(78692),i=t(14007),l=t(25303),c=t(34363),p=t(53512),d=t(49801),h=t(24421),u=t(85593),m=t(83395),y=t(83171),b=t(74848);const x=e=>(0,b.jsx)(m.e,{script:y.d,...e}),g={React:a,...a,...i,...l,...c,...p,Grid:d.A,ShadowCatcher:h.A,GridScript:o.x,ShadowCatcherScript:r.X,StaticPostEffects:u.A,AutoRotate:x,CameraControls:s.a}},75553:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>m,default:()=>g,frontMatter:()=>u,metadata:()=>a,toc:()=>b});const a=JSON.parse('{"id":"user-manual/playcanvas-react/api/render","title":"<Render/>","description":"Documentation for the Render component","source":"@site/docs/user-manual/playcanvas-react/api/render.mdx","sourceDirName":"user-manual/playcanvas-react/api","slug":"/user-manual/playcanvas-react/api/render","permalink":"/ja/user-manual/playcanvas-react/api/render","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/api/render.mdx","tags":[],"version":"current","frontMatter":{"description":"Documentation for the Render component"},"sidebar":"userManualSidebar","previous":{"title":"<Light/>","permalink":"/ja/user-manual/playcanvas-react/api/light"},"next":{"title":"<Rigidbody/>","permalink":"/ja/user-manual/playcanvas-react/api/rigidbody"}}');var s=t(74848),r=t(28453),o=t(7184),i=t(78264),l=t(18676),c=t(16230),p=t(96540);const d=()=>{const[e,n]=(0,p.useState)("box");return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.w,{position:[0,0,0],children:(0,s.jsx)(c.d,{type:e})}),(0,s.jsxs)("div",{className:"overlay",children:[(0,s.jsx)("button",{"data-selected":"sphere"===e,onClick:()=>n("sphere"),children:"Sphere"}),(0,s.jsx)("button",{"data-selected":"box"===e,onClick:()=>n("box"),children:"Box"})]})]})},h="import { Entity } from '@playcanvas/react'\nimport { Render } from '@playcanvas/react/components'\nimport { useState } from 'react';\n\nexport const RenderBox = () => {\n\n  const [shape, setShape] = useState('box');\n\n  const onSphereClick = () => setShape('sphere');\n  const onBoxClick = () => setShape('box');\n\n  return (<>\n    <Entity position={[0, 0, 0]}>\n      <Render type={shape} />\n    </Entity>\n    <div className=\"overlay\">\n      <button data-selected={shape === 'sphere'} onClick={onSphereClick}>Sphere</button>\n      <button data-selected={shape === 'box'} onClick={onBoxClick}>Box</button>\n    </div>\n    </>\n  )\n}\n\n",u={description:"Documentation for the Render component"},m="<Render/>",y={},b=[{value:"Rendering an Asset",id:"rendering-an-asset",level:2},{value:"Properties",id:"properties",level:2}];function x(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components},{RenderApiDocs:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RenderApiDocs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"render",children:(0,s.jsx)(n.code,{children:"<Render/>"})})}),"\n","\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<Render/>"})," component allows an ",(0,s.jsx)(n.a,{href:"../entity",children:(0,s.jsx)(n.code,{children:"<Entity/>"})})," to display a 3D asset or primitive shape. Adding the ",(0,s.jsx)(n.code,{children:"<Render/>"})," component to an ",(0,s.jsx)(n.a,{href:"../entity",children:(0,s.jsx)(n.code,{children:"<Entity/>"})})," will add a ",(0,s.jsx)(n.code,{children:"RenderComponent"})," to the entity. The ",(0,s.jsx)(n.code,{children:"type"})," prop allows you to select the primitive shape to render."]}),"\n",(0,s.jsx)(o.G,{label:"Render a primitive shape",filename:"render-box.jsx",code:h,showDemo:!0,children:(0,s.jsx)(i.l,{children:(0,s.jsx)(o.C,{camera:[2,.75,2],useGrid:!0,useControls:!0,children:(0,s.jsx)(d,{})})})}),"\n",(0,s.jsx)(n.h2,{id:"rendering-an-asset",children:"Rendering an Asset"}),"\n",(0,s.jsxs)(n.p,{children:["To render a 3D model loaded from a URL, you can use the asset type and pass the asset directly to the ",(0,s.jsx)(n.code,{children:"asset"})," prop. You can learn more about loading assets in the ",(0,s.jsx)(n.a,{href:"../../guide/loading-assets",children:"loading assets guide"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"copy",children:"import { Render } from '@playcanvas/react/components'\nimport { useModel } from '@playcanvas/react/hooks'\n\nconst RenderModel = () => {\n  const { asset } = useModel('model.glb')\n\n  if (!asset) return null\n\n  return <Entity>\n    <Render type=\"asset\" asset={asset} />\n  </Entity>\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Learn more about the ",(0,s.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/RenderComponent.html",children:"Render Component"})," in the PlayCanvas documentation."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t,{data:'[{"name":"default","description":"","entries":[{"name":"type","description":"The type of primitive shape to render.","optional":false,"defaultValue":"\\"box\\"","type":{"displayName":"\\"asset\\" | \\"box\\" | \\"capsule\\" | \\"cone\\" | \\"cylinder\\" | \\"plane\\" | \\"sphere\\" | \\"torus\\"","types":[{"name":"\\"asset\\"","url":null},{"name":"\\"box\\"","url":null},{"name":"\\"capsule\\"","url":null},{"name":"\\"cone\\"","url":null},{"name":"\\"cylinder\\"","url":null},{"name":"\\"plane\\"","url":null},{"name":"\\"sphere\\"","url":null},{"name":"\\"torus\\"","url":null}]}},{"name":"asset","description":"The asset to render.","optional":true,"type":{"displayName":"Asset","types":[{"name":"Asset","url":"https://api.playcanvas.com/engine/classes/Asset.html"}]}},{"name":"children","description":"","optional":true,"type":{"displayName":"ReactNode","types":[{"name":"string","url":null},{"name":"number","url":null},{"name":"bigint","url":null},{"name":"false","url":null},{"name":"true","url":null},{"name":"ReactElement","url":null},{"name":"Iterable","url":null},{"name":"ReactPortal","url":null},{"name":"Promise","url":null}]}},{"name":"isStatic","description":"Mark meshes as non-movable (optimization).","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"renderStyle","description":"Sets the render style of this component\'s MeshInstances. Can be:\\n\\n- RENDERSTYLE_SOLID\\n- RENDERSTYLE_WIREFRAME\\n- RENDERSTYLE_POINTS\\n\\nDefaults to RENDERSTYLE_SOLID.\\nGets the render style of this component\'s MeshInstances.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"customAabb","description":"Sets the custom object space bounding box that is used for visibility culling of attached\\nmesh instances. This is an optimization, allowing an oversized bounding box to be specified\\nfor skinned characters in order to avoid per frame bounding box computations based on bone\\npositions.\\nGets the custom object space bounding box that is used for visibility culling of attached\\nmesh instances.","optional":true,"type":{"displayName":"BoundingBox | null","types":[{"name":"BoundingBox","url":"https://api.playcanvas.com/engine/classes/BoundingBox.html"}]}},{"name":"meshInstances","description":"Sets the array of meshInstances contained in the component.\\nGets the array of meshInstances contained in the component.","optional":true,"type":{"displayName":"MeshInstance[]","types":[{"name":"Array","url":null}]}},{"name":"lightmapped","description":"Sets whether the component is affected by the runtime lightmapper. If true, the meshes will\\nbe lightmapped after using lightmapper.bake().\\nGets whether the component is affected by the runtime lightmapper.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"castShadows","description":"Sets whether attached meshes will cast shadows for lights that have shadow casting enabled.\\nGets whether attached meshes will cast shadows for lights that have shadow casting enabled.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"receiveShadows","description":"Sets whether shadows will be cast on attached meshes.\\nGets whether shadows will be cast on attached meshes.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"castShadowsLightmap","description":"Sets whether meshes instances will cast shadows when rendering lightmaps.\\nGets whether meshes instances will cast shadows when rendering lightmaps.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"lightmapSizeMultiplier","description":"Sets the lightmap resolution multiplier.\\nGets the lightmap resolution multiplier.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"layers","description":"Sets the array of layer IDs (Layer#id ) to which the mesh instances belong. Don\'t\\npush, pop, splice or modify this array. If you want to change it, set a new one instead.\\nGets the array of layer IDs (Layer#id ) to which the mesh instances belong.","optional":true,"type":{"displayName":"number[]","types":[{"name":"Array","url":null}]}},{"name":"batchGroupId","description":"Sets the batch group for the mesh instances in this component (see BatchGroup).\\nDefault is -1 (no group).\\nGets the batch group for the mesh instances in this component (see BatchGroup).","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"material","description":"Sets the material Material that will be used to render the component. The material\\nis ignored for renders of type \'asset\'.\\nGets the material Material that will be used to render the component.","optional":true,"type":{"displayName":"Material","types":[{"name":"Material","url":"https://api.playcanvas.com/engine/classes/Material.html"}]}},{"name":"materialAssets","description":"Sets the material assets that will be used to render the component. Each material\\ncorresponds to the respective mesh instance.\\nGets the material assets that will be used to render the component.","optional":true,"type":{"displayName":"number[] | Asset[]","types":[{"name":"Array","url":null},{"name":"Array","url":null}]}},{"name":"rootBone","description":"Sets the root bone entity (or entity guid) for the render component.\\nGets the root bone entity for the render component.","optional":true,"type":{"displayName":"Entity | null","types":[{"name":"Entity","url":"https://api.playcanvas.com/engine/classes/Entity.html"}]}},{"name":"materialAsset","description":"","optional":true,"type":{"displayName":"any","types":[{"name":"any","url":null}]}},{"name":"system","description":"The ComponentSystem used to create this Component.","optional":true,"type":{"displayName":"ComponentSystem","types":[{"name":"ComponentSystem","url":"https://api.playcanvas.com/engine/classes/ComponentSystem.html"}]}},{"name":"entity","description":"The Entity that this Component is attached to.","optional":true,"type":{"displayName":"Entity","types":[{"name":"Entity","url":"https://api.playcanvas.com/engine/classes/Entity.html"}]}},{"name":"enabled","description":"Sets the enabled state of the component.\\nGets the enabled state of the component.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}}]}]'})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},85593:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(83395),s=t(15817),r=t(74848);const o=e=>{const n={lighting:{exposure:1.21,skyBoxIntensity:1.02},rendering:{renderFormat:18,renderTargetScale:1,sharpness:0,samples:4,toneMapping:4,fog:"none",fogColor:{r:0,g:0,b:0,a:1},fogRange:[0,100],fogDensity:.01,renderFormatFallback0:12,renderFormatFallback1:14,sceneColorMap:!1,sceneDepthMap:!1,fogStart:0,fogEnd:100},bloom:{enabled:!0,intensity:.1,lastMipLevel:1},grading:{enabled:!0,brightness:.83,contrast:1.1,saturation:1.2,tint:{r:1,g:.9333333333333333,b:.8666666666666667,a:1}},vignette:{enabled:!0,intensity:1,inner:.25,outer:1.52,curvature:.78},fringing:{enabled:!0,intensity:10},...e};return(0,r.jsx)(a.e,{script:s.P,...n})}}}]);