"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[85320],{21601:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"user-manual/web-components/tags/pc-collision","title":"<pc-collision>","description":"The `` tag is used to define a collision component.","source":"@site/docs/user-manual/web-components/tags/pc-collision.md","sourceDirName":"user-manual/web-components/tags","slug":"/user-manual/web-components/tags/pc-collision","permalink":"/user-manual/web-components/tags/pc-collision","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/web-components/tags/pc-collision.md","tags":[],"version":"current","frontMatter":{"title":"<pc-collision>"},"sidebar":"userManualSidebar","previous":{"title":"<pc-camera>","permalink":"/user-manual/web-components/tags/pc-camera"},"next":{"title":"<pc-element>","permalink":"/user-manual/web-components/tags/pc-element"}}');var s=c(74848),i=c(28453);const l={title:"<pc-collision>"},r=void 0,d={},o=[{value:"Attributes",id:"attributes",level:2},{value:"Example",id:"example",level:2},{value:"JavaScript Interface",id:"javascript-interface",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<pc-collision>"})," tag is used to define a collision component."]}),"\n",(0,s.jsx)(n.admonition,{title:"Usage",type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["It must be a direct child of a ",(0,s.jsx)(n.a,{href:"../pc-entity",children:(0,s.jsx)(n.code,{children:"<pc-entity>"})}),"."]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"attributes",children:"Attributes"}),"\n",(0,s.jsx)("div",{className:"attribute-table",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"axis"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"1"'})}),(0,s.jsx)(n.td,{children:"Axis for cylinder/capsule shapes (0=X, 1=Y, 2=Z)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"convex-hull"})}),(0,s.jsx)(n.td,{children:"Flag"}),(0,s.jsx)(n.td,{children:"-"}),(0,s.jsx)(n.td,{children:"Whether to use a convex hull for mesh collision"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"enabled"})}),(0,s.jsx)(n.td,{children:"Boolean"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"true"'})}),(0,s.jsx)(n.td,{children:"Enabled state of the component"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"half-extents"})}),(0,s.jsx)(n.td,{children:"Vector3"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"0.5 0.5 0.5"'})}),(0,s.jsx)(n.td,{children:'Half-extents for box collision as "X Y Z" values'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"height"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"2"'})}),(0,s.jsx)(n.td,{children:"Height for cylinder/capsule collision shapes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"radius"})}),(0,s.jsx)(n.td,{children:"Number"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"0.5"'})}),(0,s.jsx)(n.td,{children:"Radius for sphere/cylinder/capsule collision shapes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{children:"Enum"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"box"'})}),(0,s.jsxs)(n.td,{children:["Collision shape: ",(0,s.jsx)(n.code,{children:'"box"'})," | ",(0,s.jsx)(n.code,{children:'"capsule"'})," | ",(0,s.jsx)(n.code,{children:'"cone"'})," | ",(0,s.jsx)(n.code,{children:'"cylinder"'})," | ",(0,s.jsx)(n.code,{children:'"sphere"'})]})]})]})]})}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'\x3c!-- static 1x1x1 box --\x3e\n<pc-entity>\n    <pc-render type="box"></pc-render>\n    <pc-collision></pc-collision>\n    <pc-rigidbody></pc-rigidbody>\n</pc-entity>\n\n\x3c!-- dynamic sphere with radius 0.5 --\x3e\n<pc-entity>\n    <pc-render type="sphere"></pc-render>\n    <pc-collision type="sphere"></pc-collision>\n    <pc-rigidbody type="dynamic"></pc-rigidbody>\n</pc-entity>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"javascript-interface",children:"JavaScript Interface"}),"\n",(0,s.jsxs)(n.p,{children:["You can programmatically create and manipulate ",(0,s.jsx)(n.code,{children:"<pc-collision>"})," elements using the ",(0,s.jsx)(n.a,{href:"https://api.playcanvas.com/web-components/classes/CollisionComponentElement.html",children:"CollisionComponentElement API"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,c)=>{c.d(n,{R:()=>l,x:()=>r});var t=c(96540);const s={},i=t.createContext(s);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);