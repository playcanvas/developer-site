"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[38779],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(96540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},87644:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"user-manual/gaussian-splatting/editing/splat-transform","title":"SplatTransform CLI Tool","description":"SplatTransform is a powerful command-line tool designed to make working with 3D Gaussian Splats effortless. Whether you need to convert between formats, apply transformations, or analyze splat data, SplatTransform provides the tools developers need for precise control over their Gaussian splat workflows.","source":"@site/docs/user-manual/gaussian-splatting/editing/splat-transform.md","sourceDirName":"user-manual/gaussian-splatting/editing","slug":"/user-manual/gaussian-splatting/editing/splat-transform","permalink":"/user-manual/gaussian-splatting/editing/splat-transform","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/gaussian-splatting/editing/splat-transform.md","tags":[],"version":"current","frontMatter":{"title":"SplatTransform CLI Tool"},"sidebar":"userManualSidebar","previous":{"title":"Publishing","permalink":"/user-manual/gaussian-splatting/editing/supersplat/publishing"},"next":{"title":"Building Splat-based Apps","permalink":"/user-manual/gaussian-splatting/building/"}}');var r=s(74848),a=s(28453);const i={title:"SplatTransform CLI Tool"},l=void 0,o={},d=[{value:"Why Use SplatTransform?",id:"why-use-splattransform",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Format Conversion",id:"format-conversion",level:3},{value:"Actions",id:"actions",level:2},{value:"Global Options",id:"global-options",level:2},{value:"Transformations",id:"transformations",level:2},{value:"Apply Spatial Transformations",id:"apply-spatial-transformations",level:3},{value:"Filtering and Optimization",id:"filtering-and-optimization",level:2},{value:"Smart Filtering",id:"smart-filtering",level:3},{value:"Scene Merging",id:"scene-merging",level:2},{value:"CSV Export for Data Analysis",id:"csv-export-for-data-analysis",level:2},{value:"Why CSV Export Matters",id:"why-csv-export-matters",level:3},{value:"Generators (Beta)",id:"generators-beta",level:2},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Production Optimization Pipeline",id:"production-optimization-pipeline",level:3},{value:"Format Migration",id:"format-migration",level:3},{value:"Quality Analysis",id:"quality-analysis",level:3},{value:"Multi-Scene Composition",id:"multi-scene-composition",level:3},{value:"Getting Help",id:"getting-help",level:2}];function p(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/playcanvas/splat-transform",children:"SplatTransform"})," is a powerful command-line tool designed to make working with 3D Gaussian Splats effortless. Whether you need to convert between formats, apply transformations, or analyze splat data, SplatTransform provides the tools developers need for precise control over their Gaussian splat workflows."]}),"\n",(0,r.jsx)(n.admonition,{title:"Open Source",type:"note",children:(0,r.jsxs)(n.p,{children:["SplatTransform is ",(0,r.jsx)(n.a,{href:"https://github.com/playcanvas/splat-transform",children:"open-sourced under an MIT license on GitHub"})]})}),"\n",(0,r.jsx)(n.h2,{id:"why-use-splattransform",children:"Why Use SplatTransform?"}),"\n",(0,r.jsx)(n.p,{children:"SplatTransform solves important problems developers face when working with Gaussian splats:"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd04 ",(0,r.jsx)(n.strong,{children:"Broad Format Support"})," \u2014 seamlessly convert between PLY, SPLAT, KSPLAT, SOG and even CSV",(0,r.jsx)(n.br,{}),"\n","\ud83d\udee0\ufe0f ",(0,r.jsx)(n.strong,{children:"Powerful Transformations"})," \u2014 translate, rotate, and scale your splats with precision",(0,r.jsx)(n.br,{}),"\n","\ud83e\uddf9 ",(0,r.jsx)(n.strong,{children:"Smart Filtering"})," \u2014 remove NaN values, filter by properties, and strip unnecessary data",(0,r.jsx)(n.br,{}),"\n","\ud83d\udce6 ",(0,r.jsx)(n.strong,{children:"Scene Merging"})," \u2014 combine multiple splat files into a merged scene",(0,r.jsx)(n.br,{}),"\n","\u26a1 ",(0,r.jsx)(n.strong,{children:"Production Ready"})," \u2014 optimized for maximum performance",(0,r.jsx)(n.br,{}),"\n","\ud83c\udd93 ",(0,r.jsx)(n.strong,{children:"Open Source"})," \u2014 completely free and available on GitHub"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Install SplatTransform globally via npm:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install -g @playcanvas/splat-transform\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify your installation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"splat-transform --version\n"})}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.p,{children:"The general syntax for SplatTransform is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"splat-transform [GLOBAL] input [ACTIONS] ... output [ACTIONS]\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key points:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Input files become the working set; ACTIONS are applied in order"}),"\n",(0,r.jsx)(n.li,{children:"The last file is the output; actions after it modify the final result"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"format-conversion",children:"Format Conversion"}),"\n",(0,r.jsx)(n.p,{children:"Convert between commonly used splat formats with simple commands:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Simple format conversion\nsplat-transform input.ply output.csv\n\n# Convert from .splat format\nsplat-transform input.splat output.ply\n\n# Convert from .ksplat format\nsplat-transform input.ksplat output.ply\n\n# Convert to compressed PLY\nsplat-transform input.ply output.compressed.ply\n\n# Uncompress a compressed PLY back to standard PLY\n# (compressed .ply is detected automatically on read)\nsplat-transform input.compressed.ply output.ply\n\n# Convert to SOG bundled format\nsplat-transform input.ply output.sog\n\n# Convert to SOG unbundled format\nsplat-transform input.ply output/meta.json\n\n# Convert from SOG (bundled) back to PLY\nsplat-transform scene.sog restored.ply\n\n# Convert from SOG (unbundled folder) back to PLY\nsplat-transform output/meta.json restored.ply\n\n# Convert to standalone HTML viewer\nsplat-transform input.ply output.html\n\n# Convert to HTML viewer with custom settings\nsplat-transform -E settings.json input.ply output.html\n"})}),"\n",(0,r.jsx)(n.p,{children:"SplatTransform detects file format based on extension. Supported formats are shown below:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Input"}),(0,r.jsx)(n.th,{children:"Output"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".ply"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"Standard PLY format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".sog"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"Bundled super-compressed format (recommended)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"meta.json"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsxs)(n.td,{children:["Unbundled super-compressed format (accompanied by ",(0,r.jsx)(n.code,{children:".webp"})," textures)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".compressed.ply"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"Compressed PLY format (auto-detected and decompressed on read)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".ksplat"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Compressed splat format (mkkellogg format)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".splat"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Compressed splat format (antimatter15 format)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".spz"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Compressed splat format (Niantic format)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".mjs"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Generate a scene using an mjs script (Beta)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".csv"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"Comma-separated values spreadsheet"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:".html"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"Standalone HTML viewer app (embeds SOG format)"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"actions",children:"Actions"}),"\n",(0,r.jsx)(n.p,{children:"Actions can be repeated and applied in any order to transform and filter your splats:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-none",children:"-t, --translate        <x,y,z>          Translate splats by (x, y, z)\n-r, --rotate           <x,y,z>          Rotate splats by Euler angles (x, y, z) in degrees\n-s, --scale            <factor>         Uniformly scale splats by factor\n-H, --filter-harmonics <0|1|2|3>        Remove spherical harmonic bands > n\n-N, --filter-nan                        Remove Gaussians with NaN or Inf values\n-B, --filter-box       <x,y,z,X,Y,Z>    Remove Gaussians outside box (min, max corners)\n-S, --filter-sphere    <x,y,z,radius>   Remove Gaussians outside sphere (center, radius)\n-V, --filter-value     <name,cmp,value> Keep splats where <name> <cmp> <value>\n                                          cmp \u2208 {lt,lte,gt,gte,eq,neq}\n-p, --params           <key=val,...>    Pass parameters to .mjs generator script\n"})}),"\n",(0,r.jsx)(n.h2,{id:"global-options",children:"Global Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-none",children:"-h, --help                              Show this help and exit\n-v, --version                           Show version and exit\n-w, --overwrite                         Overwrite output file if it exists\n-c, --cpu                               Use CPU for SOG spherical harmonic compression\n-i, --iterations       <n>              Iterations for SOG SH compression (more=better). Default: 10\n-E, --viewer-settings  <settings.json>  HTML viewer settings JSON file\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"https://github.com/playcanvas/supersplat-viewer?tab=readme-ov-file#settings-schema",children:"SuperSplat Viewer Settings Schema"})," for details on how to pass data to the ",(0,r.jsx)(n.code,{children:"-E"})," option."]})}),"\n",(0,r.jsx)(n.h2,{id:"transformations",children:"Transformations"}),"\n",(0,r.jsx)(n.h3,{id:"apply-spatial-transformations",children:"Apply Spatial Transformations"}),"\n",(0,r.jsx)(n.p,{children:"Transform your splats during conversion with intuitive command-line options:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Scale and translate\nsplat-transform bunny.ply -s 0.5 -t 0,0,10 bunny_scaled.ply\n\n# Rotate by 90 degrees around Y axis\nsplat-transform input.ply -r 0,90,0 output.ply\n\n# Chain multiple transformations\nsplat-transform input.ply -s 2 -t 1,0,0 -r 0,0,45 output.ply\n"})}),"\n",(0,r.jsx)(n.h2,{id:"filtering-and-optimization",children:"Filtering and Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"smart-filtering",children:"Smart Filtering"}),"\n",(0,r.jsx)(n.p,{children:"Remove unwanted data and optimize your splats for production:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Remove entries containing NaN and Inf\nsplat-transform input.ply --filter-nan output.ply\n\n# Filter by opacity values (keep only splats with opacity > 0.5)\nsplat-transform input.ply -V opacity,gt,0.5 output.ply\n\n# Strip spherical harmonic bands higher than 2\nsplat-transform input.ply --filter-harmonics 2 output.ply\n"})}),"\n",(0,r.jsx)(n.h2,{id:"scene-merging",children:"Scene Merging"}),"\n",(0,r.jsx)(n.p,{children:"Combine multiple splat files into a single scene with individual transformations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Combine multiple files with different transforms\nsplat-transform -w cloudA.ply -r 0,90,0 cloudB.ply -s 2 merged.compressed.ply\n\n# Apply final transformations to combined result\nsplat-transform input1.ply input2.ply output.ply -t 0,0,10 -s 0.5\n"})}),"\n",(0,r.jsx)(n.h2,{id:"csv-export-for-data-analysis",children:"CSV Export for Data Analysis"}),"\n",(0,r.jsx)(n.p,{children:"One of SplatTransform's most powerful features is CSV export, enabling data science workflows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Export splat data to CSV\nsplat-transform scene.ply data.csv\n\n# Pre-filter before exporting for analysis\nsplat-transform input.ply --filter-nan -V opacity,gt,0.1 analysis.csv\n"})}),"\n",(0,r.jsx)(n.h3,{id:"why-csv-export-matters",children:"Why CSV Export Matters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spreadsheet Analysis"})," \u2014 Import directly into Excel, Google Sheets, or any data analysis tool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Statistical Insights"})," \u2014 Calculate distributions, correlations, and quality metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom Filtering"})," \u2014 Use spreadsheet formulas to identify outliers or segment data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Visualization"})," \u2014 Create charts and graphs to understand splat data patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"})," \u2014 Feed splat data into machine learning pipelines or custom workflows"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"CSV export transforms your splats from opaque binary files into readable, analyzable datasets perfect for research and optimization."}),"\n",(0,r.jsx)(n.h2,{id:"generators-beta",children:"Generators (Beta)"}),"\n",(0,r.jsx)(n.p,{children:"Generator scripts can be used to synthesize gaussian splat data. This allows you to procedurally create splat scenes using JavaScript:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"splat-transform gen-grid.mjs -p width=10,height=10,scale=10,color=0.1 scenes/grid.ply -w\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"https://github.com/playcanvas/splat-transform/tree/main/generators",children:"example generator scripts"})," in the GitHub repository for more details."]}),"\n",(0,r.jsx)(n.h2,{id:"common-workflows",children:"Common Workflows"}),"\n",(0,r.jsx)(n.h3,{id:"production-optimization-pipeline",children:"Production Optimization Pipeline"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clean, limit spherical harmonic bands, and apply a scale for production\nsplat-transform raw_capture.ply \\\n  --filter-nan \\\n  --filter-harmonics 2 \\\n  -s 0.8 \\\n  production/capture.sog\n"})}),"\n",(0,r.jsx)(n.h3,{id:"format-migration",children:"Format Migration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Convert existing KSPLAT assets to PlayCanvas SOG\nfor file in *.ksplat; do\n  splat-transform "$file" "${file%.ksplat}.sog"\ndone\n'})}),"\n",(0,r.jsx)(n.h3,{id:"quality-analysis",children:"Quality Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Export for quality analysis in spreadsheet\nsplat-transform scene.ply \\\n  --filter-nan \\\n  -V opacity,gt,0.05 \\\n  quality_analysis.csv\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multi-scene-composition",children:"Multi-Scene Composition"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Combine multiple scenes with precise positioning\nsplat-transform \\\n  environment.ply -t 0,0,0 \\\n  character.ply -t 2,0,1 -r 0,180,0 \\\n  props.ply -t -3,0,2 -s 1.2 \\\n  complete_scene.ply\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.p,{children:"Get help for any command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# General help\nsplat-transform --help\n\n# Get version information\nsplat-transform --version\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For issues, feature requests, or contributions, visit the ",(0,r.jsx)(n.a,{href:"https://github.com/playcanvas/splat-transform",children:"GitHub repository"}),". The project welcomes bug reports and pull requests from the community."]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);