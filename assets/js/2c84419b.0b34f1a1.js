"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[39454],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var a=n(96540);const t={},r=a.createContext(t);function o(e){const s=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(r.Provider,{value:s},e.children)}},79288:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"user-manual/playcanvas-react/api/hooks/index","title":"Hooks","description":"React hooks for PlayCanvas integration","source":"@site/docs/user-manual/playcanvas-react/api/hooks/index.mdx","sourceDirName":"user-manual/playcanvas-react/api/hooks","slug":"/user-manual/playcanvas-react/api/hooks/","permalink":"/user-manual/playcanvas-react/api/hooks/","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/api/hooks/index.mdx","tags":[],"version":"current","frontMatter":{"title":"Hooks","description":"React hooks for PlayCanvas integration"},"sidebar":"userManualSidebar","previous":{"title":"<Script/>","permalink":"/user-manual/playcanvas-react/api/script"},"next":{"title":"useApp","permalink":"/user-manual/playcanvas-react/api/hooks/use-app"}}');var t=n(74848),r=n(28453);const o={title:"Hooks",description:"React hooks for PlayCanvas integration"},i=void 0,l={},c=[{value:"Available Hooks",id:"available-hooks",level:2},{value:"Core Hooks",id:"core-hooks",level:3},{value:"Asset Loading Hooks",id:"asset-loading-hooks",level:3},{value:"Event and Animation Hooks",id:"event-and-animation-hooks",level:3},{value:"Material and Physics Hooks",id:"material-and-physics-hooks",level:3},{value:"Usage Pattern",id:"usage-pattern",level:2},{value:"Context Requirements",id:"context-requirements",level:2},{value:"TypeScript Support",id:"typescript-support",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"PlayCanvas React provides a comprehensive set of React hooks that make it easy to integrate PlayCanvas functionality into your React applications. These hooks handle the complex lifecycle management and provide a clean, React-friendly API."}),"\n",(0,t.jsx)(s.h2,{id:"available-hooks",children:"Available Hooks"}),"\n",(0,t.jsx)(s.h3,{id:"core-hooks",children:"Core Hooks"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-app",children:"useApp"})})," - Access the PlayCanvas Application instance"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-parent",children:"useParent"})})," - Get the parent Entity from context"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"asset-loading-hooks",children:"Asset Loading Hooks"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset",children:"useAsset"})})," - Load any type of PlayCanvas asset"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset#usemodel",children:"useModel"})})," - Load 3D models (GLB/GLTF)"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset#usetexture",children:"useTexture"})})," - Load texture assets"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset#usesplat",children:"useSplat"})})," - Load Gaussian splat assets"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset#useenvatlas",children:"useEnvAtlas"})})," - Load environment atlas textures"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-asset#usefont",children:"useFont"})})," - Load font assets"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"event-and-animation-hooks",children:"Event and Animation Hooks"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-app-event",children:"useAppEvent"})})," - Subscribe to PlayCanvas application events"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"material-and-physics-hooks",children:"Material and Physics Hooks"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-material",children:"useMaterial"})})," - Create and manage materials"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"./use-physics",children:"usePhysics"})})," - Access physics context and state"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"usage-pattern",children:"Usage Pattern"}),"\n",(0,t.jsx)(s.p,{children:"Most hooks follow a consistent pattern:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-jsx",children:"import { useApp, useAsset } from '@playcanvas/react/hooks'\n\nfunction MyComponent() {\n  const app = useApp()\n  const { asset, loading, error } = useAsset('model.glb', 'container')\n  \n  if (loading) return <div>Loading...</div>\n  if (error) return <div>Error: {error}</div>\n  \n  return <Container asset={asset} />\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"context-requirements",children:"Context Requirements"}),"\n",(0,t.jsx)(s.p,{children:"Many hooks require specific React contexts to be available:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"useApp"})," requires an ",(0,t.jsx)(s.code,{children:"<Application>"})," component in the component tree"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"useParent"})," requires an ",(0,t.jsx)(s.code,{children:"<Entity>"})," component in the component tree"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"usePhysics"})," requires physics to be enabled on the Application"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"typescript-support",children:"TypeScript Support"}),"\n",(0,t.jsx)(s.p,{children:"All hooks are fully typed with TypeScript and provide excellent IntelliSense support. The hooks automatically infer types from the PlayCanvas engine types."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:"// Fully typed with PlayCanvas types\nconst app = useApp() // Application\nconst entity = useParent() // Entity\nconst { asset } = useAsset('texture.jpg', 'texture') // Asset | null\n"})}),"\n",(0,t.jsx)(s.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Always check loading states"})," when using asset hooks"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Handle errors gracefully"})," for better user experience"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Use the appropriate hook"})," for your specific use case"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Clean up subscriptions"})," are handled automatically by the hooks"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Follow React rules"})," - hooks should only be called at the top level of components"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);