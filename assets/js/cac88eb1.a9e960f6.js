"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[48536],{7184:(e,n,t)=>{t.d(n,{C:()=>R,G:()=>S});var o=t(11470),i=t(19365),a=t(59849),s=t(96540),r=t(95293),l=t(9764),c=t(18676),d=t(58817),p=t(19748),h=t(83395),u=t(43025),m=t(10977),y=t(7306),b=t(68869),x=t(78692),g=t(8939),f=t(40050),v=t(93953),j=t(27351),w=t(74848);const C="// \u2191 imports hidden",S=({code:e,label:n,filename:t,language:r="jsx",showDemo:c=!1,showViewSourceButton:d=!0,showControls:p=!0,children:h})=>{const[u,m]=(0,s.useState)(0);if(!h||!e)return console.error("CodeExample: code and children are required"),null;return(0,w.jsxs)(o.A,{defaultValue:u>0?"Code":c?"Demo":"Code",children:[(0,w.jsx)(i.A,{value:"Demo",children:(0,w.jsxs)("div",{className:"code-example-demo",children:[h,d&&(0,w.jsxs)("div",{className:"code-example-demo-footer",children:[n," - ",(0,w.jsx)("a",{href:"#",onClick:e=>{e.preventDefault(),m(e=>e+1)},children:"View Code"})]}),(0,w.jsx)("div",{className:"code-example-controls",children:(0,w.jsx)(l.XA,{fill:!0,hidden:!1===p})})]})}),(0,w.jsx)(i.A,{value:"Code",children:(0,w.jsx)(a.A,{language:r,title:t,children:e.includes(C)?C+e.split(C)[1]:e})})]},u)},D=e=>{const{width:n=8,depth:t=8,intensity:o=.75}=e,i=(0,s.useMemo)(()=>new v.e(n,1,t),[n,t]);return(0,w.jsxs)(c.w,{children:[(0,w.jsx)(p.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:j.au1,shadowUpdateMode:j.M5l,vsmBlurSize:8,shadowIntensity:o,intensity:0}),(0,w.jsx)(h.e,{script:g.X,intensity:o,scale:i})]})},R=({children:e,useLight:n=!0,useControls:t=!1,useGrid:o=!1,useShadow:i=!1,camera:a=[0,0,10],sceneOffset:l=[0,-.501,0],exposure:p=1})=>{const{colorMode:g}=(0,r.G)(),v=(0,m.n)(),{asset:j}=(0,y.yj)("/assets/helipad.png"),C="dark"===g?"#2a2a2a":"#e4e0e0",[S,R]=(0,s.useState)(!1),[k,A]=(0,s.useState)(!1),E=(0,s.useCallback)(()=>R(!0),[]),N=(0,s.useCallback)(()=>R(!1),[]),B=(0,s.useCallback)(()=>A(!0),[]),P=(0,s.useCallback)(()=>A(!1),[]);return(0,s.useEffect)(()=>{const e=v.graphicsDevice.canvas;e.style.cursor=S?"grabbing":k?"grab":"default"},[S,k,v]),(0,s.useEffect)(()=>{const e=()=>R(!1);return v.graphicsDevice.canvas.addEventListener("pointerup",e),()=>v.graphicsDevice?.canvas.removeEventListener("pointerup",e)},[v]),(0,w.jsxs)(c.w,{children:[(0,w.jsxs)(c.w,{name:"camera",position:a,children:[(0,w.jsx)(d.i,{clearColor:C,renderSceneColorMap:!0}),t&&(0,w.jsx)(h.e,{script:b.a,enableFly:!1,pitchRange:new f.Z(-90,-5)})]}),n&&(0,w.jsx)(u.O,{envAtlas:j,showSkybox:!1,exposure:p}),o&&(0,w.jsx)(c.w,{name:"grid",scale:[1e3,1,1e3],position:[0,-.5,0],children:(0,w.jsx)(h.e,{script:x.x})}),i&&(0,w.jsx)(c.w,{position:l,children:(0,w.jsx)(D,{})}),(0,w.jsx)(c.w,{onPointerOver:B,onPointerOut:P,onPointerDown:E,onPointerUp:N,children:e})]})}},24421:(e,n,t)=>{t.d(n,{A:()=>p});var o=t(18676),i=t(19748),a=t(83395),s=t(93953),r=t(27351),l=t(8939),c=t(96540),d=t(74848);const p=e=>{const{width:n=2,depth:t=2,intensity:p=.75}=e,h=(0,c.useMemo)(()=>new s.e(n,1,t),[n,t]);return(0,d.jsxs)(o.w,{position:[0,.001,0],children:[(0,d.jsx)(i.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:r.au1,shadowUpdateMode:r.M5l,vsmBlurSize:8,shadowIntensity:p,intensity:0}),(0,d.jsx)(a.e,{script:l.X,intensity:p,scale:h})]})}},49801:(e,n,t)=>{t.d(n,{A:()=>r});var o=t(18676),i=t(83395),a=t(78692),s=t(74848);const r=({...e})=>(0,s.jsx)(o.w,{scale:[1e3,1,1e3],children:(0,s.jsx)(i.e,{script:a.x,...e})})},53558:(e,n,t)=>{t.d(n,{A:()=>g});var o=t(96540),i=t(68869),a=t(8939),s=t(78692),r=t(14007),l=t(25303),c=t(34363),d=t(53512),p=t(49801),h=t(24421),u=t(85593),m=t(83395),y=t(83171),b=t(74848);const x=e=>(0,b.jsx)(m.e,{script:y.d,...e}),g={React:o,...o,...r,...l,...c,...d,Grid:p.A,ShadowCatcher:h.A,GridScript:s.x,ShadowCatcherScript:a.X,StaticPostEffects:u.A,AutoRotate:x,CameraControls:i.a}},57627:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>f,default:()=>C,frontMatter:()=>g,metadata:()=>o,toc:()=>j});const o=JSON.parse('{"id":"user-manual/playcanvas-react/api/rigidbody","title":"<Rigidbody/>","description":"Documentation for the Rigidbody component","source":"@site/docs/user-manual/playcanvas-react/api/rigidbody.mdx","sourceDirName":"user-manual/playcanvas-react/api","slug":"/user-manual/playcanvas-react/api/rigidbody","permalink":"/user-manual/playcanvas-react/api/rigidbody","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/api/rigidbody.mdx","tags":[],"version":"current","frontMatter":{"description":"Documentation for the Rigidbody component"},"sidebar":"userManualSidebar","previous":{"title":"<Render/>","permalink":"/user-manual/playcanvas-react/api/render"},"next":{"title":"<Script/>","permalink":"/user-manual/playcanvas-react/api/script"}}');var i=t(74848),a=t(28453),s=t(7184),r=t(78264),l=t(96540),c=t(18676),d=t(8615),p=t(22084),h=t(16230),u=t(30885),m=t(59752);const y=({color:e,...n})=>{const t=(0,u.R)({diffuse:e});return(0,i.jsxs)(c.w,{...n,children:[(0,i.jsx)(d.U,{type:"dynamic",mass:1,restitution:.2,friction:.5}),(0,i.jsx)(p.F,{type:"box"}),(0,i.jsx)(h.d,{type:"box",material:t})]})},b=()=>{const[e,n]=(0,l.useState)([{id:1,position:[0,20,0],color:"#e74c3c"},{id:2,position:[.5,8,0],color:"#3498db"},{id:3,position:[-.5,11,0],color:"#2ecc71"}]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(c.w,{position:[0,-.6,0],scale:[10,.1,10],children:[(0,i.jsx)(d.U,{type:"static",friction:.5}),(0,i.jsx)(p.F,{type:"box",halfExtents:[5,.1,5]})]},"ground"),e.map(e=>(0,i.jsx)(y,{...e},e.id)),(0,i.jsx)("div",{className:"overlay",children:(0,i.jsx)("button",{onClick:()=>{const t=["#e74c3c","#3498db","#2ecc71","#f39c12","#9b59b6","#1abc9c"],o=t[Math.floor(m.D.random(0,t.length))],i={id:Date.now(),position:[m.D.random(-2,2),5,m.D.random(-2,2)],rotation:[m.D.random(0,360),m.D.random(0,360),m.D.random(0,360)],color:o};n([...e,i])},children:"Add Box"})})]})},x="import { useState } from 'react'\nimport { Entity } from '@playcanvas/react'\nimport { RigidBody, Collision, Render } from '@playcanvas/react/components'\nimport { useMaterial } from '@playcanvas/react/hooks'\nimport { math } from 'playcanvas'\n// \u2191 imports hidden\n\nconst Box = ({ color, ...entityProps  }) => {\n  const material = useMaterial({ diffuse: color })\n  return (\n    <Entity {...entityProps}>\n      <RigidBody type=\"dynamic\" mass={1} restitution={0.2} friction={0.5} />\n      <Collision type=\"box\" />\n      <Render type=\"box\" material={material} />\n    </Entity>\n  )\n}\n\nexport const RigidbodyExample = () => {\n  const [boxes, setBoxes] = useState([\n    { id: 1, position: [0, 20, 0], color: '#e74c3c' },\n    { id: 2, position: [0.5, 8, 0], color: '#3498db' },\n    { id: 3, position: [-0.5, 11, 0], color: '#2ecc71' }\n  ])\n\n  const addBox = () => {\n    const colors = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c']\n    const color = colors[Math.floor(math.random(0, colors.length))]\n    const box = {\n      id: Date.now(),\n      position: [math.random(-2, 2), 5, math.random(-2, 2)],\n      rotation: [math.random(0, 360), math.random(0, 360), math.random(0, 360)],\n      color\n    }\n    setBoxes([...boxes, box])\n  }\n\n  return (<>\n    {/* Ground plane */}\n    <Entity key=\"ground\" position={[0, -0.6, 0]} scale={[10, 0.1, 10]}>\n      <RigidBody type=\"static\" friction={0.5} />\n      <Collision type=\"box\" halfExtents={[5, 0.1, 5]} />\n    </Entity>\n\n    {/* Falling boxes */}\n    { boxes.map((props) => <Box key={props.id} {...props} />) }\n\n    {/* UI */}\n    <div className=\"overlay\">\n      <button onClick={addBox}>Add Box</button>\n    </div>\n  </>)\n}\n\n",g={description:"Documentation for the Rigidbody component"},f="<Rigidbody/>",v={},j=[{value:"Getting started",id:"getting-started",level:2},{value:"Usage",id:"usage",level:2},{value:"Properties",id:"properties",level:2}];function w(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components},{RenderApiDocs:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RenderApiDocs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"rigidbody",children:(0,i.jsx)(n.code,{children:"<Rigidbody/>"})})}),"\n","\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"<Rigidbody/>"})," component gives an ",(0,i.jsx)(n.a,{href:"../entity",children:(0,i.jsx)(n.code,{children:"<Entity/>"})})," physical properties such as mass, velocity, and friction and allows it to interact with the global physics simulation. An ",(0,i.jsx)(n.code,{children:"<Entity/>"})," with a ",(0,i.jsx)(n.code,{children:"<Rigidbody/>"})," will respond to gravity, forces, torques and other physics behaviors."]}),"\n",(0,i.jsxs)(n.p,{children:["You can learn more about how the physics system works in PlayCanvas in the ",(0,i.jsx)(n.a,{href:"/user-manual/physics/",children:"Physics docs"})," and for React specific details, see the guide on ",(0,i.jsx)(n.a,{href:"/user-manual/playcanvas-react/guide/physics",children:"React Physics"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Using physics in PlayCanvas requires ammo.js and ",(0,i.jsx)(n.code,{children:"<Application usePhysics/>"})," to be enabled. Run ",(0,i.jsx)(n.code,{children:"npm i sync-ammo"})," from within your app."]})}),"\n",(0,i.jsxs)(n.p,{children:["To use the ",(0,i.jsx)(n.code,{children:"<Rigidbody/>"})," component, you need to install the ",(0,i.jsx)(n.code,{children:"sync-ammo"})," dependency and you need to add the ",(0,i.jsx)(n.a,{href:"../application",children:(0,i.jsx)(n.code,{children:"<Application usePhysics/>"})})," prop set in your root ",(0,i.jsx)(n.a,{href:"../application",children:(0,i.jsx)(n.code,{children:"<Application/>"})})," component. This will enable the physics system and allow your entities to interact with the physics simulation."]}),"\n",(0,i.jsxs)(n.p,{children:["Check out the guide on ",(0,i.jsx)(n.a,{href:"/user-manual/playcanvas-react/guide/physics",children:"React Physics"})," for more information."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Add a ",(0,i.jsx)(n.code,{children:"<Rigidbody/>"})," component to an ",(0,i.jsx)(n.a,{href:"../entity",children:(0,i.jsx)(n.code,{children:"<Entity/>"})}),". You'll also need to add a ",(0,i.jsx)(n.a,{href:"../collision",children:(0,i.jsx)(n.code,{children:"<Collision/>"})})," component to the entity to define the shape of the rigid body."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Application usePhysics>\n  <Entity>\n    <Rigidbody type="box" />\n  </Entity>\n</Application>\n'})}),"\n",(0,i.jsx)(s.G,{label:"Interactive Physics Example",filename:"rigidbody-example.jsx",code:x,showDemo:!0,children:(0,i.jsx)(r.l,{usePhysics:!0,children:(0,i.jsx)(s.C,{camera:[4,3,4],useGrid:!0,useControls:!0,useShadow:!0,children:(0,i.jsx)(b,{})})})}),"\n",(0,i.jsxs)(n.p,{children:["Learn more about the ",(0,i.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/RigidBodyComponent.html",children:"RigidBody Component"})," in the PlayCanvas documentation."]}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(t,{data:'[{"name":"default","description":"","entries":[{"name":"type","description":"Sets the rigid body type determines how the body is simulated.","optional":true,"defaultValue":"\\"static\\"","type":{"displayName":"\\"static\\" | \\"dynamic\\" | \\"kinematic\\"","types":[{"name":"\\"static\\"","url":null},{"name":"\\"dynamic\\"","url":null},{"name":"\\"kinematic\\"","url":null}]}},{"name":"angularDamping","description":"Sets the rate at which a body loses angular velocity over time.\\nGets the rate at which a body loses angular velocity over time.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"angularFactor","description":"Sets the scaling factor for angular movement of the body in each axis. Only valid for rigid\\nbodies of type BODYTYPE_DYNAMIC. Defaults to 1 in all axes (body can freely rotate).\\nGets the scaling factor for angular movement of the body in each axis.","optional":true,"type":{"displayName":"[number, number, number]","types":[{"name":"[number, number, number]","url":null}]}},{"name":"angularVelocity","description":"Sets the rotational speed of the body around each world axis.\\nGets the rotational speed of the body around each world axis.","optional":true,"type":{"displayName":"[number, number, number]","types":[{"name":"[number, number, number]","url":null}]}},{"name":"body","description":"","optional":true,"type":{"displayName":"any","types":[{"name":"any","url":null}]}},{"name":"friction","description":"Sets the friction value used when contacts occur between two bodies. A higher value indicates\\nmore friction. Should be set in the range 0 to 1. Defaults to 0.5.\\nGets the friction value used when contacts occur between two bodies.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"group","description":"Sets the collision group this body belongs to. Combine the group and the mask to prevent bodies\\ncolliding with each other. Defaults to 1.\\nGets the collision group this body belongs to.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"linearDamping","description":"Sets the rate at which a body loses linear velocity over time. Defaults to 0.\\nGets the rate at which a body loses linear velocity over time.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"linearFactor","description":"Sets the scaling factor for linear movement of the body in each axis. Only valid for rigid\\nbodies of type BODYTYPE_DYNAMIC. Defaults to 1 in all axes (body can freely move).\\nGets the scaling factor for linear movement of the body in each axis.","optional":true,"type":{"displayName":"[number, number, number]","types":[{"name":"[number, number, number]","url":null}]}},{"name":"linearVelocity","description":"Sets the speed of the body in a given direction.\\nGets the speed of the body in a given direction.","optional":true,"type":{"displayName":"[number, number, number]","types":[{"name":"[number, number, number]","url":null}]}},{"name":"mask","description":"Sets the collision mask sets which groups this body collides with. It is a bit field of 16\\nbits, the first 8 bits are reserved for engine use. Defaults to 65535.\\nGets the collision mask sets which groups this body collides with.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"mass","description":"Sets the mass of the body. This is only relevant for BODYTYPE_DYNAMIC bodies, other\\ntypes have infinite mass. Defaults to 1.\\nGets the mass of the body.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"restitution","description":"Sets the value that controls the amount of energy lost when two rigid bodies collide. The\\ncalculation multiplies the restitution values for both colliding bodies. A multiplied value\\nof 0 means that all energy is lost in the collision while a value of 1 means that no energy\\nis lost. Should be set in the range 0 to 1. Defaults to 0.\\nGets the value that controls the amount of energy lost when two rigid bodies collide.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"rollingFriction","description":"Sets the torsional friction orthogonal to the contact point. Defaults to 0.\\nGets the torsional friction orthogonal to the contact point.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"system","description":"The ComponentSystem used to create this Component.","optional":true,"type":{"displayName":"ComponentSystem","types":[{"name":"ComponentSystem","url":"https://api.playcanvas.com/engine/classes/ComponentSystem.html"}]}},{"name":"entity","description":"The Entity that this Component is attached to.","optional":true,"type":{"displayName":"Entity","types":[{"name":"Entity","url":"https://api.playcanvas.com/engine/classes/Entity.html"}]}},{"name":"enabled","description":"Sets the enabled state of the component.\\nGets the enabled state of the component.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}}]}]'})]})}function C(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(w,{...e})}):w(e)}},85593:(e,n,t)=>{t.d(n,{A:()=>s});var o=t(83395),i=t(15817),a=t(74848);const s=e=>{const n={lighting:{exposure:1.21,skyBoxIntensity:1.02},rendering:{renderFormat:18,renderTargetScale:1,sharpness:0,samples:4,toneMapping:4,fog:"none",fogColor:{r:0,g:0,b:0,a:1},fogRange:[0,100],fogDensity:.01,renderFormatFallback0:12,renderFormatFallback1:14,sceneColorMap:!1,sceneDepthMap:!1,fogStart:0,fogEnd:100},bloom:{enabled:!0,intensity:.1,lastMipLevel:1},grading:{enabled:!0,brightness:.83,contrast:1.1,saturation:1.2,tint:{r:1,g:.9333333333333333,b:.8666666666666667,a:1}},vignette:{enabled:!0,intensity:1,inner:.25,outer:1.52,curvature:.78},fringing:{enabled:!0,intensity:10},...e};return(0,a.jsx)(o.e,{script:i.P,...n})}}}]);