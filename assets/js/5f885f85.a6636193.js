"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[86806],{15882:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"user-manual/scenes/components/camera","title":"Camera","description":"The Camera component enables an entity to render a scene from a certain viewpoint.","source":"@site/docs/user-manual/scenes/components/camera.md","sourceDirName":"user-manual/scenes/components","slug":"/user-manual/scenes/components/camera","permalink":"/user-manual/scenes/components/camera","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/scenes/components/camera.md","tags":[],"version":"current","frontMatter":{"title":"Camera"},"sidebar":"userManualSidebar","previous":{"title":"Button","permalink":"/user-manual/scenes/components/button"},"next":{"title":"Collision","permalink":"/user-manual/scenes/components/collision"}}');var s=r(74848),i=r(28453);const a={title:"Camera"},c=void 0,o={},l=[{value:"Properties",id:"properties",level:2},{value:"Scripting Interface",id:"scripting-interface",level:2}];function d(e){const t={a:"a",h2:"h2",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The Camera component enables an entity to render a scene from a certain viewpoint."}),"\n",(0,s.jsx)(t.p,{children:"The Camera component can be enabled or disabled using the toggle in the top right of the component panel. If enabled, the camera will render the scene every frame."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Camera component",src:r(59758).A+"",width:"628",height:"621"})}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Property"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clear Buffers"}),(0,s.jsxs)(t.td,{children:["Controls how the camera's render target is cleared before rendering each frame. The camera maintains two types of buffer: the color buffer which stores the visible image and a depth buffer that stores information about the distance of a rendered pixel in relation to the position of the camera. The buffers can be cleared independently: ",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"Color: If selected, the camera will explicitly clear its render target to the chosen clear color before rendering the scene."}),(0,s.jsx)("li",{children:"Depth: If selected, the camera will explicitly clear the depth buffer of its render target before rendering the scene."})]})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Clear Color"}),(0,s.jsx)(t.td,{children:"The color used to clear the camera's render target.  This property is only displayed if 'Clear Color Buffer' is selected."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Projection"}),(0,s.jsxs)(t.td,{children:["The projection type of the camera. Options are: ",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"Perspective"}),(0,s.jsx)("li",{children:"Orthographic"})]})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Frustum Culling"}),(0,s.jsx)(t.td,{children:"If selected, the camera will only render mesh instances whose axis-aligned bounding boxes intersect with the camera's view frustum. Otherwise, the entire scene will be rendered regardless of visibility."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Field of View"}),(0,s.jsx)(t.td,{children:"The angle between top and bottom clip planes of a perspective camera. This property is only displayed if 'Projection' is set to 'Perspective'."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Ortho Height"}),(0,s.jsx)(t.td,{children:"The distance in world units between the top and bottom clip planes of an orthographic camera. This property is only displayed if 'Projection' is set to 'Orthographic'."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Near Clip"}),(0,s.jsx)(t.td,{children:"The distance in camera space from the camera's eye point to the near clip plane."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Far Clip"}),(0,s.jsx)(t.td,{children:"The distance in camera space from the camera's eye point to the far clip plane."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Priority"}),(0,s.jsx)(t.td,{children:"A number that defines the order in which camera views are rendered by the engine. Smaller numbers are rendered first."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Viewport"}),(0,s.jsxs)(t.td,{children:["A rectangle that specifies the viewport onto the camera's attached render target. This allows you to implement features like split-screen or picture-in-picture. It is defined by normalized coordinates (0 to 1) in the following format: ",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:"x: The lower left x coordinate"}),(0,s.jsx)("li",{children:"y: The lower left y coordinate"}),(0,s.jsx)("li",{children:"w: The width of the rectangle"}),(0,s.jsx)("li",{children:"h: The height of the rectangle"})]})]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"scripting-interface",children:"Scripting Interface"}),"\n",(0,s.jsxs)(t.p,{children:["You can control a Camera component's properties using a ",(0,s.jsx)(t.a,{href:"/user-manual/scenes/components/script",children:"script component"}),". The Camera component's scripting interface is ",(0,s.jsx)(t.a,{href:"https://api.playcanvas.com/engine/classes/CameraComponent.html",children:"here"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var n=r(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},59758:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/component-camera-012225a130714b479e7251ab9e23ce42.png"}}]);