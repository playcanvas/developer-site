"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[2221],{44585:i=>{i.exports=JSON.parse('{"tag":{"label":"raycast","permalink":"/tags/raycast","allTagsPath":"/tags","count":10,"items":[{"id":"tutorials/entity-picking","title":"Entity Picking","description":"Collision Picking - click to select a shape","permalink":"/tutorials/entity-picking"},{"id":"tutorials/entity-picking-using-physics","title":"Entity picking using physics","description":"A sample showing how to use the physics raycast to pick entities","permalink":"/tutorials/entity-picking-using-physics"},{"id":"tutorials/entity-picking-without-physics","title":"Entity picking without physics","description":"Sample showing how to pick at objects without using the physics system (extra 1MB to published project) or the frame buffer.","permalink":"/tutorials/entity-picking-without-physics"},{"id":"tutorials/information-hotspots","title":"Information hotspots","description":"Sample showing information hotspots on a scene.","permalink":"/tutorials/information-hotspots"},{"id":"tutorials/physics-raycasting-by-tag","title":"Physics raycasting by tag","description":"Sample showing how to pick an entity by tag using raycastAll","permalink":"/tutorials/physics-raycasting-by-tag"},{"id":"tutorials/point-and-click-movement","title":"Point and click movement","description":"Sample showing a simple point and click system to move an object where you user has clicked","permalink":"/tutorials/point-and-click-movement"},{"id":"tutorials/raycast-with-camera-viewports","title":"Raycast with Camera Viewports","description":"Raycasting with multiple camera viewports. Click on the shapes in each view","permalink":"/tutorials/raycast-with-camera-viewports"},{"id":"tutorials/simple-shape-raycasting","title":"Simple shape raycasting","description":"Sample showing how to pick at an entity","permalink":"/tutorials/simple-shape-raycasting"},{"id":"tutorials/vehicle-physics","title":"Vehicle Physics","description":"An implementation of vehicle physics in PlayCanvas, using the RaycastVehicle API in ammo.js. Supports desktop, mobile and VR.","permalink":"/tutorials/vehicle-physics"},{"id":"tutorials/webxr-ar-hit-test","title":"WebXR AR: Hit Test","description":"Example of how to use WebXR Hit Test API. That allows to hit test real world geometry.","permalink":"/tutorials/webxr-ar-hit-test"}],"unlisted":false}}')}}]);