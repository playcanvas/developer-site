"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[5743],{19305:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>c,frontMatter:()=>d,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"shader-editor/overview/nodes/index","title":"Nodes","description":"Shader Editor supports many types of nodes, but they all have the following structure:","source":"@site/docs/shader-editor/overview/nodes/index.md","sourceDirName":"shader-editor/overview/nodes","slug":"/shader-editor/overview/nodes/","permalink":"/shader-editor/overview/nodes/","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/shader-editor/overview/nodes/index.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Nodes","sidebar_position":2},"sidebar":"shaderEditorSidebar","previous":{"title":"Sub Graphs","permalink":"/shader-editor/overview/graphs/sub-graphs"},"next":{"title":"Parameter Nodes","permalink":"/shader-editor/overview/nodes/parameter-nodes"}}');var o=s(74848),n=s(28453);const d={title:"Nodes",sidebar_position:2},i=void 0,a={},h=[{value:"Node Categories",id:"node-categories",level:3}];function l(e){const t={h3:"h3",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Shader Editor supports many types of nodes, but they all have the following structure:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Graph Editor Node",src:s(24148).A+"",width:"630",height:"318"})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Node structure"}),(0,o.jsx)(t.th,{})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"1"}),(0,o.jsx)(t.td,{children:"Node type."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"2"}),(0,o.jsx)(t.td,{children:"Input Ports."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"3"}),(0,o.jsx)(t.td,{children:"Output Ports."})]})]})]}),"\n",(0,o.jsx)(t.p,{children:"Certain nodes have no input ports and others have no output ports. (Though all nodes have at least one port)."}),"\n",(0,o.jsx)(t.h3,{id:"node-categories",children:"Node Categories"}),"\n",(0,o.jsx)(t.p,{children:"Based on this, we can identify three categories of nodes:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Input nodes - these have output ports, but no input ports."}),"\n",(0,o.jsx)(t.li,{children:"Output nodes - these have input ports, but no output ports."}),"\n",(0,o.jsx)(t.li,{children:"Transform nodes - these have both input ports and output ports."}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},24148:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/graph-editor-node-5b6784573be3fb176e0c812857017375.png"},28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>i});var r=s(96540);const o={},n=r.createContext(o);function d(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);