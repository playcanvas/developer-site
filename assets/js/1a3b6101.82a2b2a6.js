"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[91788],{7184:(e,n,t)=>{t.d(n,{C:()=>S,G:()=>C});var s=t(11470),a=t(19365),r=t(59849),i=t(96540),o=t(95293),l=t(9764),c=t(18676),d=t(58817),p=t(19748),h=t(83395),u=t(43025),m=t(10977),x=t(7306),v=t(68869),f=t(78692),g=t(8939),j=t(40050),y=t(93953),R=t(27351),b=t(74848);const w="// \u2191 imports hidden",C=({code:e,label:n,filename:t,language:o="jsx",showDemo:c=!1,showViewSourceButton:d=!0,showControls:p=!0,children:h})=>{const[u,m]=(0,i.useState)(0);if(!h||!e)return console.error("CodeExample: code and children are required"),null;return(0,b.jsxs)(s.A,{defaultValue:u>0?"Code":c?"Demo":"Code",children:[(0,b.jsx)(a.A,{value:"Demo",children:(0,b.jsxs)("div",{className:"code-example-demo",children:[h,d&&(0,b.jsxs)("div",{className:"code-example-demo-footer",children:[n," - ",(0,b.jsx)("a",{href:"#",onClick:e=>{e.preventDefault(),m(e=>e+1)},children:"View Code"})]}),(0,b.jsx)("div",{className:"code-example-controls",children:(0,b.jsx)(l.XA,{fill:!0,hidden:!1===p})})]})}),(0,b.jsx)(a.A,{value:"Code",children:(0,b.jsx)(r.A,{language:o,title:t,children:e.includes(w)?w+e.split(w)[1]:e})})]},u)},X=e=>{const{width:n=8,depth:t=8,intensity:s=.75}=e,a=(0,i.useMemo)(()=>new y.e(n,1,t),[n,t]);return(0,b.jsxs)(c.w,{children:[(0,b.jsx)(p.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:R.au1,shadowUpdateMode:R.M5l,vsmBlurSize:8,shadowIntensity:s,intensity:0}),(0,b.jsx)(h.e,{script:g.X,intensity:s,scale:a})]})},S=({children:e,useLight:n=!0,useControls:t=!1,useGrid:s=!1,useShadow:a=!1,camera:r=[0,0,10],sceneOffset:l=[0,-.501,0],exposure:p=1})=>{const{colorMode:g}=(0,o.G)(),y=(0,m.n)(),{asset:R}=(0,x.yj)("/assets/helipad.png"),w="dark"===g?"#2a2a2a":"#e4e0e0",[C,S]=(0,i.useState)(!1),[A,E]=(0,i.useState)(!1),P=(0,i.useCallback)(()=>S(!0),[]),k=(0,i.useCallback)(()=>S(!1),[]),M=(0,i.useCallback)(()=>E(!0),[]),N=(0,i.useCallback)(()=>E(!1),[]);return(0,i.useEffect)(()=>{const e=y.graphicsDevice.canvas;e.style.cursor=C?"grabbing":A?"grab":"default"},[C,A,y]),(0,i.useEffect)(()=>{const e=()=>S(!1);return y.graphicsDevice.canvas.addEventListener("pointerup",e),()=>y.graphicsDevice?.canvas.removeEventListener("pointerup",e)},[y]),(0,b.jsxs)(c.w,{children:[(0,b.jsxs)(c.w,{name:"camera",position:r,children:[(0,b.jsx)(d.i,{clearColor:w,renderSceneColorMap:!0}),t&&(0,b.jsx)(h.e,{script:v.a,enableFly:!1,pitchRange:new j.Z(-90,-5)})]}),n&&(0,b.jsx)(u.O,{envAtlas:R,showSkybox:!1,exposure:p}),s&&(0,b.jsx)(c.w,{name:"grid",scale:[1e3,1,1e3],position:[0,-.5,0],children:(0,b.jsx)(h.e,{script:f.x})}),a&&(0,b.jsx)(c.w,{position:l,children:(0,b.jsx)(X,{})}),(0,b.jsx)(c.w,{onPointerOver:M,onPointerOut:N,onPointerDown:P,onPointerUp:k,children:e})]})}},24421:(e,n,t)=>{t.d(n,{A:()=>p});var s=t(18676),a=t(19748),r=t(83395),i=t(93953),o=t(27351),l=t(8939),c=t(96540),d=t(74848);const p=e=>{const{width:n=2,depth:t=2,intensity:p=.75}=e,h=(0,c.useMemo)(()=>new i.e(n,1,t),[n,t]);return(0,d.jsxs)(s.w,{position:[0,.001,0],children:[(0,d.jsx)(a.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:o.au1,shadowUpdateMode:o.M5l,vsmBlurSize:8,shadowIntensity:p,intensity:0}),(0,d.jsx)(r.e,{script:l.X,intensity:p,scale:h})]})}},49801:(e,n,t)=>{t.d(n,{A:()=>o});var s=t(18676),a=t(83395),r=t(78692),i=t(74848);const o=({...e})=>(0,i.jsx)(s.w,{scale:[1e3,1,1e3],children:(0,i.jsx)(a.e,{script:r.x,...e})})},53558:(e,n,t)=>{t.d(n,{A:()=>g});var s=t(96540),a=t(68869),r=t(8939),i=t(78692),o=t(14007),l=t(25303),c=t(34363),d=t(53512),p=t(49801),h=t(24421),u=t(85593),m=t(83395),x=t(83171),v=t(74848);const f=e=>(0,v.jsx)(m.e,{script:x.d,...e}),g={React:s,...s,...o,...l,...c,...d,Grid:p.A,ShadowCatcher:h.A,GridScript:i.x,ShadowCatcherScript:r.X,StaticPostEffects:u.A,AutoRotate:f,CameraControls:a.a}},59304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>X,contentTitle:()=>C,default:()=>E,frontMatter:()=>w,metadata:()=>s,toc:()=>S});const s=JSON.parse('{"id":"user-manual/playcanvas-react/guide/xr","title":"XR","description":"PlayCanvas React makes it easy to add Virtual Reality (VR) and Augmented Reality (AR) support to your applications using the WebXR API.","source":"@site/docs/user-manual/playcanvas-react/guide/xr.mdx","sourceDirName":"user-manual/playcanvas-react/guide","slug":"/user-manual/playcanvas-react/guide/xr","permalink":"/user-manual/playcanvas-react/guide/xr","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/guide/xr.mdx","tags":[],"version":"current","frontMatter":{"title":"XR"}}');var a=t(74848),r=t(28453),i=t(7184),o=t(78264),l=t(96540),c=t(18676),d=t(58817),p=t(83395),h=t(16230),u=t(10977),m=t(85169);class x extends m.e{static scriptName="xrControllers";basePath="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets/dist/profiles";controllers=new Map;initialize(){this.app.xr?(this.app.xr.input.on("add",async e=>{if(!e.profiles?.length)return void console.warn("No profiles available for input source");const n=e.profiles.map(async n=>{const t=`${this.basePath}/${n}/profile.json`;try{const s=await fetch(t);if(!s.ok)return null;const a=await s.json(),r=a.layouts[e.handedness]?.assetPath||"",i=`${this.basePath}/${a.profileId}/${e.handedness}${r.replace(/^\/?(left|right)/,"")}`;return{profileId:n,asset:await new Promise((e,n)=>{this.app.assets.loadFromUrl(i,"container",(t,s)=>{t?n(t):e(s)})})}}catch(s){return console.warn(`Failed to process profile ${n}`),null}}),t=(await Promise.all(n)).find(e=>null!==e);if(t){const{asset:n}=t,s=n.resource.instantiateRenderEntity();this.app.root.addChild(s);const a=new Map;if(e.hand)for(const t of e.hand.joints){const e=s.findByName(t.id);e&&a.set(t,e)}this.controllers.set(e,{entity:s,jointMap:a})}else console.warn("No compatible profiles found")}),this.app.xr.input.on("remove",e=>{const n=this.controllers.get(e);n&&(n.entity.destroy(),this.controllers.delete(e))})):console.error("XrControllers script requires XR to be enabled on the application")}update(e){if(this.app.xr?.active)for(const[n,{entity:t,jointMap:s}]of this.controllers)if(n.hand)for(const[e,a]of s)a.setPosition(e.getPosition()),a.setRotation(e.getRotation());else t.setPosition(n.getPosition()),t.setRotation(n.getRotation())}}var v=t(48355),f=t(93953);class g extends m.e{static scriptName="xrNavigation";inputSources=new Set;activePointers=new Map;validColor=new v.Q(0,1,0);invalidColor=new v.Q(1,0,0);inputHandlers=new Map;initialize(){this.app.xr?(this.app.xr.input.on("add",e=>{const n=()=>{this.activePointers.set(e,!0)},t=()=>{this.activePointers.set(e,!1),this.tryTeleport(e)};e.on("selectstart",n),e.on("selectend",t),this.inputHandlers.set(e,{handleSelectStart:n,handleSelectEnd:t}),this.inputSources.add(e)}),this.app.xr.input.on("remove",e=>{const n=this.inputHandlers.get(e);n&&(e.off("selectstart",n.handleSelectStart),e.off("selectend",n.handleSelectEnd),this.inputHandlers.delete(e)),this.activePointers.delete(e),this.inputSources.delete(e)})):console.error("XrNavigation script requires XR to be enabled on the application")}findPlaneIntersection(e,n){if(Math.abs(n.y)<1e-5)return null;const t=-e.y/n.y;return t<0?null:new f.e(e.x+n.x*t,0,e.z+n.z*t)}tryTeleport(e){const n=e.getOrigin(),t=e.getDirection(),s=this.findPlaneIntersection(n,t);if(s){const e=this.entity.getPosition().y;s.y=e,this.entity.setPosition(s)}}update(){for(const e of this.inputSources){if(!this.activePointers.get(e))continue;const n=e.getOrigin(),t=e.getDirection(),s=this.findPlaneIntersection(n,t);if(s)this.app.drawLine(n,s,this.validColor),this.drawTeleportIndicator(s);else{const e=n.clone().add(t.clone().mulScalar(100));this.app.drawLine(n,e,this.invalidColor)}}}drawTeleportIndicator(e){const n=.2;for(let t=0;t<32;t++){const s=t/32*Math.PI*2,a=(t+1)/32*Math.PI*2,r=e.x+Math.cos(s)*n,i=e.z+Math.sin(s)*n,o=e.x+Math.cos(a)*n,l=e.z+Math.sin(a)*n;this.app.drawLine(new f.e(r,.01,i),new f.e(o,.01,l),this.validColor)}}}var j=t(68869),y=t(40050);const R=()=>{const e=(0,u.n)(),[n,t]=(0,l.useState)(!1),s=(0,l.useMemo)(()=>e?.xr?.isAvailable("immersive-ar"),[e.xr]),r=(0,l.useMemo)(()=>e?.xr?.isAvailable("immersive-vr"),[e.xr]);(0,l.useEffect)(()=>{const n=()=>t(!0),s=()=>t(!1);return e.xr?.on("start",n),e.xr?.on("end",s),()=>{e.xr?.off("start",n),e.xr?.off("end",s)}},[e]);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)("div",{className:"overlay",children:[!n&&s&&(0,a.jsx)("button",{onClick:()=>{const n=e.root.findComponent("camera");n&&e.xr.start(n,"immersive-ar","local-floor")},children:"Enter AR"}),!n&&r&&(0,a.jsx)("button",{onClick:()=>{const n=e.root.findComponent("camera");n&&e.xr.start(n,"immersive-vr","local-floor")},children:"Enter VR"}),n&&(0,a.jsx)("button",{"data-selected":!0,onClick:()=>e.xr.end(),children:"Exit XR"})]}),(0,a.jsxs)(c.w,{name:"camera-root",children:[(0,a.jsxs)(c.w,{name:"camera",position:[4,1,4],rotation:[0,45,0],children:[(0,a.jsx)(d.i,{clearColor:"#1e1e1e"}),!n&&(0,a.jsx)(p.e,{script:j.a,enableFly:!1,pitchRange:new y.Z(-90,-5)})]}),(0,a.jsx)(p.e,{script:x}),(0,a.jsx)(p.e,{script:g})]}),(0,a.jsx)(c.w,{name:"cube-1",position:[-2,0,0],children:(0,a.jsx)(h.d,{type:"box"})}),(0,a.jsx)(c.w,{name:"cube-2",position:[0,0,0],children:(0,a.jsx)(h.d,{type:"box"})}),(0,a.jsx)(c.w,{name:"cube-3",position:[2,0,-2],children:(0,a.jsx)(h.d,{type:"box"})})]})},b="import { useState, useEffect, useMemo } from 'react'\nimport { Entity } from '@playcanvas/react'\nimport { Camera, Render, Script } from '@playcanvas/react/components'\nimport { useApp } from '@playcanvas/react/hooks'\nimport { XrControllers } from 'playcanvas/scripts/esm/xr-controllers.mjs'\nimport { XrNavigation } from 'playcanvas/scripts/esm/xr-navigation.mjs'\nimport { CameraControls } from 'playcanvas/scripts/esm/camera-controls.mjs'\nimport { Vec2 } from 'playcanvas'\n\n// \u2191 imports hidden\nexport const XrExample = () => {\n  const app = useApp()\n  const [xrActive, setXrActive] = useState(false)\n  const arAvailable = useMemo(() => app?.xr?.isAvailable('immersive-ar'), [app.xr])\n  const vrAvailable = useMemo(() => app?.xr?.isAvailable('immersive-vr'), [app.xr])\n\n  // Listen for XR session start/end\n  useEffect(() => {\n    const onStart = () => setXrActive(true)\n    const onEnd = () => setXrActive(false)\n    \n    app.xr?.on('start', onStart)\n    app.xr?.on('end', onEnd)\n    \n    return () => {\n      app.xr?.off('start', onStart)\n      app.xr?.off('end', onEnd)\n    }\n  }, [app])\n\n  const startAR = () => {\n    const camera = app.root.findComponent('camera')\n    if (camera) {\n      app.xr.start(camera, 'immersive-ar', 'local-floor')\n    }\n  }\n\n  const startVR = () => {\n    const camera = app.root.findComponent('camera')\n    if (camera) {\n      app.xr.start(camera, 'immersive-vr', 'local-floor')\n    }\n  }\n\n  const endXR = () => app.xr.end()\n\n  return (\n    <>\n      {/* XR UI Controls */}\n      <div className=\"overlay\">\n        { !xrActive && arAvailable && <button onClick={startAR}>Enter AR</button> }\n        { !xrActive && vrAvailable && <button onClick={startVR}>Enter VR</button> }\n        { xrActive && <button data-selected onClick={endXR}>Exit XR</button> }\n      </div>\n\n      {/* Camera with XR support */}\n      <Entity name=\"camera-root\">\n        <Entity name=\"camera\" position={[4, 1, 4]} rotation={[0, 45, 0]}>\n          <Camera clearColor=\"#1e1e1e\" />\n          { !xrActive && <Script script={CameraControls} enableFly={false} pitchRange={new Vec2(-90, -5)} /> }\n        </Entity>\n        <Script script={XrControllers} />\n        <Script script={XrNavigation} />\n      </Entity>\n\n      {/* Scene content - a grid of cubes */}\n      <Entity name=\"cube-1\" position={[-2, 0, 0]}>\n        <Render type=\"box\" />\n      </Entity>\n      <Entity name=\"cube-2\" position={[0, 0, 0]}>\n        <Render type=\"box\" />\n      </Entity>\n      <Entity name=\"cube-3\" position={[2, 0, -2]}>\n        <Render type=\"box\" />\n      </Entity>\n    </>\n  )\n}\n\n",w={title:"XR"},C=void 0,X={},S=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"XR Scripts",id:"xr-scripts",level:2},{value:"Camera Configuration",id:"camera-configuration",level:2},{value:"Starting XR Sessions",id:"starting-xr-sessions",level:2},{value:"Complete Example",id:"complete-example",level:2},{value:"Checking XR Availability",id:"checking-xr-availability",level:2},{value:"XR Events",id:"xr-events",level:2},{value:"Next Steps",id:"next-steps",level:2}];function A(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"PlayCanvas React makes it easy to add Virtual Reality (VR) and Augmented Reality (AR) support to your applications using the WebXR API."}),"\n",(0,a.jsx)(n.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,a.jsx)(n.p,{children:"To enable XR support in your React application, you'll need:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"XR Scripts"})," - Import the XR controller and navigation scripts from the PlayCanvas engine package"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Camera Setup"})," - Configure your camera entity with XR scripts attached"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"XR Controls"})," - Add UI buttons to enter and exit XR sessions (WebXR requires user interaction)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Secure Context"})," - Serve your app over HTTPS (or ",(0,a.jsx)(n.code,{children:"localhost"})," during development)"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"xr-scripts",children:"XR Scripts"}),"\n",(0,a.jsx)(n.p,{children:"The PlayCanvas engine provides two essential XR scripts:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"XrControllers"})})," - Automatically downloads and renders XR controller models for detected controllers (including hand tracking)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.code,{children:"XrNavigation"})})," - Implements teleportation-based navigation using point-and-select actions"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Import them from the PlayCanvas scripts package:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import { XrControllers } from 'playcanvas/scripts/esm/xr-controllers.mjs'\nimport { XrNavigation } from 'playcanvas/scripts/esm/xr-navigation.mjs'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"camera-configuration",children:"Camera Configuration"}),"\n",(0,a.jsx)(n.p,{children:"For XR to work properly, you need a camera entity with the XR scripts attached. The recommended structure is:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<Entity name="camera-root">\n  <Entity name="camera" position={[0, 1.6, 0]}>\n    <Camera clearColor="#1e1e1e" />\n  </Entity>\n  <Script script={XrControllers} />\n  <Script script={XrNavigation} />\n</Entity>\n'})}),"\n",(0,a.jsx)(n.p,{children:"The camera is positioned at approximately eye-level (1.6 meters) and the scripts are attached to the parent entity."}),"\n",(0,a.jsx)(n.h2,{id:"starting-xr-sessions",children:"Starting XR Sessions"}),"\n",(0,a.jsxs)(n.p,{children:["WebXR requires a user gesture to start a session. Use the ",(0,a.jsx)(n.code,{children:"app.xr"})," API to start and manage XR sessions:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const app = useApp()\n\nconst startVR = () => {\n  const camera = app.root.findComponent('camera')\n  if (camera) {\n    app.xr.start(camera, 'immersive-vr', 'local-floor')\n  }\n}\n\nconst startAR = () => {\n  const camera = app.root.findComponent('camera')\n  if (camera) {\n    app.xr.start(camera, 'immersive-ar', 'local-floor')\n  }\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,a.jsx)(n.p,{children:"Here's a complete example with XR support, including buttons to enter AR/VR mode and a simple scene with cubes you can navigate around in XR:"}),"\n",(0,a.jsx)(i.G,{label:"XR Support with AR and VR",filename:"xr-example.jsx",code:b,showDemo:!0,showControls:!1,children:(0,a.jsx)(o.l,{children:(0,a.jsx)(i.C,{useGrid:!0,useLight:!0,camera:[3,2,3],children:(0,a.jsx)(R,{})})})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Press ",(0,a.jsx)(n.strong,{children:"Escape"})," to exit an active XR session"]}),"\n",(0,a.jsx)(n.li,{children:"XR availability depends on your device and browser support"}),"\n",(0,a.jsx)(n.li,{children:"Use a VR headset or AR-capable mobile device to test the full experience"}),"\n",(0,a.jsx)(n.li,{children:"During development, Chrome and Edge support WebXR emulation via DevTools"}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"checking-xr-availability",children:"Checking XR Availability"}),"\n",(0,a.jsx)(n.p,{children:"You can check if AR or VR is available on the current device:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"const app = useApp()\nconst arAvailable = app.xr.isAvailable('immersive-ar')\nconst vrAvailable = app.xr.isAvailable('immersive-vr')\n"})}),"\n",(0,a.jsx)(n.h2,{id:"xr-events",children:"XR Events"}),"\n",(0,a.jsx)(n.p,{children:"Listen to XR session events to update your UI:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"useEffect(() => {\n  const onStart = () => console.log('XR session started')\n  const onEnd = () => console.log('XR session ended')\n  \n  app.xr.on('start', onStart)\n  app.xr.on('end', onEnd)\n  \n  return () => {\n    app.xr.off('start', onStart)\n    app.xr.off('end', onEnd)\n  }\n}, [app])\n"})}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(n.p,{children:"The PlayCanvas Engine has comprehensive XR support with many advanced features. For more information, check out:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"/user-manual/xr",children:"XR User Manual"})," - Comprehensive XR documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/XrManager.html",children:"WebXR API Reference"})," - Full API documentation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/playcanvas/engine/tree/main/scripts/esm",children:"XR Scripts Source"})," - View the XR scripts source code"]}),"\n"]})]})}function E(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(A,{...e})}):A(e)}},85593:(e,n,t)=>{t.d(n,{A:()=>i});var s=t(83395),a=t(15817),r=t(74848);const i=e=>{const n={lighting:{exposure:1.21,skyBoxIntensity:1.02},rendering:{renderFormat:18,renderTargetScale:1,sharpness:0,samples:4,toneMapping:4,fog:"none",fogColor:{r:0,g:0,b:0,a:1},fogRange:[0,100],fogDensity:.01,renderFormatFallback0:12,renderFormatFallback1:14,sceneColorMap:!1,sceneDepthMap:!1,fogStart:0,fogEnd:100},bloom:{enabled:!0,intensity:.1,lastMipLevel:1},grading:{enabled:!0,brightness:.83,contrast:1.1,saturation:1.2,tint:{r:1,g:.9333333333333333,b:.8666666666666667,a:1}},vignette:{enabled:!0,intensity:1,inner:.25,outer:1.52,curvature:.78},fringing:{enabled:!0,intensity:10},...e};return(0,r.jsx)(s.e,{script:a.P,...n})}}}]);