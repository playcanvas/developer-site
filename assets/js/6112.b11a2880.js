"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[6112],{7306:(t,e,s)=>{s.d(e,{ue:()=>c});var o=s(96540),i=s(56460),n=s(53282);var r=s(10977);const a="https://www.gstatic.com/draco/versioned/decoders/1.5.7/";(0,s(18365).o)({jsUrl:a+"draco_wasm_wrapper.js",wasmUrl:a+"draco_decoder.wasm",numWorkers:2,lazyInit:!0});const h=["texture","gsplat","container","model"],l=(t,e,s={})=>{const a=(0,r.n)(),l=(0,o.useRef)(new Set),c=(0,o.useCallback)(t=>(l.current.add(t),()=>l.current.delete(t)),[]),[p,_]=(0,o.useState)({asset:null,loading:!0,error:null});let d=null;try{d=JSON.stringify({props:s},Object.keys({props:s}).sort())}catch{const e=`Invalid props for "useAsset('${t}')". \`props\` must be serializable to JSON.`;(0,n.mc)(e),_({asset:null,loading:!1,error:e})}const u=(0,o.useCallback)(t=>{for(const e of l.current)e(t)},[]);return(0,o.useEffect)(()=>{if(null!==d)return _({asset:null,loading:!0,error:null}),t?a?h.includes(e)?void(({app:t,url:e,type:s,props:o={},onProgress:r})=>new Promise((a,h)=>{let l=e;try{l+=JSON.stringify(o,Object.keys(o).sort())}catch{const t=`Invalid props for "fetchAsset({ url: '${e}', type: '${s}' })". \`props\` must be serializable to JSON.`;throw(0,n.mc)(t),new Error(t)}let c=t.assets.find(l,s);c||(c=new i.V(l,s,{url:e,...o.file??{}},o.data??{},o.options??{}),t.assets.add(c));const p=()=>{u(),r?.({progress:1}),a(c)},_=t=>{u(),h(t)},d=(t,e)=>{"number"==typeof t&&"number"==typeof e?r?.({progress:t/e,totalReceived:t,totalRequired:e}):(0,n.mc)("Invalid progress callback parameters")},u=()=>{r&&c.off("progress",d),c.off("load",p),c.off("error",_)};r&&c.on("progress",d),c.resource?p():(c.once("load",p),c.once("error",_),c.loading||t.assets.load(c))}))({app:a,url:t,type:e,props:s,onProgress:u}).then(t=>{_({asset:t,loading:!1,error:null})}).catch(e=>{(0,n.mc)(`Failed to load asset: ${t}`),_({asset:null,loading:!1,error:e?.message||`Failed to load asset: ${t}`})}):((0,n.mc)(`Unsupported asset type: "${e}". Supported types are "${h.join('", "')}"`),void _({asset:null,loading:!1,error:`Unsupported asset type: ${e}`})):((0,n.mc)("PlayCanvas application not found"),void _({asset:null,loading:!1,error:"PlayCanvas application not found"})):((0,n.mc)("Asset source URL is required"),void _({asset:null,loading:!1,error:"Asset source URL is required"}))},[a,t,e,d]),{...p,subscribe:c}},c=(t,e={})=>l(t,"gsplat",e)},37275:(t,e,s)=>{s.d(e,{e:()=>p});var o=s(85169),i=s(96540),n=s(45120),r=s(10977);const a=t=>t[0].toLowerCase()+t.substring(1);var h=s(53282);function l(t){return"object"==typeof t&&null!==t&&"equals"in t&&"function"==typeof t.equals}const c=(0,i.forwardRef)(function(t,e){const s=(0,h.cF)(t,d,!1),{script:o,...l}=s;return((t,e,s)=>{const o=(0,n.c)(),h=(0,r.n)(),l=a(t.name),c=(0,i.useRef)(null),p=(0,i.useRef)(null);(0,i.useEffect)(()=>{if(h){if(o.script||o.addComponent("script"),!c.current){const i=o.script,n=i.create(t,{properties:{...e},preloading:!1});s&&("function"==typeof s?s(n):s.current=n),c.current=n,p.current=i}return()=>{const t=p.current,e=c.current;c.current=null,p.current=null,h&&h.root&&e&&t&&(t.destroy(l),s&&("function"==typeof s?s(null):s.current=null))}}},[h,o,t]),(0,i.useEffect)(()=>{const t=c.current;if(!t)return;const s=Object.fromEntries(Object.entries(e).filter(([e])=>e in t));Object.assign(t,s)},[e])})(o,(0,i.useMemo)(()=>l,[l]),e),null}),p=(0,i.memo)(c,(t,e)=>t.script===e.script&&((t,e)=>{if(t===e)return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;const s=Object.keys(t),o=Object.keys(e);if(s.length!==o.length)return!1;for(let i=0;i<s.length;i++){const o=s[i],n=t[o],r=e[o];if(l(n))return n.equals(r);if(n!==r)return!1}return!0})(t,e));class _ extends o.e{}const d={name:"Script",apiName:"ScriptComponent",schema:{script:{validate:t=>Boolean(t&&t instanceof Function&&t.prototype instanceof o.e),errorMsg:t=>`Invalid value for prop "script": "${t}". Expected a subclass of Script.`,default:_}}}},58545:(t,e,s)=>{s.d(e,{U:()=>a});var o=s(18881),i=s(71586),n=s(56460),r=s(53282);const a=t=>{const e=(0,r.hE)(t,h);return(0,o.x)("gsplat",e,h.schema),null},h=(0,r.xE)("GSplat",()=>new i.w("mock-gsplat",(0,r.s_)()).addComponent("gsplat"),t=>t.system.destroy(),"GSplatComponent");h.schema={...h.schema,asset:{validate:t=>t instanceof n.V,errorMsg:t=>`Invalid value for prop "asset": "${JSON.stringify(t)}". Expected an Asset.`,default:null}}},68869:(t,e,s)=>{s.d(e,{a:()=>st});var o=s(93953),i=s(59752),n=s(36805),r=s(40050);const a=new o.e,h=new n.k;class l{constructor(t=o.e.ZERO,e=o.e.ZERO,s=0){this.position=new o.e,this.angles=new o.e,this.distance=0,this.pitchRange=new r.Z(-1/0,1/0),this.yawRange=new r.Z(-1/0,1/0),this.xRange=new r.Z(-1/0,1/0),this.yRange=new r.Z(-1/0,1/0),this.zRange=new r.Z(-1/0,1/0),this.set(t,e,s)}copy(t){return this.set(t.position,t.angles,t.distance)}clone(){return new l(this.position.clone(),this.angles.clone(),this.distance)}equalsApprox(t,e=1e-6){return this.position.equalsApprox(t.position,e)&&this.angles.equalsApprox(t.angles,e)&&Math.abs(this.distance-t.distance)<e}lerp(t,e,s,o=s,n=s){return this.position.lerp(t.position,e.position,s),this.angles.x=i.D.lerpAngle(t.angles.x,e.angles.x,o)%360,this.angles.y=i.D.lerpAngle(t.angles.y,e.angles.y,o)%360,this.angles.z=i.D.lerpAngle(t.angles.z,e.angles.z,o)%360,this.distance=i.D.lerp(t.distance,e.distance,n),this}move(t){return this.position.add(t),this.position.x=i.D.clamp(this.position.x,this.xRange.x,this.xRange.y),this.position.y=i.D.clamp(this.position.y,this.yRange.x,this.yRange.y),this.position.z=i.D.clamp(this.position.z,this.zRange.x,this.zRange.y),this}rotate(t){return this.angles.add(t),this.angles.x%=360,this.angles.y%=360,this.angles.z%=360,this.angles.x=i.D.clamp(this.angles.x,this.pitchRange.x,this.pitchRange.y),this.angles.y=i.D.clamp(this.angles.y,this.yawRange.x,this.yawRange.y),this}set(t,e,s){return this.position.copy(t),this.angles.copy(e),this.distance=s,this}look(t,e){this.position.copy(t),this.distance=t.distance(e);const s=a.sub2(e,t).normalize(),o=Math.atan2(-s.y,Math.sqrt(s.x*s.x+s.z*s.z))*i.D.RAD_TO_DEG,n=Math.atan2(-s.x,-s.z)*i.D.RAD_TO_DEG;return this.angles.set(-o,n,0),this}getFocus(t){return h.setFromEulerAngles(this.angles).transformVector(o.e.FORWARD,t).mulScalar(this.distance).add(this.position)}}var c=s(97213);class p{constructor(t){Array.isArray(t)?this._value=t.slice():this._value=new Array(+t).fill(0)}add(t){for(let e=0;e<this._value.length;e++)this._value[e]+=t._value[e]||0;return this}append(t){for(let e=0;e<this._value.length;e++)this._value[e]+=t[e]||0;return this}copy(t){for(let e=0;e<this._value.length;e++)this._value[e]=t._value[e]||0;return this}length(){let t=0;for(const e of this._value)t+=e*e;return Math.sqrt(t)}read(){const t=this._value.slice();return this._value.fill(0),t}}class _{constructor(t){this.deltas={};for(const e in t)this.deltas[e]=new p(t[e])}read(){const t={};for(const e in this.deltas)t[e]=this.deltas[e].read();return t}}class d extends _{on(t,e){this._events.on(t,e)}off(t,e){this._events.off(t,e)}fire(t,...e){this._events.fire(t,...e)}attach(t){this._element&&this.detach(),this._element=t}detach(){this._element&&(this._element=null,this.read())}destroy(){this.detach(),this._events.off()}constructor(...t){super(...t),this._element=null,this._events=new c.J}}class u{update(t,e){t.read()}}class m extends u{attach(t,e=!0){}detach(){}update(t,e){return super.update(t,e),this._pose}destroy(){this.detach()}constructor(...t){super(...t),this._pose=new l}}var g=s(27351),y=s(85169);const f={passive:!1},v={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,0:26,1:27,2:28,3:29,4:30,5:31,6:32,7:33,8:34,9:35,UP:36,DOWN:37,LEFT:38,RIGHT:39,SPACE:40,SHIFT:41,CTRL:42},P=Object.keys(v).length,w=Array(P).fill(0);class b extends d{static{this.keyCode=v}constructor({pointerLock:t=!1}={}){super({key:Array(P).fill(0),button:[0,0,0],mouse:[0,0],wheel:[0]}),this._pointerId=-1,this._keyMap=new Map,this._keyPrev=Array(P).fill(0),this._keyNow=Array(P).fill(0),this._button=Array(3).fill(0),this._pointerLock=t??!1;const{keyCode:e}=b;for(let s=0;s<26;s++){const t=`Key${String.fromCharCode("A".charCodeAt(0)+s)}`;this._keyMap.set(t,e.A+s)}for(let s=0;s<10;s++){const t=`Digit${s}`;this._keyMap.set(t,e[0]+s)}this._keyMap.set("ArrowUp",e.UP),this._keyMap.set("ArrowDown",e.DOWN),this._keyMap.set("ArrowLeft",e.LEFT),this._keyMap.set("ArrowRight",e.RIGHT),this._keyMap.set("Space",e.SPACE),this._keyMap.set("ShiftLeft",e.SHIFT),this._keyMap.set("ShiftRight",e.SHIFT),this._keyMap.set("ControlLeft",e.CTRL),this._keyMap.set("ControlRight",e.CTRL),this._onWheel=this._onWheel.bind(this),this._onPointerDown=this._onPointerDown.bind(this),this._onPointerMove=this._onPointerMove.bind(this),this._onPointerUp=this._onPointerUp.bind(this),this._onContextMenu=this._onContextMenu.bind(this),this._onKeyDown=this._onKeyDown.bind(this),this._onKeyUp=this._onKeyUp.bind(this)}_onWheel(t){t.preventDefault(),this.deltas.wheel.append([t.deltaY])}_onPointerDown(t){"mouse"===t.pointerType&&(this._pointerLock?document.pointerLockElement!==this._element&&this._element?.requestPointerLock():this._element?.setPointerCapture(t.pointerId),this._clearButtons(),this._button[t.button]=1,this.deltas.button.append(this._button),-1===this._pointerId&&(this._pointerId=t.pointerId))}_onPointerMove(t){if("mouse"===t.pointerType&&t.target===this._element){if(this._pointerLock){if(document.pointerLockElement!==this._element)return}else if(this._pointerId!==t.pointerId)return;this.deltas.mouse.append([t.movementX,t.movementY])}}_onPointerUp(t){"mouse"===t.pointerType&&(this._pointerLock||this._element?.releasePointerCapture(t.pointerId),this._clearButtons(),this.deltas.button.append(this._button),this._pointerId===t.pointerId&&(this._pointerId=-1))}_onContextMenu(t){t.preventDefault()}_onKeyDown(t){this._pointerLock&&document.pointerLockElement!==this._element||(t.stopPropagation(),this._setKey(t.code,1))}_onKeyUp(t){t.stopPropagation(),this._setKey(t.code,0)}_clearButtons(){for(let t=0;t<this._button.length;t++)1!==this._button[t]?this._button[t]=0:this._button[t]=-1}_setKey(t,e){this._keyMap.has(t)&&(this._keyNow[this._keyMap.get(t)??0]=e)}attach(t){super.attach(t),this._element=t,this._element.addEventListener("wheel",this._onWheel,f),this._element.addEventListener("pointerdown",this._onPointerDown),this._element.addEventListener("pointermove",this._onPointerMove),this._element.addEventListener("pointerup",this._onPointerUp),this._element.addEventListener("pointercancel",this._onPointerUp),this._element.addEventListener("pointerleave",this._onPointerUp),this._element.addEventListener("contextmenu",this._onContextMenu),window.addEventListener("keydown",this._onKeyDown,!1),window.addEventListener("keyup",this._onKeyUp,!1)}detach(){this._element&&(this._element.removeEventListener("wheel",this._onWheel,f),this._element.removeEventListener("pointerdown",this._onPointerDown),this._element.removeEventListener("pointermove",this._onPointerMove),this._element.removeEventListener("pointerup",this._onPointerUp),this._element.removeEventListener("pointercancel",this._onPointerUp),this._element.removeEventListener("pointerleave",this._onPointerUp),this._element.removeEventListener("contextmenu",this._onContextMenu),window.removeEventListener("keydown",this._onKeyDown,!1),window.removeEventListener("keyup",this._onKeyUp,!1),this._keyNow.fill(0),this._keyPrev.fill(0),super.detach())}read(){for(let t=0;t<w.length;t++)w[t]=this._keyNow[t]-this._keyPrev[t],this._keyPrev[t]=this._keyNow[t];return this.deltas.key.append(w),super.read()}}const k=new r.Z;class R extends d{constructor(){super({touch:[0,0],count:[0],pinch:[0]}),this._pointerEvents=new Map,this._pointerPos=new r.Z,this._pinchDist=-1,this._onPointerDown=this._onPointerDown.bind(this),this._onPointerMove=this._onPointerMove.bind(this),this._onPointerUp=this._onPointerUp.bind(this),this._onContextMenu=this._onContextMenu.bind(this)}_onPointerDown(t){const{pointerId:e,pointerType:s}=t;"touch"===s&&(this._element?.setPointerCapture(e),this._pointerEvents.set(e,t),this.deltas.count.append([1]),this._pointerEvents.size>1&&(this._getMidPoint(this._pointerPos),this._pinchDist=this._getPinchDist()))}_onPointerMove(t){const{pointerType:e,target:s,pointerId:o,movementX:i,movementY:n}=t;if("touch"===e&&s===this._element&&0!==this._pointerEvents.size)if(this._pointerEvents.set(o,t),this._pointerEvents.size>1){const t=this._getMidPoint(k);this.deltas.touch.append([t.x-this._pointerPos.x,t.y-this._pointerPos.y]),this._pointerPos.copy(t);const e=this._getPinchDist();this._pinchDist>0&&this.deltas.pinch.append([this._pinchDist-e]),this._pinchDist=e}else this.deltas.touch.append([i,n])}_onPointerUp(t){const{pointerType:e,pointerId:s}=t;"touch"===e&&(this._element?.releasePointerCapture(s),this._pointerEvents.delete(s),this.deltas.count.append([-1]),this._pointerEvents.size<2&&(this._pinchDist=-1),this._pointerPos.set(0,0))}_onContextMenu(t){t.preventDefault()}_getMidPoint(t){if(this._pointerEvents.size<2)return t.set(0,0);const[e,s]=this._pointerEvents.values(),o=e.clientX-s.clientX,i=e.clientY-s.clientY;return t.set(s.clientX+.5*o,s.clientY+.5*i)}_getPinchDist(){if(this._pointerEvents.size<2)return 0;const[t,e]=this._pointerEvents.values(),s=t.clientX-e.clientX,o=t.clientY-e.clientY;return Math.sqrt(s*s+o*o)}attach(t){super.attach(t),this._element=t,this._element.addEventListener("pointerdown",this._onPointerDown),this._element.addEventListener("pointermove",this._onPointerMove),this._element.addEventListener("pointerup",this._onPointerUp),this._element.addEventListener("pointercancel",this._onPointerUp),this._element.addEventListener("contextmenu",this._onContextMenu)}detach(){this._element&&(this._element.removeEventListener("pointerdown",this._onPointerDown),this._element.removeEventListener("pointermove",this._onPointerMove),this._element.removeEventListener("pointerup",this._onPointerUp),this._element.removeEventListener("pointercancel",this._onPointerUp),this._element.removeEventListener("contextmenu",this._onContextMenu),this._pointerEvents.clear(),super.detach())}}const D=new r.Z;class C{constructor({range:t}={}){this._range=70,this._position=new r.Z,this._value=new r.Z,this._range=t??this._range}get value(){return this._value}down(t,e){return this._position.set(t,e),this._value.set(0,0),[t,e,t,e]}move(t,e){D.set(t-this._position.x,e-this._position.y),D.length()>this._range&&D.normalize().mulScalar(this._range),this._value.set(i.D.clamp(D.x/this._range,-1,1),i.D.clamp(D.y/this._range,-1,1));const{x:s,y:o}=this._position;return[s,o,s+D.x,o+D.y]}up(){return this._position.set(0,0),this._value.set(0,0),[-1,-1,-1,-1]}}const x=(t,e)=>0===t.indexOf(e),E=(t,e)=>-1!==t.indexOf(e,t.length-e.length);class M extends d{constructor(t){super({leftInput:[0,0],rightInput:[0,0],doubleTap:[0]}),this._layout="joystick-touch",this._pointerData=new Map,this._lastPointer={x:0,y:0,time:0},t&&(this.layout=t),this._leftJoystick=new C,this._rightJoystick=new C,this._onPointerDown=this._onPointerDown.bind(this),this._onPointerMove=this._onPointerMove.bind(this),this._onPointerUp=this._onPointerUp.bind(this)}set layout(t){this._layout!==t&&(this._layout=t,this.read(),this._pointerData.clear())}get layout(){return this._layout}get leftJoystick(){return this._leftJoystick}get rightJoystick(){return this._rightJoystick}_onPointerDown(t){const{pointerType:e,pointerId:s,clientX:o,clientY:i}=t;if("touch"!==e)return;this._element?.setPointerCapture(s);const n=o<.5*window.innerWidth;this._pointerData.set(s,{x:o,y:i,left:n});const r=Date.now();(this._lastPointer.x-o)**2+(this._lastPointer.y-i)**2<100&&r-this._lastPointer.time<250&&this.deltas.doubleTap.append([1]),this._lastPointer.x=o,this._lastPointer.y=i,this._lastPointer.time=r,n&&x(this._layout,"joystick")&&this.fire("joystick:position:left",this._leftJoystick.down(o,i)),!n&&E(this._layout,"joystick")&&this.fire("joystick:position:right",this._rightJoystick.down(o,i))}_onPointerMove(t){const{pointerType:e,pointerId:s,target:o,clientX:i,clientY:n,movementX:r,movementY:a}=t;if("touch"!==e)return;if(o!==this._element)return;const h=this._pointerData.get(s);if(!h)return;const{left:l}=h;h.x=i,h.y=n,l?x(this._layout,"joystick")?this.fire("joystick:position:left",this._leftJoystick.move(i,n)):this.deltas.leftInput.append([r,a]):E(this._layout,"joystick")?this.fire("joystick:position:right",this._rightJoystick.move(i,n)):this.deltas.rightInput.append([r,a])}_onPointerUp(t){const{pointerType:e,pointerId:s}=t;if("touch"!==e)return;this._element?.releasePointerCapture(s);const o=this._pointerData.get(s);if(!o)return;const{left:i}=o;this._pointerData.delete(s),i&&x(this._layout,"joystick")&&this.fire("joystick:position:left",this._leftJoystick.up()),!i&&E(this._layout,"joystick")&&this.fire("joystick:position:right",this._rightJoystick.up())}attach(t){super.attach(t),this._element=t,this._element.addEventListener("pointerdown",this._onPointerDown),this._element.addEventListener("pointermove",this._onPointerMove),this._element.addEventListener("pointerup",this._onPointerUp),this._element.addEventListener("pointercancel",this._onPointerUp)}detach(){this._element&&(this._element.removeEventListener("pointerdown",this._onPointerDown),this._element.removeEventListener("pointermove",this._onPointerMove),this._element.removeEventListener("pointerup",this._onPointerUp),this._element.removeEventListener("pointercancel",this._onPointerUp),this._pointerData.clear(),super.detach())}read(){return this.deltas.leftInput.append([this._leftJoystick.value.x,this._leftJoystick.value.y]),this.deltas.rightInput.append([this._rightJoystick.value.x,this._rightJoystick.value.y]),super.read()}destroy(){this._leftJoystick.up(),this._rightJoystick.up(),super.destroy()}}const S={A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,SELECT:8,START:9,LEFT_STICK:10,RIGHT_STICK:11},I=Object.keys(S).length;class L extends d{static{this.buttonCode=S}constructor(){super({buttons:Array(I).fill(0),leftStick:[0,0],rightStick:[0,0]}),this._buttonPrev=Array(I).fill(0)}read(){const t=navigator.getGamepads();for(let e=0;e<t.length;e++){const s=t[e];if(!s)continue;if("standard"!==s.mapping)continue;if(s.axes.length<4)continue;if(s.buttons.length<I)continue;const{buttons:o,axes:i}=s;for(let t=0;t<this._buttonPrev.length;t++){const e=+o[t].pressed;this.deltas.buttons[t]=e-this._buttonPrev[t],this._buttonPrev[t]=e}this.deltas.leftStick.append([i[0],i[1]]),this.deltas.rightStick.append([i[2],i[3]])}return super.read()}}const z=(t,e)=>1-Math.pow(t,1e3*e),A=new o.e,U=new o.e,O=new o.e,T=new o.e,j=new o.e,F=new n.k;class Z extends m{set pitchRange(t){this._targetPose.pitchRange.copy(t),this._pose.copy(this._targetPose.rotate(o.e.ZERO))}get pitchRange(){return this._targetPose.pitchRange}set yawRange(t){this._targetPose.yawRange.copy(t),this._pose.copy(this._targetPose.rotate(o.e.ZERO))}get yawRange(){return this._targetPose.yawRange}attach(t,e=!0){this._targetPose.copy(t),e||this._pose.copy(this._targetPose)}detach(){this._targetPose.copy(this._pose)}update(t,e){const{move:s,rotate:i}=t.read();return this._targetPose.rotate(U.set(-i[1],-i[0],0)),F.setFromEulerAngles(this._pose.angles),F.transformVector(o.e.FORWARD,O),F.transformVector(o.e.RIGHT,T),F.transformVector(o.e.UP,j),A.set(0,0,0),A.add(O.mulScalar(s[2])),A.add(T.mulScalar(s[0])),A.add(j.mulScalar(s[1])),this._targetPose.move(A),this._pose.lerp(this._pose,this._targetPose,z(this.moveDamping,e),z(this.rotateDamping,e))}destroy(){this.detach()}constructor(...t){super(...t),this._targetPose=new l,this.rotateDamping=.98,this.moveDamping=.98}}const J=new o.e,N=new o.e,K=new o.e,q=new n.k;class $ extends m{set pitchRange(t){this._targetRootPose.pitchRange.copy(t),this._rootPose.copy(this._targetRootPose.rotate(o.e.ZERO))}get pitchRange(){return this._targetRootPose.pitchRange}set yawRange(t){this._targetRootPose.yawRange.copy(t),this._rootPose.copy(this._targetRootPose.rotate(o.e.ZERO))}get yawRange(){return this._targetRootPose.yawRange}set zoomRange(t){this._targetChildPose.zRange.copy(t),this._childPose.copy(this._targetChildPose.move(o.e.ZERO))}get zoomRange(){return this._targetRootPose.zRange}attach(t,e=!0){this._targetRootPose.set(t.getFocus(J),t.angles,0),this._targetChildPose.position.set(0,0,t.distance),e||(this._rootPose.copy(this._targetRootPose),this._childPose.copy(this._targetChildPose))}detach(){this._targetRootPose.copy(this._rootPose),this._targetChildPose.copy(this._childPose)}update(t,e){const{move:s,rotate:o}=t.read();N.set(s[0],s[1],0),q.setFromEulerAngles(this._rootPose.angles).transformVector(N,N),this._targetRootPose.move(N);const{z:i}=this._targetChildPose.position;return this._targetChildPose.move(N.set(0,0,i*(1+s[2])-i)),this._targetRootPose.rotate(K.set(-o[1],-o[0],0)),this._rootPose.lerp(this._rootPose,this._targetRootPose,z(this.moveDamping,e),z(this.rotateDamping,e),1),this._childPose.lerp(this._childPose,this._targetChildPose,z(this.zoomDamping,e),1,1),q.setFromEulerAngles(this._rootPose.angles).transformVector(this._childPose.position,N).add(this._rootPose.position),this._pose.set(N,this._rootPose.angles,this._childPose.position.z)}destroy(){this.detach()}constructor(...t){super(...t),this._targetRootPose=new l,this._rootPose=new l,this._targetChildPose=new l,this._childPose=new l,this.rotateDamping=.98,this.moveDamping=.98,this.zoomDamping=.98}}const W=new o.e,G=new o.e,Y=new n.k;class X extends m{attach(t,e=!0){this._targetRootPose.set(t.getFocus(W),t.angles,0),this._targetChildPose.position.set(0,0,t.distance),e||(this._rootPose.copy(this._targetRootPose),this._childPose.copy(this._targetChildPose))}detach(){this._targetRootPose.copy(this._rootPose),this._targetChildPose.copy(this._childPose)}complete(){return this._targetRootPose.equalsApprox(this._rootPose,.001)&&this._targetChildPose.equalsApprox(this._childPose,.001)}update(t,e){return t.read(),this._rootPose.lerp(this._rootPose,this._targetRootPose,z(this.focusDamping,e),z(this.focusDamping,e),1),this._childPose.lerp(this._childPose,this._targetChildPose,z(this.focusDamping,e),1,1),Y.setFromEulerAngles(this._rootPose.angles).transformVector(this._childPose.position,G).add(this._rootPose.position),this._pose.set(G,this._rootPose.angles,this._childPose.position.length())}destroy(){this.detach()}constructor(...t){super(...t),this._targetRootPose=new l,this._rootPose=new l,this._targetChildPose=new l,this._childPose=new l,this.focusDamping=.98}}const H=new o.e,V=new o.e,B=new l,Q=new _({move:[0,0,0],rotate:[0,0,0]}),tt=(t,e,s)=>{const o=Math.sqrt(t[0]*t[0]+t[1]*t[1]);if(o<e)return void t.fill(0);const i=(o-e)/(s-e);t[0]*=i/o,t[1]*=i/o},et=(t,e,s,n,r=new o.e)=>{const{system:a,fov:h,aspectRatio:l,horizontalFov:c,projection:p,orthoHeight:_}=t,{width:d,height:u}=a.app.graphicsDevice.clientRect;r.set(-e/d*2,s/u*2,0);const m=V.set(0,0,0);if(p===g.$JG){const t=n*Math.tan(.5*h*i.D.DEG_TO_RAD);c?m.set(t,t/l,0):m.set(t*l,t,0)}else m.set(_*l,_,0);return r.mul(m),r};class st extends y.e{static scriptName="cameraControls";_camera;_enableOrbit=!0;_enableFly=!0;_startZoomDist=0;_pitchRange=new r.Z(-360,360);_yawRange=new r.Z(-360,360);_zoomRange=new r.Z(.01,0);_desktopInput=new b;_orbitMobileInput=new R;_flyMobileInput=new M;_gamepadInput=new L;_flyController=new Z;_orbitController=new $;_focusController=new X;_controller;_pose=new l;_mode;_state={axis:new o.e,shift:0,ctrl:0,mouse:[0,0,0],touches:0};skipUpdate=!1;enablePan=!0;sceneSize=100;rotateSpeed=.2;rotateJoystickSens=2;moveSpeed=2;moveFastSpeed=4;moveSlowSpeed=1;zoomSpeed=.001;zoomPinchSens=5;gamepadDeadZone=new r.Z(.3,.6);joystickEventName="joystick";constructor({app:t,entity:e,...s}){super({app:t,entity:e,...s}),this.entity.camera?(this._camera=this.entity.camera,this._orbitController.zoomRange=new r.Z(.01,1/0),this._desktopInput.attach(this.app.graphicsDevice.canvas),this._orbitMobileInput.attach(this.app.graphicsDevice.canvas),this._flyMobileInput.attach(this.app.graphicsDevice.canvas),this._gamepadInput.attach(this.app.graphicsDevice.canvas),this._flyMobileInput.on("joystick:position:left",([t,e,s,o])=>{"fly"===this._mode&&this.app.fire(`${this.joystickEventName}:left`,t,e,s,o)}),this._flyMobileInput.on("joystick:position:right",([t,e,s,o])=>{"fly"===this._mode&&this.app.fire(`${this.joystickEventName}:right`,t,e,s,o)}),this._pose.look(this._camera.entity.getPosition(),o.e.ZERO),this._setMode("orbit"),this.on("destroy",this._destroy,this)):console.error("CameraControls: camera component not found")}set enableOrbit(t){this._enableOrbit=t,this._enableOrbit||"orbit"!==this._mode||this._setMode("fly")}get enableOrbit(){return this._enableOrbit}set enableFly(t){this._enableFly=t,this._enableFly||"fly"!==this._mode||this._setMode("orbit")}get enableFly(){return this._enableFly}set focusPoint(t){const e=this._camera.entity.getPosition();this._startZoomDist=e.distance(t),this._controller.attach(this._pose.look(e,t),!1)}get focusPoint(){return this._pose.getFocus(H)}set focusDamping(t){this._focusController.focusDamping=t}get focusDamping(){return this._focusController.focusDamping}set rotateDamping(t){this._flyController.rotateDamping=t,this._orbitController.rotateDamping=t}get rotateDamping(){return this._orbitController.rotateDamping}set moveDamping(t){this._flyController.moveDamping=t}get moveDamping(){return this._flyController.moveDamping}set zoomDamping(t){this._orbitController.zoomDamping=t}get zoomDamping(){return this._orbitController.zoomDamping}set pitchRange(t){this._pitchRange.x=i.D.clamp(t.x,-360,360),this._pitchRange.y=i.D.clamp(t.y,-360,360),this._flyController.pitchRange=this._pitchRange,this._orbitController.pitchRange=this._pitchRange}get pitchRange(){return this._pitchRange}set yawRange(t){this._yawRange.x=i.D.clamp(t.x,-360,360),this._yawRange.y=i.D.clamp(t.y,-360,360),this._flyController.yawRange=this._yawRange,this._orbitController.yawRange=this._yawRange}get yawRange(){return this._yawRange}set zoomRange(t){this._zoomRange.x=t.x,this._zoomRange.y=t.y<=t.x?1/0:t.y,this._orbitController.zoomRange=this._zoomRange}get zoomRange(){return this._zoomRange}set mobileInputLayout(t){/(?:joystick|touch)-(?:joystick|touch)/.test(t)?this._flyMobileInput.layout=t:console.warn(`CameraControls: invalid mobile input layout: ${t}`)}get mobileInputLayout(){return this._flyMobileInput.layout}_destroy(){this._desktopInput.destroy(),this._orbitMobileInput.destroy(),this._flyMobileInput.destroy(),this._gamepadInput.destroy(),this._flyController.destroy(),this._orbitController.destroy()}_setMode(t){switch(!0){case this.enableFly&&!this.enableOrbit:t="fly";break;case!this.enableFly&&this.enableOrbit:t="orbit";break;case!this.enableFly&&!this.enableOrbit:return void console.warn("CameraControls: both fly and orbit modes are disabled")}if(this._mode!==t){switch(this._mode=t,this._controller&&this._controller.detach(),this._mode){case"orbit":this._controller=this._orbitController;break;case"fly":this._controller=this._flyController;break;case"focus":this._controller=this._focusController}this._controller.attach(this._pose,!1)}}focus(t,e=!1){this._setMode("focus");const s=e?this._startZoomDist:this._camera.entity.getPosition().distance(t),o=H.copy(this._camera.entity.forward).mulScalar(-s).add(t);this._controller.attach(B.look(o,t))}look(t,e=!1){this._setMode("focus");const s=e?H.copy(this._camera.entity.getPosition()).sub(t).normalize().mulScalar(this._startZoomDist).add(t):this._camera.entity.getPosition();this._controller.attach(B.look(s,t))}reset(t,e){this._setMode("focus"),this._controller.attach(B.look(e,t))}update(t){const{keyCode:e}=b,{key:s,button:i,mouse:n,wheel:r}=this._desktopInput.read(),{touch:a,pinch:h,count:l}=this._orbitMobileInput.read(),{leftInput:c,rightInput:p}=this._flyMobileInput.read(),{leftStick:_,rightStick:d}=this._gamepadInput.read();tt(_,this.gamepadDeadZone.x,this.gamepadDeadZone.y),tt(d,this.gamepadDeadZone.x,this.gamepadDeadZone.y),this._state.axis.add(H.set(s[e.D]-s[e.A]+(s[e.RIGHT]-s[e.LEFT]),s[e.E]-s[e.Q],s[e.W]-s[e.S]+(s[e.UP]-s[e.DOWN])));for(let o=0;o<this._state.mouse.length;o++)this._state.mouse[o]+=i[o];this._state.shift+=s[e.SHIFT],this._state.ctrl+=s[e.CTRL],this._state.touches+=l[0],1===i[0]||1===i[1]||0!==r[0]?this._setMode("orbit"):(1===i[2]||this._state.axis.length()>0)&&this._setMode("fly");const u=+("orbit"===this._mode),m=+("fly"===this._mode),g=+(this._state.touches>1),y=+this.enablePan&&(u&&this._state.shift||this._state.mouse[1]||+(-1===i[1])),f=+this._flyMobileInput.layout.endsWith("joystick"),v=(this._state.shift?this.moveFastSpeed:this._state.ctrl?this.moveSlowSpeed:this.moveSpeed)*this.sceneSize*t,P=60*this.zoomSpeed*t,w=P*this.zoomPinchSens,k=60*this.rotateSpeed*t,R=this.rotateSpeed*this.rotateJoystickSens*60*t,{deltas:D}=Q,C=H.set(0,0,0),x=this._state.axis.clone().normalize();C.add(x.mulScalar(m*v));const E=et(this._camera,n[0],n[1],this._pose.distance);C.add(E.mulScalar(u*y));const M=new o.e(0,0,r[0]);C.add(M.mulScalar(u*P)),D.move.append([C.x,C.y,C.z]),C.set(0,0,0);const S=new o.e(n[0],n[1],0);C.add(S.mulScalar((1-y)*k)),D.rotate.append([C.x,C.y,C.z]),C.set(0,0,0);const I=new o.e(c[0],0,-c[1]);C.add(I.mulScalar(m*v));const L=et(this._camera,a[0],a[1],this._pose.distance);C.add(L.mulScalar(u*g));const z=new o.e(0,0,h[0]);C.add(z.mulScalar(u*g*w)),D.move.append([C.x,C.y,C.z]),C.set(0,0,0);const A=new o.e(a[0],a[1],0);C.add(A.mulScalar(u*(1-g)*k));const U=new o.e(p[0],p[1],0);C.add(U.mulScalar(m*(f?R:k))),D.rotate.append([C.x,C.y,C.z]),C.set(0,0,0);const O=new o.e(_[0],0,-_[1]);C.add(O.mulScalar(m*v)),D.move.append([C.x,C.y,C.z]),C.set(0,0,0);const T=new o.e(d[0],d[1],0);if(C.add(T.mulScalar(m*R)),D.rotate.append([C.x,C.y,C.z]),this.app.xr?.active||!this.entity.enabled||this.skipUpdate)Q.read();else{if("focus"===this._mode){const t=D.move.length()+D.rotate.length()>0,e=this._focusController.complete();(t||e)&&this._setMode("orbit")}this._pose.copy(this._controller.update(Q,t)),this._camera.entity.setPosition(this._pose.position),this._camera.entity.setEulerAngles(this._pose.angles)}}}}}]);