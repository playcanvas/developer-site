"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[34187],{21524:(e,n,a)=>{a.d(n,{A:()=>t});a(96540);var s=a(74848);function t({id:e,title:n,height:a=500,defaultTab:t="html"}){return(0,s.jsxs)("iframe",{height:a,style:{width:"100%"},title:n,src:`https://codepen.io/playcanvas/embed/${e}?default-tab=${i=t,{html:"html%2Cresult",css:"css%2Cresult",js:"js%2Cresult",result:"result"}[i]||"html%2Cresult"}&theme-id=light&editable=true`,loading:"lazy",allowTransparency:"true",allowFullScreen:"true",children:["See the Pen ",(0,s.jsx)("a",{href:`https://codepen.io/playcanvas/pen/${e}`,children:n})," by PlayCanvas (",(0,s.jsx)("a",{href:"https://codepen.io/playcanvas",children:"@playcanvas"}),") on ",(0,s.jsx)("a",{href:"https://codepen.io",children:"CodePen"}),"."]});var i}},28453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>r});var s=a(96540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}},89110:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"user-manual/gaussian-splatting/building/your-first-app/engine","title":"Using the Engine API","description":"Let\'s build a simple Gaussian splat application step by step using the PlayCanvas Engine directly. We\'ll create a scene with an interactive 3D toy cat splat that you can rotate around.","source":"@site/docs/user-manual/gaussian-splatting/building/your-first-app/engine.md","sourceDirName":"user-manual/gaussian-splatting/building/your-first-app","slug":"/user-manual/gaussian-splatting/building/your-first-app/engine","permalink":"/user-manual/gaussian-splatting/building/your-first-app/engine","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/gaussian-splatting/building/your-first-app/engine.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Using the Engine API","sidebar_position":1},"sidebar":"userManualSidebar","previous":{"title":"Your First Splat App","permalink":"/user-manual/gaussian-splatting/building/your-first-app/"},"next":{"title":"Using Web Components","permalink":"/user-manual/gaussian-splatting/building/your-first-app/web-components"}}');var t=a(74848),i=a(28453),l=a(21524);const r={title:"Using the Engine API",sidebar_position:1},o=void 0,c={},d=[{value:"Starting Point",id:"starting-point",level:2},{value:"Loading Assets",id:"loading-assets",level:2},{value:"Adding a Camera",id:"adding-a-camera",level:2},{value:"Adding Camera Controls",id:"adding-camera-controls",level:2},{value:"Adding the Splat",id:"adding-the-splat",level:2},{value:"Complete Code",id:"complete-code",level:2},{value:"Final Result",id:"final-result",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Let's build a simple Gaussian splat application step by step using the ",(0,t.jsx)(n.a,{href:"/user-manual/engine",children:"PlayCanvas Engine"})," directly. We'll create a scene with an interactive 3D toy cat splat that you can rotate around."]}),"\n",(0,t.jsx)(n.h2,{id:"starting-point",children:"Starting Point"}),"\n",(0,t.jsx)(n.p,{children:"Let's set up our project with two files: an HTML file and a JavaScript file."}),"\n",(0,t.jsxs)(n.p,{children:["First, create an ",(0,t.jsx)(n.code,{children:"index.html"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",metastring:'title="index.html"',children:'<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8">\n        <style>\n            body { margin: 0; overflow: hidden; }\n        </style>\n        <script type="importmap">\n        {\n            "imports": {\n                "playcanvas": "https://cdn.jsdelivr.net/npm/playcanvas/+esm"\n            }\n        }\n        <\/script>\n    </head>\n    <body>\n        <script type="module" src="main.js"><\/script>\n    </body>\n</html>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Next, create a ",(0,t.jsx)(n.code,{children:"main.js"})," file with the basic PlayCanvas application setup:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="main.js"',children:"import { Application, Asset, AssetListLoader, Entity, FILLMODE_FILL_WINDOW, RESOLUTION_AUTO } from 'playcanvas';\n\n// Create application\nconst canvas = document.createElement('canvas');\ndocument.body.appendChild(canvas);\n\nconst app = new Application(canvas, {\n    graphicsDeviceOptions: {\n        antialias: false\n    }\n});\napp.setCanvasFillMode(FILLMODE_FILL_WINDOW);\napp.setCanvasResolution(RESOLUTION_AUTO);\napp.start();\n\nwindow.addEventListener('resize', () => app.resizeCanvas());\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This creates an empty 3D scene using the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/Application.html",children:(0,t.jsx)(n.code,{children:"Application"})})," class with a canvas that:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Fills the entire browser window (",(0,t.jsx)(n.code,{children:"FILLMODE_FILL_WINDOW"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Automatically adjusts resolution based on device pixel ratio (",(0,t.jsx)(n.code,{children:"RESOLUTION_AUTO"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Properly resizes when the window changes size"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"We can't see anything rendered yet though - we need to load assets and add a camera and content."}),"\n",(0,t.jsx)(n.admonition,{title:"Performance Optimization",type:"warning",children:(0,t.jsxs)(n.p,{children:["We've disabled ",(0,t.jsx)(n.code,{children:"antialias"})," in the graphics device options for optimal splat rendering performance. This setting helps reduce the fragment processing load, which is the primary bottleneck in Gaussian splat rendering. Learn more in the ",(0,t.jsx)(n.a,{href:"/user-manual/gaussian-splatting/building/engine-features/performance",children:"Performance"})," guide."]})}),"\n",(0,t.jsx)(n.h2,{id:"loading-assets",children:"Loading Assets"}),"\n",(0,t.jsxs)(n.p,{children:["Before we can display a splat or add camera controls, we need to load the assets our app will use. We'll use the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/Asset.html",children:(0,t.jsx)(n.code,{children:"Asset"})})," class to define our assets and the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/AssetListLoader.html",children:(0,t.jsx)(n.code,{children:"AssetListLoader"})})," to load them efficiently. Add this code to ",(0,t.jsx)(n.code,{children:"main.js"}),' where the comment says "We\'ll add our code here step by step":']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Load assets\nconst assets = [\n    new Asset('camera-controls', 'script', {\n        url: 'https://cdn.jsdelivr.net/npm/playcanvas/scripts/esm/camera-controls.mjs'\n    }),\n    new Asset('toy', 'gsplat', {\n        url: 'https://developer.playcanvas.com/assets/toy-cat.compressed.ply'\n    })\n];\n\nconst loader = new AssetListLoader(assets, app.assets);\nawait new Promise(resolve => loader.load(resolve));\n"})}),"\n",(0,t.jsx)(n.p,{children:"We're loading two assets:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A camera controls script that will let us orbit around the scene"}),"\n",(0,t.jsx)(n.li,{children:"A compressed PLY file containing a toy cat splat"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/AssetListLoader.html",children:(0,t.jsx)(n.code,{children:"AssetListLoader"})})," loads all assets efficiently and we use ",(0,t.jsx)(n.code,{children:"await"})," to ensure they're fully loaded before proceeding."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-a-camera",children:"Adding a Camera"}),"\n",(0,t.jsxs)(n.p,{children:["To view our scene, we need to create a camera entity using the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/Entity.html",children:(0,t.jsx)(n.code,{children:"Entity"})})," class and add a ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/CameraComponent.html",children:"camera component"})," to it. Add this code to ",(0,t.jsx)(n.code,{children:"main.js"})," after the asset loading:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Create camera entity\nconst camera = new Entity('Camera');\ncamera.addComponent('camera');\ncamera.setPosition(0, 0, -2.5);\napp.root.addChild(camera);\n"})}),"\n",(0,t.jsx)(n.p,{children:"We've positioned the camera 2.5 units down the negative Z axis. By default, a camera looks down the negative Z axis, so our camera is now looking toward the origin where we'll place our splat."}),"\n",(0,t.jsx)(n.h2,{id:"adding-camera-controls",children:"Adding Camera Controls"}),"\n",(0,t.jsxs)(n.p,{children:["Now let's make the camera interactive by attaching the camera controls script using the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/ScriptComponent.html",children:"script component"}),". Add this code to ",(0,t.jsx)(n.code,{children:"main.js"})," after the camera creation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Add camera controls\ncamera.addComponent('script');\ncamera.script.create('cameraControls');\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Since we've already loaded the camera controls script using ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/AssetListLoader.html",children:(0,t.jsx)(n.code,{children:"AssetListLoader"})}),", we can directly create the script component. The camera controls will allow you to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Left mouse drag"}),": Orbit around the target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Right mouse drag"}),": Pan the camera"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mouse wheel"}),": Zoom in and out"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"adding-the-splat",children:"Adding the Splat"}),"\n",(0,t.jsxs)(n.p,{children:["Now let's add our toy cat splat to the scene using the ",(0,t.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/GSplatComponent.html",children:"gsplat component"}),". Add this code to ",(0,t.jsx)(n.code,{children:"main.js"})," after the camera controls:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Create splat entity\nconst splat = new Entity('Toy Cat');\nsplat.addComponent('gsplat', { asset: assets[1] });\nsplat.setPosition(0, -0.7, 0);\nsplat.setEulerAngles(180, 0, 0);\napp.root.addChild(splat);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["We reference the splat asset using ",(0,t.jsx)(n.code,{children:"assets[1]"})," (the second asset in our array). We've positioned the splat slightly below the origin (-0.7 on the Y axis) and rotated it 180 degrees around the X axis to orient it properly."]}),"\n",(0,t.jsx)(n.h2,{id:"complete-code",children:"Complete Code"}),"\n",(0,t.jsx)(n.p,{children:"Here are the complete files with all the code from the steps above:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"index.html:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",metastring:'title="index.html"',children:'<!DOCTYPE html>\n<html lang="en">\n    <head>\n        <meta charset="utf-8">\n        <style>\n            body { margin: 0; overflow: hidden; }\n        </style>\n        <script type="importmap">\n        {\n            "imports": {\n                "playcanvas": "https://cdn.jsdelivr.net/npm/playcanvas/+esm"\n            }\n        }\n        <\/script>\n    </head>\n    <body>\n        <script type="module" src="main.js"><\/script>\n    </body>\n</html>\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"main.js:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="main.js"',children:"import { Application, Asset, AssetListLoader, Entity, FILLMODE_FILL_WINDOW, RESOLUTION_AUTO } from 'playcanvas';\n\n// Create application\nconst canvas = document.createElement('canvas');\ndocument.body.appendChild(canvas);\n\nconst app = new Application(canvas, {\n    graphicsDeviceOptions: {\n        antialias: false\n    }\n});\napp.setCanvasFillMode(FILLMODE_FILL_WINDOW);\napp.setCanvasResolution(RESOLUTION_AUTO);\napp.start();\n\nwindow.addEventListener('resize', () => app.resizeCanvas());\n\n// Load assets\nconst assets = [\n    new Asset('camera-controls', 'script', {\n        url: 'https://cdn.jsdelivr.net/npm/playcanvas/scripts/esm/camera-controls.mjs'\n    }),\n    new Asset('toy', 'gsplat', {\n        url: 'https://developer.playcanvas.com/assets/toy-cat.compressed.ply'\n    })\n];\n\nconst loader = new AssetListLoader(assets, app.assets);\nawait new Promise(resolve => loader.load(resolve));\n\n// Create camera entity\nconst camera = new Entity('Camera');\ncamera.addComponent('camera');\ncamera.addComponent('script');\ncamera.script.create('cameraControls');\ncamera.setPosition(0, 0, -2.5);\napp.root.addChild(camera);\n\n// Create splat entity\nconst splat = new Entity('Toy Cat');\nsplat.addComponent('gsplat', { asset: assets[1] });\nsplat.setPosition(0, -0.7, 0);\nsplat.setEulerAngles(180, 0, 0);\napp.root.addChild(splat);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"final-result",children:"Final Result"}),"\n",(0,t.jsx)(n.p,{children:"After completing the steps above, you should see an interactive 3D toy cat splat that you can orbit around, pan, and zoom!"}),"\n","\n",(0,t.jsx)(l.A,{id:"LEpRPbj",defaultTab:"js",title:"PlayCanvas Engine: Your First Splat"}),"\n",(0,t.jsx)(n.admonition,{title:"Try it yourself",type:"tip",children:(0,t.jsxs)(n.p,{children:["Create both files above (",(0,t.jsx)(n.code,{children:"index.html"})," and ",(0,t.jsx)(n.code,{children:"main.js"}),") in the same directory and open ",(0,t.jsx)(n.code,{children:"index.html"})," in your browser to see your first splat app in action! Then extend it in any way you like using the full power of the PlayCanvas Engine!"]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);