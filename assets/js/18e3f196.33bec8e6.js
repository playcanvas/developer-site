"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[59582],{1083:(e,t,s)=>{s.d(t,{A:()=>r});const r=s.p+"assets/images/asset-import-2da90ecdb445d3f202b7f3ac4788ab3e.webp"},22848:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"user-manual/editor/interface/settings/asset-import","title":"Asset Import Settings","description":"Controls default behavior for imported assets.","source":"@site/docs/user-manual/editor/interface/settings/asset-import.md","sourceDirName":"user-manual/editor/interface/settings","slug":"/user-manual/editor/interface/settings/asset-import","permalink":"/user-manual/editor/interface/settings/asset-import","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/editor/interface/settings/asset-import.md","tags":[],"version":"current","frontMatter":{"title":"Asset Import Settings","sidebar_label":"Asset Import"},"sidebar":"userManualSidebar","previous":{"title":"Editor","permalink":"/user-manual/editor/interface/settings/editor"},"next":{"title":"Physics","permalink":"/user-manual/editor/interface/settings/physics"}}');var n=s(74848),i=s(28453);const d={title:"Asset Import Settings",sidebar_label:"Asset Import"},l=void 0,a={},o=[{value:"General",id:"general",level:2},{value:"Texture Import",id:"texture-import",level:2},{value:"Model Import",id:"model-import",level:2},{value:"Animation Import",id:"animation-import",level:2}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",img:"img",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Controls default behavior for imported assets."}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsx)(t.p,{children:"These settings affect only you and global for the whole project."})}),"\n",(0,n.jsxs)(t.p,{children:["Navigate to the ",(0,n.jsx)(t.code,{children:"ASSET IMPORT"})," section and expand the panel:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Asset Import Settings",src:s(1083).A+"",width:"680",height:"1007"})}),"\n",(0,n.jsx)(t.p,{children:"Here is a breakdown of the available settings:"}),"\n",(0,n.jsx)(t.h2,{id:"general",children:"General"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Setting"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Search related assets"})}),(0,n.jsx)(t.td,{children:"If enabled, importing a source asset updates related target assets wherever they are located. If disabled, assets are updated only when in the same folder; otherwise, new assets are created."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Assets default to preload"})}),(0,n.jsx)(t.td,{children:"Creates new assets with the preload option enabled. Script assets are always created with preload enabled."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"texture-import",children:"Texture Import"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Setting"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Textures POT"})}),(0,n.jsx)(t.td,{children:"When a texture is imported, it will be resized to the nearest power-of-two resolution."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Create Atlases"})}),(0,n.jsx)(t.td,{children:"If enabled, imported textures are converted to Texture Atlas assets instead of Texture assets."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"model-import",children:"Model Import"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Setting"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Preserve material mappings"})}),(0,n.jsx)(t.td,{children:"If enabled, when reimporting an existing source model, the Editor attempts to preserve existing user-defined material mappings."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Overwrite Models"})}),(0,n.jsx)(t.td,{children:"When a model is imported, overwrites any previously imported model asset."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Overwrite Animations"})}),(0,n.jsx)(t.td,{children:"When a model is imported, overwrites previously imported animation assets."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Overwrite Materials"})}),(0,n.jsx)(t.td,{children:"When a model is imported, overwrites previously imported material assets."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Overwrite Textures"})}),(0,n.jsx)(t.td,{children:"When a model is imported, overwrites previously imported texture assets."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Convert to GLB"})}),(0,n.jsx)(t.td,{children:"Create model assets in GLB format."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Import Hierarchy"})}),(0,n.jsx)(t.td,{children:"Generates a template asset when importing 3D assets (FBX, etc.). The template asset contains the full entity hierarchy from the imported file."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Mesh Compression"})}),(0,n.jsx)(t.td,{children:"Specify the mesh compression to apply to imported models."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Unwrap UV"})}),(0,n.jsx)(t.td,{children:"Generates a set of unwrapped UV coordinates."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Texels Per Meter"})}),(0,n.jsx)(t.td,{children:"Specifies the number of texels per meter when UV unwrapping is enabled. Default: 16."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Import Morph Normals"})}),(0,n.jsx)(t.td,{children:"Imports morph target normals when importing a model. Disable this if morph target normals look incorrect."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Create FBX Folder"})}),(0,n.jsx)(t.td,{children:"Creates a new folder in the current directory when importing an FBX file to store the imported FBX contents."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"animation-import",children:"Animation Import"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Setting"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Naming Strategy"})}),(0,n.jsxs)(t.td,{children:["Choose the naming strategy for imported animations:",(0,n.jsxs)("ul",{children:[(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Use Take Name"}),": Name the animation after the take name assigned in the FBX file"]}),(0,n.jsxs)("li",{children:[(0,n.jsx)("strong",{children:"Use FBX Filename"}),": Name the animation after the FBX filename"]})]})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Sample Rate"})}),(0,n.jsx)(t.td,{children:"The rate at which to sample animation curves (samples per second). Specify 0 to disable sampling and use input keys instead."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Curve Tolerance"})}),(0,n.jsx)(t.td,{children:"The tolerance used when optimizing linear animation curve segments. Specify 0 to disable curve optimization."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Cubic Curves"})}),(0,n.jsx)(t.td,{children:"Output cubic curves when they are encountered. Disable to convert all curves to linear segments."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>l});var r=s(96540);const n={},i=r.createContext(n);function d(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);