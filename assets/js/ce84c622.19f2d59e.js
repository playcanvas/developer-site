"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[41420],{664:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>r});const n=JSON.parse('{"id":"user-manual/playcanvas-react/api/application","title":"<Application/>","description":"The `Application` component is the root component for any PlayCanvas React application. It initializes and manages the canvas and PlayCanvas application instance.","source":"@site/docs/user-manual/playcanvas-react/api/application.mdx","sourceDirName":"user-manual/playcanvas-react/api","slug":"/user-manual/playcanvas-react/api/application","permalink":"/user-manual/playcanvas-react/api/application","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/api/application.mdx","tags":[],"version":"current","frontMatter":{"description":"The `Application` component is the root component for any PlayCanvas React application. It initializes and manages the canvas and PlayCanvas application instance."},"sidebar":"userManualSidebar","previous":{"title":"Materials","permalink":"/user-manual/playcanvas-react/guide/materials"},"next":{"title":"<Entity/>","permalink":"/user-manual/playcanvas-react/api/entity"}}');var s=t(74848),i=t(28453);const l={description:"The `Application` component is the root component for any PlayCanvas React application. It initializes and manages the canvas and PlayCanvas application instance."},p="<Application/>",o={},r=[{value:"Properties",id:"properties",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{RenderApiDocs:t}=a;return t||function(e,a){throw new Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RenderApiDocs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"application",children:(0,s.jsx)(a.code,{children:"<Application/>"})})}),"\n",(0,s.jsxs)(a.p,{children:["The ",(0,s.jsx)(a.code,{children:"<Application />"})," is the root your PlayCanvas React application. It initializes the engine and provides a rendering context. An Application maps to a single canvas in your app."]}),"\n",(0,s.jsx)(a.p,{children:"You can set the fill mode and resolution mode to control how the canvas fills the window, and other properties that control the graphics device."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-jsx",metastring:"copy",children:"import { Application } from '@playcanvas/react'\n\nexport default function Scene() {\n  return (\n    <Application \n      fillMode={FILLMODE_FILL_WINDOW}\n      resolutionMode={RESOLUTION_AUTO}\n    >\n      {/* Your scene content */}\n    </Application>\n  )\n}\n"})}),"\n",(0,s.jsx)(a.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(t,{data:'[{"name":"default","description":"","entries":[{"name":"fillMode","description":"Controls how the canvas fills the window and resizes when the window changes.","optional":true,"defaultValue":"FILLMODE_NONE","type":{"displayName":"\\"NONE\\" | \\"FILL_WINDOW\\" | \\"KEEP_ASPECT\\"","types":[{"name":"\\"NONE\\"","url":null},{"name":"\\"FILL_WINDOW\\"","url":null},{"name":"\\"KEEP_ASPECT\\"","url":null}]}},{"name":"resolutionMode","description":"Change the resolution of the canvas, and set the way it behaves when the window is resized.","optional":true,"defaultValue":"RESOLUTION_AUTO","type":{"displayName":"\\"AUTO\\" | \\"FIXED\\"","types":[{"name":"\\"AUTO\\"","url":null},{"name":"\\"FIXED\\"","url":null}]}},{"name":"usePhysics","description":"When `true`, the PlayCanvas Physics system will be enabled.","optional":true,"defaultValue":"false","type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"deviceTypes","description":"The device types to use for the graphics device. This allows you to set an order of preference for the graphics device.\\nThe first device type in the array that is supported by the browser will be used.","optional":true,"defaultValue":"[DEVICETYPE_WEBGL2]","type":{"displayName":"DeviceType[]","types":[{"name":"Array","url":null}]}},{"name":"graphicsDeviceOptions","description":"Graphics Settings","optional":true,"type":{"displayName":"GraphicsDeviceOptions","types":[{"name":"GraphicsDeviceOptions","url":null}]}},{"name":"children","description":"The children of the application","optional":true,"type":{"displayName":"ReactNode","types":[{"name":"string","url":null},{"name":"number","url":null},{"name":"bigint","url":null},{"name":"false","url":null},{"name":"true","url":null},{"name":"ReactElement","url":null},{"name":"Iterable","url":null},{"name":"ReactPortal","url":null},{"name":"Promise","url":null}]}},{"name":"timeScale","description":"Scales the global time delta. Defaults to 1.","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"maxDeltaTime","description":"Clamps per-frame delta time to an upper bound. Useful since returning from a tab\\ndeactivation can generate huge values for dt, which can adversely affect game state.\\nDefaults to 0.1 (seconds).","optional":true,"type":{"displayName":"number","types":[{"name":"number","url":null}]}},{"name":"scriptsOrder","description":"Scripts in order of loading first.","optional":true,"type":{"displayName":"string[]","types":[{"name":"Array","url":null}]}},{"name":"autoRender","description":"When true, the application\'s render function is called every frame. Setting autoRender to\\nfalse is useful to applications where the rendered image may often be unchanged over time.\\nThis can heavily reduce the application\'s load on the CPU and GPU. Defaults to true.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"renderNextFrame","description":"Set to true to render the scene on the next iteration of the main loop. This only has an\\neffect if autoRender is set to false. The value of renderNextFrame is set back to\\nfalse again as soon as the scene has been rendered.","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"graphicsDevice","description":"The graphics device used by the application.","optional":true,"type":{"displayName":"GraphicsDevice","types":[{"name":"GraphicsDevice","url":"https://api.playcanvas.com/engine/classes/GraphicsDevice.html"}]}},{"name":"root","description":"The root entity of the application.","optional":true,"type":{"displayName":"Entity","types":[{"name":"Entity","url":"https://api.playcanvas.com/engine/classes/Entity.html"}]}},{"name":"scene","description":"The scene managed by the application.","optional":true,"type":{"displayName":"Scene","types":[{"name":"Scene","url":"https://api.playcanvas.com/engine/classes/Scene.html"}]}},{"name":"lightmapper","description":"The run-time lightmapper.","optional":true,"type":{"displayName":"Lightmapper | null","types":[{"name":"Lightmapper","url":"https://api.playcanvas.com/engine/classes/Lightmapper.html"}]}},{"name":"loader","description":"The resource loader.","optional":true,"type":{"displayName":"ResourceLoader","types":[{"name":"ResourceLoader","url":"https://api.playcanvas.com/engine/classes/ResourceLoader.html"}]}},{"name":"assets","description":"The asset registry managed by the application.","optional":true,"type":{"displayName":"AssetRegistry","types":[{"name":"AssetRegistry","url":"https://api.playcanvas.com/engine/classes/AssetRegistry.html"}]}},{"name":"scenes","description":"The scene registry managed by the application.","optional":true,"type":{"displayName":"SceneRegistry","types":[{"name":"SceneRegistry","url":"https://api.playcanvas.com/engine/classes/SceneRegistry.html"}]}},{"name":"scripts","description":"The application\'s script registry.","optional":true,"type":{"displayName":"ScriptRegistry","types":[{"name":"ScriptRegistry","url":"https://api.playcanvas.com/engine/classes/ScriptRegistry.html"}]}},{"name":"systems","description":"The application\'s component system registry.","optional":true,"type":{"displayName":"ComponentSystemRegistry","types":[{"name":"ComponentSystemRegistry","url":"https://api.playcanvas.com/engine/classes/ComponentSystemRegistry.html"}]}},{"name":"i18n","description":"Handles localization.","optional":true,"type":{"displayName":"I18n","types":[{"name":"I18n","url":"https://api.playcanvas.com/engine/classes/I18n.html"}]}},{"name":"keyboard","description":"The keyboard device.","optional":true,"type":{"displayName":"Keyboard | null","types":[{"name":"Keyboard","url":"https://api.playcanvas.com/engine/classes/Keyboard.html"}]}},{"name":"mouse","description":"The mouse device.","optional":true,"type":{"displayName":"Mouse | null","types":[{"name":"Mouse","url":"https://api.playcanvas.com/engine/classes/Mouse.html"}]}},{"name":"touch","description":"Used to get touch events input.","optional":true,"type":{"displayName":"TouchDevice | null","types":[{"name":"TouchDevice","url":"https://api.playcanvas.com/engine/classes/TouchDevice.html"}]}},{"name":"gamepads","description":"Used to access GamePad input.","optional":true,"type":{"displayName":"GamePads | null","types":[{"name":"GamePads","url":"https://api.playcanvas.com/engine/classes/GamePads.html"}]}},{"name":"elementInput","description":"Used to handle input for ElementComponents.","optional":true,"type":{"displayName":"ElementInput | null","types":[{"name":"ElementInput","url":"https://api.playcanvas.com/engine/classes/ElementInput.html"}]}},{"name":"xr","description":"The XR Manager that provides ability to start VR/AR sessions.","optional":true,"type":{"displayName":"XrManager | null","types":[{"name":"XrManager","url":"https://api.playcanvas.com/engine/classes/XrManager.html"}]}},{"name":"defaultLayerWorld","description":"","optional":true,"type":{"displayName":"Layer","types":[{"name":"Layer","url":"https://api.playcanvas.com/engine/classes/Layer.html"}]}},{"name":"defaultLayerDepth","description":"","optional":true,"type":{"displayName":"Layer","types":[{"name":"Layer","url":"https://api.playcanvas.com/engine/classes/Layer.html"}]}},{"name":"defaultLayerSkybox","description":"","optional":true,"type":{"displayName":"Layer","types":[{"name":"Layer","url":"https://api.playcanvas.com/engine/classes/Layer.html"}]}},{"name":"defaultLayerUi","description":"","optional":true,"type":{"displayName":"Layer","types":[{"name":"Layer","url":"https://api.playcanvas.com/engine/classes/Layer.html"}]}},{"name":"defaultLayerImmediate","description":"","optional":true,"type":{"displayName":"Layer","types":[{"name":"Layer","url":"https://api.playcanvas.com/engine/classes/Layer.html"}]}},{"name":"controller","description":"","optional":true,"type":{"displayName":"any","types":[{"name":"any","url":null}]}},{"name":"context","description":"","optional":true,"type":{"displayName":"any","types":[{"name":"any","url":null}]}},{"name":"className","description":"The class name to attach to the canvas component","optional":true,"defaultValue":"pc-app","type":{"displayName":"string","types":[{"name":"string","url":null}]}},{"name":"style","description":"A style object added to the canvas component","optional":true,"defaultValue":"{ width: \'100%\', height: \'100%\' }","type":{"displayName":"Record<string, unknown>","types":[{"name":"__type","url":null}]}}]}]'})]})}function m(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,a,t)=>{t.d(a,{R:()=>l,x:()=>p});var n=t(96540);const s={},i=n.createContext(s);function l(e){const a=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function p(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);