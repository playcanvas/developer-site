"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[78209],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const l={},r=a.createContext(l);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),a.createElement(r.Provider,{value:n},e.children)}},82458:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"user-manual/playcanvas-react/api/align","title":"<Align/>","description":"Documentation for the Align component","source":"@site/docs/user-manual/playcanvas-react/api/align.mdx","sourceDirName":"user-manual/playcanvas-react/api","slug":"/user-manual/playcanvas-react/api/align","permalink":"/user-manual/playcanvas-react/api/align","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/api/align.mdx","tags":[],"version":"current","frontMatter":{"description":"Documentation for the Align component","hide_sidebar":true}}');var l=t(74848),r=t(28453);const o={description:"Documentation for the Align component",hide_sidebar:!0},i="<Align/>",s={},c=[{value:"Usage",id:"usage",level:2},{value:"Properties",id:"properties",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components},{RenderApiDocs:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("RenderApiDocs",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"align",children:(0,l.jsx)(n.code,{children:"<Align/>"})})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"<Align/>"})," component is a simple container that positions an entity relative to its parent. This can be useful when using 3D assets that are offset from the origin. Sometimes, you just want to sit the asset on the ground, or align it with the camera."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"<Align/>"})," component accepts the following props: ",(0,l.jsx)(n.code,{children:"top"}),", ",(0,l.jsx)(n.code,{children:"bottom"}),", ",(0,l.jsx)(n.code,{children:"left"}),", ",(0,l.jsx)(n.code,{children:"right"}),", ",(0,l.jsx)(n.code,{children:"front"}),", ",(0,l.jsx)(n.code,{children:"back"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.p,{children:"This example will align the asset to the bottom right of the parent entity."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"copy",children:"import { Entity } from '@playcanvas/react'\nimport { Align, Render } from '@playcanvas/react/components'\n\nexport default function Scene() {\n  return (\n    <Entity>\n      <Align bottom right>\n        <Render type=\"box\" />\n      </Align>\n    </Entity>\n  )\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(t,{data:'[{"name":"default","description":"","entries":[{"name":"left","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"right","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"top","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"bottom","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"front","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"back","description":"","optional":true,"type":{"displayName":"boolean","types":[{"name":"false","url":null},{"name":"true","url":null}]}},{"name":"children","description":"","optional":true,"type":{"displayName":"ReactNode","types":[{"name":"string","url":null},{"name":"number","url":null},{"name":"bigint","url":null},{"name":"false","url":null},{"name":"true","url":null},{"name":"ReactElement","url":null},{"name":"Iterable","url":null},{"name":"ReactPortal","url":null},{"name":"Promise","url":null}]}}]}]'})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}}}]);