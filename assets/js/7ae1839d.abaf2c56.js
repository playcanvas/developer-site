"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[46465],{11470:(e,n,t)=>{t.d(n,{A:()=>k});var r=t(96540),a=t(34164),s=t(23104),o=t(56347),i=t(205),c=t(57485),l=t(31682),u=t(70679);function d(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,l.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function h({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(a),(0,r.useCallback)(e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})},[a,t])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[o,c]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s})),[l,d]=h({queryString:t,groupId:a}),[f,v]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,u.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&a.set(e)},[n,a])]}({groupId:a}),y=(()=>{const e=l??f;return m({value:e,tabValues:s})?e:null})();(0,i.A)(()=>{y&&c(y)},[y]);return{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),v(e)},[d,v,s]),tabValues:s}}var v=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function g({className:e,block:n,selectedValue:t,selectValue:r,tabValues:o}){const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),l=e=>{const n=e.currentTarget,a=i.indexOf(n),s=o[a].value;s!==t&&(c(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":l(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;n=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;n=i[t]??i[i.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:r})=>(0,b.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{i.push(e)},onKeyDown:u,onClick:l,...r,className:(0,a.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function x({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function w(e){const n=f(e);return(0,b.jsxs)("div",{className:(0,a.A)("tabs-container",y.tabList),children:[(0,b.jsx)(g,{...n,...e}),(0,b.jsx)(x,{...n,...e})]})}function k(e){const n=(0,v.A)();return(0,b.jsx)(w,{...e,children:d(e.children)},String(n))}},19305:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tutorials/first-person-movement","title":"First Person Movement","description":"This is an application that implements first person character movement.","source":"@site/docs/tutorials/first-person-movement.md","sourceDirName":"tutorials","slug":"/tutorials/first-person-movement","permalink":"/tutorials/first-person-movement","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/tutorials/first-person-movement.md","tags":[{"inline":true,"label":"input","permalink":"/tags/input"},{"inline":true,"label":"camera","permalink":"/tags/camera"}],"version":"current","frontMatter":{"title":"First Person Movement","tags":["input","camera"],"thumb":"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405842/JLWRE0-image-75.jpg"},"sidebar":"tutorialsSidebar","previous":{"title":"Fading objects in and out","permalink":"/tutorials/fading-objects-in-and-out"},"next":{"title":"First Person Shooter Starter Kit","permalink":"/tutorials/first-person-shooter-starter-kit"}}');var a=t(74848),s=t(28453),o=t(11470),i=t(19365);const c={title:"First Person Movement",tags:["input","camera"],thumb:"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405842/JLWRE0-image-75.jpg"},l=void 0,u={},d=[];function p(e){const n={a:"a",code:"code",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"iframe-container",children:(0,a.jsx)("iframe",{src:"https://playcanv.as/p/HzOzlZOC/",title:"First Person Movement",allow:"camera; microphone; xr-spatial-tracking; fullscreen",allowfullscreen:!0})}),"\n",(0,a.jsx)(n.p,{children:"This is an application that implements first person character movement."}),"\n",(0,a.jsx)(n.p,{children:"The scene setup for this controller is important as your character must have a rigidbody and collision component in addition to the script attached. In addition, the script supports adding a camera entity as a child of the Player and manually set in the inspector. If no camera entity is present a new entity is created."}),"\n",(0,a.jsxs)(n.p,{children:["See the full scene setup in the ",(0,a.jsx)(n.a,{href:"https://playcanvas.com/project/405842",children:"Tutorial Project"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"The script below performs the following functions:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Listen for mouse and keyboard input"}),"\n",(0,a.jsx)(n.li,{children:"Update a camera entity from the mouse input"}),"\n",(0,a.jsx)(n.li,{children:"Apply forces to move the player entity around the scene"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Note, the player's velocity is never set directly but it is moved by applying forces via the rigidbody's API function ",(0,a.jsx)(n.a,{href:"https://api.playcanvas.com/engine/classes/RigidBodyComponent.html#applyforce",children:(0,a.jsx)(n.code,{children:"applyForce"})}),"."]}),"\n",(0,a.jsx)(n.p,{children:"On the rigidbody component, we also have the following values set in the Editor Inspector:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"To limit the maximum velocity, we have linear damping applied that stops the player from sliding after the player has released input keys."}),"\n",(0,a.jsx)(n.li,{children:"To stop the player from rolling over, we also reduced the angular Factor to 0 on all axes."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Rigidbody Attributes",src:t(29704).A+"",width:"672",height:"600"})}),"\n","\n",(0,a.jsxs)(o.A,{defaultValue:"classic",groupId:"script-code",children:[(0,a.jsx)(i.A,{value:"esm",label:"ESM",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'import { Script, Vec3, Entity, Mouse, BODYTYPE_DYNAMIC } from \'playcanvas\';\nimport { KEY_A, KEY_Q, KEY_D, KEY_W, KEY_S } from \'playcanvas\';\n\nexport class FirstPersonMovement extends Script {\n    static scriptName = "firstPersonMovement";\n\n    /**\n     * Optional, assign a camera entity, otherwise one is created.\n     * \n     * @attribute\n     * @title Camera\n     * @type {Entity}\n     */\n    camera = null;\n\n    /**\n     * Adjusts the speed of player movement.\n     * \n     * @attribute\n     * @title Power\n     * @type {number}\n     */\n    power = 2500;\n\n    /**\n     * Adjusts the sensitivity of looking.\n     * \n     * @attribute\n     * @title Look Speed\n     * @type {number}\n     */\n    lookSpeed = 0.25;\n\n    // initialize code called once per entity\n    initialize() {\n        this.force = new Vec3();\n        this.eulers = new Vec3();\n\n        const app = this.app;\n\n        // Listen for mouse move events\n        app.mouse.on("mousemove", this._onMouseMove, this);\n\n        // when the mouse is clicked hide the cursor\n        app.mouse.on("mousedown", () => {\n            app.mouse.enablePointerLock();\n        });\n\n        // Check for required components\n        if (!this.entity.collision) {\n            console.error("First Person Movement script needs to have a \'collision\' component");\n        }\n\n        if (!this.entity.rigidbody || this.entity.rigidbody.type !== BODYTYPE_DYNAMIC) {\n            console.error("First Person Movement script needs to have a DYNAMIC \'rigidbody\' component");\n        }\n    }\n\n    // update code called every frame\n    update(dt) {\n        // If a camera isn\'t assigned from the Editor, create one\n        if (!this.camera) {\n            this._createCamera();\n        }\n\n        const force = this.force;\n        const app = this.app;\n\n        // Get camera directions to determine movement directions\n        const forward = this.camera.forward;\n        const right = this.camera.right;\n\n\n        // movement\n        let x = 0;\n        let z = 0;\n\n        // Use W-A-S-D keys to move player\n        // Check for key presses\n        if (app.keyboard.isPressed(KEY_A) || app.keyboard.isPressed(KEY_Q)) {\n            x -= right.x;\n            z -= right.z;\n        }\n\n        if (app.keyboard.isPressed(KEY_D)) {\n            x += right.x;\n            z += right.z;\n        }\n\n        if (app.keyboard.isPressed(KEY_W)) {\n            x += forward.x;\n            z += forward.z;\n        }\n\n        if (app.keyboard.isPressed(KEY_S)) {\n            x -= forward.x;\n            z -= forward.z;\n        }\n\n        // use direction from keypresses to apply a force to the character\n        if (x !== 0 || z !== 0) {\n            force.set(x, 0, z).normalize().scale(this.power);\n            this.entity.rigidbody.applyForce(force);\n        }\n\n        // update camera angle from mouse events\n        this.camera.setLocalEulerAngles(this.eulers.y, this.eulers.x, 0);\n    }\n\n    _onMouseMove(e) {\n        // If pointer is disabled\n        // If the left mouse button is down update the camera from mouse movement\n        if (Mouse.isPointerLocked() || e.buttons[0]) {\n            this.eulers.x -= this.lookSpeed * e.dx;\n            this.eulers.y -= this.lookSpeed * e.dy;\n        }\n    }\n\n    _createCamera() {\n        // If user hasn\'t assigned a camera, create a new one\n        this.camera = new Entity();\n        this.camera.setName("First Person Camera");\n        this.camera.addComponent("camera");\n        this.entity.addChild(this.camera);\n        this.camera.translateLocal(0, 0.5, 0);\n    }\n}\n\n'})})}),(0,a.jsx)(i.A,{value:"classic",label:"Classic",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"var FirstPersonMovement = pc.createScript('firstPersonMovement');\n\nFirstPersonMovement.attributes.add('camera', {\n    type: 'entity',\n    description: 'Optional, assign a camera entity, otherwise one is created'\n});\n\nFirstPersonMovement.attributes.add('power', {\n    type: 'number',\n    default: 2500,\n    description: 'Adjusts the speed of player movement'\n});\n\nFirstPersonMovement.attributes.add('lookSpeed', {\n    type: 'number',\n    default: 0.25,\n    description: 'Adjusts the sensitivity of looking'\n});\n\n// initialize code called once per entity\nFirstPersonMovement.prototype.initialize = function() {\n    this.force = new pc.Vec3();\n    this.eulers = new pc.Vec3();\n\n    var app = this.app;\n\n    // Listen for mouse move events\n    app.mouse.on(\"mousemove\", this._onMouseMove, this);\n\n    // when the mouse is clicked hide the cursor\n    app.mouse.on(\"mousedown\", function () {\n        app.mouse.enablePointerLock();\n    }, this);\n\n    // Check for required components\n    if (!this.entity.collision) {\n        console.error(\"First Person Movement script needs to have a 'collision' component\");\n    }\n\n    if (!this.entity.rigidbody || this.entity.rigidbody.type !== pc.BODYTYPE_DYNAMIC) {\n        console.error(\"First Person Movement script needs to have a DYNAMIC 'rigidbody' component\");\n    }\n};\n\n// update code called every frame\nFirstPersonMovement.prototype.update = function(dt) {\n    // If a camera isn't assigned from the Editor, create one\n    if (!this.camera) {\n        this._createCamera();\n    }\n\n    var force = this.force;\n    var app = this.app;\n\n    // Get camera directions to determine movement directions\n    var forward = this.camera.forward;\n    var right = this.camera.right;\n\n\n    // movement\n    var x = 0;\n    var z = 0;\n\n    // Use W-A-S-D keys to move player\n    // Check for key presses\n    if (app.keyboard.isPressed(pc.KEY_A) || app.keyboard.isPressed(pc.KEY_Q)) {\n        x -= right.x;\n        z -= right.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_D)) {\n        x += right.x;\n        z += right.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_W)) {\n        x += forward.x;\n        z += forward.z;\n    }\n\n    if (app.keyboard.isPressed(pc.KEY_S)) {\n        x -= forward.x;\n        z -= forward.z;\n    }\n\n    // use direction from keypresses to apply a force to the character\n    if (x !== 0 || z !== 0) {\n        force.set(x, 0, z).normalize().scale(this.power);\n        this.entity.rigidbody.applyForce(force);\n    }\n\n    // update camera angle from mouse events\n    this.camera.setLocalEulerAngles(this.eulers.y, this.eulers.x, 0);\n};\n\nFirstPersonMovement.prototype._onMouseMove = function (e) {\n    // If pointer is disabled\n    // If the left mouse button is down update the camera from mouse movement\n    if (pc.Mouse.isPointerLocked() || e.buttons[0]) {\n        this.eulers.x -= this.lookSpeed * e.dx;\n        this.eulers.y -= this.lookSpeed * e.dy;\n    }\n};\n\nFirstPersonMovement.prototype._createCamera = function () {\n    // If user hasn't assigned a camera, create a new one\n    this.camera = new pc.Entity();\n    this.camera.setName(\"First Person Camera\");\n    this.camera.addComponent(\"camera\");\n    this.entity.addChild(this.camera);\n    this.camera.translateLocal(0, 0.5, 0);\n};\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var r=t(34164);const a={tabItem:"tabItem_Ymn6"};var s=t(74848);function o({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(96540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},29704:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/rigidbody_attributes-dfe444f2a1064250a5704d53ebee728f.jpg"}}]);