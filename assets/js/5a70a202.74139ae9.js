"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[83615],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var a=n(96540);const t={},i=a.createContext(t);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:s},e.children)}},48660:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"user-manual/gaussian-splatting/rendering/custom-shaders","title":"Custom Shaders","description":"The PlayCanvas Engine supports custom shaders for Gaussian Splats, allowing you to create advanced visual effects and customize the rendering behavior beyond the standard implementation.","source":"@site/docs/user-manual/gaussian-splatting/rendering/custom-shaders.md","sourceDirName":"user-manual/gaussian-splatting/rendering","slug":"/user-manual/gaussian-splatting/rendering/custom-shaders","permalink":"/user-manual/gaussian-splatting/rendering/custom-shaders","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/gaussian-splatting/rendering/custom-shaders.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Custom Shaders","sidebar_position":4},"sidebar":"userManualSidebar","previous":{"title":"Shadows","permalink":"/user-manual/gaussian-splatting/rendering/shadows"},"next":{"title":"Performance","permalink":"/user-manual/gaussian-splatting/rendering/performance"}}');var t=n(74848),i=n(28453);const r={title:"Custom Shaders",sidebar_position:4},o=void 0,l={},d=[{value:"Examples",id:"examples",level:2},{value:"Animation Effects",id:"animation-effects",level:3},{value:"Transition Effects",id:"transition-effects",level:3},{value:"Lighting and Relighting",id:"lighting-and-relighting",level:3}];function c(e){const s={a:"a",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"The PlayCanvas Engine supports custom shaders for Gaussian Splats, allowing you to create advanced visual effects and customize the rendering behavior beyond the standard implementation."}),"\n",(0,t.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(s.p,{children:"Here are some examples demonstrating different custom shader techniques:"}),"\n",(0,t.jsx)(s.h3,{id:"animation-effects",children:"Animation Effects"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://playcanvas.vercel.app/#/gaussian-splatting/multi-splat",children:(0,t.jsx)(s.strong,{children:"Simple Sinusoidal Animation"})})," - Applies a simple shader to animate Gaussian color and position using a sine wave. This example demonstrates how to create dynamic, procedural motion effects by modifying splat properties in real-time."]}),"\n",(0,t.jsx)(s.h3,{id:"transition-effects",children:"Transition Effects"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://playcanvas.com/project/1224723/overview/3d-gaussian-splat-statues",children:(0,t.jsx)(s.strong,{children:"3D Gaussian Splat Statues"})})," - Uses custom shaders to transition splats on and off screen via a hot, plasma-type effect. This showcases how custom shaders can create dramatic visual transitions and material effects."]}),"\n",(0,t.jsx)(s.h3,{id:"lighting-and-relighting",children:"Lighting and Relighting"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://playcanvas.com/project/1358087/overview/3dgs-with-physics-and-relighting",children:(0,t.jsx)(s.strong,{children:"3DGS with Physics and Relighting"})})," - Uses custom shaders to relight a splat to implement a night mode with multiple moving point light sources. This example demonstrates advanced lighting techniques and how to dynamically modify splat appearance based on scene lighting conditions."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);