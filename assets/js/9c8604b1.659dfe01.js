"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[57758],{11470:(e,t,n)=>{n.d(t,{A:()=>T});var a=n(96540),r=n(34164),s=n(17559),l=n(23104),i=n(56347),o=n(205),u=n(57485),c=n(31682),d=n(70679);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)(()=>{const e=t??function(e){return p(e).map(({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function m({value:e,tabValues:t}){return t.some(t=>t.value===e)}function f({queryString:e=!1,groupId:t}){const n=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,u.aZ)(r),(0,a.useCallback)(e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})},[r,n])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=h(e),[l,i]=(0,a.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s})),[u,c]=f({queryString:n,groupId:r}),[p,v]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,d.Dv)(t);return[n,(0,a.useCallback)(e=>{t&&r.set(e)},[t,r])]}({groupId:r}),b=(()=>{const e=u??p;return m({value:e,tabValues:s})?e:null})();(0,o.A)(()=>{b&&i(b)},[b]);return{selectedValue:l,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),c(e),v(e)},[c,v,s]),tabValues:s}}var b=n(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function x({className:e,block:t,selectedValue:n,selectValue:a,tabValues:s}){const i=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),u=e=>{const t=e.currentTarget,r=i.indexOf(t),l=s[r].value;l!==n&&(o(t),a(l))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{const n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:s.map(({value:e,label:t,attributes:a})=>(0,g.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:c,onClick:u,...a,className:(0,r.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function w({lazy:e,children:t,selectedValue:n}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===n);return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function j(e){const t=v(e);return(0,g.jsxs)("div",{className:(0,r.A)(s.G.tabs.container,"tabs-container",y.tabList),children:[(0,g.jsx)(x,{...t,...e}),(0,g.jsx)(w,{...t,...e})]})}function T(e){const t=(0,b.A)();return(0,g.jsx)(j,{...e,children:p(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>l});n(96540);var a=n(34164);const r={tabItem:"tabItem_Ymn6"};var s=n(74848);function l({children:e,hidden:t,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,n),hidden:t,children:e})}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>i});var a=n(96540);const r={},s=a.createContext(r);function l(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(s.Provider,{value:t},e.children)}},44347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"tutorials/procedural-levels","title":"Procedural Levels","description":"This project uses clone() function on the Entity to randomly generate a level from Entities that have been created in the Editor.","source":"@site/docs/tutorials/procedural-levels.md","sourceDirName":"tutorials","slug":"/tutorials/procedural-levels","permalink":"/tutorials/procedural-levels","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/tutorials/procedural-levels.md","tags":[{"inline":true,"label":"procedural","permalink":"/tags/procedural"}],"version":"current","frontMatter":{"title":"Procedural Levels","tags":["procedural"],"thumb":"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405864/A3MSWE-image-75.jpg"},"sidebar":"tutorialsSidebar","previous":{"title":"Procedural Gradient Texture","permalink":"/tutorials/procedural-gradient-texture"},"next":{"title":"Programmatically Creating Entities","permalink":"/tutorials/programmatically-creating"}}');var r=n(74848),s=n(28453),l=n(11470),i=n(19365);const o={title:"Procedural Levels",tags:["procedural"],thumb:"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405864/A3MSWE-image-75.jpg"},u=void 0,c={},d=[];function p(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:"iframe-container",children:(0,r.jsx)("iframe",{src:"https://playcanv.as/p/smskdMrk/",title:"Procedural Levels",allow:"camera; microphone; xr-spatial-tracking; fullscreen",allowfullscreen:!0})}),"\n",(0,r.jsxs)(t.p,{children:["This project uses ",(0,r.jsx)(t.a,{href:"https://api.playcanvas.com/engine/classes/Entity.html#clone",children:"clone()"})," function on the Entity to randomly generate a level from Entities that have been created in the Editor."]}),"\n",(0,r.jsxs)(t.p,{children:["Try it from the Editor in the ",(0,r.jsx)(t.a,{href:"https://playcanvas.com/project/405864",children:"tutorial project."})]}),"\n",(0,r.jsx)(t.p,{children:"This script below is a very simple level generation program. It takes two Entities that have been setup in the Editor: 'Grass' and 'House' and uses them as tiles for a grid based level. The level is created by randomly choosing one of the tiles, cloning the tile to create a new Entity, then placing the new Entity at the correct grid position."}),"\n","\n",(0,r.jsxs)(l.A,{defaultValue:"classic",groupId:"script-code",children:[(0,r.jsx)(i.A,{value:"esm",label:"ESM",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"import { Script } from 'playcanvas';\n\nexport class Generate extends Script {\n    static scriptName = \"generate\";\n\n    /**\n     * @attribute\n     * @title Num Tiles X\n     * @type {number}\n     */\n    numTilesX = 10;\n\n    /**\n     * @attribute\n     * @title Num Tiles Y\n     * @type {number}\n     */\n    numTilesY = 10;\n\n    // initialize code called once per entity\n    initialize() {\n        // We've created a couple of templates that are our world tiles\n        // In the Editor hierarchy, we have disabled the templates because\n        // we don't want them to be visible. We just want our generated\n        // world to be visible\n        const templates = this.app.root.findByName('Templates');\n        const grass = templates.findByName('Grass');\n        const house = templates.findByName('House');\n\n        for (let y = 0; y < this.numTilesY; y++) {\n            for (let x = 0; x < this.numTilesX; x++) {\n                // Pick a tile at random, with grass more likely than a house\n                var tile = (Math.random() > 0.8) ? house : grass;\n\n                // Clone the tile\n                var e = tile.clone();\n\n                // Set the world position of the cloned tile. Note that because\n                // our tiles are 10x10 in X,Z dimensions, we have to multiply\n                // the position by 10\n                e.setPosition((x - this.numTilesX / 2) * 10, 0, (y - this.numTilesX / 2) * 10);\n\n                // Add the tile to the scene's hierarchy\n                this.app.root.addChild(e);\n            }\n        }\n    }\n}\n"})})}),(0,r.jsx)(i.A,{value:"classic",label:"Classic",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"var Generate = pc.createScript('generate');\n\nGenerate.attributes.add('numTilesX', {\n    type: 'number',\n    default: 10\n});\n\nGenerate.attributes.add('numTilesY', {\n    type: 'number',\n    default: 10\n});\n\n// initialize code called once per entity\nGenerate.prototype.initialize = function() {\n    // We've created a couple of templates that are our world tiles\n    // In the Editor hierarchy, we have disabled the templates because\n    // we don't want them to be visible. We just want our generated\n    // world to be visible\n    var templates = this.app.root.findByName('Templates');\n    var grass = templates.findByName('Grass');\n    var house = templates.findByName('House');\n\n    for (var y = 0; y < this.numTilesY; y++) {\n        for (var x = 0; x < this.numTilesX; x++) {\n            // Pick a tile at random, with grass more likely than a house\n            var tile = (Math.random() > 0.8) ? house : grass;\n\n            // Clone the tile\n            var e = tile.clone();\n\n            // Set the world position of the cloned tile. Note that because\n            // our tiles are 10x10 in X,Z dimensions, we have to multiply\n            // the position by 10\n            e.setPosition((x - this.numTilesX / 2) * 10, 0, (y - this.numTilesX / 2) * 10);\n\n            // Add the tile to the scene's hierarchy\n            this.app.root.addChild(e);\n        }\n    }\n};\n"})})})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);