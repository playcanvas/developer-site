"use strict";(self.webpackChunkdeveloper_playcanvas_com=self.webpackChunkdeveloper_playcanvas_com||[]).push([[19705],{422:(t,e,s)=>{s.d(e,{N:()=>i});class i{get(t,e){return this._cache.has(t)||(this._cache.set(t,e()),t.on("destroy",()=>{this.remove(t)}),t.on("devicelost",()=>{this._cache.get(t)?.loseContext?.(t)})),this._cache.get(t)}remove(t){this._cache.get(t)?.destroy?.(t),this._cache.delete(t)}constructor(){this._cache=new Map}}},2682:(t,e,s)=>{s.d(e,{JD:()=>o,Tw:()=>l,Xo:()=>a,dc:()=>c});var i=s(65762);const n={};function r(t,e){for(let s=0,i=t.length;s<i;s++)n[t[s]]=e}function a(t){const e=t.indexOf("-");return-1!==e?t.substring(0,e):t}function o(t,e){const s=t.indexOf("-");return-1!==s?e+t.substring(s):e}function l(t,e){if(e[t])return t;let s=i.f[t];if(s&&e[s])return s;const n=a(t);return s=i.f[n],e[s]?s:e[n]?n:i.X}r(["ja","ko","th","vi","zh","id"],t=>0),r(["fa","hi"],t=>t>=0&&t<=1?0:1),r(["fr","pt"],t=>t>=0&&t<2?0:1),r(["da"],t=>1===t||!Number.isInteger(t)&&t>=0&&t<=1?0:1),r(["de","en","it","el","es","tr","fi","sv","nb","no","ur"],t=>1===t?0:1),r(["ru","uk"],t=>{if(Number.isInteger(t)){const e=t%10,s=t%100;if(1===e&&11!==s)return 0;if(e>=2&&e<=4&&(s<12||s>14))return 1;if(0===e||e>=5&&e<=9||s>=11&&s<=14)return 2}return 3}),r(["pl"],t=>{if(Number.isInteger(t)){if(1===t)return 0;const e=t%10,s=t%100;if(e>=2&&e<=4&&(s<12||s>14))return 1;if(e>=0&&e<=1||e>=5&&e<=9||s>=12&&s<=14)return 2}return 3}),r(["ar"],t=>{if(0===t)return 0;if(1===t)return 1;if(2===t)return 2;if(Number.isInteger(t)){const e=t%100;if(e>=3&&e<=10)return 3;if(e>=11&&e<=99)return 4}return 5});const h=n[a(i.X)];function c(t){return n[t]||h}},3142:(t,e,s)=>{s.d(e,{_:()=>i});const i="production"},3964:(t,e,s)=>{s.d(e,{$:()=>u});var i=s(59752),n=s(40050),r=s(93953),a=s(38964);const o=new n.Z,l=new r.e,h=new r.e,c=new r.e,d=new r.e;class u{constructor(){this.data=new Float32Array(16),this.data[0]=this.data[5]=this.data[10]=this.data[15]=1}static _getPerspectiveHalfSize(t,e,s,i,n){n?(t.x=i*Math.tan(e*Math.PI/360),t.y=t.x/s):(t.y=i*Math.tan(e*Math.PI/360),t.x=t.y*s)}add2(t,e){const s=t.data,i=e.data,n=this.data;return n[0]=s[0]+i[0],n[1]=s[1]+i[1],n[2]=s[2]+i[2],n[3]=s[3]+i[3],n[4]=s[4]+i[4],n[5]=s[5]+i[5],n[6]=s[6]+i[6],n[7]=s[7]+i[7],n[8]=s[8]+i[8],n[9]=s[9]+i[9],n[10]=s[10]+i[10],n[11]=s[11]+i[11],n[12]=s[12]+i[12],n[13]=s[13]+i[13],n[14]=s[14]+i[14],n[15]=s[15]+i[15],this}add(t){return this.add2(this,t)}clone(){return(new(0,this.constructor)).copy(this)}copy(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],s[9]=e[9],s[10]=e[10],s[11]=e[11],s[12]=e[12],s[13]=e[13],s[14]=e[14],s[15]=e[15],this}equals(t){const e=this.data,s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]&&e[9]===s[9]&&e[10]===s[10]&&e[11]===s[11]&&e[12]===s[12]&&e[13]===s[13]&&e[14]===s[14]&&e[15]===s[15]}isIdentity(){const t=this.data;return 1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&0===t[4]&&1===t[5]&&0===t[6]&&0===t[7]&&0===t[8]&&0===t[9]&&1===t[10]&&0===t[11]&&0===t[12]&&0===t[13]&&0===t[14]&&1===t[15]}mul2(t,e){const s=t.data,i=e.data,n=this.data,r=s[0],a=s[1],o=s[2],l=s[3],h=s[4],c=s[5],d=s[6],u=s[7],f=s[8],p=s[9],m=s[10],_=s[11],g=s[12],v=s[13],S=s[14],y=s[15];let x,T,w,b;return x=i[0],T=i[1],w=i[2],b=i[3],n[0]=r*x+h*T+f*w+g*b,n[1]=a*x+c*T+p*w+v*b,n[2]=o*x+d*T+m*w+S*b,n[3]=l*x+u*T+_*w+y*b,x=i[4],T=i[5],w=i[6],b=i[7],n[4]=r*x+h*T+f*w+g*b,n[5]=a*x+c*T+p*w+v*b,n[6]=o*x+d*T+m*w+S*b,n[7]=l*x+u*T+_*w+y*b,x=i[8],T=i[9],w=i[10],b=i[11],n[8]=r*x+h*T+f*w+g*b,n[9]=a*x+c*T+p*w+v*b,n[10]=o*x+d*T+m*w+S*b,n[11]=l*x+u*T+_*w+y*b,x=i[12],T=i[13],w=i[14],b=i[15],n[12]=r*x+h*T+f*w+g*b,n[13]=a*x+c*T+p*w+v*b,n[14]=o*x+d*T+m*w+S*b,n[15]=l*x+u*T+_*w+y*b,this}mulAffine2(t,e){const s=t.data,i=e.data,n=this.data,r=s[0],a=s[1],o=s[2],l=s[4],h=s[5],c=s[6],d=s[8],u=s[9],f=s[10],p=s[12],m=s[13],_=s[14];let g,v,S;return g=i[0],v=i[1],S=i[2],n[0]=r*g+l*v+d*S,n[1]=a*g+h*v+u*S,n[2]=o*g+c*v+f*S,n[3]=0,g=i[4],v=i[5],S=i[6],n[4]=r*g+l*v+d*S,n[5]=a*g+h*v+u*S,n[6]=o*g+c*v+f*S,n[7]=0,g=i[8],v=i[9],S=i[10],n[8]=r*g+l*v+d*S,n[9]=a*g+h*v+u*S,n[10]=o*g+c*v+f*S,n[11]=0,g=i[12],v=i[13],S=i[14],n[12]=r*g+l*v+d*S+p,n[13]=a*g+h*v+u*S+m,n[14]=o*g+c*v+f*S+_,n[15]=1,this}mul(t){return this.mul2(this,t)}transformPoint(t,e=new r.e){const s=this.data,{x:i,y:n,z:a}=t;return e.x=i*s[0]+n*s[4]+a*s[8]+s[12],e.y=i*s[1]+n*s[5]+a*s[9]+s[13],e.z=i*s[2]+n*s[6]+a*s[10]+s[14],e}transformVector(t,e=new r.e){const s=this.data,{x:i,y:n,z:a}=t;return e.x=i*s[0]+n*s[4]+a*s[8],e.y=i*s[1]+n*s[5]+a*s[9],e.z=i*s[2]+n*s[6]+a*s[10],e}transformVec4(t,e=new a.Z){const s=this.data,{x:i,y:n,z:r,w:o}=t;return e.x=i*s[0]+n*s[4]+r*s[8]+o*s[12],e.y=i*s[1]+n*s[5]+r*s[9]+o*s[13],e.z=i*s[2]+n*s[6]+r*s[10]+o*s[14],e.w=i*s[3]+n*s[7]+r*s[11]+o*s[15],e}setLookAt(t,e,s){c.sub2(t,e).normalize(),h.copy(s).normalize(),l.cross(h,c).normalize(),h.cross(c,l);const i=this.data;return i[0]=l.x,i[1]=l.y,i[2]=l.z,i[3]=0,i[4]=h.x,i[5]=h.y,i[6]=h.z,i[7]=0,i[8]=c.x,i[9]=c.y,i[10]=c.z,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}setFrustum(t,e,s,i,n,r){const a=2*n,o=e-t,l=i-s,h=r-n,c=this.data;return c[0]=a/o,c[1]=0,c[2]=0,c[3]=0,c[4]=0,c[5]=a/l,c[6]=0,c[7]=0,c[8]=(e+t)/o,c[9]=(i+s)/l,c[10]=(-r-n)/h,c[11]=-1,c[12]=0,c[13]=0,c[14]=-a*r/h,c[15]=0,this}setPerspective(t,e,s,i,n){return u._getPerspectiveHalfSize(o,t,e,s,n),this.setFrustum(-o.x,o.x,-o.y,o.y,s,i)}setOrtho(t,e,s,i,n,r){const a=this.data;return a[0]=2/(e-t),a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/(i-s),a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=-2/(r-n),a[11]=0,a[12]=-(e+t)/(e-t),a[13]=-(i+s)/(i-s),a[14]=-(r+n)/(r-n),a[15]=1,this}setFromAxisAngle(t,e){e*=i.D.DEG_TO_RAD;const{x:s,y:n,z:r}=t,a=Math.cos(e),o=Math.sin(e),l=1-a,h=l*s,c=l*n,d=this.data;return d[0]=h*s+a,d[1]=h*n+o*r,d[2]=h*r-o*n,d[3]=0,d[4]=h*n-o*r,d[5]=c*n+a,d[6]=c*r+o*s,d[7]=0,d[8]=h*r+o*n,d[9]=c*r-s*o,d[10]=l*r*r+a,d[11]=0,d[12]=0,d[13]=0,d[14]=0,d[15]=1,this}setTranslate(t,e,s){const i=this.data;return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=t,i[13]=e,i[14]=s,i[15]=1,this}setScale(t,e,s){const i=this.data;return i[0]=t,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=e,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=s,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}setViewport(t,e,s,i){const n=this.data;return n[0]=.5*s,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=.5*i,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=.5,n[11]=0,n[12]=t+.5*s,n[13]=e+.5*i,n[14]=.5,n[15]=1,this}setReflection(t,e){const s=t.x,i=t.y,n=t.z,r=this.data;return r[0]=1-2*s*s,r[1]=-2*s*i,r[2]=-2*s*n,r[3]=0,r[4]=-2*s*i,r[5]=1-2*i*i,r[6]=-2*i*n,r[7]=0,r[8]=-2*s*n,r[9]=-2*i*n,r[10]=1-2*n*n,r[11]=0,r[12]=-2*s*e,r[13]=-2*i*e,r[14]=-2*n*e,r[15]=1,this}invert(t=this){const e=t.data,s=e[0],i=e[1],n=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],c=e[8],d=e[9],u=e[10],f=e[11],p=e[12],m=e[13],_=e[14],g=e[15],v=s*o-i*a,S=s*l-n*a,y=s*h-r*a,x=i*l-n*o,T=i*h-r*o,w=n*h-r*l,b=c*m-d*p,E=c*_-u*p,A=c*g-f*p,C=d*_-u*m,P=d*g-f*m,D=u*g-f*_,L=v*D-S*P+y*C+x*A-T*E+w*b;if(0===L)this.setIdentity();else{const t=1/L,e=this.data;e[0]=(o*D-l*P+h*C)*t,e[1]=(-i*D+n*P-r*C)*t,e[2]=(m*w-_*T+g*x)*t,e[3]=(-d*w+u*T-f*x)*t,e[4]=(-a*D+l*A-h*E)*t,e[5]=(s*D-n*A+r*E)*t,e[6]=(-p*w+_*y-g*S)*t,e[7]=(c*w-u*y+f*S)*t,e[8]=(a*P-o*A+h*b)*t,e[9]=(-s*P+i*A-r*b)*t,e[10]=(p*T-m*y+g*v)*t,e[11]=(-c*T+d*y-f*v)*t,e[12]=(-a*C+o*E-l*b)*t,e[13]=(s*C-i*E+n*b)*t,e[14]=(-p*x+m*S-_*v)*t,e[15]=(c*x-d*S+u*v)*t}return this}set(t){const e=this.data;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],this}setIdentity(){const t=this.data;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}setTRS(t,e,s){const i=e.x,n=e.y,r=e.z,a=e.w,o=s.x,l=s.y,h=s.z,c=i+i,d=n+n,u=r+r,f=i*c,p=i*d,m=i*u,_=n*d,g=n*u,v=r*u,S=a*c,y=a*d,x=a*u,T=this.data;return T[0]=(1-(_+v))*o,T[1]=(p+x)*o,T[2]=(m-y)*o,T[3]=0,T[4]=(p-x)*l,T[5]=(1-(f+v))*l,T[6]=(g+S)*l,T[7]=0,T[8]=(m+y)*h,T[9]=(g-S)*h,T[10]=(1-(f+_))*h,T[11]=0,T[12]=t.x,T[13]=t.y,T[14]=t.z,T[15]=1,this}transpose(t=this){const e=t.data,s=this.data;if(e===s){let t;t=e[1],s[1]=e[4],s[4]=t,t=e[2],s[2]=e[8],s[8]=t,t=e[3],s[3]=e[12],s[12]=t,t=e[6],s[6]=e[9],s[9]=t,t=e[7],s[7]=e[13],s[13]=t,t=e[11],s[11]=e[14],s[14]=t}else s[0]=e[0],s[1]=e[4],s[2]=e[8],s[3]=e[12],s[4]=e[1],s[5]=e[5],s[6]=e[9],s[7]=e[13],s[8]=e[2],s[9]=e[6],s[10]=e[10],s[11]=e[14],s[12]=e[3],s[13]=e[7],s[14]=e[11],s[15]=e[15];return this}getTranslation(t=new r.e){return t.set(this.data[12],this.data[13],this.data[14])}getX(t=new r.e){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new r.e){return t.set(this.data[4],this.data[5],this.data[6])}getZ(t=new r.e){return t.set(this.data[8],this.data[9],this.data[10])}getScale(t=new r.e){return this.getX(l),this.getY(h),this.getZ(c),t.set(l.length(),h.length(),c.length()),t}get scaleSign(){return this.getX(l),this.getY(h),this.getZ(c),l.cross(l,h),l.dot(c)<0?-1:1}setFromEulerAngles(t,e,s){t*=i.D.DEG_TO_RAD,e*=i.D.DEG_TO_RAD,s*=i.D.DEG_TO_RAD;const n=Math.sin(-t),r=Math.cos(-t),a=Math.sin(-e),o=Math.cos(-e),l=Math.sin(-s),h=Math.cos(-s),c=this.data;return c[0]=o*h,c[1]=-o*l,c[2]=a,c[3]=0,c[4]=r*l+h*n*a,c[5]=r*h-n*a*l,c[6]=-o*n,c[7]=0,c[8]=n*l-r*h*a,c[9]=h*n+r*a*l,c[10]=r*o,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,this}getEulerAngles(t=new r.e){this.getScale(d);const e=d.x,s=d.y,n=d.z;if(0===e||0===s||0===n)return t.set(0,0,0);const a=this.data,o=Math.asin(-a[2]/e),l=.5*Math.PI;let h,c;return o<l?o>-l?(h=Math.atan2(a[6]/s,a[10]/n),c=Math.atan2(a[1]/e,a[0]/e)):(c=0,h=-Math.atan2(a[4]/s,a[5]/s)):(c=0,h=Math.atan2(a[4]/s,a[5]/s)),t.set(h,o,c).mulScalar(i.D.RAD_TO_DEG)}toString(){return`[${this.data.join(", ")}]`}static{this.IDENTITY=Object.freeze(new u)}static{this.ZERO=Object.freeze((new u).set([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))}}},4517:(t,e,s)=>{s.d(e,{C:()=>f});var i=s(91622),n=s(6455),r=s(37804),a=s(97275),o=s(18242),l=s(90393),h=s(77062),c="\nvec2 getGrabScreenPos(vec4 clipPos) {\n\tvec2 uv = (clipPos.xy / clipPos.w) * 0.5 + 0.5;\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\nvec2 getImageEffectUV(vec2 uv) {\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\n",d="\nfn getGrabScreenPos(clipPos: vec4<f32>) -> vec2<f32> {\n\tvar uv: vec2<f32> = (clipPos.xy / clipPos.w) * 0.5 + vec2<f32>(0.5);\n\tuv.y = 1.0 - uv.y;\n\treturn uv;\n}\nfn getImageEffectUV(uv: vec2<f32>) -> vec2<f32> {\n\tvar modifiedUV: vec2<f32> = uv;\n\tmodifiedUV.y = 1.0 - modifiedUV.y;\n\treturn modifiedUV;\n}\nstruct WrappedF32 { @size(16) element: f32 }\nstruct WrappedI32 { @size(16) element: i32 }\nstruct WrappedU32 { @size(16) element: u32 }\nstruct WrappedVec2F { @size(16) element: vec2f }\nstruct WrappedVec2I { @size(16) element: vec2i }\nstruct WrappedVec2U { @size(16) element: vec2u }\n";const u={vertex_position:i.JYe,vertex_normal:i.XF6,vertex_tangent:i.h3u,vertex_texCoord0:i.slc,vertex_texCoord1:i.zEd,vertex_texCoord2:i.GHH,vertex_texCoord3:i.z5t,vertex_texCoord4:i.GWP,vertex_texCoord5:i.NdR,vertex_texCoord6:i.GBD,vertex_texCoord7:i.zZp,vertex_color:i.F8$,vertex_boneIndices:i.aVd,vertex_boneWeights:i.Hn_};class f{static createDefinition(t,e){const s=t=>{let e=t.fragmentOutputTypes??"vec4";return Array.isArray(e)||(e=[e]),e},u=(e,i,n,r)=>{const a=t.isWebGPU?e:i;let o="";if(!n){const e=s(r);for(let s=0;s<t.maxColorAttachments;s++){o+=`#define COLOR_ATTACHMENT_${s}\n`;o+=`#define outType_${s} ${e[s]??"vec4"}\n`}}return o+a},p=(e,n)=>{let r="";if(!e){const e=s(n);for(let s=0;s<t.maxColorAttachments;s++){const t=e[s]??"vec4";r+=`alias pcOutType${s} = ${i.iUf.get(t)};\n`}}return r},m=e.name??"Untitled";let _,g;const v=f.getDefinesCode(t,e.vertexDefines),S=f.getDefinesCode(t,e.fragmentDefines);return e.shaderLanguage===i.g80?(_=`\n\t\t\t\t\t\t\t\t${p(!0,e)}\n\t\t\t\t\t\t\t\t${h.A}\n\t\t\t\t\t\t\t\t${d}\n\t\t\t\t\t\t\t\t${v}\n\t\t\t\t\t\t\t\t${e.vertexCode}\n\t\t\t\t\t\t`,g=`\n\t\t\t\t\t\t\t\t${p(!1,e)}\n\t\t\t\t\t\t\t\t${l.A}\n\t\t\t\t\t\t\t\t${d}\n\t\t\t\t\t\t\t\t${S}\n\t\t\t\t\t\t\t\t${e.fragmentCode}\n\t\t\t\t\t\t`):(_=`${f.versionCode(t)+u(o.A,r.A,!0,e)+v+f.precisionCode(t)}\n\t\t\t\t\t\t\t\t${c}\n\t\t\t\t\t\t\t\t${f.getShaderNameCode(m)}\n\t\t\t\t\t\t\t\t${e.vertexCode}`,g=`${(e.fragmentPreamble||"")+f.versionCode(t)+u(a.A,n.A,!1,e)+S+f.precisionCode(t)}\n\t\t\t\t\t\t\t\t${c}\n\t\t\t\t\t\t\t\t${f.getShaderNameCode(m)}\n\t\t\t\t\t\t\t\t${e.fragmentCode}`),{name:m,shaderLanguage:e.shaderLanguage??i.BzK,attributes:e.attributes,vshader:_,vincludes:e.vertexIncludes,fincludes:e.fragmentIncludes,fshader:g,useTransformFeedback:e.useTransformFeedback,meshUniformBufferFormat:e.meshUniformBufferFormat,meshBindGroupFormat:e.meshBindGroupFormat}}static getDefinesCode(t,e){let s="";return t.capsDefines.forEach((t,e)=>{s+=`#define ${e} ${t}\n`}),s+="\n",e?.forEach((t,e)=>{s+=`#define ${e} ${t}\n`}),s+="\n",s}static getShaderNameCode(t){return`#define SHADER_NAME ${t}\n`}static versionCode(t){return t.isWebGPU?"#version 450\n":"#version 300 es\n"}static precisionCode(t,e){e&&"highp"!==e&&"mediump"!==e&&"lowp"!==e&&(e=null),e&&("highp"===e&&"highp"!==t.maxPrecision&&(e="mediump"),"mediump"===e&&"lowp"===t.maxPrecision&&(e="lowp"));const s=e||t.precision;return`\n\t\t\t\t\t\tprecision ${s} float;\n\t\t\t\t\t\tprecision ${s} int;\n\t\t\t\t\t\tprecision ${s} usampler2D;\n\t\t\t\t\t\tprecision ${s} isampler2D;\n\t\t\t\t\t\tprecision ${s} sampler2DShadow;\n\t\t\t\t\t\tprecision ${s} samplerCubeShadow;\n\t\t\t\t\t\tprecision ${s} sampler2DArray;\n\t\t\t\t`}static collectAttributes(t){const e={};let s=0,i=t.indexOf("attribute");for(;i>=0&&!(i>0&&"/"===t[i-1]);){let n=!1;if(i>0){let e=t.lastIndexOf("\n",i);e=-1!==e?e+1:0;t.substring(e,i).includes("#")&&(n=!0)}if(!n){const n=t.indexOf(";",i),r=t.lastIndexOf(" ",n),a=t.substring(r+1,n);if(e[a]);else{const t=u[a];void 0!==t?e[a]=t:(e[a]=`ATTR${s}`,s++)}}i=t.indexOf("attribute",i+1)}return e}}},4914:(t,e,s)=>{s.d(e,{F:()=>n});class i{static{this.modules={}}static{this.wasmSupported=(t=>{const e={};let s=e;return()=>(s===e&&(s=t()),s)})(()=>{try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){const t=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(t instanceof WebAssembly.Module)return new WebAssembly.Instance(t)instanceof WebAssembly.Instance}}catch(t){}return!1})}static loadScript(t,e){const s=document.createElement("script");s.setAttribute("src",t),s.onload=()=>{e(null)},s.onerror=()=>{e(`Failed to load script='${t}'`)},document.body.appendChild(s)}static loadWasm(t,e,s){const n=i.wasmSupported()&&e.glueUrl&&e.wasmUrl?e.glueUrl:e.fallbackUrl;n?i.loadScript(n,i=>{if(i)s(i,null);else{const i=window[t];window[t]=void 0,i({locateFile:()=>e.wasmUrl,onAbort:()=>{s("wasm module aborted.")}}).then(t=>{s(null,t)})}}):s("No supported wasm modules found.",null)}static getModule(t){return i.modules.hasOwnProperty(t)||(i.modules[t]={config:null,initializing:!1,instance:null,callbacks:[]}),i.modules[t]}static initialize(t,e){if(e.initializing)return;const s=e.config;(s.glueUrl||s.wasmUrl||s.fallbackUrl)&&(e.initializing=!0,i.loadWasm(t,s,(i,n)=>{i?s.errorHandler?s.errorHandler(i):console.error(`failed to initialize module=${t} error=${i}`):(e.instance=n,e.callbacks.forEach(t=>{t(n)}))}))}}class n{static setConfig(t,e){const s=i.getModule(t);s.config=e,s.callbacks.length>0&&i.initialize(t,s)}static getConfig(t){return i.modules?.[t]?.config}static getInstance(t,e){const s=i.getModule(t);s.instance?e(s.instance):(s.callbacks.push(e),s.config&&i.initialize(t,s))}}},6455:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n#ifndef outType_0\n#define outType_0 vec4\n#endif\nlayout(location = 0) out highp outType_0 pcFragColor0;\n#if COLOR_ATTACHMENT_1\nlayout(location = 1) out highp outType_1 pcFragColor1;\n#endif\n#if COLOR_ATTACHMENT_2\nlayout(location = 2) out highp outType_2 pcFragColor2;\n#endif\n#if COLOR_ATTACHMENT_3\nlayout(location = 3) out highp outType_3 pcFragColor3;\n#endif\n#if COLOR_ATTACHMENT_4\nlayout(location = 4) out highp outType_4 pcFragColor4;\n#endif\n#if COLOR_ATTACHMENT_5\nlayout(location = 5) out highp outType_5 pcFragColor5;\n#endif\n#if COLOR_ATTACHMENT_6\nlayout(location = 6) out highp outType_6 pcFragColor6;\n#endif\n#if COLOR_ATTACHMENT_7\nlayout(location = 7) out highp outType_7 pcFragColor7;\n#endif\n#define gl_FragColor pcFragColor0\n#define varying in\n#define texture2D texture\n#define texture2DBias texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLod textureLod\n#define texture2DProjLod textureProjLod\n#define textureCubeLod textureLod\n#define texture2DGrad textureGrad\n#define texture2DProjGrad textureProjGrad\n#define textureCubeGrad textureGrad\n#define utexture2D texture\n#define itexture2D texture\n#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead\n#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod\n#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead\n#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead\n#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead\n#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead\n#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))\n#define SHADOWMAP_PASS(name) name\n#define SHADOWMAP_ACCEPT(name) sampler2DShadow name\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name\n#define GL2\n"},6739:(t,e,s)=>{s.d(e,{t:()=>A});var i=s(97213),n=s(51372),r=s(94441),a=s(3964),o=s(36805),l=s(93953);const h=new a.$,c=new l.e,d=new o.k,u=new o.k,f=new l.e,p=new l.e,m=new a.$,_=new o.k,g=new l.e,v=new a.$,S=new o.k,y=new o.k,x=new a.$,T=new l.e,w=new l.e;function b(t,e){return t instanceof Function?t:s=>{let i=s[t];return i instanceof Function&&(i=i()),i===e}}function E(t,e){if(e(t))return t;const s=t._children,i=s.length;for(let n=0;n<i;++n){const t=E(s[n],e);if(t)return t}return null}class A extends i.J{constructor(t="Untitled"){super(),this.tags=new n.Y(this),this.localPosition=new l.e,this.localRotation=new o.k,this.localScale=new l.e(1,1,1),this.localEulerAngles=new l.e,this.position=new l.e,this.rotation=new o.k,this.eulerAngles=new l.e,this._scale=null,this.localTransform=new a.$,this._dirtyLocal=!1,this._aabbVer=0,this._frozen=!1,this.worldTransform=new a.$,this._dirtyWorld=!1,this._worldScaleSign=0,this._normalMatrix=new r.U,this._dirtyNormal=!0,this._right=null,this._up=null,this._forward=null,this._parent=null,this._children=[],this._graphDepth=0,this._enabled=!0,this._enabledInHierarchy=!1,this.scaleCompensation=!1,this.name=t}get right(){return this._right||(this._right=new l.e),this.getWorldTransform().getX(this._right).normalize()}get up(){return this._up||(this._up=new l.e),this.getWorldTransform().getY(this._up).normalize()}get forward(){return this._forward||(this._forward=new l.e),this.getWorldTransform().getZ(this._forward).normalize().mulScalar(-1)}get normalMatrix(){const t=this._normalMatrix;return this._dirtyNormal&&(t.invertMat4(this.getWorldTransform()).transpose(),this._dirtyNormal=!1),t}set enabled(t){this._enabled!==t&&(this._enabled=t,(t&&this._parent?.enabled||!t)&&this._notifyHierarchyStateChanged(this,t))}get enabled(){return this._enabled&&this._enabledInHierarchy}get parent(){return this._parent}get path(){let t=this._parent;if(!t)return"";let e=this.name;for(;t&&t._parent;)e=`${t.name}/${e}`,t=t._parent;return e}get root(){let t=this;for(;t._parent;)t=t._parent;return t}get children(){return this._children}get graphDepth(){return this._graphDepth}_notifyHierarchyStateChanged(t,e){t._onHierarchyStateChanged(e);const s=t._children;for(let i=0,n=s.length;i<n;i++)s[i]._enabled&&this._notifyHierarchyStateChanged(s[i],e)}_onHierarchyStateChanged(t){this._enabledInHierarchy=t,t&&!this._frozen&&this._unfreezeParentToRoot()}_cloneInternal(t){t.name=this.name;const e=this.tags._list;t.tags.clear();for(let s=0;s<e.length;s++)t.tags.add(e[s]);t.localPosition.copy(this.localPosition),t.localRotation.copy(this.localRotation),t.localScale.copy(this.localScale),t.localEulerAngles.copy(this.localEulerAngles),t.position.copy(this.position),t.rotation.copy(this.rotation),t.eulerAngles.copy(this.eulerAngles),t.localTransform.copy(this.localTransform),t._dirtyLocal=this._dirtyLocal,t.worldTransform.copy(this.worldTransform),t._dirtyWorld=this._dirtyWorld,t._dirtyNormal=this._dirtyNormal,t._aabbVer=this._aabbVer+1,t._enabled=this._enabled,t.scaleCompensation=this.scaleCompensation,t._enabledInHierarchy=!1}clone(){const t=new this.constructor;return this._cloneInternal(t),t}copy(t){return t._cloneInternal(this),this}destroy(){this.remove();const t=this._children;for(;t.length;){const e=t.pop();e._parent=null,e.destroy()}this.fire("destroy",this),this.off()}find(t,e){const s=[],i=b(t,e);return this.forEach(t=>{i(t)&&s.push(t)}),s}findOne(t,e){return E(this,b(t,e))}findByTag(...t){const e=[],s=(i,n)=>{n&&i.tags.has(...t)&&e.push(i);for(let t=0;t<i._children.length;t++)s(i._children[t],!0)};return s(this,!1),e}findByName(t){return this.findOne("name",t)}findByPath(t){const e=Array.isArray(t)?t:t.split("/");let s=this;for(let i=0,n=e.length;i<n;++i)if(s=s.children.find(t=>t.name===e[i]),!s)return null;return s}forEach(t,e){t.call(e,this);const s=this._children,i=s.length;for(let n=0;n<i;++n)s[n].forEach(t,e)}isDescendantOf(t){let e=this._parent;for(;e;){if(e===t)return!0;e=e._parent}return!1}isAncestorOf(t){return t.isDescendantOf(this)}getEulerAngles(){return this.getWorldTransform().getEulerAngles(this.eulerAngles),this.eulerAngles}getLocalEulerAngles(){return this.localRotation.getEulerAngles(this.localEulerAngles),this.localEulerAngles}getLocalPosition(){return this.localPosition}getLocalRotation(){return this.localRotation}getLocalScale(){return this.localScale}getLocalTransform(){return this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this.localTransform}getPosition(){return this.getWorldTransform().getTranslation(this.position),this.position}getRotation(){return this.rotation.setFromMat4(this.getWorldTransform()),this.rotation}getScale(){return this._scale||(this._scale=new l.e),this.getWorldTransform().getScale(this._scale)}getWorldTransform(){return this._dirtyLocal||this._dirtyWorld?(this._parent&&this._parent.getWorldTransform(),this._sync(),this.worldTransform):this.worldTransform}get worldScaleSign(){return 0===this._worldScaleSign&&(this._worldScaleSign=this.getWorldTransform().scaleSign),this._worldScaleSign}remove(){this._parent?.removeChild(this)}reparent(t,e){this.remove(),t&&(e>=0?t.insertChild(this,e):t.addChild(this))}setLocalEulerAngles(t,e,s){this.localRotation.setFromEulerAngles(t,e,s),this._dirtyLocal||this._dirtifyLocal()}setLocalPosition(t,e,s){t instanceof l.e?this.localPosition.copy(t):this.localPosition.set(t,e,s),this._dirtyLocal||this._dirtifyLocal()}setLocalRotation(t,e,s,i){t instanceof o.k?this.localRotation.copy(t):this.localRotation.set(t,e,s,i),this._dirtyLocal||this._dirtifyLocal()}setLocalScale(t,e,s){t instanceof l.e?this.localScale.copy(t):this.localScale.set(t,e,s),this._dirtyLocal||this._dirtifyLocal()}_dirtifyLocal(){this._dirtyLocal||(this._dirtyLocal=!0,this._dirtyWorld||this._dirtifyWorld())}_unfreezeParentToRoot(){let t=this._parent;for(;t;)t._frozen=!1,t=t._parent}_dirtifyWorld(){this._dirtyWorld||this._unfreezeParentToRoot(),this._dirtifyWorldInternal()}_dirtifyWorldInternal(){if(!this._dirtyWorld){this._frozen=!1,this._dirtyWorld=!0;for(let t=0;t<this._children.length;t++)this._children[t]._dirtyWorld||this._children[t]._dirtifyWorldInternal()}this._dirtyNormal=!0,this._worldScaleSign=0,this._aabbVer++}setPosition(t,e,s){t instanceof l.e?g.copy(t):g.set(t,e,s),null===this._parent?this.localPosition.copy(g):(v.copy(this._parent.getWorldTransform()).invert(),v.transformPoint(g,this.localPosition)),this._dirtyLocal||this._dirtifyLocal()}setRotation(t,e,s,i){if(t instanceof o.k?S.copy(t):S.set(t,e,s,i),null===this._parent)this.localRotation.copy(S);else{const t=this._parent.getRotation();y.copy(t).invert(),this.localRotation.copy(y).mul(S)}this._dirtyLocal||this._dirtifyLocal()}setPositionAndRotation(t,e){if(null===this._parent)this.localPosition.copy(t),this.localRotation.copy(e);else{const s=this._parent.getWorldTransform();v.copy(s).invert(),v.transformPoint(t,this.localPosition),this.localRotation.setFromMat4(v).mul(e)}this._dirtyLocal||this._dirtifyLocal()}setEulerAngles(t,e,s){if(this.localRotation.setFromEulerAngles(t,e,s),null!==this._parent){const t=this._parent.getRotation();y.copy(t).invert(),this.localRotation.mul2(y,this.localRotation)}this._dirtyLocal||this._dirtifyLocal()}addChild(t){this._prepareInsertChild(t),this._children.push(t),this._onInsertChild(t)}addChildAndSaveTransform(t){const e=t.getPosition(),s=t.getRotation();this._prepareInsertChild(t),t.setPosition(m.copy(this.worldTransform).invert().transformPoint(e)),t.setRotation(_.copy(this.getRotation()).invert().mul(s)),this._children.push(t),this._onInsertChild(t)}insertChild(t,e){this._prepareInsertChild(t),this._children.splice(e,0,t),this._onInsertChild(t)}_prepareInsertChild(t){t.remove()}_fireOnHierarchy(t,e,s){this.fire(t,s);for(let i=0;i<this._children.length;i++)this._children[i]._fireOnHierarchy(e,e,s)}_onInsertChild(t){t._parent=this;const e=t._enabled&&this.enabled;t._enabledInHierarchy!==e&&(t._enabledInHierarchy=e,t._notifyHierarchyStateChanged(t,e)),t._updateGraphDepth(),t._dirtifyWorld(),this._frozen&&t._unfreezeParentToRoot(),t._fireOnHierarchy("insert","inserthierarchy",this),this.fire&&this.fire("childinsert",t)}_updateGraphDepth(){this._graphDepth=this._parent?this._parent._graphDepth+1:0;for(let t=0,e=this._children.length;t<e;t++)this._children[t]._updateGraphDepth()}removeChild(t){const e=this._children.indexOf(t);-1!==e&&(this._children.splice(e,1),t._parent=null,t._fireOnHierarchy("remove","removehierarchy",this),this.fire("childremove",t))}_sync(){if(this._dirtyLocal&&(this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale),this._dirtyLocal=!1),this._dirtyWorld){if(null===this._parent)this.worldTransform.copy(this.localTransform);else if(this.scaleCompensation){let t;const e=this._parent;let s=this.localScale,i=e;if(i){for(;i&&i.scaleCompensation;)i=i._parent;i&&(i=i._parent,i&&(t=i.worldTransform.getScale(),f.mul2(t,this.localScale),s=f))}u.setFromMat4(e.worldTransform),d.mul2(u,this.localRotation);let n=e.worldTransform;e.scaleCompensation&&(p.mul2(t,e.getLocalScale()),h.setTRS(e.worldTransform.getTranslation(c),u,p),n=h),n.transformPoint(this.localPosition,c),this.worldTransform.setTRS(c,d,s)}else this.worldTransform.mulAffine2(this._parent.worldTransform,this.localTransform);this._dirtyWorld=!1}}syncHierarchy(){if(!this._enabled)return;if(this._frozen)return;this._frozen=!0,(this._dirtyLocal||this._dirtyWorld)&&this._sync();const t=this._children;for(let e=0,s=t.length;e<s;e++)t[e].syncHierarchy()}lookAt(t,e,s,i=0,n=1,r=0){if(t instanceof l.e)T.copy(t),e instanceof l.e?w.copy(e):w.copy(l.e.UP);else{if(void 0===s)return;T.set(t,e,s),w.set(i,n,r)}x.setLookAt(this.getPosition(),T,w),S.setFromMat4(x),this.setRotation(S)}translate(t,e,s){t instanceof l.e?g.copy(t):g.set(t,e,s),g.add(this.getPosition()),this.setPosition(g)}translateLocal(t,e,s){t instanceof l.e?g.copy(t):g.set(t,e,s),this.localRotation.transformVector(g,g),this.localPosition.add(g),this._dirtyLocal||this._dirtifyLocal()}rotate(t,e,s){if(S.setFromEulerAngles(t,e,s),null===this._parent)this.localRotation.mul2(S,this.localRotation);else{const t=this.getRotation(),e=this._parent.getRotation();y.copy(e).invert(),S.mul2(y,S),this.localRotation.mul2(S,t)}this._dirtyLocal||this._dirtifyLocal()}rotateLocal(t,e,s){S.setFromEulerAngles(t,e,s),this.localRotation.mul(S),this._dirtyLocal||this._dirtifyLocal()}}},10658:(t,e,s)=>{s.d(e,{QL:()=>n,X$:()=>r,rE:()=>i});const i="2.11.6",n="bffa43e";function r(t,e){for(const s in e){const i=e[s];Array.isArray(i)?t[s]=r([],i):t[s]=i&&"object"==typeof i?r({},i):i}return t}},10977:(t,e,s)=>{s.d(e,{B:()=>n,n:()=>r});var i=s(96540);const n=(0,i.createContext)(null),r=()=>{const t=(0,i.useContext)(n);if(!t)throw new Error("`useApp` must be used within an Application component");return t}},11800:(t,e,s)=>{s.d(e,{f:()=>d});var i=s(91622),n=s(15979),r=s(58333);class a{unlock(t){}}class o{destroy(t){}init(t,e){}loseContext(){}resolve(t,e,s,i){}}class l{destroy(t){}loseContext(){}restoreContext(t,e){}}class h{destroy(t){}propertyChanged(t){}loseContext(){}}class c{destroy(t){}unlock(t){}}class d extends n.G{constructor(t,e={}){super(t,e),e=this.initOptions,this.isNull=!0,this._deviceType=i.RaA,this.samples=1,this.backBuffer=new r.O({name:"Framebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples}),this.initDeviceCaps()}destroy(){super.destroy()}initDeviceCaps(){this.disableParticleSystem=!0,this.precision="highp",this.maxPrecision="highp",this.maxSamples=4,this.maxTextures=16,this.maxTextureSize=4096,this.maxCubeMapSize=4096,this.maxVolumeSize=4096,this.maxColorAttachments=8,this.maxPixelRatio=1,this.maxAnisotropy=16,this.supportsUniformBuffers=!1,this.supportsAreaLights=!0,this.supportsGpuParticles=!1,this.textureFloatRenderable=!0,this.textureHalfFloatRenderable=!0,this.supportsImageBitmap=!1}postInit(){super.postInit()}frameStart(){super.frameStart()}frameEnd(){super.frameEnd()}updateBegin(){}updateEnd(){}readPixels(t,e,s,i,n){}createVertexBufferImpl(t,e){return new c(t,e)}createIndexBufferImpl(t){return new a(t)}createShaderImpl(t){return new l(t)}createTextureImpl(t){return new h(t)}createRenderTargetImpl(t){return new o(t)}draw(t,e,s,i,n=!0,r=!0){}setShader(t,e=!1){}setBlendState(t){}setDepthState(t){}setStencilState(t,e){}setBlendColor(t,e,s,i){}setCullMode(t){}setAlphaToCoverage(t){}initializeContextCaches(){super.initializeContextCaches()}clear(t){}setViewport(t,e,s,i){}setScissor(t,e,s,i){}copyRenderTarget(t,e,s,i){return!0}}},14702:(t,e,s)=>{s.d(e,{l:()=>h,L:()=>c});var i=s(10658),n=s(88004),r=s(39462);const a=/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class o{constructor(t){const e=t.match(a);this.scheme=e[2],this.authority=e[4],this.path=e[5],this.query=e[7],this.fragment=e[9]}toString(){let t="";return this.scheme&&(t+=`${this.scheme}:`),this.authority&&(t+=`//${this.authority}`),t+=this.path,this.query&&(t+=`?${this.query}`),this.fragment&&(t+=`#${this.fragment}`),t}getQuery(){const t={};if(this.query){const e=decodeURIComponent(this.query).split("&");for(const s of e){const e=s.split("=");t[e[0]]=e[1]}}return t}setQuery(t){let e="";for(const s in t)t.hasOwnProperty(s)&&(""!==e&&(e+="&"),e+=`${encodeURIComponent(s)}=${encodeURIComponent(t[s])}`);this.query=e}}var l=s(59752);class h{static{this.ContentType={AAC:"audio/aac",BASIS:"image/basis",BIN:"application/octet-stream",DDS:"image/dds",FORM_URLENCODED:"application/x-www-form-urlencoded",GIF:"image/gif",GLB:"model/gltf-binary",JPEG:"image/jpeg",JSON:"application/json",MP3:"audio/mpeg",MP4:"audio/mp4",OGG:"audio/ogg",OPUS:'audio/ogg; codecs="opus"',PNG:"image/png",TEXT:"text/plain",WAV:"audio/x-wav",XML:"application/xml"}}static{this.ResponseType={TEXT:"text",ARRAY_BUFFER:"arraybuffer",BLOB:"blob",DOCUMENT:"document",JSON:"json"}}static{this.binaryExtensions=[".model",".wav",".ogg",".mp3",".mp4",".m4a",".aac",".dds",".basis",".glb",".opus"]}static{this.retryDelay=100}get(t,e,s){"function"==typeof e&&(s=e,e={});const i=this.request("GET",t,e,s),{progress:n}=e;if(n){const t=t=>{t.lengthComputable&&n.fire("progress",t.loaded,t.total)},e=s=>{t(s),i.removeEventListener("loadstart",t),i.removeEventListener("progress",t),i.removeEventListener("loadend",e)};i.addEventListener("loadstart",t),i.addEventListener("progress",t),i.addEventListener("loadend",e)}return i}post(t,e,s,i){return"function"==typeof s&&(i=s,s={}),s.postdata=e,this.request("POST",t,s,i)}put(t,e,s,i){return"function"==typeof s&&(i=s,s={}),s.postdata=e,this.request("PUT",t,s,i)}del(t,e,s){return"function"==typeof e&&(s=e,e={}),this.request("DELETE",t,e,s)}request(t,e,s,r){let a,l,c,d=!1;if("function"==typeof s&&(r=s,s={}),s.retry&&(s=Object.assign({retries:0,maxRetries:5},s)),s.callback=r,null==s.async&&(s.async=!0),null==s.headers&&(s.headers={}),null!=s.postdata)if(s.postdata instanceof Document)c=s.postdata;else if(s.postdata instanceof FormData)c=s.postdata;else if(s.postdata instanceof Object){let t=s.headers["Content-Type"];switch(void 0===t&&(s.headers["Content-Type"]=h.ContentType.FORM_URLENCODED,t=s.headers["Content-Type"]),t){case h.ContentType.FORM_URLENCODED:{c="";let t=!0;for(const e in s.postdata)if(s.postdata.hasOwnProperty(e)){t?t=!1:c+="&";c+=`${encodeURIComponent(e)}=${encodeURIComponent(s.postdata[e])}`}break}default:case h.ContentType.JSON:null==t&&(s.headers["Content-Type"]=h.ContentType.JSON),c=JSON.stringify(s.postdata)}}else c=s.postdata;if(!1===s.cache){const t=(0,n.t)();a=new o(e),a.query?a.query=`${a.query}&ts=${t}`:a.query=`ts=${t}`,e=a.toString()}s.query&&(a=new o(e),l=(0,i.X$)(a.getQuery(),s.query),a.setQuery(l),e=a.toString());const u=new XMLHttpRequest;u.open(t,e,s.async),u.withCredentials=void 0!==s.withCredentials&&s.withCredentials,u.responseType=s.responseType||this._guessResponseType(e);for(const i in s.headers)s.headers.hasOwnProperty(i)&&u.setRequestHeader(i,s.headers[i]);u.onreadystatechange=()=>{this._onReadyStateChange(t,e,s,u)},u.onerror=()=>{this._onError(t,e,s,u),d=!0};try{u.send(c)}catch(f){d||s.error(u.status,u,f)}return u}_guessResponseType(t){const e=new o(t),s=r.A.getExtension(e.path).toLowerCase();return h.binaryExtensions.indexOf(s)>=0?h.ResponseType.ARRAY_BUFFER:".json"===s?h.ResponseType.JSON:".xml"===s?h.ResponseType.DOCUMENT:h.ResponseType.TEXT}_isBinaryContentType(t){return[h.ContentType.BASIS,h.ContentType.BIN,h.ContentType.DDS,h.ContentType.GLB,h.ContentType.MP3,h.ContentType.MP4,h.ContentType.OGG,h.ContentType.OPUS,h.ContentType.WAV].indexOf(t)>=0}_isBinaryResponseType(t){return t===h.ResponseType.ARRAY_BUFFER||t===h.ResponseType.BLOB||t===h.ResponseType.JSON}_onReadyStateChange(t,e,s,i){if(4===i.readyState)switch(i.status){case 0:i.responseURL&&i.responseURL.startsWith("file:///")?this._onSuccess(t,e,s,i):this._onError(t,e,s,i);break;case 200:case 201:case 206:case 304:this._onSuccess(t,e,s,i);break;default:this._onError(t,e,s,i)}}_onSuccess(t,e,s,i){let n,r;const a=i.getResponseHeader("Content-Type");if(a){r=a.split(";")[0].trim()}try{n=this._isBinaryContentType(r)||this._isBinaryResponseType(i.responseType)?i.response:r===h.ContentType.JSON||e.split("?")[0].endsWith(".json")?JSON.parse(i.responseText):i.responseType===h.ResponseType.DOCUMENT||r===h.ContentType.XML?i.responseXML:i.responseText,s.callback(null,n)}catch(o){s.callback(o)}}_onError(t,e,s,i){if(!s.retrying)if(s.retry&&s.retries<s.maxRetries){s.retries++,s.retrying=!0;const n=l.D.clamp(Math.pow(2,s.retries)*h.retryDelay,0,s.maxRetryDelay||5e3);console.log(`${t}: ${e} - Error ${i.status}. Retrying in ${n} ms`),setTimeout(()=>{s.retrying=!1,this.request(t,e,s,s.callback)},n)}else s.callback(0===i.status?"Network error":i.status,null)}}const c=new h},15979:(t,e,s)=>{s.d(e,{G:()=>S});var i=s(10658),n=s(97213),r=s(67454),a=s(40050),o=s(48355),l=s(91622),h=s(84140),c=s(47422),d=s(61531);let u=0;class f{constructor(){u++,this.version=new d.R,this.version.globalId=u}increment(){this.version.revision++}}class p{constructor(t){this.name=t,this.value=null,this.versionObject=new f}toJSON(t){}setValue(t){this.value=t,this.versionObject.increment()}getValue(){return this.value}}class m{constructor(t){this.name=t,this.variables=new Map}resolve(t){return this.variables.has(t)||this.variables.set(t,new p(t)),this.variables.get(t)}removeValue(t){for(const e in this.variables){const s=this.variables[e];s.value===t&&(s.value=null)}}}var _=s(84636),g=s(27393),v=s(53480);class S extends n.J{static{this.EVENT_RESIZE="resizecanvas"}constructor(t,e){super(),this.backBuffer=null,this.backBufferSize=new a.Z,this.backBufferAntialias=!1,this.isWebGPU=!1,this.isWebGL2=!1,this.isHdr=!1,this.maxIndirectDrawCount=1024,this.maxColorAttachments=1,this.maxSamples=1,this.supportsCompute=!1,this.supportsStorageTextureRead=!1,this.renderTarget=null,this.shaders=[],this.textures=[],this.targets=new Set,this.renderVersion=0,this.insideRenderPass=!1,this.supportsUniformBuffers=!1,this.supportsClipDistances=!1,this.textureRG11B10Renderable=!1,this.textureFloatFilterable=!1,this.blendState=new h.t,this.depthState=new c.H,this.stencilEnabled=!1,this.stencilFront=new v.n,this.stencilBack=new v.n,this.defaultClearOptions={color:[0,0,0,1],depth:1,stencil:0,flags:l.Sue|l.YKI},this.clientRect={width:0,height:0},this._shadersDirty=!1,this.capsDefines=new Map,this.mapsToClear=new Set,this.canvas=t,"setAttribute"in t&&t.setAttribute("data-engine",`PlayCanvas ${i.rE}`),this.initOptions={...e},this.initOptions.alpha??=!0,this.initOptions.depth??=!0,this.initOptions.stencil??=!0,this.initOptions.antialias??=!0,this.initOptions.powerPreference??="high-performance",this.initOptions.displayFormat??=l.VPo,this._maxPixelRatio=r.i.browser?Math.min(1,window.devicePixelRatio):1,this.buffers=[],this._vram={tex:0,vb:0,ib:0,ub:0,sb:0},this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0},this.initializeContextCaches(),this._drawCallsPerFrame=0,this._shaderSwitchesPerFrame=0,this._primsPerFrame=[];for(let s=l._AA;s<=l.zl$;s++)this._primsPerFrame[s]=0;this._renderTargetCreationTime=0,this.scope=new m("Device"),this.textureBias=this.scope.resolve("textureBias"),this.textureBias.setValue(0)}postInit(){const t=new g.y(this,[{semantic:l.JYe,components:2,type:l.n$B}]),e=new Float32Array([-1,-1,1,-1,-1,1,1,1]);this.quadVertexBuffer=new _.R(this,t,4,{data:e})}initCapsDefines(){const{capsDefines:t}=this;t.clear(),this.textureFloatFilterable&&t.set("CAPS_TEXTURE_FLOAT_FILTERABLE",""),this.textureFloatRenderable&&t.set("CAPS_TEXTURE_FLOAT_RENDERABLE","")}destroy(){this.fire("destroy"),this.quadVertexBuffer?.destroy(),this.quadVertexBuffer=null,this.dynamicBuffers?.destroy(),this.dynamicBuffers=null,this.gpuProfiler?.destroy(),this.gpuProfiler=null}onDestroyShader(t){this.fire("destroy:shader",t);const e=this.shaders.indexOf(t);-1!==e&&this.shaders.splice(e,1)}postDestroy(){this.scope=null,this.canvas=null}loseContext(){this.contextLost=!0,this.backBufferSize.set(-1,-1);for(const t of this.textures)t.loseContext();for(const t of this.buffers)t.loseContext();for(const t of this.targets)t.loseContext();this.gpuProfiler?.loseContext()}restoreContext(){this.contextLost=!1,this.initializeRenderState(),this.initializeContextCaches();for(const t of this.buffers)t.unlock();this.gpuProfiler?.restoreContext?.()}toJSON(t){}initializeContextCaches(){this.vertexBuffers=[],this.shader=null,this.shaderValid=void 0,this.shaderAsyncCompile=!1,this.renderTarget=null}initializeRenderState(){this.blendState=new h.t,this.depthState=new c.H,this.cullMode=l.K1r,this.vx=this.vy=this.vw=this.vh=0,this.sx=this.sy=this.sw=this.sh=0,this.blendColor=new o.Q(0,0,0,0)}setStencilState(t,e){}setBlendState(t){}setBlendColor(t,e,s,i){}setDepthState(t){}setCullMode(t){}setRenderTarget(t){this.renderTarget=t}setVertexBuffer(t){t&&this.vertexBuffers.push(t)}clearVertexBuffer(){this.vertexBuffers.length=0}getIndirectDrawSlot(){return 0}get indirectDrawBuffer(){return null}getRenderTarget(){return this.renderTarget}initRenderTarget(t){t.initialized||(t.init(),this.targets.add(t))}draw(t,e,s,i,n=!0,r=!0){}_isBrowserInterface(t){return this._isImageBrowserInterface(t)||this._isImageCanvasInterface(t)||this._isImageVideoInterface(t)}_isImageBrowserInterface(t){return"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement}_isImageCanvasInterface(t){return"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement}_isImageVideoInterface(t){return"undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement}resizeCanvas(t,e){const s=Math.min(this._maxPixelRatio,r.i.browser?window.devicePixelRatio:1),i=Math.floor(t*s),n=Math.floor(e*s);i===this.canvas.width&&n===this.canvas.height||this.setResolution(i,n)}setResolution(t,e){this.canvas.width=t,this.canvas.height=e,this.fire(S.EVENT_RESIZE,t,e)}update(){this.updateClientRect()}updateClientRect(){if(r.i.worker)this.clientRect.width=this.canvas.width,this.clientRect.height=this.canvas.height;else{const t=this.canvas.getBoundingClientRect();this.clientRect.width=t.width,this.clientRect.height=t.height}}get width(){return this.canvas.width}get height(){return this.canvas.height}set fullscreen(t){}get fullscreen(){return!1}set maxPixelRatio(t){this._maxPixelRatio=t}get maxPixelRatio(){return this._maxPixelRatio}get deviceType(){return this._deviceType}startRenderPass(t){}endRenderPass(t){}startComputePass(t){}endComputePass(){}frameStart(){this.renderPassIndex=0,this.renderVersion++}frameEnd(){this.mapsToClear.forEach(t=>t.clear()),this.mapsToClear.clear()}computeDispatch(t,e="Unnamed"){}getRenderableHdrFormat(t=[l.s_z,l.WBN,l.s7h],e=!0,s=1){for(let i=0;i<t.length;i++){const n=t[i];switch(n){case l.s_z:if(this.textureRG11B10Renderable)return n;break;case l.WBN:if(this.textureHalfFloatRenderable)return n;break;case l.s7h:if(this.isWebGPU&&s>1)continue;if(this.textureFloatRenderable&&(!e||this.textureFloatFilterable))return n}}}validateAttributes(t,e,s){}}},17176:(t,e,s)=>{s.d(e,{L:()=>h});var i=s(91622),n=s(422),r=s(67248);const a={white:[255,255,255,255],gray:[128,128,128,255],black:[0,0,0,255],normal:[128,128,255,255],pink:[255,128,255,255]};class o{destroy(){this.map.forEach(t=>{t.destroy()})}constructor(){this.map=new Map}}const l=new n.N,h=(t,e)=>{const s=l.get(t,()=>new o);if(!s.map.has(e)){const n=new r.g(t,{name:`built-in-texture-${e}`,width:1,height:1,format:i.Lxj}),o=n.lock(),l=a[e];o.set(l),n.unlock(),s.map.set(e,n)}return s.map.get(e)}},17402:(t,e,s)=>{let i;function n(){return i}function r(t){i=t}s.d(e,{D:()=>n,V:()=>r})},18242:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n#extension GL_EXT_samplerless_texture_functions : require\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)\n#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)\n#define TEXTURE_PASS(name) name, name ## _sampler\n#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT\n#define GL2\n#define WEBGPU\n#define VERTEXSHADER\n#define gl_VertexID gl_VertexIndex\n#define gl_InstanceID gl_InstanceIndex\n"},18365:(t,e,s)=>{s.d(e,{s:()=>u,o:()=>d});var i=s(4914);function n(t,e){let s;const i=(t,e)=>{switch(e){case s.DT_INT8:return new Int8Array(t.buffer,t.byteOffset,t.byteLength);case s.DT_INT16:return new Int16Array(t.buffer,t.byteOffset,t.byteLength/2);case s.DT_INT32:return new Int32Array(t.buffer,t.byteOffset,t.byteLength/4);case s.DT_UINT8:return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);case s.DT_UINT16:return new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2);case s.DT_UINT32:return new Uint32Array(t.buffer,t.byteOffset,t.byteLength/4);case s.DT_FLOAT32:return new Float32Array(t.buffer,t.byteOffset,t.byteLength/4)}return null},n=t=>t.num_components()*(t=>{switch(t){case s.DT_INT8:return 1;case s.DT_INT16:return 2;case s.DT_INT32:return 4;case s.DT_UINT8:return 1;case s.DT_UINT16:return 2;case s.DT_UINT32:case s.DT_FLOAT32:return 4}return 1})(t.data_type()),r={0:0,1:1,5:2,2:3,7:4,8:5,4:6,3:7},a=(t,e)=>{const s=(t,e,s)=>{t[0]=e[0]-s[0],t[1]=e[1]-s[1],t[2]=e[2]-s[2]},i=(t,e,s)=>{t[0]=e[1]*s[2]-s[1]*e[2],t[1]=e[2]*s[0]-s[2]*e[0],t[2]=e[0]*s[1]-s[0]*e[1]},n=(t,e)=>{const s=t[e+0],i=t[e+1],n=t[e+2],r=1/Math.sqrt(s*s+i*i+n*n);t[e+0]*=r,t[e+1]*=r,t[e+2]*=r},r=(t,e,s)=>{for(let i=0;i<3;++i)t[i]=e[s+i]},a=e.length/3,o=t.length/3,l=new Float32Array(t.length),h=[0,0,0],c=[0,0,0],d=[0,0,0],u=[0,0,0],f=[0,0,0],p=[0,0,0];for(let m=0;m<a;++m){const a=3*e[3*m+0],o=3*e[3*m+1],_=3*e[3*m+2];r(h,t,a),r(c,t,o),r(d,t,_),s(u,c,h),s(f,d,h),i(p,u,f),n(p,0);for(let t=0;t<3;++t)l[a+t]+=p[t],l[o+t]+=p[t],l[_+t]+=p[t]}for(let m=0;m<o;++m)n(l,3*m);return new Uint8Array(l.buffer)},o=t=>{const e=(t=>{const e={},o=new s.DecoderBuffer;o.Init(t,t.length);const l=new s.Decoder;if(l.GetEncodedGeometryType(o)!==s.TRIANGULAR_MESH)return e.error="Failed to decode draco mesh: not a mesh",e;const h=new s.Mesh,c=l.DecodeBufferToMesh(o,h);if(!c||!c.ok()||0===s.getPointer(h))return e.error="Failed to decode draco asset",e;const d=3*h.num_faces(),u=h.num_points()<=65535,f=d*(u?2:4),p=s._malloc(f);u?(l.GetTrianglesUInt16Array(h,f,p),e.indices=new Uint16Array(s.HEAPU16.buffer,p,d).slice().buffer):(l.GetTrianglesUInt32Array(h,f,p),e.indices=new Uint32Array(s.HEAPU32.buffer,p,d).slice().buffer),s._free(p);const m=[];for(let s=0;s<h.num_attributes();++s)m.push(l.GetAttribute(h,s));m.sort((t,e)=>(r[t.attribute_type()]??r.length)-(r[e.attribute_type()]??r.length)),e.attributes=m.map(t=>t.unique_id());let _=0;const g=m.map(t=>{const e=_;return _+=4*Math.ceil(n(t)/4),e}),v=m.some(t=>1===t.attribute_type()),S=g[1];if(!v){for(let t=1;t<g.length;++t)g[t]+=12;_+=12}e.vertices=new ArrayBuffer(h.num_points()*_);const y=new Uint8Array(e.vertices);for(let r=0;r<h.num_attributes();++r){const t=m[r],o=n(t),c=h.num_points()*o,d=s._malloc(c);l.GetAttributeDataArrayForAllPoints(h,t,t.data_type(),c,d);const f=new Uint8Array(s.HEAPU8.buffer,d,c);for(let e=0;e<h.num_points();++e)for(let t=0;t<o;++t)y[e*_+g[r]+t]=f[e*o+t];if(!v&&0===t.attribute_type()){const s=a(i(f,t.data_type()),u?new Uint16Array(e.indices):new Uint32Array(e.indices));for(let t=0;t<h.num_points();++t)for(let e=0;e<12;++e)y[t*_+S+e]=s[12*t+e]}s._free(d)}return s.destroy(h),s.destroy(l),s.destroy(o),e})(new Uint8Array(t.buffer));self.postMessage({jobId:t.jobId,error:e.error,indices:e.indices,vertices:e.vertices,attributes:e.attributes},[e.indices,e.vertices].filter(t=>null!=t))},l=[];self.onmessage=t=>{const e=t.data;switch(e.type){case"init":self.DracoDecoderModule({instantiateWasm:(t,s)=>(WebAssembly.instantiate(e.module,t).then(t=>s(t)).catch(t=>console.error(`instantiate failed + ${t}`)),{})}).then(t=>{s=t,l.forEach(t=>o(t))});break;case"decodeMesh":s?o(e):l.push(e)}}}var r=s(14702);class a{constructor(){this.workers=[[],[],[]],this.jobId=0,this.jobQueue=[],this.jobCallbacks=new Map,this.run=(t,e)=>{t.postMessage({type:"decodeMesh",jobId:e.jobId,buffer:e.buffer},[e.buffer])}}init(t){for(t.forEach(t=>{t.addEventListener("message",e=>{const s=e.data,i=this.jobCallbacks.get(s.jobId);if(i&&i(s.error,{indices:s.indices,vertices:s.vertices,attributes:s.attributes}),this.jobCallbacks.delete(s.jobId),this.jobQueue.length>0){const e=this.jobQueue.shift();this.run(t,e)}else{const e=this.workers[2].indexOf(t);if(-1!==e)this.workers[2].splice(e,1),this.workers[1].push(t);else{const e=this.workers[1].indexOf(t);-1!==e&&(this.workers[1].splice(e,1),this.workers[0].push(t))}}})}),this.workers[0]=t;this.jobQueue.length&&(this.workers[0].length||this.workers[1].length);){const t=this.jobQueue.shift();if(this.workers[0].length>0){const e=this.workers[0].shift();this.workers[1].push(e),this.run(e,t)}else{const e=this.workers[1].shift();this.workers[2].push(e),this.run(e,t)}}}enqueueJob(t,e){const s={jobId:this.jobId++,buffer:t};if(this.jobCallbacks.set(s.jobId,e),this.workers[0].length>0){const t=this.workers[0].shift();this.workers[1].push(t),this.run(t,s)}else if(this.workers[1].length>0){const t=this.workers[1].shift();this.workers[2].push(t),this.run(t,s)}else this.jobQueue.push(s)}}const o=t=>{const e=()=>fetch(t).then(t=>t.arrayBuffer()).then(t=>WebAssembly.compile(t));return WebAssembly.compileStreaming?WebAssembly.compileStreaming(fetch(t)).catch(t=>e()):e()};let l,h;const c=t=>{if(l)return!0;if(!t)if(h)t=h;else{const e=i.F.getConfig("DracoDecoderModule");t=e?{jsUrl:e.glueUrl,wasmUrl:e.wasmUrl,numWorkers:e.numWorkers}:{jsUrl:"draco.wasm.js",wasmUrl:"draco.wasm.wasm",numWorkers:1}}return!(!t.jsUrl||!t.wasmUrl)&&(l=new a,Promise.all([(e=t.jsUrl,new Promise((t,s)=>{const i={cache:!0,responseType:"text",retry:!0,maxRetries:3};r.L.get(e,i,(e,i)=>{e?s(e):t(i)})})),o(t.wasmUrl)]).then(([e,s])=>{const i=["/* draco */",e,"/* worker */",`(\n${n.toString()}\n)()\n\n`].join("\n"),r=new Blob([i],{type:"application/javascript"}),a=URL.createObjectURL(r),o=Math.max(1,Math.min(16,t.numWorkers||1)),h=[];for(let t=0;t<o;++t){const t=new Worker(a);t.postMessage({type:"init",module:s}),h.push(t)}l.init(h)}),!0);var e},d=t=>{t?.lazyInit?h=t:c(t)},u=(t,e)=>!!c()&&(l.enqueueJob(t,e),!0)},18676:(t,e,s)=>{s.d(e,{w:()=>c});var i=s(74848),n=s(71586),r=s(96540),a=s(10977),o=s(45120),l=s(65137),h=s(53282);const c=(0,r.forwardRef)(function(t,e){const{children:s,...c}=t,u=(0,h.hE)(c,d),{name:f="Untitled",position:p=[0,0,0],scale:m=[1,1,1],rotation:_=[0,0,0],onPointerDown:g,onPointerUp:v,onPointerOver:S,onPointerOut:y,onClick:x}=u,T=(0,o.c)(),w=(0,a.n)(),b=(0,l.J)(),E=!!(g||v||S||y||x),A=(0,r.useMemo)(()=>new n.w(void 0,w),[w]);return(0,r.useImperativeHandle)(e,()=>A),(0,r.useLayoutEffect)(()=>(T.addChild(A),()=>{T.removeChild(A),A.destroy()}),[w,T,A]),(0,r.useLayoutEffect)(()=>(E&&b.add(A.getGuid()),g&&A.on("pointerdown",g),v&&A.on("pointerup",v),S&&A.on("pointerover",S),y&&A.on("pointerout",y),x&&A.on("click",x),()=>{E&&b.delete(A.getGuid()),g&&A.off("pointerdown",g),v&&A.off("pointerup",v),S&&A.off("pointerover",S),y&&A.off("pointerout",y),x&&A.off("click",x)}),[w,T,A,g,v,S,y,x]),(0,r.useLayoutEffect)(()=>{A.name=f,A.setLocalPosition(...p),A.setLocalScale(...m),A.setLocalEulerAngles(..._)},[A,f,p,m,_]),(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(o.C.Provider,{value:A,children:s||null})})}),d={name:"Entity",apiName:"Entity",schema:{name:{validate:t=>!t||"string"==typeof t,errorMsg:t=>`Invalid value for prop "name": "${t}". Expected a string or undefined.`,default:"Untitled"},position:{validate:t=>Array.isArray(t)&&3===t.length,errorMsg:t=>`Invalid value for prop "position": "${t}". Expected an array of 3 numbers.`,default:[0,0,0]},scale:{validate:t=>Array.isArray(t)&&3===t.length,errorMsg:t=>`Invalid value for prop "scale": "${t}". Expected an array of 3 numbers.`,default:[1,1,1]},rotation:{validate:t=>Array.isArray(t)&&3===t.length,errorMsg:t=>`Invalid value for prop "rotation": "${t}". Expected an array of 3 numbers.`,default:[0,0,0]},onPointerDown:{validate:t=>"function"==typeof t,errorMsg:t=>`Invalid value for prop "onPointerDown": "${t}". Expected a function.`,default:void 0},onPointerUp:{validate:t=>"function"==typeof t,errorMsg:t=>`Invalid value for prop "onPointerUp": "${t}". Expected a function.`,default:void 0},onPointerOver:{validate:t=>"function"==typeof t,errorMsg:t=>`Invalid value for prop "onPointerOver": "${t}". Expected a function.`,default:void 0},onPointerOut:{validate:t=>"function"==typeof t,errorMsg:t=>`Invalid value for prop "onPointerOut": "${t}". Expected a function.`,default:void 0},onClick:{validate:t=>"function"==typeof t,errorMsg:t=>`Invalid value for prop "onClick": "${t}". Expected a function.`,default:void 0}}}},18881:(t,e,s)=>{s.d(e,{x:()=>o});var i=s(96540),n=s(45120),r=s(10977),a=s(53282);function o(t,e,s){const o=(0,i.useRef)(null),l=(0,n.c)(),h=(0,r.n)();(0,i.useLayoutEffect)(()=>{if(t)return l&&(o.current||(o.current=l.addComponent(t))),()=>{const e=o.current;o.current=null,h&&h.root&&e&&h.systems[t]&&l.c[t]&&l.removeComponent(t)}},[h,l,t]),(0,i.useLayoutEffect)(()=>{if(!t)return;const i=o.current;if(!i)return;const n=Object.fromEntries(Object.entries(e).filter(([t])=>t in i));(0,a.FT)(i,s,n)})}},18982:(t,e,s)=>{s.d(e,{D:()=>a});var i=s(91622),n=s(51932);const r=[];r[i.GF5]=function(t,e,s){t.storageFloat32[s]=e},r[i.Qhq]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0],i[s+1]=e[1]},r[i.XAr]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0],i[s+1]=e[1],i[s+2]=e[2]},r[i.cyR]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0],i[s+1]=e[1],i[s+2]=e[2],i[s+3]=e[3]},r[i.pG9]=function(t,e,s){t.storageInt32[s]=e},r[i.dD6]=function(t,e,s){const i=t.storageInt32;i[s]=e[0],i[s+1]=e[1]},r[i.Yj5]=function(t,e,s){const i=t.storageInt32;i[s]=e[0],i[s+1]=e[1],i[s+2]=e[2]},r[i.RsJ]=function(t,e,s){const i=t.storageInt32;i[s]=e[0],i[s+1]=e[1],i[s+2]=e[2],i[s+3]=e[3]},r[i.Eb5]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0],i[s+1]=e[1],i[s+4]=e[2],i[s+5]=e[3],i[s+8]=e[4],i[s+9]=e[5]},r[i.xzR]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0],i[s+1]=e[1],i[s+2]=e[2],i[s+4]=e[3],i[s+5]=e[4],i[s+6]=e[5],i[s+8]=e[6],i[s+9]=e[7],i[s+10]=e[8]},r[i.Nv2]=function(t,e,s,i){const n=t.storageFloat32;for(let r=0;r<i;r++)n[s+4*r]=e[r]},r[i.FEO]=(t,e,s,i)=>{const n=t.storageFloat32;for(let r=0;r<i;r++)n[s+4*r]=e[2*r],n[s+4*r+1]=e[2*r+1]},r[i.iYc]=(t,e,s,i)=>{const n=t.storageFloat32;for(let r=0;r<i;r++)n[s+4*r]=e[3*r],n[s+4*r+1]=e[3*r+1],n[s+4*r+2]=e[3*r+2]},r[i.GAt]=(t,e,s,i)=>{t.storageUint32[s]=e},r[i.jk_]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0],n[s+1]=e[1]},r[i.qYl]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0],n[s+1]=e[1],n[s+2]=e[2]},r[i.jFk]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0],n[s+1]=e[1],n[s+2]=e[2],n[s+3]=e[3]},r[i.aJo]=function(t,e,s,i){const n=t.storageInt32;for(let r=0;r<i;r++)n[s+4*r]=e[r]},r[i.lGY]=r[i.aJo],r[i.lW3]=function(t,e,s,i){const n=t.storageUint32;for(let r=0;r<i;r++)n[s+4*r]=e[r]},r[i.kzn]=(t,e,s,i)=>{const n=t.storageInt32;for(let r=0;r<i;r++)n[s+4*r]=e[2*r],n[s+4*r+1]=e[2*r+1]},r[i.F1y]=r[i.kzn],r[i.CiQ]=(t,e,s,i)=>{const n=t.storageUint32;for(let r=0;r<i;r++)n[s+4*r]=e[2*r],n[s+4*r+1]=e[2*r+1]},r[i.n7d]=(t,e,s,i)=>{const n=t.storageInt32;for(let r=0;r<i;r++)n[s+4*r]=e[3*r],n[s+4*r+1]=e[3*r+1],n[s+4*r+2]=e[3*r+2]},r[i.yD7]=r[i.n7d],r[i.Jm2]=(t,e,s,i)=>{const n=t.storageUint32;for(let r=0;r<i;r++)n[s+4*r]=e[3*r],n[s+4*r+1]=e[3*r+1],n[s+4*r+2]=e[3*r+2]};class a{constructor(t,e,s=!0){if(this.renderVersionDirty=0,this.device=t,this.format=e,this.persistent=s,s){this.impl=t.createUniformBufferImpl(this);const s=new ArrayBuffer(e.byteSize);this.assignStorage(new Int32Array(s)),t._vram.ub+=this.format.byteSize}else this.allocation=new n.I}destroy(){if(this.persistent){const t=this.device;this.impl.destroy(t),t._vram.ub-=this.format.byteSize}}get offset(){return this.persistent?0:this.allocation.offset}assignStorage(t){this.storageInt32=t,this.storageUint32=new Uint32Array(t.buffer,t.byteOffset,t.byteLength/4),this.storageFloat32=new Float32Array(t.buffer,t.byteOffset,t.byteLength/4)}loseContext(){this.impl?.loseContext()}setUniform(t,e){const s=t.offset;if(null!=e){const i=r[t.updateType];i?i(this,e,s,t.count):this.storageFloat32.set(e,s)}}set(t,e){const s=this.format.map.get(t);s&&this.setUniform(s,e)}startUpdate(t){if(!this.persistent){const e=this.allocation,s=e.gpuBuffer;this.device.dynamicBuffers.alloc(e,this.format.byteSize),this.assignStorage(e.storage),t&&(t.bindGroup=e.gpuBuffer.getBindGroup(this),t.offsets[0]=e.offset),s!==e.gpuBuffer&&(this.renderVersionDirty=this.device.renderVersion)}}endUpdate(){this.persistent?this.impl.unlock(this):(this.storageFloat32=null,this.storageInt32=null)}update(t){this.startUpdate(t);const e=this.format.uniforms;for(let s=0;s<e.length;s++){const t=e[s].scopeId.value;this.setUniform(e[s],t)}this.endUpdate()}}},20758:(t,e,s)=>{s.d(e,{l:()=>De});var i=s(74848),n=s(96540),r=s(33595),a=s(91622),o=s(80823),l=s(67454),h=s(97213);function c(){return!!(document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement)}class d{constructor(t,e){this.x=0,this.y=0,this.dx=0,this.dy=0,this.button=-1,this.wheelDelta=0,this.ctrlKey=!1,this.altKey=!1,this.shiftKey=!1,this.metaKey=!1;let s={x:0,y:0};if(e){if(e instanceof d)throw Error("Expected MouseEvent");s=t._getTargetCoords(e)}else e={};if(s)this.x=s.x,this.y=s.y;else{if(!c())return;this.x=0,this.y=0}"wheel"===e.type&&(e.deltaY>0?this.wheelDelta=1:e.deltaY<0&&(this.wheelDelta=-1)),c()?(this.dx=e.movementX||e.webkitMovementX||e.mozMovementX||0,this.dy=e.movementY||e.webkitMovementY||e.mozMovementY||0):(this.dx=this.x-t._lastX,this.dy=this.y-t._lastY),"mousedown"!==e.type&&"mouseup"!==e.type||(this.button=e.button),this.buttons=t._buttons.slice(0),this.element=e.target,this.ctrlKey=e.ctrlKey??!1,this.altKey=e.altKey??!1,this.shiftKey=e.shiftKey??!1,this.metaKey=e.metaKey??!1,this.event=e}}class u extends h.J{static{this.EVENT_MOUSEMOVE="mousemove"}static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEWHEEL="mousewheel"}constructor(t){super(),this._lastX=0,this._lastY=0,this._buttons=[!1,!1,!1],this._lastbuttons=[!1,!1,!1],this._target=null,this._attached=!1,this._upHandler=this._handleUp.bind(this),this._downHandler=this._handleDown.bind(this),this._moveHandler=this._handleMove.bind(this),this._wheelHandler=this._handleWheel.bind(this),this._contextMenuHandler=t=>{t.preventDefault()},this.attach(t)}static isPointerLocked(){return c()}attach(t){if(this._target=t,this._attached)return;this._attached=!0;const e=!!l.i.passiveEvents&&{passive:!1};window.addEventListener("mouseup",this._upHandler,e),window.addEventListener("mousedown",this._downHandler,e),window.addEventListener("mousemove",this._moveHandler,e),window.addEventListener("wheel",this._wheelHandler,e)}detach(){if(!this._attached)return;this._attached=!1,this._target=null;const t=!!l.i.passiveEvents&&{passive:!1};window.removeEventListener("mouseup",this._upHandler,t),window.removeEventListener("mousedown",this._downHandler,t),window.removeEventListener("mousemove",this._moveHandler,t),window.removeEventListener("wheel",this._wheelHandler,t)}disableContextMenu(){this._target&&this._target.addEventListener("contextmenu",this._contextMenuHandler)}enableContextMenu(){this._target&&this._target.removeEventListener("contextmenu",this._contextMenuHandler)}enablePointerLock(t,e){if(!document.body.requestPointerLock)return void(e&&e());const s=()=>{t(),document.removeEventListener("pointerlockchange",s)},i=()=>{e(),document.removeEventListener("pointerlockerror",i)};t&&document.addEventListener("pointerlockchange",s,!1),e&&document.addEventListener("pointerlockerror",i,!1),document.body.requestPointerLock()}disablePointerLock(t){if(!document.exitPointerLock)return;const e=()=>{t(),document.removeEventListener("pointerlockchange",e)};t&&document.addEventListener("pointerlockchange",e,!1),document.exitPointerLock()}update(){this._lastbuttons[0]=this._buttons[0],this._lastbuttons[1]=this._buttons[1],this._lastbuttons[2]=this._buttons[2]}isPressed(t){return this._buttons[t]}wasPressed(t){return this._buttons[t]&&!this._lastbuttons[t]}wasReleased(t){return!this._buttons[t]&&this._lastbuttons[t]}_handleUp(t){this._buttons[t.button]=!1;const e=new d(this,t);e.event&&this.fire("mouseup",e)}_handleDown(t){this._buttons[t.button]=!0;const e=new d(this,t);e.event&&this.fire("mousedown",e)}_handleMove(t){const e=new d(this,t);e.event&&(this.fire("mousemove",e),this._lastX=e.x,this._lastY=e.y)}_handleWheel(t){const e=new d(this,t);e.event&&this.fire("mousewheel",e)}_getTargetCoords(t){const e=this._target.getBoundingClientRect(),s=Math.floor(e.left),i=Math.floor(e.top);return t.clientX<s||t.clientX>=s+this._target.clientWidth||t.clientY<i||t.clientY>=i+this._target.clientHeight?null:{x:t.clientX-s,y:t.clientY-i}}}class f{constructor(t){const e=function(t){let e=0,s=0,i=t.target;for(;!(i instanceof HTMLElement)&&i;)i=i.parentNode;for(;i;)e+=i.offsetLeft-i.scrollLeft,s+=i.offsetTop-i.scrollTop,i=i.offsetParent;return{x:t.pageX-e,y:t.pageY-s}}(t);this.id=t.identifier,this.x=e.x,this.y=e.y,this.target=t.target,this.touch=t}}class p{constructor(t,e){this.touches=[],this.changedTouches=[],this.element=e.target,this.event=e,this.touches=Array.from(e.touches).map(t=>new f(t)),this.changedTouches=Array.from(e.changedTouches).map(t=>new f(t))}getTouchById(t,e){return e.find(e=>e.id===t)||null}}class m extends h.J{static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHMOVE="touchmove"}static{this.EVENT_TOUCHCANCEL="touchcancel"}constructor(t){super(),this._element=null,this._startHandler=this._handleTouchStart.bind(this),this._endHandler=this._handleTouchEnd.bind(this),this._moveHandler=this._handleTouchMove.bind(this),this._cancelHandler=this._handleTouchCancel.bind(this),this.attach(t)}attach(t){this._element&&this.detach(),this._element=t,this._element.addEventListener("touchstart",this._startHandler,!1),this._element.addEventListener("touchend",this._endHandler,!1),this._element.addEventListener("touchmove",this._moveHandler,!1),this._element.addEventListener("touchcancel",this._cancelHandler,!1)}detach(){this._element&&(this._element.removeEventListener("touchstart",this._startHandler,!1),this._element.removeEventListener("touchend",this._endHandler,!1),this._element.removeEventListener("touchmove",this._moveHandler,!1),this._element.removeEventListener("touchcancel",this._cancelHandler,!1)),this._element=null}_handleTouchStart(t){this.fire("touchstart",new p(this,t))}_handleTouchEnd(t){this.fire("touchend",new p(this,t))}_handleTouchMove(t){t.preventDefault(),this.fire("touchmove",new p(this,t))}_handleTouchCancel(t){this.fire("touchcancel",new p(this,t))}}var _=s(10977),g=s(45120),v=s(65137),S=s(48355),y=s(58333),x=s(67248),T=s(98647),w=s(84140),b=s(55485),E=s(27351);const A=[],C=[[],[],[]];class P extends b.A{constructor(t,e){super(t),this.viewBindGroups=[],this.renderer=e}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}update(t,e,s,i){this.camera=t,this.scene=e,this.layers=s,this.mapping=i,e.clusteredLightingEnabled&&(this.emptyWorldClusters=this.renderer.worldClustersAllocator.empty)}execute(){const t=this.device,{renderer:e,camera:s,scene:i,layers:n,mapping:r,renderTarget:a}=this,o=i.layers.layerList,l=i.layers.subLayerEnabled,h=i.layers.subLayerList;for(let c=0;c<o.length;c++){const d=o[c];if(!(n&&n.indexOf(d)<0)&&(d.enabled&&l[c]&&d.camerasSet.has(s.camera))){const n=h[c];d._clearDepthBuffer&&e.clear(s.camera,!1,!0,!1);const o=d.meshInstances;for(let t=0;t<o.length;t++){const e=o[t];e.pick&&e.transparent===n&&(A.push(e),r.set(e.id,e))}if(A.length>0){if(i.clusteredLightingEnabled){this.emptyWorldClusters.activate()}e.setCameraUniforms(s.camera,a),t.supportsUniformBuffers&&e.setupViewUniformBuffers(this.viewBindGroups,e.viewUniformFormat,e.viewBindGroupFormat,null),e.renderForward(s.camera,a,A,C,E.czD,e=>{t.setBlendState(w.t.NOBLEND)}),A.length=0}}}}}var D=s(59752),L=s(38964);const M=new Set,I=new L.Z;class R{constructor(t,e,s){this.renderTarget=null,this.mapping=new Map,this.deviceValid=!0,this.renderer=t.renderer,this.device=t.graphicsDevice,this.renderPass=new P(this.device,t.renderer),this.width=0,this.height=0,this.resize(e,s),this.device.on("destroy",()=>{this.deviceValid=!1})}getSelection(t,e,s=1,i=1){const n=this.device;if(n.isWebGPU)return[];e=this.renderTarget.height-(e+i);const r=this.sanitizeRect(t,e,s,i);n.setRenderTarget(this.renderTarget),n.updateBegin();const a=new Uint8Array(4*r.z*r.w);return n.readPixels(r.x,r.y,r.z,r.w,a),n.updateEnd(),this.decodePixels(a,this.mapping)}getSelectionAsync(t,e,s=1,i=1){this.device?.isWebGL2&&(e=this.renderTarget.height-(e+i));const n=this.sanitizeRect(t,e,s,i);return this.renderTarget.colorBuffer.read(n.x,n.y,n.z,n.w,{renderTarget:this.renderTarget,immediate:!0}).then(t=>this.decodePixels(t,this.mapping))}sanitizeRect(t,e,s,i){const n=this.renderTarget.width,r=this.renderTarget.height;return t=D.D.clamp(Math.floor(t),0,n-1),e=D.D.clamp(Math.floor(e),0,r-1),s=Math.floor(Math.max(s,1)),s=Math.min(s,n-t),i=Math.floor(Math.max(i,1)),i=Math.min(i,r-e),I.set(t,e,s,i)}decodePixels(t,e){const s=[];if(this.deviceValid){const i=t.length;for(let s=0;s<i;s+=4){const i=t[s+0],n=t[s+1],r=t[s+2],a=(t[s+3]<<24|i<<16|n<<8|r)>>>0;4294967295!==a&&M.add(e.get(a))}M.forEach(t=>{t&&s.push(t)}),M.clear()}return s}allocateRenderTarget(){const t=new x.g(this.device,{format:a.Lxj,width:this.width,height:this.height,mipmaps:!1,minFilter:a.uhC,magFilter:a.uhC,addressU:a.vq6,addressV:a.vq6,name:"pick"});this.renderTarget=new y.O({colorBuffer:t,depth:!0})}releaseRenderTarget(){this.renderTarget&&(this.renderTarget.destroyTextureBuffers(),this.renderTarget.destroy(),this.renderTarget=null)}prepare(t,e,s){s instanceof T.W&&(s=[s]),this.renderTarget&&this.width===this.renderTarget.width&&this.height===this.renderTarget.height||(this.releaseRenderTarget(),this.allocateRenderTarget()),this.mapping.clear();const i=this.renderPass;i.init(this.renderTarget),i.colorOps.clearValue=S.Q.WHITE,i.colorOps.clear=!0,i.depthStencilOps.clearDepth=!0,i.update(t,e,s,this.mapping),i.render()}resize(t,e){this.width=Math.floor(t),this.height=Math.floor(e)}}class F{nativeEvent;hasStoppedPropagation=!1;type;constructor(t){this.nativeEvent=t,this.type=t.type,Object.assign(this,t)}stopPropagation(){this.hasStoppedPropagation=!0,this.nativeEvent.stopPropagation()}stopImmediatePropagation(){this.hasStoppedPropagation=!0,this.nativeEvent.stopImmediatePropagation()}}class O{nativeEvent;hasStoppedPropagation=!1;type;constructor(t){this.nativeEvent=t,this.type=t.type,Object.assign(this,t)}stopPropagation(){this.hasStoppedPropagation=!0,this.nativeEvent.stopPropagation()}stopImmediatePropagation(){this.hasStoppedPropagation=!0,this.nativeEvent.stopImmediatePropagation()}}const N=(t,e,s=null)=>{for(;t;){if(t===s)return!1;if(t.fire(e.type,e),e.hasStoppedPropagation)return!0;t=t.parent}return!1},k=async(t,e,s,i)=>{const[n]=t.root.findComponents("camera").filter(t=>!t.renderTarget).sort((t,e)=>t.priority-e.priority);if(!n)return null;const r=t.graphicsDevice.canvas;if(!r||0===r.width||0===r.height)return null;const a=i.clientX-s.left,o=i.clientY-s.top;if(a<0||o<0||a>s.width||o>s.height)return null;const l=r.width/(s.width*t.graphicsDevice.maxPixelRatio),h=r.height/(s.height*t.graphicsDevice.maxPixelRatio);try{e.prepare(n,t.scene);const[s]=await e.getSelectionAsync(a*l,o*h);return s?s?.node:null}catch{return null}},B=(t,e,s)=>{const i=(0,n.useRef)(null),r=(0,n.useRef)(null),a=(0,n.useRef)(t?t.graphicsDevice.canvas.getBoundingClientRect():null),o=(0,n.useMemo)(()=>t&&t.graphicsDevice?new R(t,t.graphicsDevice.width,t.graphicsDevice.height):null,[t]);(0,n.useEffect)(()=>{const e=new ResizeObserver(()=>{a.current=t?t.graphicsDevice.canvas.getBoundingClientRect():null,a.current&&o?.resize(a.current.width,a.current.height)});return t?.graphicsDevice?.canvas&&e.observe(t.graphicsDevice.canvas),()=>e.disconnect()},[t]);const l=(0,n.useCallback)(t=>{r.current=t},[o]),h=(0,n.useCallback)(async()=>{if(0===s.size)return void(i.current=null);const e=r.current;if(!o||!t||!e)return null;if(!a.current)return null;const n=await k(t,o,a.current,e),l=i.current,h=((t,e)=>{const s=new Set;let i=t;for(;i;)s.add(i),i=i.parent;for(i=e;i;){if(s.has(i))return i;i=i.parent}return null})(l,n);if(l&&l!==n){const t=new F(e);t.type="pointerout",N(l,t,h)}if(n&&n!==l){const t=new F(e);t.type="pointerover",N(n,t,h)}return i.current=n,null},[o,s]),c=(0,n.useCallback)(async e=>{if(!o||!t||!a.current||0===s.size)return;const i=await k(t,o,a.current,e);if(!i)return;const n=e instanceof PointerEvent?new F(e):new O(e);N(i,n)},[o,s]);(0,n.useLayoutEffect)(()=>{if(o&&e&&t)return e.addEventListener("pointerup",c),e.addEventListener("pointerdown",c),e.addEventListener("mouseup",c),e.addEventListener("click",c),e.addEventListener("pointermove",l),t.on("update",h),()=>{e.removeEventListener("pointerup",c),e.removeEventListener("pointerdown",c),e.removeEventListener("click",c),e.removeEventListener("pointermove",l),t.off("update",h)}},[t,e,c,l,h])},U=(0,n.createContext)({isPhysicsEnabled:!1,isPhysicsLoaded:!1,physicsError:null});let z=0;const V=({children:t,enabled:e,app:s})=>{const[r,a]=(0,n.useState)(!1),[o,l]=(0,n.useState)(null);return(0,n.useEffect)(()=>{if(!e)return a(!1),void l(null);return(async()=>{try{if(!globalThis.Ammo){const t=await Promise.resolve().then(function(){var t=new Error("Cannot find module 'sync-ammo'");throw t.code="MODULE_NOT_FOUND",t});globalThis.Ammo=t.default}s.systems.rigidbody?.dispatcher||s.systems.rigidbody?.onLibraryLoaded(),a(!0),l(null),z++}catch(t){const e=t instanceof Error?t:new Error("Failed to load physics library");l(e),a(!1)}})(),()=>{e&&(z--,0===z&&globalThis.Ammo&&delete globalThis.Ammo)}},[e,s]),(0,i.jsx)(U.Provider,{value:{isPhysicsEnabled:e,isPhysicsLoaded:r,physicsError:o},children:t})};var G=s(53282);const H={alpha:!0,depth:!0,stencil:!0,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,powerPreference:"default",failIfMajorPerformanceCaveat:!1,desynchronized:!1,xrCompatible:!1};var W=s(74644),X=s(58666),$=s(15979),q=s(53480);class j{update(t){this.destroy();const e=t.device,s=this.createDescriptor(e,t);this.bindGroup=e.wgpu.createBindGroup(s)}destroy(){this.bindGroup=null}createDescriptor(t,e){const s=[],i=e.format,n=e.format.uniformBufferFormats;e.uniformBuffers.forEach((t,e)=>{const i=n[e].slot,r=t.persistent?t.impl.buffer:t.allocation.gpuBuffer.buffer;s.push({binding:i,resource:{buffer:r,offset:0,size:t.format.byteSize}})});const r=e.format.textureFormats;e.textures.forEach((e,n)=>{const a=e.impl,o=i.textureFormats[n],l=r[n].slot,h=a.getView(t);if(s.push({binding:l,resource:h}),o.hasSampler){const e=a.getSampler(t,o.sampleType);s.push({binding:l+1,resource:e})}});const a=e.format.storageTextureFormats;e.storageTextures.forEach((e,i)=>{const n=e.impl,r=a[i].slot,o=n.getView(t);s.push({binding:r,resource:o})});const o=e.format.storageBufferFormats;e.storageBuffers.forEach((t,e)=>{const i=t.impl.buffer,n=o[e].slot;s.push({binding:n,resource:{buffer:i}})});return{layout:e.format.impl.bindGroupLayout,entries:s}}}var Y=s(50247);class K{static shaderStage(t){let e=0;return t&a.rXb&&(e|=GPUShaderStage.VERTEX),t&a.Jnj&&(e|=GPUShaderStage.FRAGMENT),t&a.ULN&&(e|=GPUShaderStage.COMPUTE),e}}const Z=[];Z[a.SWx]="",Z[a.RSt]="",Z[a._3]="",Z[a.FfR]="r8unorm",Z[a.MqB]="rg8unorm",Z[a.kqw]="",Z[a.zIz]="",Z[a.LDn]="",Z[a.akF]="rgba8unorm",Z[a.Lxj]="rgba8unorm",Z[a.S$n]="bc1-rgba-unorm",Z[a.EPU]="bc2-rgba-unorm",Z[a.E_6]="bc3-rgba-unorm",Z[a.Nnq]="",Z[a.WBN]="rgba16float",Z[a.qGG]="r16float",Z[a.RUv]="rg16float",Z[a.FQW]="",Z[a.s7h]="rgba32float",Z[a.IQA]="r32float",Z[a.Wbd]="depth32float",Z[a.F0N]="depth16unorm",Z[a.Mg$]="depth24plus-stencil8",Z[a.s_z]="rg11b10ufloat",Z[a.FTO]="",Z[a.Mb4]="rgba8unorm-srgb",Z[a.G24]="",Z[a.ZyS]="etc2-rgb8unorm",Z[a.ArW]="etc2-rgba8unorm",Z[a.TyC]="",Z[a.apD]="",Z[a.xyx]="",Z[a.Ijy]="",Z[a.jYy]="astc-4x4-unorm",Z[a.x8T]="",Z[a.qEN]="",Z[a.$$M]="bgra8unorm",Z[a.wzA]="bgra8unorm-srgb",Z[a.OTs]="r8sint",Z[a.QyC]="r8uint",Z[a.XjN]="r16sint",Z[a.XpR]="r16uint",Z[a.Ndk]="r32sint",Z[a.zc3]="r32uint",Z[a.HZv]="rg8sint",Z[a.HfE]="rg8uint",Z[a.Ybx]="rg16sint",Z[a.YtF]="rg16uint",Z[a.S$i]="rg32sint",Z[a.EYT]="rg32uint",Z[a.Cyu]="rgba8sint",Z[a.Qj]="rgba8uint",Z[a.PQv]="rgba16sint",Z[a.bSO]="rgba16uint",Z[a.zVD]="rgba32sint",Z[a.zbM]="rgba32uint",Z[a.Amt]="bc6h-rgb-float",Z[a.ZFf]="bc6h-rgb-ufloat",Z[a.T00]="bc7-rgba-unorm",Z[a.LCL]="bc1-rgba-unorm-srgb",Z[a.I1V]="bc2-rgba-unorm-srgb",Z[a.ImV]="bc3-rgba-unorm-srgb",Z[a.cme]="etc2-rgb8unorm-srgb",Z[a.bjN]="etc2-rgba8unorm-srgb",Z[a.vI2]="bc7-rgba-unorm-srgb",Z[a.UpR]="astc-4x4-unorm-srgb";const Q=[];Q[a.CZm]="filtering",Q[a.cRA]="non-filtering",Q[a.pqC]="comparison",Q[a.jVv]="comparison",Q[a.Gie]="comparison";const J=[];J[a.CZm]="float",J[a.cRA]="unfilterable-float",J[a.pqC]="depth",J[a.jVv]="sint",J[a.Gie]="uint";const tt=new Y.w;class et{constructor(t){const e=t.device,{key:s,desc:i}=this.createDescriptor(t);this.key=tt.get(s),this.bindGroupLayout=e.wgpu.createBindGroupLayout(i)}destroy(){this.bindGroupLayout=null}loseContext(){}createDescriptor(t){const e=[];let s="";t.uniformBufferFormats.forEach(t=>{const i=K.shaderStage(t.visibility);s+=`#${t.slot}U:${i}`,e.push({binding:t.slot,visibility:i,buffer:{type:"uniform",hasDynamicOffset:!0}})}),t.textureFormats.forEach(t=>{const i=K.shaderStage(t.visibility),n=t.sampleType,r=t.textureDimension,a=!1,o=J[n];if(s+=`#${t.slot}T:${i}-${o}-${r}-false`,e.push({binding:t.slot,visibility:i,texture:{sampleType:o,viewDimension:r,multisampled:a}}),t.hasSampler){const r=Q[n];s+=`#${t.slot+1}S:${i}-${r}`,e.push({binding:t.slot+1,visibility:i,sampler:{type:r}})}}),t.storageTextureFormats.forEach(t=>{const{format:i,textureDimension:n}=t,{read:r,write:a}=t;s+=`#${t.slot}ST:${i}-${n}-${r?"r1":"r0"}-${a?"w1":"w0"}`,e.push({binding:t.slot,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:r?a?"read-write":"read-only":"write-only",format:Z[i],viewDimension:n}})}),t.storageBufferFormats.forEach(t=>{const i=t.readOnly,n=K.shaderStage(t.visibility);s+=`#${t.slot}SB:${n}-${i?"ro":"rw"}`,e.push({binding:t.slot,visibility:n,buffer:{type:i?"read-only-storage":"storage"}})});return{key:s,desc:{entries:e}}}}class st{constructor(t=0){this.buffer=null,this.usageFlags=0,this.usageFlags=t}destroy(t){this.buffer&&(this.buffer.destroy(),this.buffer=null)}get initialized(){return!!this.buffer}loseContext(){}allocate(t,e){this.buffer=t.wgpu.createBuffer({size:e,usage:this.usageFlags})}unlock(t,e){const s=t.wgpu;if(!this.buffer){const s=e.byteLength+3&-4;this.usageFlags|=GPUBufferUsage.COPY_DST,this.allocate(t,s)}const i=e.byteOffset??0,n=new Uint8Array(e.buffer??e,i,e.byteLength),r=new Uint8Array(this.buffer.size);r.set(n),s.queue.writeBuffer(this.buffer,0,r,0,r.length)}read(t,e,s,i,n){return t.readStorageBuffer(this,e,s,i,n)}write(t,e,s,i,n){t.writeStorageBuffer(this,e,s,i,n)}clear(t,e,s){t.clearStorageBuffer(this,e,s)}}class it extends st{constructor(t,e){super(a.ZsA|(e?.storage?a.uCe:0)),this.format=null,this.format=t.format===a.c02?"uint16":"uint32"}unlock(t){const e=t.device;super.unlock(e,t.storage)}}var nt=s(88525);const rt={equals(t,e){if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}},at=[];at[a.VSW]="sint8",at[a.EUX]="uint8",at[a.kF]="sint16",at[a.rvO]="uint16",at[a.uVx]="sint32",at[a.Bz3]="uint32",at[a.n$B]="float32",at[a.V$W]="float16";const ot=[];ot[a.VSW]="snorm8",ot[a.EUX]="unorm8",ot[a.kF]="snorm16",ot[a.rvO]="unorm16",ot[a.uVx]="sint32",ot[a.Bz3]="uint32",ot[a.n$B]="float32",ot[a.V$W]="float16";class lt{get(t,e=null){const s=this.getKey(t,e);let i=this.cache.get(s);return i||(i=this.create(t,e),this.cache.set(s,i)),i}getKey(t,e=null){return`${t?.renderingHashString}-${e?.renderingHashString}`}create(t,e){const s=[],i=t=>{const e=t.interleaved,i=t.instancing?"instance":"vertex";let n=[];const r=t.elements.length;for(let o=0;o<r;o++){const l=t.elements[o],h=a.tJj[l.name],c=l.normalize?ot:at;n.push({shaderLocation:h,offset:e?l.offset:0,format:`${c[l.dataType]}${l.numComponents>1?`x${l.numComponents}`:""}`}),e&&o!==r-1||(s.push({attributes:n,arrayStride:l.stride,stepMode:i}),n=[])}};return t&&i(t),e&&i(e),s}constructor(){this.cache=new Map}}class ht{constructor(t){this.device=t}getPipelineLayout(t){const e=[];t.forEach(t=>{e.push(t.bindGroupLayout)});const s={bindGroupLayouts:e};return this.device.wgpu.createPipelineLayout(s)}}const ct=["point-list","line-list",void 0,"line-strip","triangle-list","triangle-strip",void 0],dt=["add","subtract","reverse-subtract","min","max"],ut=["zero","one","src","one-minus-src","dst","one-minus-dst","src-alpha","src-alpha-saturated","one-minus-src-alpha","dst-alpha","one-minus-dst-alpha","constant","one-minus-constant"],ft=["never","less","equal","less-equal","greater","not-equal","greater-equal","always"],pt=["none","back","front"],mt=["keep","zero","replace","increment-clamp","increment-wrap","decrement-clamp","decrement-wrap","invert"],_t=["","uint16","uint32"];class gt{}class vt extends ht{constructor(t){super(t),this.lookupHashes=new Uint32Array(14),this.vertexBufferLayout=new lt,this.cache=new Map}get(t,e,s,i,n,r,o,l,h,c,d,u,f){const p=t.type;i&&p!==a.PTM&&p!==a.SF$&&(i=void 0);const m=this.lookupHashes;m[0]=p,m[1]=n.id,m[2]=c,m[3]=h.key,m[4]=l.key,m[5]=e?.renderingHash??0,m[6]=s?.renderingHash??0,m[7]=r.impl.key,m[8]=o[0]?.key??0,m[9]=o[1]?.key??0,m[10]=o[2]?.key??0,m[11]=d?u.key:0,m[12]=d?f.key:0,m[13]=i??0;const _=(0,nt.m)(m);let g=this.cache.get(_);if(g)for(let a=0;a<g.length;a++){const t=g[a];if(rt.equals(t.hashes,m))return t.pipeline}const v=ct[p],S=this.getPipelineLayout(o),y=this.vertexBufferLayout.get(e,s),x=new gt;return x.hashes=new Uint32Array(m),x.pipeline=this.create(v,i,n,r,S,l,h,y,c,d,u,f),g?g.push(x):g=[x],this.cache.set(_,g),x.pipeline}getBlend(t){let e;return t.blend&&(e={color:{operation:dt[t.colorOp],srcFactor:ut[t.colorSrcFactor],dstFactor:ut[t.colorDstFactor]},alpha:{operation:dt[t.alphaOp],srcFactor:ut[t.alphaSrcFactor],dstFactor:ut[t.alphaDstFactor]}}),e}getDepthStencil(t,e,s,i,n,r){let a;const{depth:o,stencil:l}=e;if(o||l){if(a={format:e.impl.depthAttachment.format},o){a.depthWriteEnabled=t.write,a.depthCompare=ft[t.func];const e="triangle-list"===r||"triangle-strip"===r;a.depthBias=e?t.depthBias:0,a.depthBiasSlopeScale=e?t.depthBiasSlope:0}else a.depthWriteEnabled=!1,a.depthCompare="always";l&&s&&(a.stencilReadMas=i.readMask,a.stencilWriteMask=i.writeMask,a.stencilFront={compare:ft[i.func],failOp:mt[i.fail],passOp:mt[i.zpass],depthFailOp:mt[i.zfail]},a.stencilBack={compare:ft[n.func],failOp:mt[n.fail],passOp:mt[n.zpass],depthFailOp:mt[n.zfail]})}return a}create(t,e,s,i,n,r,a,o,l,h,c,d){const u=this.device.wgpu,f=s.impl,p={vertex:{module:f.getVertexShaderModule(),entryPoint:f.vertexEntryPoint,buffers:o},primitive:{topology:t,frontFace:"ccw",cullMode:pt[l]},depthStencil:this.getDepthStencil(a,i,h,c,d,t),multisample:{count:i.samples},layout:n};e&&(p.primitive.stripIndexFormat=_t[e]),p.fragment={module:f.getFragmentShaderModule(),entryPoint:f.fragmentEntryPoint,targets:[]};const m=i.impl.colorAttachments;if(m.length>0){let t=0;r.redWrite&&(t|=GPUColorWrite.RED),r.greenWrite&&(t|=GPUColorWrite.GREEN),r.blueWrite&&(t|=GPUColorWrite.BLUE),r.alphaWrite&&(t|=GPUColorWrite.ALPHA);const e=this.getBlend(r);m.forEach(s=>{p.fragment.targets.push({format:s.format,writeMask:t,blend:e})})}return u.createRenderPipeline(p)}}class St extends ht{get(t,e){const s=this.getPipelineLayout([e.impl]);return this.create(t,s)}create(t,e){const s=this.device.wgpu,i=t.impl,n={compute:{module:i.getComputeShaderModule(),entryPoint:i.computeEntryPoint},layout:e};return s.createComputePipeline(n)}}var yt=s(52874);const xt=new Y.w;class Tt{destroy(){this.multisampledBuffer?.destroy(),this.multisampledBuffer=null}}class wt{constructor(t){this.depthTexture=null,this.depthTextureInternal=!1,this.multisampledDepthBuffer=null,this.format=t,this.hasStencil="depth24plus-stencil8"===t}destroy(t){this.depthTextureInternal&&(this.depthTexture?.destroy(),this.depthTexture=null),this.multisampledDepthBuffer&&(this.multisampledDepthBuffer=null,(0,yt.D)(t).release(this.multisampledDepthBufferKey))}}class bt{constructor(t){this.initialized=!1,this.colorAttachments=[],this.depthAttachment=null,this.assignedColorTexture=null,this.renderPassDescriptor={},this.isBackbuffer=!1,this.renderTarget=t}destroy(t){this.initialized=!1,this.assignedColorTexture=null,this.colorAttachments.forEach(t=>{t.destroy()}),this.colorAttachments.length=0,this.depthAttachment?.destroy(t),this.depthAttachment=null}updateKey(){let t=`${this.renderTarget.samples}:${this.depthAttachment?this.depthAttachment.format:"nodepth"}`;this.colorAttachments.forEach(e=>{t+=`:${e.format}`}),this.key=xt.get(t)}assignColorTexture(t,e){this.assignedColorTexture=e;const s=e.createView({format:t.backBufferViewFormat}),i=this.renderPassDescriptor.colorAttachments[0];this.renderTarget.samples>1?i.resolveTarget=s:i.view=s,this.setColorAttachment(0,void 0,t.backBufferViewFormat),this.updateKey()}setColorAttachment(t,e,s){this.colorAttachments[t]||(this.colorAttachments[t]=new Tt),e&&(this.colorAttachments[t].multisampledBuffer=e),s&&(this.colorAttachments[t].format=s)}init(t,e){const s=t.wgpu;this.initDepthStencil(t,s,e),e._colorBuffers&&e._colorBuffers.forEach((t,e)=>{this.setColorAttachment(e,void 0,t.impl.format)}),this.renderPassDescriptor.colorAttachments=[];const i=this.isBackbuffer?1:e._colorBuffers?.length??0;for(let n=0;n<i;++n){const i=this.initColor(t,s,e,n),r=0===n&&this.colorAttachments[0]?.format;(i.view||r)&&this.renderPassDescriptor.colorAttachments.push(i)}this.updateKey(),this.initialized=!0}initDepthStencil(t,e,s){const{samples:i,width:n,height:r,depth:a,depthBuffer:o}=s;if(a||o){let s;if(o)if(this.depthAttachment=new wt(o.impl.format),i>1){const a="depth24plus-stencil8";this.depthAttachment.format=a,this.depthAttachment.hasStencil="depth24plus-stencil8"===a;const l=`${o.id}:${n}:${r}:${i}:${a}`,h=(0,yt.D)(t);let c=h.get(l);if(!c){const t={size:[n,r,1],dimension:"2d",sampleCount:i,format:a,usage:GPUTextureUsage.RENDER_ATTACHMENT|(a!==o.impl.format?GPUTextureUsage.TEXTURE_BINDING:0)};c=e.createTexture(t),h.set(l,c)}this.depthAttachment.multisampledDepthBuffer=c,this.depthAttachment.multisampledDepthBufferKey=l,s=c.createView()}else{const t=o.impl.gpuTexture;this.depthAttachment.depthTexture=t,s=t.createView()}else{this.depthAttachment=new wt("depth24plus-stencil8");const t={size:[n,r,1],dimension:"2d",sampleCount:i,format:this.depthAttachment.format,usage:GPUTextureUsage.RENDER_ATTACHMENT};t.usage|=i>1?GPUTextureUsage.TEXTURE_BINDING:GPUTextureUsage.COPY_SRC;const a=e.createTexture(t);this.depthAttachment.depthTexture=a,this.depthAttachment.depthTextureInternal=!0,s=a.createView()}this.renderPassDescriptor.depthStencilAttachment={view:s}}}initColor(t,e,s,i){const n={},{samples:r,width:a,height:o,mipLevel:l}=s,h=s.getColorBuffer(i);let c=null;if(h){const t=1;c=h.cubemap?h.impl.createView({dimension:"2d",baseArrayLayer:s.face,arrayLayerCount:1,mipLevelCount:t,baseMipLevel:l}):h.impl.createView({mipLevelCount:t,baseMipLevel:l})}if(r>1){const s={size:[a,o,1],dimension:"2d",sampleCount:r,format:this.isBackbuffer?t.backBufferViewFormat:h.impl.format,usage:GPUTextureUsage.RENDER_ATTACHMENT},l=e.createTexture(s);this.setColorAttachment(i,l,s.format),n.view=l.createView(),n.resolveTarget=c}else n.view=c;return n}setupForRenderPass(t,e){const s=this.renderPassDescriptor.colorAttachments?.length??0;for(let n=0;n<s;++n){const s=this.renderPassDescriptor.colorAttachments[n],i=t.colorArrayOps[n],r=e.isColorBufferSrgb(n);s.clearValue=r?i.clearValueLinear:i.clearValue,s.loadOp=i.clear?"clear":"load",s.storeOp=i.store?"store":"discard"}const i=this.renderPassDescriptor.depthStencilAttachment;i&&(i.depthClearValue=t.depthStencilOps.clearDepthValue,i.depthLoadOp=t.depthStencilOps.clearDepth?"clear":"load",i.depthStoreOp=t.depthStencilOps.storeDepth?"store":"discard",i.depthReadOnly=!1,this.depthAttachment.hasStencil&&(i.stencilClearValue=t.depthStencilOps.clearStencilValue,i.stencilLoadOp=t.depthStencilOps.clearStencil?"clear":"load",i.stencilStoreOp=t.depthStencilOps.storeStencil?"store":"discard",i.stencilReadOnly=!1))}loseContext(){this.initialized=!1}resolve(t,e,s,i){}}var Et=s(43232);const At=/[ \t]*(\battribute\b|\bvarying\b|\buniform\b)/g,Ct=/(\battribute\b|\bvarying\b|\bout\b|\buniform\b)[ \t]*([^;]+)(;+)/g,Pt="@@@",Dt=/([\w-]+)\[(.*?)\]/,Lt=new Set(["highp","mediump","lowp"]),Mt=new Set(["sampler2DShadow","samplerCubeShadow","sampler2DArrayShadow"]),It={sampler2D:a.HeG,sampler3D:a.EuA,samplerCube:a.GGM,samplerCubeShadow:a.GGM,sampler2DShadow:a.HeG,sampler2DArray:a.hwK,sampler2DArrayShadow:a.hwK,isampler2D:a.HeG,usampler2D:a.HeG,isampler3D:a.EuA,usampler3D:a.EuA,isamplerCube:a.GGM,usamplerCube:a.GGM,isampler2DArray:a.hwK,usampler2DArray:a.hwK},Rt={[a.HeG]:"texture2D",[a.GGM]:"textureCube",[a.EuA]:"texture3D",[a.hwK]:"texture2DArray"};class Ft{constructor(t,e){this.line=t;const s=t.trim().split(/\s+/);if(Lt.has(s[0])&&(this.precision=s.shift()),this.type=s.shift(),t.includes(","),t.includes("[")){const t=s.join(" "),i=Dt.exec(t);this.name=i[1],this.arraySize=Number(i[2]),isNaN(this.arraySize)&&(e.failed=!0)}else this.name=s.shift(),this.arraySize=0;this.isSampler=-1!==this.type.indexOf("sampler"),this.isSignedInt=-1!==this.type.indexOf("isampler"),this.isUnsignedInt=-1!==this.type.indexOf("usampler")}}class Ot{static run(t,e,s){const i=new Map,n=Ot.extract(e.vshader),r=Ot.extract(e.fshader),a=new Map,o=Ot.processAttributes(n.attributes,e.attributes,a,e.processingOptions),l=Ot.processVaryings(n.varyings,i,!0),h=Ot.processVaryings(r.varyings,i,!1),c=Ot.processOuts(r.outs),d=n.uniforms.concat(r.uniforms),u=Array.from(new Set(d)).map(t=>new Ft(t,s)),f=Ot.processUniforms(t,u,e.processingOptions,s),p=`${o}\n${l}\n${f.code}`,m=n.src.replace(Pt,p),_=`${h}\n${c}\n${f.code}`;return{vshader:m,fshader:r.src.replace(Pt,_),attributes:a,meshUniformBufferFormat:f.meshUniformBufferFormat,meshBindGroupFormat:f.meshBindGroupFormat}}static extract(t){const e=[],s=[],i=[],n=[];let r,a=`${Pt}\n`;for(;null!==(r=At.exec(t));){const o=r[1];switch(o){case"attribute":case"varying":case"uniform":case"out":{Ct.lastIndex=r.index;const l=Ct.exec(t);"attribute"===o?e.push(l[2]):"varying"===o?s.push(l[2]):"out"===o?i.push(l[2]):"uniform"===o&&n.push(l[2]),t=Ot.cutOut(t,r.index,Ct.lastIndex,a),At.lastIndex=r.index+a.length,a="";break}}}return{src:t,attributes:e,varyings:s,outs:i,uniforms:n}}static processUniforms(t,e,s,i){const n=[],r=[];e.forEach(t=>{t.isSampler?n.push(t):r.push(t)});const o=[];r.forEach(t=>{if(!s.hasUniform(t.name)){const e=a.nJN.indexOf(t.type),s=new Et.g(t.name,e,t.arraySize);o.push(s)}}),0===o.length&&o.push(new Et.g(a.iHB,a.GF5));const l=o.length?new Et.Q(t,o):null,h=[];n.forEach(t=>{if(!s.hasTexture(t.name)){let e=a.CZm;t.isSignedInt?e=a.jVv:t.isUnsignedInt?e=a.Gie:("highp"===t.precision&&(e=a.cRA),Mt.has(t.type)&&(e=a.pqC));const s=It[t.type];h.push(new W.GN(t.name,a.rXb|a.Jnj,s,e))}});const c=new W.a$(t,h);let d="";return s.uniformFormats.forEach((t,e)=>{t&&(d+=Ot.getUniformShaderDeclaration(t,e,0))}),l&&(d+=Ot.getUniformShaderDeclaration(l,a.xBw,0)),s.bindGroupFormats.forEach((t,e)=>{t&&(d+=Ot.getTexturesShaderDeclaration(t,e))}),d+=Ot.getTexturesShaderDeclaration(c,a.pNk),{code:d,meshUniformBufferFormat:l,meshBindGroupFormat:c}}static processVaryings(t,e,s){let i="";const n=s?"out":"in";return t.forEach((t,r)=>{const a=Ot.splitToWords(t),o=a.slice(0,-1).join(" "),l=a[a.length-1];s?e.set(l,r):r=e.get(l),i+=`layout(location = ${r}) ${n} ${o} ${l};\n`}),i}static processOuts(t){let e="";return t.forEach((t,s)=>{e+=`layout(location = ${s}) out ${t};\n`}),e}static getTypeCount(t){const e=t.substring(t.length-1),s=parseInt(e,10);return isNaN(s)?1:s}static processAttributes(t,e,s,i){let n="";return t.forEach(t=>{const r=Ot.splitToWords(t);let o=r[0],l=r[1];if(e.hasOwnProperty(l)){const t=e[l],r=a.tJj[t];let h;s.set(r,l);const c=i.getVertexElement(t);if(c){const t=c.dataType;if(t!==a.n$B&&t!==a.V$W&&!c.normalize&&!c.asInt){const e=Ot.getTypeCount(o),s=`_private_${l}`;h=`vec${e} ${l} = vec${e}(${s});\n`,l=s;const i=t===a.VSW||t===a.kF||t===a.uVx;o=1===e?i?"int":"uint":i?`ivec${e}`:`uvec${e}`}}n+=`layout(location = ${r}) in ${o} ${l};\n`,h&&(n+=h)}}),n}static splitToWords(t){return(t=t.replace(/\s+/g," ").trim()).split(" ")}static cutOut(t,e,s,i){return t.substring(0,e)+i+t.substring(s)}static getUniformShaderDeclaration(t,e,s){let i=`layout(set = ${e}, binding = ${s}, std140) uniform ub_${a.jK8[e]} {\n`;return t.uniforms.forEach(t=>{const e=a.nJN[t.type];i+=`    ${e} ${t.shortName}${t.count?`[${t.count}]`:""};\n`}),`${i}};\n`}static getTexturesShaderDeclaration(t,e){let s="";return t.textureFormats.forEach(t=>{let i=Rt[t.textureDimension];const n="texture2DArray"===i,r=t.sampleType===a.Gie?"u":t.sampleType===a.jVv?"i":"";i=`${r}${i}`;let o="",l="";n&&(o="_texture",l=`#define ${t.name} ${r}sampler2DArray(${t.name}${o}, ${t.name}_sampler)\n`),s+=`layout(set = ${e}, binding = ${t.slot}) uniform ${i} ${t.name}${o};\n`,t.hasSampler&&(s+=`layout(set = ${e}, binding = ${t.slot+1}) uniform sampler ${t.name}_sampler;\n`),s+=l}),s}}const Nt=/^[ \t]*(attribute|varying|uniform)[\t ]+/gm,kt=/^[ \t]*(attribute|varying|uniform)[ \t]*([^;]+)(;+)/gm,Bt=/^[ \t]*var\s*(?:(<storage,[^>]*>)\s*([\w\d_]+)\s*:\s*(.*?)\s*;|(<(?!storage,)[^>]*>)?\s*([\w\d_]+)\s*:\s*(texture_.*|storage_texture_.*|storage\w.*|external_texture|sampler(?:_comparison)?)\s*;)\s*$/gm,Ut=/(?:@interpolate\([^)]*\)\s*)?([\w]+)\s*:/,zt="@@@",Vt=/(@vertex|@fragment)\s*fn\s+\w+\s*\(\s*(\w+)\s*:[\s\S]*?\{/,Gt={texture_1d:{viewDimension:a.Kod,baseSampleType:a.CZm},texture_2d:{viewDimension:a.HeG,baseSampleType:a.CZm},texture_2d_array:{viewDimension:a.hwK,baseSampleType:a.CZm},texture_3d:{viewDimension:a.EuA,baseSampleType:a.CZm},texture_cube:{viewDimension:a.GGM,baseSampleType:a.CZm},texture_cube_array:{viewDimension:a.WhW,baseSampleType:a.CZm},texture_multisampled_2d:{viewDimension:a.HeG,baseSampleType:a.CZm},texture_depth_2d:{viewDimension:a.HeG,baseSampleType:a.pqC},texture_depth_2d_array:{viewDimension:a.hwK,baseSampleType:a.pqC},texture_depth_cube:{viewDimension:a.GGM,baseSampleType:a.pqC},texture_depth_cube_array:{viewDimension:a.WhW,baseSampleType:a.pqC},texture_external:{viewDimension:a.HeG,baseSampleType:a.cRA}},Ht={f32:"WrappedF32",i32:"WrappedI32",u32:"WrappedU32",vec2f:"WrappedVec2F",vec2i:"WrappedVec2I",vec2u:"WrappedVec2U"},Wt=t=>(t=t.replace(/\s+/g," ").trim()).split(/[\s:]+/),Xt=/array<([^,]+),\s*([^>]+)>/;class $t{constructor(t,e){this.ubName=null,this.arraySize=0,this.line=t;const s=Wt(t);if(s.length<2)e.failed=!0;else if(this.name=s[0],this.type=s.slice(1).join(" "),this.type.includes("array<")){const t=Xt.exec(this.type);this.type=t[1].trim(),this.arraySize=Number(t[2]),isNaN(this.arraySize)&&(e.failed=!0)}}}const qt=/^\s*var\s+(\w+)\s*:\s*(texture_\w+)(?:<(\w+)>)?;\s*$/,jt=/^\s*var\s+([\w\d_]+)\s*:\s*(texture_storage_2d|texture_storage_2d_array)<([\w\d_]+),\s*(\w+)>\s*;\s*$/,Yt=/^\s*var\s*<storage,\s*(read|write)?>\s*([\w\d_]+)\s*:\s*(.*)\s*;\s*$/,Kt=/^\s*var\s+([\w\d_]+)\s*:\s*texture_external;\s*$/,Zt=/^\s*var\s+([\w\d_]+)\s*:\s*(sampler|sampler_comparison)\s*;\s*$/;class Qt{constructor(t,e){this.originalLine=t,this.line=t,this.isTexture=!1,this.isSampler=!1,this.isStorageTexture=!1,this.isStorageBuffer=!1,this.isExternalTexture=!1,this.type="",this.matchedElements=[];const s=this.line.match(qt);if(s){this.name=s[1],this.type=s[2],this.textureFormat=s[3],this.isTexture=!0,this.matchedElements.push(...s);const t=((t,e)=>{const s=Gt[t];let i=s.baseSampleType;if(s.baseSampleType===a.CZm&&"texture_multisampled_2d"!==t)switch(e){case"u32":i=a.Gie;break;case"i32":i=a.jVv;break;case"f32":i=a.CZm;break;case"uff":i=a.cRA}return{viewDimension:s.viewDimension,sampleType:i}})(this.type,this.textureFormat);this.textureDimension=t.viewDimension,this.sampleType=t.sampleType}const i=this.line.match(jt);i&&(this.isStorageTexture=!0,this.name=i[1],this.textureType=i[2],this.format=i[3],this.access=i[4],this.matchedElements.push(...i));const n=this.line.match(Yt);n&&(this.isStorageBuffer=!0,this.accessMode=n[1]||"none",this.name=n[2],this.type=n[3],this.matchedElements.push(...n));const r=this.line.match(Kt);r&&(this.name=r[1],this.isExternalTexture=!0,this.matchedElements.push(...n));const o=this.line.match(Zt);o&&(this.name=o[1],this.samplerType=o[2],this.isSampler=!0,this.matchedElements.push(...o)),0===this.matchedElements.length&&(e.failed=!0)}equals(t){return this.name===t.name&&(this.type===t.type&&(this.isTexture===t.isTexture&&(this.isSampler===t.isSampler&&(this.isStorageTexture===t.isStorageTexture&&(this.isStorageBuffer===t.isStorageBuffer&&(this.isExternalTexture===t.isExternalTexture&&(this.textureFormat===t.textureFormat&&(this.textureDimension===t.textureDimension&&(this.sampleType===t.sampleType&&(this.textureType===t.textureType&&(this.format===t.format&&(this.access===t.access&&(this.accessMode===t.accessMode&&this.samplerType===t.samplerType)))))))))))))}}class Jt{static run(t,e,s){const i=new Map,n=Jt.extract(e.vshader),r=Jt.extract(e.fshader),a=new Map,o=Jt.processAttributes(n.attributes,e.attributes,a,e.processingOptions,s),l=Jt.processVaryings(n.varyings,i,!0),h=Jt.processVaryings(r.varyings,i,!1),c=n.uniforms.concat(r.uniforms),d=Array.from(new Set(c)).map(t=>new $t(t,s)),u=Jt.processUniforms(t,d,e.processingOptions,s);n.src=Jt.renameUniformAccess(n.src,d),r.src=Jt.renameUniformAccess(r.src,d);const f=Jt.mergeResources(n.resources,r.resources,s),p=Jt.processResources(t,f,e.processingOptions,s),m=Jt.generateFragmentOutputStruct(r.src,t.maxColorAttachments);n.src=Jt.copyInputs(n.src,s),r.src=Jt.copyInputs(r.src,s);const _=`${o}\n${l}\n${u.code}\n${p.code}\n`,g=n.src.replace(zt,_),v=`${h}\n${m}\n${u.code}\n${p.code}\n`;return{vshader:g,fshader:r.src.replace(zt,v),attributes:a,meshUniformBufferFormat:u.meshUniformBufferFormat,meshBindGroupFormat:p.meshBindGroupFormat}}static extract(t){const e=[],s=[],i=[],n=[];let r,a=`${zt}\n`;for(;null!==(r=Nt.exec(t));){const n=r[1];kt.lastIndex=r.index;const o=kt.exec(t);"attribute"===n?e.push(o[2]):"varying"===n?s.push(o[2]):"uniform"===n&&i.push(o[2]),t=Jt.cutOut(t,r.index,kt.lastIndex,a),Nt.lastIndex=r.index+a.length,a=""}for(;null!==(r=Bt.exec(t));)n.push(r[0]),t=Jt.cutOut(t,r.index,Bt.lastIndex,a),Bt.lastIndex=r.index+a.length,a="";return{src:t,attributes:e,varyings:s,uniforms:i,resources:n}}static processUniforms(t,e,s,i){const n=[];e.forEach(t=>{if(s.hasUniform(t.name))t.ubName="ub_view";else{t.ubName="ub_mesh_ub";const e=a.SQ0.get(t.type),s=new Et.g(t.name,e,t.arraySize);n.push(s)}}),0===n.length&&n.push(new Et.g(a.iHB,a.GF5));const r=new Et.Q(t,n);let o="";return s.uniformFormats.forEach((t,e)=>{t&&(o+=Jt.getUniformShaderDeclaration(t,e,0))}),r&&(o+=Jt.getUniformShaderDeclaration(r,a.xBw,0)),{code:o,meshUniformBufferFormat:r}}static renameUniformAccess(t,e){return e.forEach(e=>{const s=`uniform.${e.name}`,i=`${e.ubName}.${e.name}`,n=new RegExp(`\\b${s}\\b`,"g");t=t.replace(n,i)}),t}static mergeResources(t,e,s){const i=t.map(t=>new Qt(t,s));return e.map(t=>new Qt(t,s)).forEach(t=>{const e=i.find(e=>e.name===t.name);e?e.equals(t)||(s.failed=!0):i.push(t)}),i}static processResources(t,e,s,i){const n=[];for(let l=0;l<e.length;l++){const t=e[l];if(t.isTexture){const s=e[l+1],i=s?.isSampler,r=t.sampleType,o=t.textureDimension;n.push(new W.GN(t.name,a.rXb|a.Jnj,o,r,i,i?s.name:null)),i&&l++}if(t.isStorageBuffer){const e="read_write"!==t.accessMode,s=new W.OR(t.name,a.rXb|a.Jnj,e);s.format=t.type,n.push(s)}}const r=new W.a$(t,n);let o="";return s.bindGroupFormats.forEach((t,e)=>{t&&(o+=Jt.getTextureShaderDeclaration(t,e,1))}),o+=Jt.getTextureShaderDeclaration(r,a.pNk,0),{code:o,meshBindGroupFormat:r}}static getUniformShaderDeclaration(t,e,s){const i=a.jK8[e],n=`struct_ub_${i}`;let r=`struct ${n} {\n`;return t.uniforms.forEach(t=>{let e=a.COi[t.type][0];t.count>0?(Ht.hasOwnProperty(e)&&(e=Ht[e]),r+=`    ${t.shortName}: array<${e}, ${t.count}>,\n`):r+=`    ${t.shortName}: ${e},\n`}),r+="};\n",r+=`@group(${e}) @binding(${s}) var<uniform> ub_${i} : ${n};\n\n`,r}static getTextureShaderDeclaration(t,e,s){let i="",n=s;return t.textureFormats.forEach(t=>{const s=((t,e)=>{if(e===a.pqC)switch(t){case a.HeG:return"texture_depth_2d";case a.hwK:return"texture_depth_2d_array";case a.GGM:return"texture_depth_cube";case a.WhW:return"texture_depth_cube_array"}let s,i;switch(t){case a.Kod:s="texture_1d";break;case a.HeG:s="texture_2d";break;case a.hwK:s="texture_2d_array";break;case a.EuA:s="texture_3d";break;case a.GGM:s="texture_cube";break;case a.WhW:s="texture_cube_array"}switch(e){case a.CZm:case a.cRA:i="f32";break;case a.Gie:i="u32";break;case a.jVv:i="i32"}return`${s}<${i}>`})(t.textureDimension,t.sampleType);if(i+=`@group(${e}) @binding(${n}) var ${t.name}: ${s};\n`,n++,t.hasSampler){const s=t.sampleType===a.pqC?"sampler_comparison":"sampler";i+=`@group(${e}) @binding(${n}) var ${t.samplerName}: ${s};\n`,n++}}),t.storageBufferFormats.forEach(t=>{const s=t.readOnly?"read":"read_write";i+=`@group(${e}) @binding(${n}) var<storage, ${s}> ${t.name} : ${t.format};\n`,n++}),i}static processVaryings(t,e,s){let i="",n="",r="";t.forEach((t,a)=>{const o=t.match(Ut);if(o){const l=o[1];s?e.set(l,a):a=e.get(l),i+=`    @location(${a}) ${t},\n`,s||(n+=`    var<private> ${t};\n`,r+=`    ${l} = input.${l};\n`)}}),s?i+="    @builtin(position) position : vec4f,\n":(i+="    @builtin(position) position : vec4f,\n",i+="    @builtin(front_facing) frontFacing : bool,\n",i+="    @builtin(sample_index) sampleIndex : u32\n");return`\n\t\t\t\t\t\tstruct ${s?"VertexOutput":"FragmentInput"} {\n\t\t\t\t\t\t\t\t${i}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t${s?"":`\n\t\t\t\t\t\tvar<private> pcPosition: vec4f;\n\t\t\t\t\t\tvar<private> pcFrontFacing: bool;\n\t\t\t\t\t\tvar<private> pcSampleIndex: u32;\n\t\t\t\t\t\t${n}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// function to copy inputs (varyings) to private global variables\n\t\t\t\t\t\tfn _pcCopyInputs(input: FragmentInput) {\n\t\t\t\t\t\t\t\t${r}\n\t\t\t\t\t\t\t\tpcPosition = input.position;\n\t\t\t\t\t\t\t\tpcFrontFacing = input.frontFacing;\n\t\t\t\t\t\t\t\tpcSampleIndex = input.sampleIndex;\n\t\t\t\t\t\t}\n\t\t\t\t`}\n\t\t\t\t`}static generateFragmentOutputStruct(t,e){let s="struct FragmentOutput {\n";for(let i=0;i<e;i++)s+=`    @location(${i}) color${i>0?i:""} : pcOutType${i},\n`;return-1!==t.search(/\.fragDepth\s*=/)&&(s+="    @builtin(frag_depth) fragDepth : f32\n"),`${s}};\n`}static floatAttributeToInt(t,e){return{f32:e?"i32":"u32",vec2f:e?"vec2i":"vec2u",vec3f:e?"vec3i":"vec3u",vec4f:e?"vec4i":"vec4u"}[{f32:"f32","vec2<f32>":"vec2f","vec3<f32>":"vec3f","vec4<f32>":"vec4f"}[t]||t]||null}static processAttributes(t,e={},s,i,n){let r="",o="",l="";return t.forEach(t=>{const n=Wt(t),h=n[0];let c=n[1];const d=c;if(e.hasOwnProperty(h)){const n=e[h],u=a.tJj[n];s.set(u,h);const f=i.getVertexElement(n);if(f){const t=f.dataType;if(t!==a.n$B&&t!==a.V$W&&!f.normalize&&!f.asInt){const e=t===a.VSW||t===a.kF||t===a.uVx;c=Jt.floatAttributeToInt(c,e)}}r+=`    @location(${u}) ${h}: ${c},\n`,o+=`    var<private> ${t};\n`,l+=`    ${h} = ${d}(input.${h});\n`}}),`\n\t\t\t\t\t\tstruct VertexInput {\n\t\t\t\t\t\t\t\t${r}\n\t\t\t\t\t\t\t\t@builtin(vertex_index) vertexIndex : u32,       // built-in vertex index\n\t\t\t\t\t\t\t\t@builtin(instance_index) instanceIndex : u32    // built-in instance index\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t${o}\n\t\t\t\t\t\tvar<private> pcVertexIndex: u32;\n\t\t\t\t\t\tvar<private> pcInstanceIndex: u32;\n\n\t\t\t\t\t\tfn _pcCopyInputs(input: VertexInput) {\n\t\t\t\t\t\t\t\t${l}\n\t\t\t\t\t\t\t\tpcVertexIndex = input.vertexIndex;\n\t\t\t\t\t\t\t\tpcInstanceIndex = input.instanceIndex;\n\t\t\t\t\t\t}\n\t\t\t\t`}static copyInputs(t,e){const s=t.match(Vt);if(!s||!s[2])return t;const i=s[2],n=s.index+s[0].length-1;return t.slice(0,n+1)+`\n    _pcCopyInputs(${i});`+t.slice(n+1)}static cutOut(t,e,s,i){return t.substring(0,e)+i+t.substring(s)}}class te{constructor(t){this._vertexCode=null,this._fragmentCode=null,this._computeCode=null,this.vertexEntryPoint="main",this.fragmentEntryPoint="main",this.computeEntryPoint="main",this.shader=t;const e=t.definition;e.shaderLanguage===a.g80?(e.cshader?(this._computeCode=e.cshader??null,this.computeUniformBufferFormats=e.computeUniformBufferFormats,this.computeBindGroupFormat=e.computeBindGroupFormat):(this.vertexEntryPoint="vertexMain",this.fragmentEntryPoint="fragmentMain",e.processingOptions?this.processWGSL():(this._vertexCode=e.vshader??null,this._fragmentCode=e.fshader??null,t.meshUniformBufferFormat=e.meshUniformBufferFormat,t.meshBindGroupFormat=e.meshBindGroupFormat)),t.ready=!0):e.processingOptions&&this.processGLSL()}destroy(t){this._vertexCode=null,this._fragmentCode=null}createShaderModule(t,e){return this.shader.device.wgpu.createShaderModule({code:t})}getVertexShaderModule(){return this.createShaderModule(this._vertexCode,"Vertex")}getFragmentShaderModule(){return this.createShaderModule(this._fragmentCode,"Fragment")}getComputeShaderModule(){return this.createShaderModule(this._computeCode,"Compute")}processGLSL(){const t=this.shader,e=Ot.run(t.device,t.definition,t);this._vertexCode=this.transpile(e.vshader,"vertex",t.definition.vshader),this._fragmentCode=this.transpile(e.fshader,"fragment",t.definition.fshader),this._vertexCode&&this._fragmentCode?t.ready=!0:t.failed=!0,t.meshUniformBufferFormat=e.meshUniformBufferFormat,t.meshBindGroupFormat=e.meshBindGroupFormat,t.attributes=e.attributes}processWGSL(){const t=this.shader,e=Jt.run(t.device,t.definition,t);this._vertexCode=e.vshader,this._fragmentCode=e.fshader,t.meshUniformBufferFormat=e.meshUniformBufferFormat,t.meshBindGroupFormat=e.meshBindGroupFormat,t.attributes=e.attributes}transpile(t,e,s){const i=this.shader.device;if(!i.glslang||!i.twgsl)return console.error(`Cannot transpile shader [${this.shader.label}] - shader transpilers (glslang/twgsl) are not available. Make sure to provide glslangUrl and twgslUrl when creating the device.`,{shader:this.shader}),null;try{const s=i.glslang.compileGLSL(t,e);return i.twgsl.convertSpirV2WGSL(s)}catch(n){console.error(`Failed to transpile webgl ${e} shader [${this.shader.label}] to WebGPU while rendering undefined, error:\n [${n.stack}]`,{processed:t,original:s,shader:this.shader,error:n,stack:n.stack})}}get vertexCode(){return this._vertexCode}get fragmentCode(){return this._fragmentCode}loseContext(){}restoreContext(t,e){}}var ee=s(39964);const se=[];se[a.x3I]="repeat",se[a.vq6]="clamp-to-edge",se[a.qoY]="mirror-repeat";const ie=[];ie[a.uhC]={level:"nearest",mip:"nearest"},ie[a.DrA]={level:"linear",mip:"nearest"},ie[a.GLw]={level:"nearest",mip:"nearest"},ie[a.hs2]={level:"nearest",mip:"linear"},ie[a.reG]={level:"linear",mip:"nearest"},ie[a.qn_]={level:"linear",mip:"linear"};class ne{constructor(t){this.samplers=[],this.texture=t,this.format=Z[t.format],this.create(t.device)}create(t){const e=this.texture,s=t.wgpu,i=e.numLevels;let n;this.desc={size:{width:e.width,height:e.height,depthOrArrayLayers:e.cubemap?6:e.array?e.arrayLength:1},format:this.format,mipLevelCount:i,sampleCount:1,dimension:e.volume?"3d":"2d",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC|((0,a.Nvm)(e.format)?0:GPUTextureUsage.RENDER_ATTACHMENT)|(e.storage?GPUTextureUsage.STORAGE_BINDING:0)},this.gpuTexture=s.createTexture(this.desc),this.texture.format===a.Mg$&&(n={format:"depth24plus",aspect:"depth-only"}),this.view=this.createView(n)}destroy(t){}propertyChanged(t){this.samplers.length=0}getView(t){return this.uploadImmediate(t,this.texture),this.view}createView(t){const e=t??{},s=this.desc,i=this.texture,n={format:e.format??s.format,dimension:e.dimension??(i.cubemap?"cube":i.volume?"3d":i.array?"2d-array":"2d"),aspect:e.aspect??"all",baseMipLevel:e.baseMipLevel??0,mipLevelCount:e.mipLevelCount??s.mipLevelCount,baseArrayLayer:e.baseArrayLayer??0,arrayLayerCount:e.arrayLayerCount??s.depthOrArrayLayers};return this.gpuTexture.createView(n)}getSampler(t,e){let s=this.samplers[e];if(!s){const i=this.texture,n={addressModeU:se[i.addressU],addressModeV:se[i.addressV],addressModeW:se[i.addressW]};if(!e&&i.compareOnRead&&(e=a.pqC),e===a.pqC||e===a.jVv||e===a.Gie)n.compare="less",n.magFilter="linear",n.minFilter="linear";else if(e===a.cRA)n.magFilter="nearest",n.minFilter="nearest",n.mipmapFilter="nearest";else{!t.textureFloatFilterable&&(i.format===a.s7h||i.format===a.WBN)||this.texture.format===a.Mg$||(0,a.YfE)(this.texture.format)?(n.magFilter="nearest",n.minFilter="nearest",n.mipmapFilter="nearest"):(n.magFilter=ie[i.magFilter].level,n.minFilter=ie[i.minFilter].level,n.mipmapFilter=ie[i.minFilter].mip)}const r="linear"===n.minFilter&&"linear"===n.magFilter&&"linear"===n.mipmapFilter;n.maxAnisotropy=r?D.D.clamp(Math.round(i._anisotropy),1,t.maxTextureAnisotropy):1,s=t.wgpu.createSampler(n),this.samplers[e]=s}return s}loseContext(){}uploadImmediate(t,e){(e._needsUpload||e._needsMipmapsUpload)&&(this.uploadData(t),e._needsUpload=!1,e._needsMipmapsUpload=!1)}uploadData(t){const e=this.texture;if(e._levels){let s=!1,i=!1;const n=e.numLevels;for(let r=0;r<n;r++){const n=e._levels[r];if(n)if(e.cubemap)for(let e=0;e<6;e++){const a=n[e];a?this.isExternalImage(a)?(this.uploadExternalImage(t,a,r,e),s=!0):ArrayBuffer.isView(a)&&(this.uploadTypedArrayData(t,a,r,e),s=!0):i=!0}else if(e._volume);else if(e.array)if(e.arrayLength===n.length)for(let i=0;i<e._arrayLength;i++){const e=n[i];this.isExternalImage(e)?(this.uploadExternalImage(t,e,r,i),s=!0):ArrayBuffer.isView(e)&&(this.uploadTypedArrayData(t,e,r,i),s=!0)}else i=!0;else this.isExternalImage(n)?(this.uploadExternalImage(t,n,r,0),s=!0):ArrayBuffer.isView(n)&&(this.uploadTypedArrayData(t,n,r,0),s=!0);else i=!0}s&&i&&e.mipmaps&&!(0,a.Nvm)(e.format)&&!(0,a.YfE)(e.format)&&t.mipmapRenderer.generate(this),e._gpuSize&&e.adjustVramSizeTracking(t._vram,-e._gpuSize),e._gpuSize=e.gpuSize,e.adjustVramSizeTracking(t._vram,e._gpuSize)}}isExternalImage(t){return"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap||"undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas}uploadExternalImage(t,e,s,i){const n={source:e,origin:[0,0],flipY:!1},r={texture:this.gpuTexture,mipLevel:s,origin:[0,0,i],aspect:"all"},a={width:this.desc.size.width,height:this.desc.size.height,depthOrArrayLayers:1};t.submit(),e instanceof HTMLCanvasElement&&e.getContext("2d"),t.wgpu.queue.copyExternalImageToTexture(n,r,a)}uploadTypedArrayData(t,e,s,i){const n=this.texture,r=t.wgpu,o={texture:this.gpuTexture,origin:[0,0,i],mipLevel:s},l=ee.V.calcLevelDimension(n.width,s),h=ee.V.calcLevelDimension(n.height,s);ee.V.calcLevelGpuSize(l,h,1,n.format);const c=a.s7S.get(n.format);let d,u;if(c.size)d={offset:0,bytesPerRow:c.size*l,rowsPerImage:h},u={width:l,height:h};else if(c.blockSize){const t=t=>Math.floor((t+3)/4);d={offset:0,bytesPerRow:c.blockSize*t(l),rowsPerImage:t(h)},u={width:Math.max(4,l),height:Math.max(4,h)}}t.submit(),r.queue.writeTexture(o,e,d,u)}read(t,e,s,i,n){const r=n.mipLevel??0,o=n.face??0,l=n.data??null,h=n.immediate??!1,c=this.texture,d=s*a.s7S.get(c.format).size,u=D.D.roundUp(d,256),f=u*i,p=c.device,m=p.createBufferImpl(a.PyV|a._Rt);m.allocate(p,f);const _={texture:this.gpuTexture,mipLevel:r,origin:[t,e,o]},g={buffer:m.buffer,offset:0,bytesPerRow:u},v={width:s,height:i,depthOrArrayLayers:1};return p.getCommandEncoder().copyTextureToBuffer(_,g,v),p.readBuffer(m,f,null,h).then(t=>{const e=l?.constructor===Uint8Array?l:new Uint8Array(l?.buffer??i*d);for(let s=0;s<i;s++){const i=s*u,n=s*d,r=t.subarray(i,i+d);e.set(r,n)}return l??e})}}class re extends st{constructor(t){super(a.PdW)}unlock(t){const e=t.device;super.unlock(e,t.storageInt32.buffer)}}class ae extends st{constructor(t,e,s){super(a.NcO|(s?.storage?a.uCe:0))}unlock(t){const e=t.device;super.unlock(e,t.storage)}}var oe=s(55443),le=s(18982),he=s(47422);const ce={type:a.SF$,base:0,baseVertex:0,count:4,indexed:!1};class de{constructor(t){const e="\n\n\t\t\t\t\t\tstruct ub_mesh {\n\t\t\t\t\t\t\t\tcolor : vec4f,\n\t\t\t\t\t\t\t\tdepth: f32\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(2) @binding(0) var<uniform> ubMesh : ub_mesh;\n\n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0),\n\t\t\t\t\t\t\t\tvec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\t\toutput.position = vec4(pos[vertexIndex], ubMesh.depth, 1.0);\n\t\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain() -> @location(0) vec4f {\n\t\t\t\t\t\t\t\treturn ubMesh.color;\n\t\t\t\t\t\t}\n\t\t\t\t";this.shader=new oe.M(t,{name:"WebGPUClearRendererShader",shaderLanguage:a.g80,vshader:e,fshader:e}),this.uniformBuffer=new le.D(t,new Et.Q(t,[new Et.g("color",a.cyR),new Et.g("depth",a.GF5)]),!1),this.dynamicBindGroup=new X.s,this.colorData=new Float32Array(4)}destroy(){this.shader.destroy(),this.shader=null,this.uniformBuffer.destroy(),this.uniformBuffer=null}clear(t,e,s,i){const n=(s=s||i).flags??i.flags;if(0!==n){const{uniformBuffer:r,dynamicBindGroup:o}=this;if(r.startUpdate(o),t.setBindGroup(a.xBw,o.bindGroup,o.offsets),t.setBindGroup(a.pNk,t.emptyBindGroup),n&a.Sue&&(e.colorBuffer||e.impl.assignedColorTexture)){const e=s.color??i.color;this.colorData.set(e),t.setBlendState(w.t.NOBLEND)}else t.setBlendState(w.t.NOWRITE);if(r.set("color",this.colorData),n&a.YKI&&e.depth){const e=s.depth??i.depth;r.set("depth",e),t.setDepthState(he.H.WRITEDEPTH)}else r.set("depth",1),t.setDepthState(he.H.NODEPTH);n&a.zwO&&e.stencil,r.endUpdate(),t.setCullMode(a.pLF),t.setShader(this.shader),t.draw(ce)}}}class ue{constructor(t){this.device=t;const e="\n \n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0),\n\t\t\t\t\t\t\t\tvec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f,\n\t\t\t\t\t\t\t\t@location(0) texCoord : vec2f\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\toutput.texCoord = pos[vertexIndex] * vec2f(0.5, -0.5) + vec2f(0.5);\n\t\t\t\t\t\t\toutput.position = vec4f(pos[vertexIndex], 0, 1);\n\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(0) @binding(0) var imgSampler : sampler;\n\t\t\t\t\t\t@group(0) @binding(1) var img : texture_2d<f32>;\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain(@location(0) texCoord : vec2f) -> @location(0) vec4f {\n\t\t\t\t\t\t\treturn textureSample(img, imgSampler, texCoord);\n\t\t\t\t\t\t}\n\t\t\t\t";this.shader=new oe.M(t,{name:"WebGPUMipmapRendererShader",shaderLanguage:a.g80,vshader:e,fshader:e}),this.minSampler=t.wgpu.createSampler({minFilter:"linear"})}destroy(){this.shader.destroy(),this.shader=null}generate(t){const e=t.desc;if(e.mipLevelCount<=1)return;if(t.texture.volume)return;const s=this.device,i=s.wgpu,n=this.shader.impl,r=i.createRenderPipeline({layout:"auto",vertex:{module:n.getVertexShaderModule(),entryPoint:n.vertexEntryPoint},fragment:{module:n.getFragmentShaderModule(),entryPoint:n.fragmentEntryPoint,targets:[{format:e.format}]},primitive:{topology:"triangle-strip"}}),a=t.texture,o=a.cubemap?6:a.array?a.arrayLength:1,l=[];for(let c=0;c<o;c++)l.push(t.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:c}));const h=s.getCommandEncoder();for(let c=1;c<e.mipLevelCount;c++)for(let e=0;e<o;e++){const s=t.createView({dimension:"2d",baseMipLevel:c,mipLevelCount:1,baseArrayLayer:e}),n=h.beginRenderPass({colorAttachments:[{view:s,loadOp:"clear",storeOp:"store"}]}),a=i.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:this.minSampler},{binding:1,resource:l[e]}]});n.setPipeline(r),n.setBindGroup(0,a),n.draw(4),n.end(),l[e]=s}s.pipeline=null}}var fe=s(51932);class pe{constructor(t){this.bindGroupCache=new Map,this.device=t,this.bindGroupFormat=new W.a$(this.device,[new W.D8(a.rb7,a.rXb|a.Jnj)])}getBindGroup(t){const e=t.format.byteSize;let s=this.bindGroupCache.get(e);return s||(s=new X.T(this.device,this.bindGroupFormat,t),s.update(),this.bindGroupCache.set(e,s)),s}}class me extends pe{constructor(t,e,s){super(t),this.buffer=null,this.mappedRange=null,this.buffer=t.wgpu.createBuffer({size:e,usage:s?GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,mappedAtCreation:s}),s&&this.onAvailable(),t._vram.ub+=e}destroy(t){t._vram.ub-=this.buffer.size,this.buffer.destroy(),this.buffer=null}onAvailable(){this.mappedRange=this.buffer.getMappedRange()}alloc(t,e){return new Int32Array(this.mappedRange,t,e/4)}}class _e extends fe.p{createBuffer(t,e,s){return new me(t,e,s)}submit(){super.submit();const t=this.usedBuffers.length;if(t){const e=this.device,s=this.gpuBuffers,i=e.wgpu.createCommandEncoder();for(let r=t-1;r>=0;r--){const t=this.usedBuffers[r],{stagingBuffer:e,gpuBuffer:n,offset:a,size:o}=t,l=e.buffer;l.unmap(),i.copyBufferToBuffer(l,a,n.buffer,a,o),s.push(n)}const n=i.finish();e.addCommandBuffer(n,!0);for(let r=0;r<t;r++){const t=this.usedBuffers[r].stagingBuffer;this.pendingStagingBuffers.push(t)}this.usedBuffers.length=0}}onCommandBuffersSubmitted(){const t=this.pendingStagingBuffers.length;if(t){for(let e=0;e<t;e++){const t=this.pendingStagingBuffers[e];t.buffer.mapAsync(GPUMapMode.WRITE).then(()=>{this.stagingBuffers&&(t.onAvailable(),this.stagingBuffers.push(t))})}this.pendingStagingBuffers.length=0}}constructor(...t){super(...t),this.pendingStagingBuffers=[]}}var ge=s(87513);class ve{constructor(t,e,s){this.stagingBuffers=[],this.activeStagingBuffer=null,this.device=t,this.capacity=s,this.bytesPerSlot=e?8:4;const i=t.wgpu;this.querySet=i.createQuerySet({type:e?"timestamp":"occlusion",count:s}),this.queryBuffer=i.createBuffer({size:this.bytesPerSlot*s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST})}destroy(){this.querySet?.destroy(),this.querySet=null,this.queryBuffer?.destroy(),this.queryBuffer=null,this.activeStagingBuffer=null,this.stagingBuffers.forEach(t=>{t.destroy()}),this.stagingBuffers=null}getStagingBuffer(){let t=this.stagingBuffers.pop();return t||(t=this.device.wgpu.createBuffer({size:this.queryBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})),t}resolve(t){const e=this.device.getCommandEncoder();e.resolveQuerySet(this.querySet,0,t,this.queryBuffer,0);const s=this.getStagingBuffer();this.activeStagingBuffer=s,e.copyBufferToBuffer(this.queryBuffer,0,s,0,this.bytesPerSlot*t)}request(t,e){const s=this.activeStagingBuffer;return this.activeStagingBuffer=null,s.mapAsync(GPUMapMode.READ).then(()=>{const i=new BigInt64Array(s.getMappedRange()),n=[];for(let e=0;e<t;e++)n.push(1e-6*Number(i[2*e+1]-i[2*e]));return s.unmap(),this.stagingBuffers?.push(s),{renderVersion:e,timings:n}})}}class Se extends ge.M{constructor(t){super(),this.device=t,this.timestampQueriesSet=t.supportsTimestampQuery?new ve(t,!0,512):null}destroy(){this.timestampQueriesSet?.destroy(),this.timestampQueriesSet=null}frameStart(){this.processEnableRequest()}frameEnd(){this._enabled&&this.timestampQueriesSet?.resolve(2*this.slotCount)}request(){if(this._enabled){const t=this.device.renderVersion;this.timestampQueriesSet?.request(this.slotCount,t).then(t=>{this.report(t.renderVersion,t.timings)}),super.request(t)}}}class ye{constructor(t){this.pipelineCache=new Map,this.device=t;const e="\n \n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\toutput.position = vec4f(pos[vertexIndex], 0, 1);\n\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(0) @binding(0) var img : texture_depth_multisampled_2d;\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain(@builtin(position) fragColor: vec4f) -> @location(0) vec4f {\n\t\t\t\t\t\t\t\t// load th depth value from sample index 0\n\t\t\t\t\t\t\t\tvar depth = textureLoad(img, vec2i(fragColor.xy), 0u);\n\t\t\t\t\t\t\t\treturn vec4f(depth, 0.0, 0.0, 0.0);\n\t\t\t\t\t\t}\n\t\t\t\t";this.shader=new oe.M(t,{name:"WebGPUResolverDepthShader",shaderLanguage:a.g80,vshader:e,fshader:e})}destroy(){this.shader.destroy(),this.shader=null,this.pipelineCache=null}getPipeline(t){let e=this.pipelineCache.get(t);return e||(e=this.createPipeline(t),this.pipelineCache.set(t,e)),e}createPipeline(t){const e=this.shader.impl;return this.device.wgpu.createRenderPipeline({layout:"auto",vertex:{module:e.getVertexShaderModule(),entryPoint:e.vertexEntryPoint},fragment:{module:e.getFragmentShaderModule(),entryPoint:e.fragmentEntryPoint,targets:[{format:t}]},primitive:{topology:"triangle-strip"}})}resolveDepth(t,e,s){const i=this.device,n=i.wgpu,r=this.getPipeline(s.format),a=e.depthOrArrayLayers;for(let o=0;o<a;o++){const i=e.createView({dimension:"2d",aspect:"depth-only",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:o}),a=s.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:o}),l=t.beginRenderPass({colorAttachments:[{view:a,loadOp:"clear",storeOp:"store"}]}),h=n.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:i}]});l.setPipeline(r),l.setBindGroup(0,h),l.draw(4),l.end()}i.pipeline=null}}class xe{constructor(t){this.uniformBuffers=[],this.bindGroup=null,this.compute=t;const{device:e,shader:s}=t,{computeBindGroupFormat:i,computeUniformBufferFormats:n}=s.impl;if(this.bindGroup=new X.T(e,i),n)for(const r in n)if(n.hasOwnProperty(r)){const t=new le.D(e,n[r],!0);this.uniformBuffers.push(t),this.bindGroup.setUniformBuffer(r,t)}this.pipeline=e.computePipeline.get(s,i)}destroy(){this.uniformBuffers.forEach(t=>t.destroy()),this.uniformBuffers.length=0,this.bindGroup.destroy(),this.bindGroup=null}updateBindGroup(){const{bindGroup:t}=this;t.updateUniformBuffers(),t.update()}dispatch(t,e,s){const i=this.compute.device;i.setBindGroup(0,this.bindGroup);const n=i.passEncoder;n.setPipeline(this.pipeline),n.dispatchWorkgroups(t,e,s)}}let Te=0;class we{constructor(t,e,s=0){this.id=Te++,this.device=t,this.byteSize=e,this.bufferUsage=s,this.impl=t.createBufferImpl(a.uCe|s),this.impl.allocate(t,e),this.device.buffers.push(this),this.adjustVramSizeTracking(t._vram,this.byteSize)}destroy(){const t=this.device,e=t.buffers.indexOf(this);-1!==e&&t.buffers.splice(e,1),this.adjustVramSizeTracking(t._vram,-this.byteSize),this.impl.destroy(t)}adjustVramSizeTracking(t,e){t.sb+=e}read(t=0,e=this.byteSize,s=null,i=!1){return this.impl.read(this.device,t,e,s,i)}write(t=0,e,s=0,i){this.impl.write(this.device,t,e,s,i)}clear(t=0,e=this.byteSize){this.impl.clear(this.device,t,e)}}const be=new Map;class Ee extends $.G{constructor(t,e={}){super(t,e),this.renderPipeline=new vt(this),this.computePipeline=new St(this),this._indirectDrawBuffer=null,this._indirectDrawBufferCount=0,this._indirectDrawNextIndex=0,this.pipeline=null,this.bindGroupFormats=[],this.commandEncoder=null,this.commandBuffers=[],this.glslang=null,this.twgsl=null,(e=this.initOptions).alpha=e.alpha??!0,this.backBufferAntialias=e.antialias??!1,this.isWebGPU=!0,this._deviceType=a.yK5,this.scope.resolve(a.iHB).setValue(0)}destroy(){this.clearRenderer.destroy(),this.clearRenderer=null,this.mipmapRenderer.destroy(),this.mipmapRenderer=null,this.resolver.destroy(),this.resolver=null,super.destroy()}initDeviceCaps(){const t=this.wgpu?.limits;this.limits=t,this.precision="highp",this.maxPrecision="highp",this.maxSamples=4,this.maxTextures=16,this.maxTextureSize=t.maxTextureDimension2D,this.maxCubeMapSize=t.maxTextureDimension2D,this.maxVolumeSize=t.maxTextureDimension3D,this.maxColorAttachments=t.maxColorAttachments,this.maxPixelRatio=1,this.maxAnisotropy=16,this.fragmentUniformsCount=t.maxUniformBufferBindingSize/16,this.vertexUniformsCount=t.maxUniformBufferBindingSize/16,this.supportsUniformBuffers=!0,this.supportsAreaLights=!0,this.supportsGpuParticles=!0,this.supportsCompute=!0,this.textureFloatRenderable=!0,this.textureHalfFloatRenderable=!0,this.supportsImageBitmap=!0,this.samples=this.backBufferAntialias?4:1;const e=window.navigator.gpu.wgslLanguageFeatures;this.supportsStorageTextureRead=e?.has("readonly_and_readwrite_storage_textures"),this.initCapsDefines()}async initWebGpu(t,e){if(!window.navigator.gpu)throw new Error("Unable to retrieve GPU. Ensure you are using a browser that supports WebGPU rendering.");if(t&&e){const s=t=>new URL(t,window.location.href).toString(),i=await Promise.all([import(`${s(e)}`).then(t=>twgsl(e.replace(".js",".wasm"))),import(`${s(t)}`).then(t=>t.default())]);this.twgsl=i[0],this.glslang=i[1]}return this.createDevice()}async createDevice(){const t={powerPreference:"default"!==this.initOptions.powerPreference?this.initOptions.powerPreference:void 0,xrCompatible:this.initOptions.xrCompatible};this.gpuAdapter=await window.navigator.gpu.requestAdapter(t);const e=[],s=t=>{const s=this.gpuAdapter.features.has(t);return s&&e.push(t),s};this.textureFloatFilterable=s("float32-filterable"),this.textureFloatBlendable=s("float32-blendable"),this.extCompressedTextureS3TC=s("texture-compression-bc"),this.extCompressedTextureS3TCSliced3D=s("texture-compression-bc-sliced-3d"),this.extCompressedTextureETC=s("texture-compression-etc2"),this.extCompressedTextureASTC=s("texture-compression-astc"),this.extCompressedTextureASTCSliced3D=s("texture-compression-astc-sliced-3d"),this.supportsTimestampQuery=s("timestamp-query"),this.supportsDepthClip=s("depth-clip-control"),this.supportsDepth32Stencil=s("depth32float-stencil8"),this.supportsIndirectFirstInstance=s("indirect-first-instance"),this.supportsShaderF16=s("shader-f16"),this.supportsStorageRGBA8=s("bgra8unorm-storage"),this.textureRG11B10Renderable=s("rg11b10ufloat-renderable"),this.supportsClipDistances=s("clip-distances");const i=this.gpuAdapter?.limits,n={};if(i)for(const a in i)"minSubgroupSize"!==a&&"maxSubgroupSize"!==a&&(n[a]=i[a]);const r={requiredFeatures:e,requiredLimits:n,defaultQueue:{label:"Default Queue"}};this.wgpu=await this.gpuAdapter.requestDevice(r),this.wgpu.lost?.then(this.handleDeviceLost.bind(this)),this.initDeviceCaps(),this.gpuContext=this.canvas.getContext("webgpu");let o="standard",l=window.navigator.gpu.getPreferredCanvasFormat();const h=this.initOptions.displayFormat;if(this.backBufferFormat="rgba8unorm"===l?h===a.yam?a.Mb4:a.Lxj:h===a.yam?a.wzA:a.$$M,this.backBufferViewFormat=h===a.yam?`${l}-srgb`:l,h===a.HaE&&this.textureFloatFilterable){const t=window.matchMedia("(dynamic-range: high)");t?.matches&&(this.backBufferFormat=a.WBN,this.backBufferViewFormat="rgba16float",l="rgba16float",this.isHdr=!0,o="extended")}return this.canvasConfig={device:this.wgpu,colorSpace:"srgb",alphaMode:this.initOptions.alpha?"premultiplied":"opaque",format:l,toneMapping:{mode:o},usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST,viewFormats:h===a.yam?[this.backBufferViewFormat]:[]},this.gpuContext?.configure(this.canvasConfig),this.createBackbuffer(),this.clearRenderer=new de(this),this.mipmapRenderer=new ue(this),this.resolver=new ye(this),this.postInit(),this}async handleDeviceLost(t){"destroyed"!==t.reason&&(super.loseContext(),await this.createDevice(),super.restoreContext())}postInit(){super.postInit(),this.initializeRenderState(),this.setupPassEncoderDefaults(),this.gpuProfiler=new Se(this),this.dynamicBuffers=new _e(this,102400,this.limits.minUniformBufferOffsetAlignment),this.emptyBindGroup=new X.T(this,new W.a$(this,[])),this.emptyBindGroup.update()}createBackbuffer(){this.supportsStencil=this.initOptions.stencil,this.backBuffer=new y.O({name:"WebgpuFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples}),this.backBuffer.impl.isBackbuffer=!0}frameStart(){super.frameStart(),this.gpuProfiler.frameStart(),this.submit();const t=this.gpuContext?.getCurrentTexture?.()??this.externalBackbuffer?.impl.gpuTexture;this.backBufferSize.x===t.width&&this.backBufferSize.y===t.height||(this.backBufferSize.set(t.width,t.height),this.backBuffer.destroy(),this.backBuffer=null,this.createBackbuffer());const e=this.backBuffer,s=e.impl;s.setColorAttachment(0,void 0,this.backBufferViewFormat),this.initRenderTarget(e),s.assignColorTexture(this,t)}frameEnd(){super.frameEnd(),this.gpuProfiler.frameEnd(),this.submit(),this.contextLost||this.gpuProfiler.request(),this._indirectDrawNextIndex=0}createBufferImpl(t){return new st(t)}createUniformBufferImpl(t){return new re(t)}createVertexBufferImpl(t,e,s){return new ae(t,e,s)}createIndexBufferImpl(t,e){return new it(t,e)}createShaderImpl(t){return new te(t)}createTextureImpl(t){return new ne(t)}createRenderTargetImpl(t){return new bt(t)}createBindGroupFormatImpl(t){return new et(t)}createBindGroupImpl(t){return new j}createComputeImpl(t){return new xe(t)}get indirectDrawBuffer(){return this.allocateIndirectDrawBuffer(),this._indirectDrawBuffer}allocateIndirectDrawBuffer(){0===this._indirectDrawNextIndex&&this._indirectDrawBufferCount<this.maxIndirectDrawCount&&(this._indirectDrawBuffer?.destroy(),this._indirectDrawBuffer=null),null===this._indirectDrawBuffer&&(this._indirectDrawBuffer=new we(this,4*this.maxIndirectDrawCount,a.TNX|a._Rt),this._indirectDrawBufferCount=this.maxIndirectDrawCount)}getIndirectDrawSlot(){this.allocateIndirectDrawBuffer();const t=this._indirectDrawNextIndex;return this._indirectDrawNextIndex++,t}setBindGroup(t,e,s){this.passEncoder&&(this.passEncoder.setBindGroup(t,e.impl.bindGroup,s??e.uniformBufferOffsets),this.bindGroupFormats[t]=e.format.impl)}submitVertexBuffer(t,e){const s=t.format,{interleaved:i,elements:n}=s,r=n.length,a=t.impl.buffer;if(i)return this.passEncoder.setVertexBuffer(e,a),1;for(let o=0;o<r;o++)this.passEncoder.setVertexBuffer(e+o,a,n[o].offset);return r}validateVBLocations(t,e){const s=t=>{const{elements:e}=t.format;for(let s=0;s<e.length;s++){const t=e[s].name,i=a.tJj[t];be.has(i),be.set(i,t)}};s(t),s(e),be.clear()}draw(t,e,s=1,i,n=!0,r=!0){if(this.shader.ready&&!this.shader.failed){const r=this.passEncoder;let a=this.pipeline;const o=this.vertexBuffers[0],l=this.vertexBuffers[1];if(n){if(o){const t=this.submitVertexBuffer(o,0);l&&this.submitVertexBuffer(l,t)}a=this.renderPipeline.get(t,o?.format,l?.format,e?.format,this.shader,this.renderTarget,this.bindGroupFormats,this.blendState,this.depthState,this.cullMode,this.stencilEnabled,this.stencilFront,this.stencilBack),this.pipeline!==a&&(this.pipeline=a,r.setPipeline(a))}if(e&&r.setIndexBuffer(e.impl.buffer,e.impl.format),void 0!==i){const t=20*i,s=this.indirectDrawBuffer.impl.buffer;e?r.drawIndexedIndirect(s,t):r.drawIndirect(s,t)}else e?r.drawIndexed(t.count,s,t.base,t.baseVertex??0,0):r.draw(t.count,s,t.base,0)}r&&(this.clearVertexBuffer(),this.pipeline=null)}setShader(t,e=!1){t!==this.shader&&(this.shader=t)}setBlendState(t){this.blendState.copy(t)}setDepthState(t){this.depthState.copy(t)}setStencilState(t,e){if(t||e){this.stencilEnabled=!0,this.stencilFront.copy(t??q.n.DEFAULT),this.stencilBack.copy(e??q.n.DEFAULT);const s=this.stencilFront.ref;this.stencilRef!==s&&(this.stencilRef=s,this.passEncoder.setStencilReference(s))}else this.stencilEnabled=!1}setBlendColor(t,e,s,i){const n=this.blendColor;t===n.r&&e===n.g&&s===n.b&&i===n.a||(n.set(t,e,s,i),this.passEncoder.setBlendConstant(n))}setCullMode(t){this.cullMode=t}setAlphaToCoverage(t){}initializeContextCaches(){super.initializeContextCaches()}setupPassEncoderDefaults(){this.pipeline=null,this.stencilRef=0,this.blendColor.set(0,0,0,0)}_uploadDirtyTextures(){this.textures.forEach(t=>{(t._needsUpload||t._needsMipmaps)&&t.upload()})}setupTimeStampWrites(t,e){if(this.gpuProfiler._enabled&&this.gpuProfiler.timestampQueriesSet){const s=this.gpuProfiler.getSlot(e);(t=t??{}).timestampWrites={querySet:this.gpuProfiler.timestampQueriesSet.querySet,beginningOfPassWriteIndex:2*s,endOfPassWriteIndex:2*s+1}}return t}startRenderPass(t){this._uploadDirtyTextures();const e=t.renderTarget||this.backBuffer;this.renderTarget=e;const s=e.impl;e!==this.backBuffer&&this.initRenderTarget(e),s.setupForRenderPass(t,e);const i=s.renderPassDescriptor;this.setupTimeStampWrites(i,t.name);const n=this.getCommandEncoder();this.passEncoder=n.beginRenderPass(i),this.passEncoder.label=`${t.name}-PassEncoder RT:${e.name}`,this.setupPassEncoderDefaults();const{width:r,height:a}=e;this.setViewport(0,0,r,a),this.setScissor(0,0,r,a),this.insideRenderPass=!0}endRenderPass(t){this.passEncoder.end(),this.passEncoder=null,this.insideRenderPass=!1,this.bindGroupFormats.length=0;const e=this.renderTarget;if(e&&e.depthBuffer&&t.depthStencilOps.resolveDepth&&t.samples>1&&e.autoResolve){const t=e.impl.depthAttachment,s=e.depthBuffer.impl.gpuTexture;t&&s&&this.resolver.resolveDepth(this.commandEncoder,t.multisampledDepthBuffer,s)}for(let s=0;s<t.colorArrayOps.length;s++){t.colorArrayOps[s].genMipmaps&&this.mipmapRenderer.generate(t.renderTarget._colorBuffers[s].impl)}}startComputePass(t){this.pipeline=null;const e=this.setupTimeStampWrites(void 0,t),s=this.getCommandEncoder();this.passEncoder=s.beginComputePass(e),this.insideRenderPass=!0}endComputePass(){this.passEncoder.end(),this.passEncoder=null,this.insideRenderPass=!1,this.bindGroupFormats.length=0}computeDispatch(t,e="Unnamed"){this.startComputePass(e);for(let s=0;s<t.length;s++){const e=t[s];e.applyParameters(),e.impl.updateBindGroup()}for(let s=0;s<t.length;s++){const e=t[s];e.impl.dispatch(e.countX,e.countY,e.countZ)}this.endComputePass()}getCommandEncoder(){let t=this.commandEncoder;return t||(t=this.wgpu.createCommandEncoder(),this.commandEncoder=t),t}endCommandEncoder(){const{commandEncoder:t}=this;if(t){const e=t.finish();this.addCommandBuffer(e),this.commandEncoder=null}}addCommandBuffer(t,e=!1){e?this.commandBuffers.unshift(t):this.commandBuffers.push(t)}submit(){this.endCommandEncoder(),this.commandBuffers.length>0&&(this.dynamicBuffers.submit(),this.wgpu.queue.submit(this.commandBuffers),this.commandBuffers.length=0,this.dynamicBuffers.onCommandBuffersSubmitted())}clear(t){t.flags&&this.clearRenderer.clear(this,this.renderTarget,t,this.defaultClearOptions)}setViewport(t,e,s,i){this.passEncoder&&(this.renderTarget.flipY||(e=this.renderTarget.height-e-i),this.vx=t,this.vy=e,this.vw=s,this.vh=i,this.passEncoder.setViewport(t,e,s,i,0,1))}setScissor(t,e,s,i){this.passEncoder&&(this.renderTarget.flipY||(e=this.renderTarget.height-e-i),this.sx=t,this.sy=e,this.sw=s,this.sh=i,this.passEncoder.setScissorRect(t,e,s,i))}clearStorageBuffer(t,e=0,s=t.byteSize){this.getCommandEncoder().clearBuffer(t.buffer,e,s)}readStorageBuffer(t,e=0,s=t.byteSize-e,i=null,n=!1){const r=this.createBufferImpl(a.PyV|a._Rt);r.allocate(this,s);const o=r.buffer;return this.getCommandEncoder().copyBufferToBuffer(t.buffer,e,o,0,s),this.readBuffer(r,s,i,n)}readBuffer(t,e,s=null,i=!1){const n=t.buffer;return new Promise((r,a)=>{const o=()=>{n?.mapAsync(GPUMapMode.READ).then(()=>{s??=new Uint8Array(e);const i=n.getMappedRange(0,e),a=s.constructor;s.set(new a(i)),n.unmap(),t.destroy(this),r(s)})};i?(this.submit(),o()):setTimeout(()=>{o()})})}writeStorageBuffer(t,e=0,s,i=0,n){this.wgpu.queue.writeBuffer(t.buffer,e,s,i,n)}copyRenderTarget(t,e,s,i){const n={width:t?t.width:e.width,height:t?t.height:e.height,depthOrArrayLayers:1},r=this.getCommandEncoder();if(s){const s={texture:t?t.colorBuffer.impl.gpuTexture:this.backBuffer.impl.assignedColorTexture,mipLevel:0},i={texture:e?e.colorBuffer.impl.gpuTexture:this.backBuffer.impl.assignedColorTexture,mipLevel:0};r.copyTextureToTexture(s,i,n)}if(i){const s=(t||this.renderTarget).impl.depthAttachment.depthTexture;if(t.samples>1){const t=e.colorBuffer.impl.gpuTexture;this.resolver.resolveDepth(r,s,t)}else{const t={texture:s,mipLevel:0},i={texture:e?e.depthBuffer.impl.gpuTexture:this.renderTarget.impl.depthAttachment.depthTexture,mipLevel:0};r.copyTextureToTexture(t,i,n)}}return!0}}var Ae=s(72233),Ce=s(11800);var Pe=s(3142);const De=({children:t,className:e="pc-app",style:s={width:"100%",height:"100%"},...r})=>{const a=(0,n.useRef)(null);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(Le,{className:e,style:s,ref:a}),(0,i.jsx)(Me,{canvasRef:a,...r,children:t})]})},Le=n.memo(n.forwardRef((t,e)=>{const{className:s,style:n}=t;return(0,i.jsx)("canvas",{ref:e,className:s,style:n,"aria-label":"Interactive 3D Scene"})})),Me=t=>{const{children:e,...s}=t,h=(0,G.hE)(s,Ie),{canvasRef:c,fillMode:d=r.Ol,resolutionMode:f=r.hD,usePhysics:p=!1,graphicsDeviceOptions:S,deviceTypes:y=[a.Nwc],...x}=h,T=y.join("-"),w=(0,n.useMemo)(()=>S?Object.entries(S).sort(([t],[e])=>t.localeCompare(e)).map(([t,e])=>`${t}:${String(e)}`).join("|"):"none",[S]),b=(0,n.useMemo)(()=>({...H,...S}),[S]),[E,A]=(0,n.useState)(null),C=(0,n.useRef)(null),P=(0,n.useMemo)(()=>new Set,[]);return B(C.current,c.current,P),(0,n.useLayoutEffect)(()=>{let t=!1;return(async()=>{const e=c.current;if(!e||C.current)return;const s=await async function(t,e={}){const s=e.deviceTypes??[];l.i.browser&&globalThis.navigator?.xr&&(e.xrCompatible??=!0);const i=s.map(s=>s===a.yK5&&globalThis.navigator?.gpu?async()=>new Ee(t,e).initWebGpu(e.glslangUrl,e.twgslUrl):s===a.Nwc?async()=>new Ae.z(t,e):s===a.RaA?async()=>new Ce.f(t,e):async()=>{throw new Error(`Unsupported device type: ${s}`)});for(const r of i)try{const t=await r();if(t)return t}catch(n){console.log(n)}throw new Error("Failed to create a graphics device")}(e,{deviceTypes:y,...b});if(t)return void s.destroy?.();const i=new o.l(e,{mouse:new u(e),touch:new m(e),graphicsDevice:s});i.start(),C.current=i,A(i)})(),()=>{t=!0,C.current&&(C.current.destroy(),C.current=null,A(null))}},[w,T]),(0,n.useEffect)(()=>{E&&(E.setCanvasFillMode(d),E.setCanvasResolution(f))},[E,d,f]),(0,n.useLayoutEffect)(()=>{E&&(0,G.FT)(E,Ie.schema,x)}),E?(0,i.jsx)(V,{enabled:p,app:E,children:(0,i.jsx)(_.B.Provider,{value:C.current,children:(0,i.jsx)(v.q.Provider,{value:P,children:(0,i.jsx)(g.C.Provider,{value:C.current?.root,children:e})})})}):null},Ie=(0,G.xE)("Application",()=>(0,G.mQ)(),t=>t.destroy());Ie.schema={...Ie.schema,deviceTypes:{validate:t=>Array.isArray(t)&&t.every(t=>"string"==typeof t&&[a.yK5,a.Nwc,a.RaA].includes(t)),errorMsg:t=>`deviceTypes must be an array containing one or more of: '${a.yK5}', '${a.Nwc}', '${a.RaA}'. Received: ['${t}']`,default:"test"===Pe._?[a.RaA]:[a.Nwc]},className:{validate:t=>"string"==typeof t,errorMsg:t=>`className must be a string. Received: ${t}`,default:"pc-app"},style:{validate:t=>"object"==typeof t&&null!==t,errorMsg:t=>`style must be an object. Received: ${t}`,default:{width:"100%",height:"100%"}},canvasRef:{validate:t=>null!==t&&"object"==typeof t&&"current"in t,errorMsg:t=>`canvasRef must be a React ref object. Received: ${t}`,default:null},usePhysics:{validate:t=>"boolean"==typeof t,errorMsg:t=>`usePhysics must be a boolean. Received: ${t}`,default:!1},fillMode:{validate:t=>"string"==typeof t&&[r.Ol,r.kY,r.Wx].includes(t),errorMsg:()=>`"fillMode" must be one of: ${r.Ol}, ${r.kY}, ${r.Wx}`,default:r.Ol},resolutionMode:{validate:t=>"string"==typeof t&&[r.hD,r.GL].includes(t),errorMsg:()=>`"resolutionMode" must be one of: ${r.hD}, ${r.GL}`,default:r.hD},graphicsDeviceOptions:{validate:t=>void 0===t||"object"==typeof t&&null!==t,errorMsg:t=>`graphicsDeviceOptions must be an object. Received: ${t}`,default:void 0}}},23852:(t,e,s)=>{s.d(e,{_3:()=>i});const i=new RegExp("^\\s*(?:(?:[a-z]+[a-z0-9\\-+.]*:)?//|data:|blob:)","i")},27351:(t,e,s)=>{s.d(e,{$1A:()=>T,$75:()=>B,$9T:()=>b,$JG:()=>it,$M5:()=>h,$Tp:()=>j,$se:()=>Pt,AvR:()=>vt,AyA:()=>Ct,BEJ:()=>ce,Bo6:()=>ct,COF:()=>Ut,CTD:()=>E,Ckn:()=>Gt,Cno:()=>Ot,Df4:()=>Rt,E5o:()=>_e,F3J:()=>X,FCf:()=>ne,G2Z:()=>Lt,Gc8:()=>Et,GyL:()=>L,HGq:()=>c,HVe:()=>p,IaO:()=>pt,JQq:()=>Q,Jb9:()=>qt,JdY:()=>ft,JqS:()=>Ft,KMC:()=>ot,KQ8:()=>st,L$7:()=>Nt,LF5:()=>me,LLJ:()=>d,M2Z:()=>tt,M5l:()=>Yt,N9O:()=>oe,Nit:()=>n,NkS:()=>U,Nt9:()=>yt,OPe:()=>Jt,OZy:()=>rt,OjN:()=>Ie,PDy:()=>ue,Q$0:()=>kt,QKi:()=>dt,QNk:()=>xe,Q_7:()=>V,Qed:()=>C,Qlj:()=>J,R9U:()=>de,RDY:()=>nt,RjB:()=>o,SU_:()=>S,SYz:()=>N,Sm5:()=>ye,SzJ:()=>ge,UQL:()=>Re,VUe:()=>Ce,VqA:()=>M,Vx7:()=>xt,WLb:()=>Z,XEj:()=>Qt,XjC:()=>Kt,YJk:()=>_t,Yns:()=>ve,Yrs:()=>Xt,Z0g:()=>z,Z7c:()=>f,ZSA:()=>g,ZSD:()=>Tt,_Bn:()=>H,_Oe:()=>Le,_Sr:()=>le,_wM:()=>m,aPl:()=>St,amd:()=>$t,au1:()=>G,b2c:()=>It,bJd:()=>Me,bYZ:()=>l,beI:()=>Zt,cKd:()=>bt,cbd:()=>k,czD:()=>se,dGk:()=>D,dcX:()=>r,e3T:()=>jt,eQO:()=>pe,fJi:()=>ht,g72:()=>Y,gH7:()=>Te,gpt:()=>et,hA3:()=>ie,hQF:()=>Dt,hQr:()=>wt,hcE:()=>ut,i96:()=>a,iUs:()=>O,ipw:()=>lt,j06:()=>R,jZy:()=>re,kav:()=>Vt,kxh:()=>P,l3Q:()=>at,l3T:()=>De,lUT:()=>he,lh8:()=>gt,llM:()=>mt,llp:()=>Se,m2Y:()=>x,nZ5:()=>Mt,nxd:()=>ae,ov8:()=>Ht,pP7:()=>te,qXo:()=>_,q_c:()=>At,rGA:()=>fe,rZI:()=>u,rpD:()=>I,s0F:()=>Pe,sHg:()=>W,t0Z:()=>A,tEI:()=>Wt,tN7:()=>Ae,tTI:()=>Bt,tt$:()=>F,uEK:()=>w,vT3:()=>ee,wAR:()=>K,wJX:()=>y,y0b:()=>q,yrP:()=>zt,yzJ:()=>$});var i=s(91622);const n=0,r=1,a=2,o=3,l=4,h=5,c=6,d=7,u=8,f=9,p=10,m={[n]:"SUBTRACTIVE",[r]:"ADDITIVE",[a]:"NORMAL",[o]:"NONE",[l]:"PREMULTIPLIED",[h]:"MULTIPLICATIVE",[c]:"ADDITIVEALPHA",[d]:"MULTIPLICATIVE2X",[u]:"SCREEN",[f]:"MIN",[p]:"MAX"},_="none",g="linear",v=0,S=2,y={[v]:"NONE",[S]:"SCHLICK"},x=0,T=15,w=0,b=1,E=2,A=3,C=4,P=0,D=1,L=2,M={[P]:"DIRECTIONAL",[D]:"OMNI",[L]:"SPOT"},I=100,R=0,F=1,O=2,N=3,k={[R]:"PUNCTUAL",[F]:"RECT",[O]:"DISK",[N]:"SPHERE"},B=0,U=1,z={[B]:"LINEAR",[U]:"INVERSESQUARED"},V=0,G=2,H=3,W=5,X=6,$=7,q=8,j=new Map([[W,{name:"PCF1_32F",kind:"PCF1",format:i.Wbd,pcf:!0}],[V,{name:"PCF3_32F",kind:"PCF3",format:i.Wbd,pcf:!0}],[4,{name:"PCF5_32F",kind:"PCF5",format:i.Wbd,pcf:!0}],[$,{name:"PCF1_16F",kind:"PCF1",format:i.F0N,pcf:!0}],[q,{name:"PCF3_16F",kind:"PCF3",format:i.F0N,pcf:!0}],[9,{name:"PCF5_16F",kind:"PCF5",format:i.F0N,pcf:!0}],[G,{name:"VSM_16F",kind:"VSM",format:i.WBN,vsm:!0}],[H,{name:"VSM_32F",kind:"VSM",format:i.s7h,vsm:!0}],[X,{name:"PCSS_32F",kind:"PCSS",format:i.IQA,pcss:!0}]]),Y=255,K=1,Z=0,Q=0,J=0,tt=1,et=0,st=1,it=0,nt=1,rt=0,at=1,ot=2,lt=0,ht=1,ct={[lt]:"NONE",[ht]:"BOX"},dt="mul",ut=0,ft=1,pt={[ut]:"NONE",[ft]:"SRGB"},mt=0,_t=6,gt=["LINEAR","FILMIC","HEJL","ACES","ACES2","NEUTRAL","NONE"],vt=0,St=1,yt=2,xt={[vt]:"NONE",[St]:"AO",[yt]:"GLOSSDEPENDENT"},Tt="none",wt="envAtlas",bt="envAtlasHQ",Et="cubeMap",At="sphereMap",Ct={[Tt]:"NONE",[wt]:"ENVATLAS",[bt]:"ENVATLASHQ",[Et]:"CUBEMAP",[At]:"SPHEREMAP"},Pt="ambientSH",Dt="envAtlas",Lt="constant",Mt={[Pt]:"AMBIENTSH",[Dt]:"ENVALATLAS",[Lt]:"CONSTANT"},It=1,Rt=2,Ft=4,Ot=8,Nt=16,kt=32,Bt=64,Ut=128,zt=256,Vt=512,Gt=1024,Ht=2048,Wt=4096,Xt=8192,$t=16384,qt=0,jt=1,Yt=2,Kt=1,Zt=2,Qt=4,Jt=0,te=1,ee=2,se=3,ie=0,ne=1,re=2,ae={[ie]:"SIMPLE",[ne]:"SLICED",[re]:"TILED"},oe=1,le=0,he=0,ce=1,de=2,ue=3,fe=4,pe=5,me=0,_e=1,ge=0,ve=1,Se="infinite",ye="box",xe="dome",Te="none",we="bayer8",be="bluenoise",Ee="ignnoise",Ae={[Te]:"NONE",[we]:"BAYER8",[be]:"BLUENOISE",[Ee]:"IGNNOISE"},Ce="prerender",Pe="postrender",De="prerender:layer",Le="postrender:layer",Me="precull",Ie="postcull",Re="cull:end"},27393:(t,e,s)=>{s.d(e,{y:()=>d});var i=s(88525),n=s(59752),r=s(50247),a=s(91622),o=s(422);const l=new r.w,h=[2,4,8,12,16],c=new o.N;class d{constructor(t,e,s){this.device=t,this._elements=[],this.hasUv0=!1,this.hasUv1=!1,this.hasColor=!1,this.hasTangents=!1,this.verticesByteSize=0,this.vertexCount=s,this.interleaved=void 0===s,this.instancing=!1,this.size=e.reduce((t,e)=>t+4*Math.ceil(e.components*a.sYG[e.type]/4),0);let i,r=0;for(let o=0,l=e.length;o<l;o++){const t=e[o];i=t.components*a.sYG[t.type],s&&(r=n.D.roundUp(r,i));const l=t.asInt??!1,h=!l&&(t.normalize??!1),c={name:t.semantic,offset:s?r:t.hasOwnProperty("offset")?t.offset:r,stride:s?i:t.hasOwnProperty("stride")?t.stride:this.size,dataType:t.type,numComponents:t.components,normalize:h,size:i,asInt:l};this._elements.push(c),r+=s?i*s:4*Math.ceil(i/4),t.semantic===a.slc?this.hasUv0=!0:t.semantic===a.zEd?this.hasUv1=!0:t.semantic===a.F8$?this.hasColor=!0:t.semantic===a.h3u&&(this.hasTangents=!0)}s&&(this.verticesByteSize=r),this._evaluateHash()}get elements(){return this._elements}static getDefaultInstancingFormat(t){return c.get(t,()=>new d(t,[{semantic:a.rGZ,components:4,type:a.n$B},{semantic:a.yZ0,components:4,type:a.n$B},{semantic:a.yof,components:4,type:a.n$B},{semantic:a.FHg,components:4,type:a.n$B}]))}static isElementValid(t,e){const s=e.components*a.sYG[e.type];return!(t.isWebGPU&&!h.includes(s))}update(){this._evaluateHash()}_evaluateHash(){const t=[],e=[],s=this._elements.length;for(let i=0;i<s;i++){const{name:s,dataType:n,numComponents:r,normalize:a,offset:o,stride:l,size:h,asInt:c}=this._elements[i],d=s+n+r+a+c;t.push(d);const u=d+o+l+h;e.push(u)}t.sort();const n=t.join();this.batchingHash=(0,i.s)(n),this.shaderProcessingHashString=n,this.renderingHashString=e.join("_"),this.renderingHash=l.get(this.renderingHashString)}}},28453:(t,e,s)=>{s.d(e,{R:()=>a,x:()=>o});var i=s(96540);const n={},r=i.createContext(n);function a(t){const e=i.useContext(r);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:a(t.components),i.createElement(r.Provider,{value:e},t.children)}},33595:(t,e,s)=>{s.d(e,{GL:()=>o,Ol:()=>i,Wx:()=>r,hD:()=>a,kY:()=>n});const i="NONE",n="FILL_WINDOW",r="KEEP_ASPECT",a="AUTO",o="FIXED"},36805:(t,e,s)=>{s.d(e,{k:()=>r});var i=s(59752),n=s(93953);class r{constructor(t=0,e=0,s=0,i=1){4===t.length?(this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3]):(this.x=t,this.y=e,this.z=s,this.w=i)}clone(){return new(0,this.constructor)(this.x,this.y,this.z,this.w)}conjugate(t=this){return this.x=-1*t.x,this.y=-1*t.y,this.z=-1*t.z,this.w=t.w,this}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}getAxisAngle(t){let e=2*Math.acos(this.w);const s=Math.sin(e/2);return 0!==s?(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s,(t.x<0||t.y<0||t.z<0)&&(t.x*=-1,t.y*=-1,t.z*=-1,e*=-1)):(t.x=1,t.y=0,t.z=0),e*i.D.RAD_TO_DEG}getEulerAngles(t=new n.e){let e,s,r;const a=this.x,o=this.y,l=this.z,h=this.w,c=2*(h*o-a*l);return c<=-.99999?(e=2*Math.atan2(a,h),s=-Math.PI/2,r=0):c>=.99999?(e=2*Math.atan2(a,h),s=Math.PI/2,r=0):(e=Math.atan2(2*(h*a+o*l),1-2*(a*a+o*o)),s=Math.asin(c),r=Math.atan2(2*(h*l+a*o),1-2*(o*o+l*l))),t.set(e,s,r).mulScalar(i.D.RAD_TO_DEG)}invert(t=this){return this.conjugate(t).normalize()}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}lerp(t,e,s){const i=(1-s)*(t.dot(e)<0?-1:1);return this.x=t.x*i+e.x*s,this.y=t.y*i+e.y*s,this.z=t.z*i+e.z*s,this.w=t.w*i+e.w*s,this.normalize()}mul(t){const e=this.x,s=this.y,i=this.z,n=this.w,r=t.x,a=t.y,o=t.z,l=t.w;return this.x=n*r+e*l+s*o-i*a,this.y=n*a+s*l+i*r-e*o,this.z=n*o+i*l+e*a-s*r,this.w=n*l-e*r-s*a-i*o,this}mulScalar(t,e=this){return this.x=e.x*t,this.y=e.y*t,this.z=e.z*t,this.w=e.w*t,this}mul2(t,e){const s=t.x,i=t.y,n=t.z,r=t.w,a=e.x,o=e.y,l=e.z,h=e.w;return this.x=r*a+s*h+i*l-n*o,this.y=r*o+i*h+n*a-s*l,this.z=r*l+n*h+s*o-i*a,this.w=r*h-s*a-i*o-n*l,this}normalize(t=this){let e=t.length();return 0===e?(this.x=this.y=this.z=0,this.w=1):(e=1/e,this.x=t.x*e,this.y=t.y*e,this.z=t.z*e,this.w=t.w*e),this}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}setFromAxisAngle(t,e){e*=.5*i.D.DEG_TO_RAD;const s=Math.sin(e),n=Math.cos(e);return this.x=s*t.x,this.y=s*t.y,this.z=s*t.z,this.w=n,this}setFromEulerAngles(t,e,s){if(t instanceof n.e){const i=t;t=i.x,e=i.y,s=i.z}const r=.5*i.D.DEG_TO_RAD;t*=r,e*=r,s*=r;const a=Math.sin(t),o=Math.cos(t),l=Math.sin(e),h=Math.cos(e),c=Math.sin(s),d=Math.cos(s);return this.x=a*h*d-o*l*c,this.y=o*l*d+a*h*c,this.z=o*h*c-a*l*d,this.w=o*h*d+a*l*c,this}setFromMat4(t){const e=t.data;let s,i=e[0],n=e[1],r=e[2],a=e[4],o=e[5],l=e[6],h=e[8],c=e[9],d=e[10];return s=i*i+n*n+r*r,0===s?this.set(0,0,0,1):(s=1/Math.sqrt(s),i*=s,n*=s,r*=s,s=a*a+o*o+l*l,0===s?this.set(0,0,0,1):(s=1/Math.sqrt(s),a*=s,o*=s,l*=s,s=h*h+c*c+d*d,0===s?this.set(0,0,0,1):(s=1/Math.sqrt(s),h*=s,c*=s,d*=s,d<0?i>o?this.set(1+i-o-d,n+a,h+r,l-c):this.set(n+a,1-i+o-d,l+c,h-r):i<-o?this.set(h+r,l+c,1-i-o+d,n-a):this.set(l-c,h-r,n-a,1+i+o+d),this.mulScalar(1/this.length()))))}setFromDirections(t,e){const s=1+t.dot(e);return s<Number.EPSILON?Math.abs(t.x)>Math.abs(t.y)?(this.x=-t.z,this.y=0,this.z=t.x,this.w=0):(this.x=0,this.y=-t.z,this.z=t.y,this.w=0):(this.x=t.y*e.z-t.z*e.y,this.y=t.z*e.x-t.x*e.z,this.z=t.x*e.y-t.y*e.x,this.w=s),this.normalize()}slerp(t,e,s){const i=t.x,n=t.y,r=t.z,a=t.w;let o=e.x,l=e.y,h=e.z,c=e.w,d=a*c+i*o+n*l+r*h;if(d<0&&(c=-c,o=-o,l=-l,h=-h,d=-d),Math.abs(d)>=1)return this.w=a,this.x=i,this.y=n,this.z=r,this;const u=Math.acos(d),f=Math.sqrt(1-d*d);if(Math.abs(f)<.001)return this.w=.5*a+.5*c,this.x=.5*i+.5*o,this.y=.5*n+.5*l,this.z=.5*r+.5*h,this;const p=Math.sin((1-s)*u)/f,m=Math.sin(s*u)/f;return this.w=a*p+c*m,this.x=i*p+o*m,this.y=n*p+l*m,this.z=r*p+h*m,this}transformVector(t,e=new n.e){const s=t.x,i=t.y,r=t.z,a=this.x,o=this.y,l=this.z,h=this.w,c=h*s+o*r-l*i,d=h*i+l*s-a*r,u=h*r+a*i-o*s,f=-a*s-o*i-l*r;return e.x=c*h+f*-a+d*-l-u*-o,e.y=d*h+f*-o+u*-a-c*-l,e.z=u*h+f*-l+c*-o-d*-a,e}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this.z=t[e+2]??this.z,this.w=t[e+3]??this.w,this}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}static{this.IDENTITY=Object.freeze(new r(0,0,0,1))}static{this.ZERO=Object.freeze(new r(0,0,0,0))}}},37804:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n#define attribute in\n#define varying out\n#define texture2D texture\n#define utexture2D texture\n#define itexture2D texture\n#define GL2\n#define VERTEXSHADER\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name\n"},38964:(t,e,s)=>{s.d(e,{Z:()=>i});class i{constructor(t=0,e=0,s=0,i=0){4===t.length?(this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3]):(this.x=t,this.y=e,this.z=s,this.w=i)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}clone(){return new(0,this.constructor)(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}div(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this.z=t.z/e.z,this.w=t.w/e.w,this}divScalar(t){return this.x/=t,this.y/=t,this.z/=t,this.w/=t,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this.z=t.z+s*(e.z-t.z),this.w=t.w+s*(e.w-t.w),this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this.w=t.w*e.w,this}mulScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=t.w*s}return this}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this.z=Math.floor(t.z),this.w=Math.floor(t.w),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this.z=Math.ceil(t.z),this.w=Math.ceil(t.w),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this.z=Math.round(t.z),this.w=Math.round(t.w),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),t.w<this.w&&(this.w=t.w),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),t.w>this.w&&(this.w=t.w),this}set(t,e,s,i){return this.x=t,this.y=e,this.z=s,this.w=i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this.z=t[e+2]??this.z,this.w=t[e+3]??this.w,this}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}static{this.ZERO=Object.freeze(new i(0,0,0,0))}static{this.HALF=Object.freeze(new i(.5,.5,.5,.5))}static{this.ONE=Object.freeze(new i(1,1,1,1))}}},39462:(t,e,s)=>{s.d(e,{A:()=>i});const i={delimiter:"/",join(...t){let e=t[0];for(let s=0;s<t.length-1;s++){const n=t[s],r=t[s+1];r[0]!==i.delimiter?n&&r&&n[n.length-1]!==i.delimiter&&r[0]!==i.delimiter?e+=i.delimiter+r:e+=r:e=r}return e},normalize(t){const e=t.startsWith(i.delimiter),s=t.endsWith(i.delimiter),n=t.split("/");let r="",a=[];for(let o=0;o<n.length;o++)""!==n[o]&&"."!==n[o]&&(".."===n[o]&&a.length>0?a=a.slice(0,a.length-2):(o>0&&a.push(i.delimiter),a.push(n[o])));return r=a.join(""),e||r[0]!==i.delimiter||(r=r.slice(1)),s&&r[r.length-1]!==i.delimiter&&(r+=i.delimiter),r},split(t){const e=t.lastIndexOf(i.delimiter);return-1!==e?[t.substring(0,e),t.substring(e+1)]:["",t]},getBasename:t=>i.split(t)[1],getDirectory:t=>i.split(t)[0],getExtension(t){const e=t.split("?")[0].split(".").pop();return e!==t?`.${e}`:""},isRelativePath:t=>"/"!==t.charAt(0)&&null===t.match(/:\/\//),extractPath(t){let e="";const s=t.split("/");let n=0;if(s.length>1)if(i.isRelativePath(t))if("."===s[0])for(n=0;n<s.length-1;++n)e+=0===n?s[n]:`/${s[n]}`;else if(".."===s[0])for(n=0;n<s.length-1;++n)e+=0===n?s[n]:`/${s[n]}`;else for(e=".",n=0;n<s.length-1;++n)e+=`/${s[n]}`;else for(n=0;n<s.length-1;++n)e+=0===n?s[n]:`/${s[n]}`;return e}}},39964:(t,e,s)=>{s.d(e,{V:()=>n});var i=s(91622);class n{static calcLevelDimension(t,e){return Math.max(t>>e,1)}static calcMipLevelsCount(t,e,s=1){return 1+Math.floor(Math.log2(Math.max(t,e,s)))}static calcLevelGpuSize(t,e,s,n){const r=i.s7S.get(n),a=i.s7S.get(n)?.size??0;if(a>0)return t*e*s*a;const o=r.blockSize??0;let l=Math.floor((t+3)/4);const h=Math.floor((e+3)/4),c=Math.floor((s+3)/4);return n!==i.TyC&&n!==i.apD||(l=Math.max(Math.floor(l/2),1)),l*h*c*o}static calcGpuSize(t,e,s,i,r,a){let o=0;for(;o+=n.calcLevelGpuSize(t,e,s,i),r&&(1!==t||1!==e||1!==s);)t=Math.max(t>>1,1),e=Math.max(e>>1,1),s=Math.max(s>>1,1);return o*(a?6:1)}}},40050:(t,e,s)=>{s.d(e,{Z:()=>n});var i=s(59752);class n{constructor(t=0,e=0){2===t.length?(this.x=t[0],this.y=t[1]):(this.x=t,this.y=e)}add(t){return this.x+=t.x,this.y+=t.y,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}clone(){return new(0,this.constructor)(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}cross(t){return this.x*t.y-this.y*t.x}distance(t){const e=this.x-t.x,s=this.y-t.y;return Math.sqrt(e*e+s*s)}div(t){return this.x/=t.x,this.y/=t.y,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this}divScalar(t){return this.x/=t,this.y/=t,this}dot(t){return this.x*t.x+this.y*t.y}equals(t){return this.x===t.x&&this.y===t.y}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSq(){return this.x*this.x+this.y*this.y}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this}mul(t){return this.x*=t.x,this.y*=t.y,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this}mulScalar(t){return this.x*=t,this.y*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s}return this}rotate(t){const e=Math.atan2(this.x,this.y)+t*i.D.DEG_TO_RAD,s=Math.sqrt(this.x*this.x+this.y*this.y);return this.x=Math.sin(e)*s,this.y=Math.cos(e)*s,this}angle(){return Math.atan2(this.x,this.y)*i.D.RAD_TO_DEG}angleTo(t){return Math.atan2(this.x*t.y+this.y*t.x,this.x*t.x+this.y*t.y)*i.D.RAD_TO_DEG}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),this}set(t,e){return this.x=t,this.y=e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}subScalar(t){return this.x-=t,this.y-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this}toString(){return`[${this.x}, ${this.y}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}static angleRad(t,e){return Math.atan2(t.x*e.y-t.y*e.x,t.x*e.x+t.y*e.y)}static{this.ZERO=Object.freeze(new n(0,0))}static{this.HALF=Object.freeze(new n(.5,.5))}static{this.ONE=Object.freeze(new n(1,1))}static{this.UP=Object.freeze(new n(0,1))}static{this.DOWN=Object.freeze(new n(0,-1))}static{this.RIGHT=Object.freeze(new n(1,0))}static{this.LEFT=Object.freeze(new n(-1,0))}}},43232:(t,e,s)=>{s.d(e,{Q:()=>o,g:()=>a});var i=s(59752),n=s(91622);const r=[];r[n.GF5]=1,r[n.Qhq]=2,r[n.XAr]=3,r[n.cyR]=4,r[n.pG9]=1,r[n.dD6]=2,r[n.Yj5]=3,r[n.RsJ]=4,r[n.MX7]=1,r[n.enT]=2,r[n.ZKF]=3,r[n.S8r]=4,r[n.Eb5]=8,r[n.xzR]=12,r[n.CPw]=16,r[n.GAt]=1,r[n.jk_]=2,r[n.qYl]=3,r[n.jFk]=4;class a{get isArrayType(){return this.count>0}constructor(t,e,s=0){if(this.shortName=t,this.name=s?`${t}[0]`:t,this.type=e,this.numComponents=r[e],this.updateType=e,s>0)switch(e){case n.GF5:this.updateType=n.Nv2;break;case n.pG9:this.updateType=n.aJo;break;case n.GAt:this.updateType=n.lW3;break;case n.MX7:this.updateType=n.lGY;break;case n.Qhq:this.updateType=n.FEO;break;case n.dD6:this.updateType=n.kzn;break;case n.jk_:this.updateType=n.CiQ;break;case n.enT:this.updateType=n.F1y;break;case n.XAr:this.updateType=n.iYc;break;case n.Yj5:this.updateType=n.n7d;break;case n.qYl:this.updateType=n.Jm2;break;case n.ZKF:this.updateType=n.yD7;break;case n.cyR:this.updateType=n.$Cd;break;case n.RsJ:this.updateType=n.KP3;break;case n.jFk:this.updateType=n.Ych;break;case n.S8r:this.updateType=n.rlo;break;case n.CPw:this.updateType=n.TWL}this.count=s;let a=this.numComponents;s&&(a=i.D.roundUp(a,4)),this.byteSize=4*a,s&&(this.byteSize*=s)}calculateOffset(t){let e=this.byteSize<=8?this.byteSize:16;this.count&&(e=16),t=i.D.roundUp(t,e),this.offset=t/4}}class o{constructor(t,e){this.byteSize=0,this.map=new Map,this.scope=t.scope,this.uniforms=e;let s=0;for(let i=0;i<e.length;i++){const t=e[i];t.calculateOffset(s),s=4*t.offset+t.byteSize,t.scopeId=this.scope.resolve(t.name),this.map.set(t.name,t)}this.byteSize=i.D.roundUp(s,16)}get(t){return this.map.get(t)}}},45120:(t,e,s)=>{s.d(e,{C:()=>n,c:()=>r});var i=s(96540);const n=(0,i.createContext)(void 0),r=()=>{const t=(0,i.useContext)(n);if(void 0===t)throw new Error("`useParent` must be used within an App or Entity via a ParentContext.Provider");return t}},47422:(t,e,s)=>{s.d(e,{H:()=>o});var i=s(82549),n=s(50247),r=s(91622);const a=new n.w;class o{constructor(t=r.fsA,e=!0){this.data=0,this._depthBias=0,this._depthBiasSlope=0,this.key=0,this.func=t,this.write=e}set test(t){this.func=t?r.fsA:r.vpx,this.updateKey()}get test(){return this.func!==r.vpx}set write(t){this.data=i.p.set(this.data,t?1:0,3),this.updateKey()}get write(){return i.p.all(this.data,3)}set func(t){this.data=i.p.set(this.data,t,0,7),this.updateKey()}get func(){return i.p.get(this.data,0,7)}set depthBias(t){this._depthBias=t,this.updateKey()}get depthBias(){return this._depthBias}set depthBiasSlope(t){this._depthBiasSlope=t,this.updateKey()}get depthBiasSlope(){return this._depthBiasSlope}copy(t){return this.data=t.data,this._depthBias=t._depthBias,this._depthBiasSlope=t._depthBiasSlope,this.key=t.key,this}clone(){return(new this.constructor).copy(this)}updateKey(){const{data:t,_depthBias:e,_depthBiasSlope:s}=this,i=`${t}-${e}-${s}`;this.key=a.get(i)}equals(t){return this.key===t.key}static{this.DEFAULT=Object.freeze(new o)}static{this.NODEPTH=Object.freeze(new o(r.vpx,!1))}static{this.WRITEDEPTH=Object.freeze(new o(r.vpx,!0))}}},48355:(t,e,s)=>{s.d(e,{Q:()=>n});var i=s(59752);class n{constructor(t=0,e=0,s=0,i=1){const n=t.length;3===n||4===n?(this.r=t[0],this.g=t[1],this.b=t[2],this.a=t[3]??1):(this.r=t,this.g=e,this.b=s,this.a=i)}clone(){return new(0,this.constructor)(this.r,this.g,this.b,this.a)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this}equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}set(t,e,s,i=1){return this.r=t,this.g=e,this.b=s,this.a=i,this}lerp(t,e,s){return this.r=t.r+s*(e.r-t.r),this.g=t.g+s*(e.g-t.g),this.b=t.b+s*(e.b-t.b),this.a=t.a+s*(e.a-t.a),this}linear(t=this){return this.r=Math.pow(t.r,2.2),this.g=Math.pow(t.g,2.2),this.b=Math.pow(t.b,2.2),this.a=t.a,this}gamma(t=this){return this.r=Math.pow(t.r,1/2.2),this.g=Math.pow(t.g,1/2.2),this.b=Math.pow(t.b,1/2.2),this.a=t.a,this}mulScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}fromString(t){const e=parseInt(t.replace("#","0x"),16);let s;return t.length>7?s=i.D.intToBytes32(e):(s=i.D.intToBytes24(e),s[3]=255),this.set(s[0]/255,s[1]/255,s[2]/255,s[3]/255),this}fromArray(t,e=0){return this.r=t[e]??this.r,this.g=t[e+1]??this.g,this.b=t[e+2]??this.b,this.a=t[e+3]??this.a,this}toString(t,e){const{r:s,g:i,b:n,a:r}=this;if(e||s>1||i>1||n>1)return`${s.toFixed(3)}, ${i.toFixed(3)}, ${n.toFixed(3)}, ${r.toFixed(3)}`;let a=`#${((1<<24)+(Math.round(255*s)<<16)+(Math.round(255*i)<<8)+Math.round(255*n)).toString(16).slice(1)}`;if(!0===t){const t=Math.round(255*r).toString(16);this.a<16/255?a+=`0${t}`:a+=t}return a}toArray(t=[],e=0,s=!0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,s&&(t[e+3]=this.a),t}static{this.BLACK=Object.freeze(new n(0,0,0,1))}static{this.BLUE=Object.freeze(new n(0,0,1,1))}static{this.CYAN=Object.freeze(new n(0,1,1,1))}static{this.GRAY=Object.freeze(new n(.5,.5,.5,1))}static{this.GREEN=Object.freeze(new n(0,1,0,1))}static{this.MAGENTA=Object.freeze(new n(1,0,1,1))}static{this.RED=Object.freeze(new n(1,0,0,1))}static{this.WHITE=Object.freeze(new n(1,1,1,1))}static{this.YELLOW=Object.freeze(new n(1,1,0,1))}}},48786:(t,e,s)=>{s.d(e,{h:()=>n,z:()=>r});const i=new(s(422).N);function n(t){return i.get(t)}function r(t,e){i.get(t,()=>e)}},50247:(t,e,s)=>{s.d(e,{w:()=>i});class i{get(t){let e=this.map.get(t);return void 0===e&&(e=this.id++,this.map.set(t,e)),e}constructor(){this.map=new Map,this.id=0}}},51372:(t,e,s)=>{s.d(e,{Y:()=>n});var i=s(97213);class n extends i.J{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t){super(),this._index={},this._list=[],this._parent=t}add(...t){let e=!1;const s=this._processArguments(t,!0);if(!s.length)return e;for(let i=0;i<s.length;i++)this._index[s[i]]||(e=!0,this._index[s[i]]=!0,this._list.push(s[i]),this.fire("add",s[i],this._parent));return e&&this.fire("change",this._parent),e}remove(...t){let e=!1;if(!this._list.length)return e;const s=this._processArguments(t,!0);if(!s.length)return e;for(let i=0;i<s.length;i++)this._index[s[i]]&&(e=!0,delete this._index[s[i]],this._list.splice(this._list.indexOf(s[i]),1),this.fire("remove",s[i],this._parent));return e&&this.fire("change",this._parent),e}clear(){if(!this._list.length)return;const t=this._list.slice(0);this._list=[],this._index={};for(let e=0;e<t.length;e++)this.fire("remove",t[e],this._parent);this.fire("change",this._parent)}has(...t){return!!this._list.length&&this._has(this._processArguments(t))}_has(t){if(!this._list.length||!t.length)return!1;for(let e=0;e<t.length;e++)if(1===t[e].length){if(this._index[t[e][0]])return!0}else{let s=!0;for(let i=0;i<t[e].length;i++)if(!this._index[t[e][i]]){s=!1;break}if(s)return!0}return!1}list(){return this._list.slice(0)}_processArguments(t,e){const s=[];let i=[];if(!t||!t.length)return s;for(let n=0;n<t.length;n++)if(t[n]instanceof Array){e||(i=[]);for(let r=0;r<t[n].length;r++)"string"==typeof t[n][r]&&(e?s.push(t[n][r]):i.push(t[n][r]));!e&&i.length&&s.push(i)}else"string"==typeof t[n]&&(e?s.push(t[n]):s.push([t[n]]));return s}get size(){return this._list.length}}},51932:(t,e,s)=>{s.d(e,{I:()=>r,p:()=>a});var i=s(59752);class n{}class r{}class a{constructor(t,e,s){this.gpuBuffers=[],this.stagingBuffers=[],this.usedBuffers=[],this.activeBuffer=null,this.device=t,this.bufferSize=e,this.bufferAlignment=s}destroy(){this.gpuBuffers.forEach(t=>{t.destroy(this.device)}),this.gpuBuffers=null,this.stagingBuffers.forEach(t=>{t.destroy(this.device)}),this.stagingBuffers=null,this.usedBuffers=null,this.activeBuffer=null}alloc(t,e){if(this.activeBuffer){const t=i.D.roundUp(this.activeBuffer.size,this.bufferAlignment);this.bufferSize-t<e&&this.scheduleSubmit()}if(!this.activeBuffer){let t=this.gpuBuffers.pop();t||(t=this.createBuffer(this.device,this.bufferSize,!1));let e=this.stagingBuffers.pop();e||(e=this.createBuffer(this.device,this.bufferSize,!0)),this.activeBuffer=new n,this.activeBuffer.stagingBuffer=e,this.activeBuffer.gpuBuffer=t,this.activeBuffer.offset=0,this.activeBuffer.size=0}const s=this.activeBuffer,r=i.D.roundUp(s.size,this.bufferAlignment);t.gpuBuffer=s.gpuBuffer,t.offset=r,t.storage=s.stagingBuffer.alloc(r,e),s.size=r+e}scheduleSubmit(){this.activeBuffer&&(this.usedBuffers.push(this.activeBuffer),this.activeBuffer=null)}submit(){this.scheduleSubmit()}}},52874:(t,e,s)=>{s.d(e,{D:()=>h});var i=s(64919);class n extends i.p{constructor(t){super(),this.object=t,this.incRefCount()}}class r{destroy(){this.cache.forEach(t=>{t.object?.destroy()}),this.cache.clear()}clear(){this.cache.clear()}get(t){const e=this.cache.get(t);return e?(e.incRefCount(),e.object):null}set(t,e){this.cache.set(t,new n(e))}release(t){const e=this.cache.get(t);e&&(e.decRefCount(),0===e.refCount&&(this.cache.delete(t),e.object?.destroy()))}constructor(){this.cache=new Map}}var a=s(422);class o extends r{loseContext(t){this.clear()}}const l=new a.N,h=t=>l.get(t,()=>new o)},53282:(t,e,s)=>{s.d(e,{FT:()=>x,xE:()=>T,mQ:()=>w,s_:()=>E,cF:()=>S,hE:()=>y,mc:()=>g});var i=s(48355),n=s(40050),r=s(93953),a=s(38964),o=s(36805),l=s(3964),h=s(85450),c=s(80823),d=s(11800);const u={aliceblue:"#F0F8FF",antiquewhite:"#FAEBD7",aqua:"#00FFFF",aquamarine:"#7FFFD4",azure:"#F0FFFF",beige:"#F5F5DC",bisque:"#FFE4C4",black:"#000000",blanchedalmond:"#FFEBCD",blue:"#0000FF",blueviolet:"#8A2BE2",brown:"#A52A2A",burlywood:"#DEB887",cadetblue:"#5F9EA0",chartreuse:"#7FFF00",chocolate:"#D2691E",coral:"#FF7F50",cornflowerblue:"#6495ED",cornsilk:"#FFF8DC",crimson:"#DC143C",cyan:"#00FFFF",darkblue:"#00008B",darkcyan:"#008B8B",darkgoldenrod:"#B8860B",darkgray:"#A9A9A9",darkgreen:"#006400",darkgrey:"#A9A9A9",darkkhaki:"#BDB76B",darkmagenta:"#8B008B",darkolivegreen:"#556B2F",darkorange:"#FF8C00",darkorchid:"#9932CC",darkred:"#8B0000",darksalmon:"#E9967A",darkseagreen:"#8FBC8F",darkslateblue:"#483D8B",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",darkturquoise:"#00CED1",darkviolet:"#9400D3",deeppink:"#FF1493",deepskyblue:"#00BFFF",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1E90FF",firebrick:"#B22222",floralwhite:"#FFFAF0",forestgreen:"#228B22",fuchsia:"#FF00FF",gainsboro:"#DCDCDC",ghostwhite:"#F8F8FF",gold:"#FFD700",goldenrod:"#DAA520",gray:"#808080",green:"#008000",greenyellow:"#ADFF2F",grey:"#808080",honeydew:"#F0FFF0",hotpink:"#FF69B4",indianred:"#CD5C5C",indigo:"#4B0082",ivory:"#FFFFF0",khaki:"#F0E68C",lavender:"#E6E6FA",lavenderblush:"#FFF0F5",lawngreen:"#7CFC00",lemonchiffon:"#FFFACD",lightblue:"#ADD8E6",lightcoral:"#F08080",lightcyan:"#E0FFFF",lightgoldenrodyellow:"#FAFAD2",lightgray:"#D3D3D3",lightgreen:"#90EE90",lightgrey:"#D3D3D3",lightpink:"#FFB6C1",lightsalmon:"#FFA07A",lightseagreen:"#20B2AA",lightskyblue:"#87CEFA",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#B0C4DE",lightyellow:"#FFFFE0",lime:"#00FF00",limegreen:"#32CD32",linen:"#FAF0E6",magenta:"#FF00FF",maroon:"#800000",mediumaquamarine:"#66CDAA",mediumblue:"#0000CD",mediumorchid:"#BA55D3",mediumpurple:"#9370DB",mediumseagreen:"#3CB371",mediumslateblue:"#7B68EE",mediumspringgreen:"#00FA9A",mediumturquoise:"#48D1CC",mediumvioletred:"#C71585",midnightblue:"#191970",mintcream:"#F5FFFA",mistyrose:"#FFE4E1",moccasin:"#FFE4B5",navajowhite:"#FFDEAD",navy:"#000080",oldlace:"#FDF5E6",olive:"#808000",olivedrab:"#6B8E23",orange:"#FFA500",orangered:"#FF4500",orchid:"#DA70D6",palegoldenrod:"#EEE8AA",palegreen:"#98FB98",paleturquoise:"#AFEEEE",palevioletred:"#DB7093",papayawhip:"#FFEFD5",peachpuff:"#FFDAB9",peru:"#CD853F",pink:"#FFC0CB",plum:"#DDA0DD",powderblue:"#B0E0E6",purple:"#800080",rebeccapurple:"#663399",red:"#FF0000",rosybrown:"#BC8F8F",royalblue:"#4169E1",saddlebrown:"#8B4513",salmon:"#FA8072",sandybrown:"#F4A460",seagreen:"#2E8B57",seashell:"#FFF5EE",sienna:"#A0522D",silver:"#C0C0C0",skyblue:"#87CEEB",slateblue:"#6A5ACD",slategray:"#708090",slategrey:"#708090",snow:"#FFFAFA",springgreen:"#00FF7F",steelblue:"#4682B4",tan:"#D2B48C",teal:"#008080",thistle:"#D8BFD8",tomato:"#FF6347",turquoise:"#40E0D0",violet:"#EE82EE",wheat:"#F5DEB3",white:"#FFFFFF",whitesmoke:"#F5F5F5",yellow:"#FFFF00",yellowgreen:"#9ACD32"},f=new Set(Object.keys(u)),p=t=>f.has(t)&&u[t];var m=s(3142);const _=new Set,g=t=>{if(!_.has(t)&&("production"!==m._?setTimeout(()=>{console.warn("%c[PlayCanvas React]:","color: #ff9800; font-weight: bold; font-size: 12px;",t)},0):console.error(`[PlayCanvas React]:\n\n${t}`),_.add(t),_.size>1e3)){Array.from(_).slice(0,_.size-1e3).forEach(t=>_.delete(t))}};function v(t,e,s,i,n){const r=void 0!==t&&e.validate(t);return r||void 0===t||"production"===m._||g(`Invalid prop "${s}" in \`<${i} ${s}={${JSON.stringify(t)}} />\`\n  ${e.errorMsg(t)}\n`+(void 0!==e.default?`  Using default: ${JSON.stringify(e.default)}`:"")+`\n\n  See the docs https://api.playcanvas.com/engine/classes/${n??i}.html.`),r?t:e.default}function S(t,e,s=!0){const{schema:i,name:n,apiName:r}=e,a={...t},o=[];return Object.keys(t).forEach(e=>{if("children"!==e)if(e in i){const s=i[e];s&&(a[e]=v(t[e],s,e,n,r))}else o.push(e)}),"production"!==m._&&s&&o.length>0&&g(`Unknown props in "<${n}/>."\nThe following props are invalid and will be ignored: "${o.join('", "')}"\n\nPlease see the documentation https://api.playcanvas.com/engine/classes/${r??n}.html.`),a}function y(t,e,s=!0){const{schema:i,name:n,apiName:r}=e,a={},o=[];for(const l in i){const e=i[l],s=t[l],o=void 0!==s?s:e?.default;a[l]=v(o,e,l,n,r)}if("production"!==m._&&s&&t){for(const e in t)"children"!==e&&(e in i||o.push(e));o.length>0&&g(`Unknown props in "<${n}/>."\nThe following props are invalid and will be ignored: "${o.join('", "')}"\n\nPlease see the documentation https://api.playcanvas.com/engine/classes/${r??n}.html.`)}return a}function x(t,e,s){Object.entries(s).forEach(([i,n])=>{if(i in e){const a=e[i];if(a)if(a.apply)a.apply(t,s,i);else try{t[i]=n}catch(r){console.error(`Error applying prop ${i}: ${r}`)}}})}function T(t,e,s,c){const d=e(),u={},f=function(t){const e={};Object.entries(t).filter(([e])=>!e.startsWith("_")&&"function"!=typeof t[e]).forEach(([t,s])=>{e[t]={value:s,isDefinedWithSetter:!1}});const s=Object.getPrototypeOf(t);if(s&&s!==Object.prototype){const i=Object.getOwnPropertyDescriptors(s);Object.entries(i).forEach(([s,i])=>{if(s.startsWith("_")||"constructor"===s)return;const n="function"==typeof i.get,r="function"==typeof i.set;if(!r||n)if(i.get)try{const n=i.get.call(t),a=null!==n&&"object"==typeof n?n.clone?n.clone():{...n}:n;e[s]={value:a,isDefinedWithSetter:r}}catch{e[s]={value:void 0,isDefinedWithSetter:r}}else r&&(e[s]={value:void 0,isDefinedWithSetter:!0})})}return e}(d);Object.entries(f).forEach(([t,e])=>{const{value:s,isDefinedWithSetter:c}=e;s instanceof i.Q?u[t]={validate:t=>Array.isArray(t)&&3===t.length||"string"==typeof t,default:s.toString(!0),errorMsg:e=>`Invalid value for prop "${String(t)}": "${e}". Expected a hex like "#FF0000", CSS color name like "red", or an array "[1, 0, 0]").`,apply:(t,e,s)=>{if("string"==typeof e[s]){const n=p(e[s])||e[s];t[s]=(new i.Q).fromString(n)}else t[s]=t[s]=(new i.Q).fromArray(e[s])}}:s instanceof n.Z?u[t]={validate:t=>Array.isArray(t)&&2===t.length,default:[s.x,s.y],errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array of 2 numbers.`,apply:c?(t,e,s)=>{t[s].fromArray(e[s])}:(t,e,s)=>{t[s].set(...e[s])}}:s instanceof r.e?u[t]={validate:t=>Array.isArray(t)&&3===t.length,default:[s.x,s.y,s.z],errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array of 3 numbers.`,apply:c?(t,e,s)=>{t[s].fromArray(e[s])}:(t,e,s)=>{t[s].set(...e[s])}}:s instanceof a.Z?u[t]={validate:t=>Array.isArray(t)&&4===t.length,default:[s.x,s.y,s.z,s.w],errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array of 4 numbers.`,apply:c?(t,e,s)=>{t[s].fromArray(e[s])}:(t,e,s)=>{t[s].set(...e[s])}}:s instanceof o.k?u[t]={validate:t=>Array.isArray(t)&&(4===t.length||3===t.length),default:[s.x,s.y,s.z,s.w],errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array of 4 numbers.`,apply:c?(t,e,s)=>{t[s].fromArray(e[s])}:(t,e,s)=>{t[s].set(...e[s])}}:s instanceof l.$?u[t]={validate:t=>Array.isArray(t)&&16===t.length,default:Array.from(s.data),errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array of 16 numbers.`}:"number"==typeof s?u[t]={validate:t=>"number"==typeof t,default:s,errorMsg:e=>`Invalid value for prop "${String(t)}": "${e}". Expected a number.`}:"string"==typeof s?u[t]={validate:t=>"string"==typeof t,default:s,errorMsg:e=>`Invalid value for prop "${String(t)}": "${e}". Expected a string.`}:"boolean"==typeof s?u[t]={validate:t=>"boolean"==typeof t,default:s,errorMsg:e=>`Invalid value for prop "${String(t)}": "${e}". Expected a boolean.`}:Array.isArray(s)?u[t]={validate:t=>Array.isArray(t),default:s,errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected an array.`,apply:(t,e,s)=>{const i=e[s];if(Array.isArray(i)){const e=t[s];e.length=0,e.push(...i)}}}:s instanceof h.i&&(u[t]={validate:t=>t instanceof h.i,default:s,errorMsg:e=>`Invalid value for prop "${String(t)}": "${JSON.stringify(e)}". Expected a Material.`})}),s&&s(d);return{name:t,apiName:c,schema:u}}function w(){const t={id:"pc-react-mock-canvas"};return new c.l(t,{graphicsDevice:new d.f(t)})}const b=w(),E=()=>b},53480:(t,e,s)=>{s.d(e,{n:()=>r});var i=s(91622);const n=new(s(50247).w);class r{set func(t){this._func=t,this._dirty=!0}get func(){return this._func}set ref(t){this._ref=t,this._dirty=!0}get ref(){return this._ref}set fail(t){this._fail=t,this._dirty=!0}get fail(){return this._fail}set zfail(t){this._zfail=t,this._dirty=!0}get zfail(){return this._zfail}set zpass(t){this._zpass=t,this._dirty=!0}get zpass(){return this._zpass}set readMask(t){this._readMask=t,this._dirty=!0}get readMask(){return this._readMask}set writeMask(t){this._writeMask=t,this._dirty=!0}get writeMask(){return this._writeMask}constructor(t={}){this._dirty=!0,this._func=t.func??i.vpx,this._ref=t.ref??0,this._readMask=t.readMask??255,this._writeMask=t.writeMask??255,this._fail=t.fail??i.GU6,this._zfail=t.zfail??i.GU6,this._zpass=t.zpass??i.GU6,this._evalKey()}_evalKey(){const{_func:t,_ref:e,_fail:s,_zfail:i,_zpass:r,_readMask:a,_writeMask:o}=this,l=`${t},${e},${s},${i},${r},${a},${o}`;this._key=n.get(l),this._dirty=!1}get key(){return this._dirty&&this._evalKey(),this._key}copy(t){return this._func=t._func,this._ref=t._ref,this._readMask=t._readMask,this._writeMask=t._writeMask,this._fail=t._fail,this._zfail=t._zfail,this._zpass=t._zpass,this._dirty=t._dirty,this._key=t._key,this}clone(){return(new this.constructor).copy(this)}static{this.DEFAULT=Object.freeze(new r)}}},55443:(t,e,s)=>{s.d(e,{M:()=>w});var i=s(67454);const n=/[ \t]*#(ifn?def|if|endif|else|elif|define|undef|extension|include)/g,r=/define[ \t]+([^\n]+)\r?(?:\n|$)/g,a=/extension[ \t]+([\w-]+)[ \t]*:[ \t]*(enable|require)/g,o=/undef[ \t]+([^\n]+)\r?(?:\n|$)/g,l=/(ifdef|ifndef|if)[ \t]*([^\r\n]+)\r?\n/g,h=/(endif|else|elif)(?:[ \t]+([^\r\n]*))?\r?\n?/g,c=/\{?[\w-]+\}?/,d=/(!|\s)?defined\(([\w-]+)\)/,u=/!?defined\s*\([^)]*\)/g,f=/!?defined\s*$/,p=/([a-z_]\w*)\s*(==|!=|<|<=|>|>=)\s*([\w"']+)/i,m=/[+\-]/g,_=/include[ \t]+"([\w-]+)(?:\s*,\s*([\w-]+))?"/g,g=/\{i\}/g,v=/(pcFragColor[1-8])\b/g;class S{static run(t,e=new Map,s={}){S.sourceName=s.sourceName,t=(t=this.stripComments(t)).split(/\r?\n/).map(t=>t.trimEnd()).join("\n");const i=new Map,n=new Map;if(null===(t=this._preprocess(t,i,n,e,s.stripDefines)))return null;const r=new Map;return i.forEach((t,e)=>{Number.isInteger(parseFloat(t))&&!t.includes(".")&&r.set(e,t)}),t=this.stripComments(t),t=this.stripUnusedColorAttachments(t,s),t=this.RemoveEmptyLines(t),t=this.processArraySize(t,r),t=this.injectDefines(t,n)}static stripUnusedColorAttachments(t,e){if(e.stripUnusedColorAttachments){const e=new Map,s=t.match(v);s?.forEach(t=>{const s=parseInt(t.charAt(t.length-1),10);e.set(s,(e.get(s)??0)+1)});if(Array.from(e.values()).some(t=>1===t)){const s=t.split("\n"),i=[];for(let t=0;t<s.length;t++){const n=s[t].match(v);if(n){const t=parseInt(n[0].charAt(n[0].length-1),10);if(t>0&&1===e.get(t))continue}i.push(s[t])}t=i.join("\n")}}return t}static stripComments(t){return t.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1")}static processArraySize(t,e){return null!==t&&e.forEach((e,s)=>{t=t.replace(new RegExp(`\\[${s}\\]`,"g"),`[${e}]`)}),t}static injectDefines(t,e){if(null!==t&&e.size>0){const s=t.split("\n");e.forEach((t,e)=>{const i=new RegExp(e,"g");for(let n=0;n<s.length;n++)s[n].includes("#")||(s[n]=s[n].replace(i,t))}),t=s.join("\n")}return t}static RemoveEmptyLines(t){return null!==t&&(t=(t=t.split(/\r?\n/).map(t=>""===t.trim()?"":t).join("\n")).replace(/(\n\n){3,}/g,"\n\n")),t}static _preprocess(t,e=new Map,s,i,d){const u=t,f=[];let p,m=!1;for(;null!==(p=n.exec(t))&&!m;){const v=p[1];switch(v){case"define":{r.lastIndex=p.index;const i=r.exec(t);m||=null===i;const a=i[1];c.lastIndex=i.index;const o=c.exec(a)[0];let l=a.substring(o.length).trim();""===l&&(l="true");let h=d;if(S._keep(f)){const a=o.startsWith("{")&&o.endsWith("}");a&&(h=!0),a?s.set(o,l):e.set(o,l),h&&(t=t.substring(0,i.index-1)+t.substring(r.lastIndex),n.lastIndex=i.index-1)}h||(n.lastIndex=i.index+i[0].length);break}case"undef":{o.lastIndex=p.index;const s=o.exec(t),i=s[1].trim();S._keep(f)&&(e.delete(i),d&&(t=t.substring(0,s.index-1)+t.substring(o.lastIndex),n.lastIndex=s.index-1)),d||(n.lastIndex=s.index+s[0].length);break}case"extension":{a.lastIndex=p.index;const s=a.exec(t);if(m||=null===s,s){const t=s[1];S._keep(f)&&e.set(t,"true")}n.lastIndex=s.index+s[0].length;break}case"ifdef":case"ifndef":case"if":{l.lastIndex=p.index;const s=l.exec(t),i=s[2],r=S.evaluate(i,e);m||=r.error;let a=r.result;"ifndef"===v&&(a=!a),f.push({anyKeep:a,keep:a,start:p.index,end:l.lastIndex}),n.lastIndex=s.index+s[0].length;break}case"endif":case"else":case"elif":{h.lastIndex=p.index;const s=h.exec(t),i=f.pop();if(!i){console.error(`Shader preprocessing encountered "#${s[1]}" without a preceding #if #ifdef #ifndef while preprocessing ${S.sourceName} on line:\n ${t.substring(p.index,p.index+100)}...`,{source:u}),m=!0;continue}const r=i.keep?t.substring(i.end,p.index):"";t=t.substring(0,i.start)+r+t.substring(h.lastIndex),n.lastIndex=i.start+r.length;const a=s[1];if("else"===a||"elif"===a){let t=!1;if(!i.anyKeep)if("else"===a)t=!i.keep;else{const i=S.evaluate(s[2],e);t=i.result,m||=i.error}f.push({anyKeep:i.anyKeep||t,keep:t,start:n.lastIndex,end:n.lastIndex})}break}case"include":{_.lastIndex=p.index;const s=_.exec(t);if(m||=null===s,!s){m=!0;continue}const r=s[1].trim(),a=s[2]?.trim();if(S._keep(f)){let o=i?.get(r);if(void 0===o){console.error(`Include "${r}" not resolved while preprocessing ${S.sourceName}`,{originalSource:u,source:t}),m=!0;continue}if(o=this.stripComments(o),a){const s=e.get(a),i=parseFloat(s);if(Number.isInteger(i)){let t="";for(let e=0;e<i;e++)t+=o.replace(g,String(e));o=t}else console.error(`Include Count identifier "${a}" not resolved while preprocessing ${S.sourceName} on line:\n ${t.substring(p.index,p.index+100)}...`,{originalSource:u,source:t}),m=!0}t=t.substring(0,s.index-1)+o+t.substring(_.lastIndex),n.lastIndex=s.index-1}break}}}return f.length>0&&(console.error(`Shader preprocessing reached the end of the file without encountering the necessary #endif to close a preceding #if, #ifdef, or #ifndef block. ${S.sourceName}`),m=!0),m?(console.error("Failed to preprocess shader: ",{source:u}),null):t}static _keep(t){for(let e=0;e<t.length;e++)if(!t[e].keep)return!1;return!0}static evaluateAtomicExpression(t,e){let s=!1,i=!1;if("true"===(t=t.trim()))return{result:!0,error:s};if("false"===t)return{result:!1,error:s};const n=d.exec(t);if(n){i="!"===n[1],t=n[2].trim();const r=e.has(t);return{result:i?!r:r,error:s}}const r=p.exec(t);if(r){const t=e.get(r[1].trim())??r[1].trim(),i=e.get(r[3].trim())??r[3].trim();let n=!1;switch(r[2].trim()){case"==":n=t===i;break;case"!=":n=t!==i;break;case"<":n=t<i;break;case"<=":n=t<=i;break;case">":n=t>i;break;case">=":n=t>=i;break;default:s=!0}return{result:n,error:s}}return{result:e.has(t),error:s}}static processParentheses(t,e){let s=!1,i=t.trim();for(;i.startsWith("(")&&i.endsWith(")");){let t=0,e=!0;for(let s=0;s<i.length-1;s++)if("("===i[s])t++;else if(")"===i[s]&&(t--,0===t)){e=!1;break}if(!e)break;i=i.slice(1,-1).trim()}for(;;){let t=!1,n=0,r=0,a=-1,o=-1,l=0;for(let e=0;e<i.length;e++)if("("===i[e]){const s=i.substring(0,e);f.test(s)?l++:0===l&&(n++,n>r&&(r=n,a=e),t=!0)}else")"===i[e]&&(l>0?l--:n>0&&(n===r&&-1!==a&&(o=e),n--));if(!t||-1===a||-1===o)break;const h=i.substring(a+1,o),{result:c,error:d}=S.evaluate(h,e);s=s||d,i=i.substring(0,a)+(c?"true":"false")+i.substring(o+1)}return{expression:i,error:s}}static evaluate(t,e){const s=null===m.exec(t);let i=t,n=!1;if(-1!==t.replace(u,"").indexOf("(")){const s=S.processParentheses(t,e);i=s.expression,n=s.error}if(n)return{result:!1,error:!0};const r=i.split("||");for(const a of r){const t=a.split("&&");let i=!0;for(const s of t){const{result:t,error:n}=S.evaluateAtomicExpression(s.trim(),e);if(!t||n){i=!1;break}}if(i)return{result:!0,error:!s}}return{result:!1,error:!s}}}var y=s(91622),x=s(4517);let T=0;class w{constructor(t,e){if(this.attributes=new Map,this.id=T++,this.device=t,this.definition=e,this.name=e.name||"Untitled",this.init(),e.cshader)e.cshader=S.run(e.cshader,e.cincludes,{sourceName:`compute shader for ${this.label}`,stripDefines:!0});else{const s=e.shaderLanguage===y.g80;e.vshader=S.run(e.vshader,e.vincludes,{sourceName:`vertex shader for ${this.label}`,stripDefines:s}),e.shaderLanguage===y.BzK&&(e.attributes??=x.C.collectAttributes(e.vshader));const n=t.isWebGL2&&("osx"===i.i.name||"ios"===i.i.name);if(e.fshader=S.run(e.fshader,e.fincludes,{stripUnusedColorAttachments:n,stripDefines:s,sourceName:`fragment shader for ${this.label}`}),!e.vshader||!e.fshader)return void(this.failed=!0)}this.impl=t.createShaderImpl(this)}init(){this.ready=!1,this.failed=!1}get label(){return`Shader Id ${this.id} (${this.definition.shaderLanguage===y.g80?"WGSL":"GLSL"}) ${this.name}`}destroy(){this.device.onDestroyShader(this),this.impl.destroy(this)}loseContext(){this.init(),this.impl.loseContext()}restoreContext(){this.impl.restoreContext(this.device,this)}}},55485:(t,e,s)=>{s.d(e,{A:()=>o});var i=s(48355),n=s(91622);class r{constructor(){this.clearValue=new i.Q(0,0,0,1),this.clearValueLinear=new i.Q(0,0,0,1),this.clear=!1,this.store=!1,this.resolve=!0,this.genMipmaps=!1}}class a{constructor(){this.clearDepthValue=1,this.clearStencilValue=0,this.clearDepth=!1,this.clearStencil=!1,this.storeDepth=!1,this.resolveDepth=!1,this.storeStencil=!1}}class o{get colorOps(){return this.colorArrayOps[0]}constructor(t){this._enabled=!0,this._skipStart=!1,this._skipEnd=!1,this.executeEnabled=!0,this.samples=0,this.colorArrayOps=[],this.requiresCubemaps=!0,this.fullSizeClearRect=!0,this.beforePasses=[],this.afterPasses=[],this.device=t}set name(t){this._name=t}get name(){return this._name||(this._name=this.constructor.name),this._name}set scaleX(t){this._options.scaleX=t}get scaleX(){return this._options.scaleX}set scaleY(t){this._options.scaleY=t}get scaleY(){return this._options.scaleY}set options(t){this._options=t,t&&(this.scaleX=this.scaleX??1,this.scaleY=this.scaleY??1)}get options(){return this._options}init(t=null,e){this.options=e,this.renderTarget=t,this.samples=Math.max(this.renderTarget?this.renderTarget.samples:this.device.samples,1),this.allocateAttachments(),this.postInit()}allocateAttachments(){const t=this.renderTarget;this.depthStencilOps=new a,t?.depthBuffer&&(this.depthStencilOps.storeDepth=!0);const e=t?t._colorBuffers?.length??0:1;this.colorArrayOps.length=0;for(let s=0;s<e;s++){const t=new r;this.colorArrayOps[s]=t,1===this.samples&&(t.store=!0,t.resolve=!1);const e=this.renderTarget?._colorBuffers?.[s];if(this.renderTarget?.mipmaps&&e?.mipmaps){const s=(0,n.YfE)(e._format);t.genMipmaps=!s}}}destroy(){}postInit(){}frameUpdate(){if(this._options&&this.renderTarget){const t=this._options.resizeSource??this.device.backBuffer,e=Math.floor(t.width*this.scaleX),s=Math.floor(t.height*this.scaleY);this.renderTarget.resize(e,s)}}before(){}execute(){}after(){}onEnable(){}onDisable(){}set enabled(t){this._enabled!==t&&(this._enabled=t,t?this.onEnable():this.onDisable())}get enabled(){return this._enabled}setClearColor(t){const e=this.colorArrayOps.length;for(let s=0;s<e;s++){const e=this.colorArrayOps[s];t&&(e.clearValue.copy(t),e.clearValueLinear.linear(t)),e.clear=!!t}}setClearDepth(t){t&&(this.depthStencilOps.clearDepthValue=t),this.depthStencilOps.clearDepth=void 0!==t}setClearStencil(t){t&&(this.depthStencilOps.clearStencilValue=t),this.depthStencilOps.clearStencil=void 0!==t}render(){if(this.enabled){const t=this.device,e=void 0!==this.renderTarget;this.before(),this.executeEnabled&&(e&&!this._skipStart&&t.startRenderPass(this),this.execute(),e&&!this._skipEnd&&t.endRenderPass(this)),this.after(),t.renderPassIndex++}}}},56460:(t,e,s)=>{s.d(e,{V:()=>p});var i=s(39462),n=s(51372),r=s(97213),a=s(2682),o=s(23852);class l{constructor(t="",e="",s=null,i=null,n=null,r=null){this.url=t,this.filename=e,this.hash=s,this.size=i,this.opt=n,this.contents=r}equals(t){return this.url===t.url&&this.filename===t.filename&&this.hash===t.hash&&this.size===t.size&&this.opt===t.opt&&this.contents===t.contents}}var h=s(17402),c=s(14702);let d=-1;const u={pvr:"extCompressedTexturePVRTC",dxt:"extCompressedTextureS3TC",etc2:"extCompressedTextureETC",etc1:"extCompressedTextureETC1",basis:"canvas"},f=["pvr","dxt","etc2","etc1","basis"];class p extends r.J{static{this.EVENT_LOAD="load"}static{this.EVENT_UNLOAD="unload"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_ERROR="error"}static{this.EVENT_CHANGE="change"}static{this.EVENT_PROGRESS="progress"}static{this.EVENT_ADDLOCALIZED="add:localized"}static{this.EVENT_REMOVELOCALIZED="remove:localized"}constructor(t,e,s,i={},r={}){super(),this._file=null,this._i18n={},this._preload=!1,this._resources=[],this.id=d--,this.loaded=!1,this.loading=!1,this.options={},this.registry=null,this.tags=new n.Y(this),this.urlObject=null,this._name=t||"",this.type=e,this._data=i||{},this.options=r||{},s&&(this.file=s)}set name(t){if(this._name===t)return;const e=this._name;this._name=t,this.fire("name",this,this._name,e)}get name(){return this._name}set file(t){if(t&&t.variants&&-1!==["texture","textureatlas","bundle"].indexOf(this.type)){const e=this.registry?._loader?._app||(0,h.D)(),s=e?.graphicsDevice;if(s)for(let i=0,n=f.length;i<n;i++){const n=f[i];if(t.variants[n]&&s[u[n]]){t=t.variants[n];break}if(e.enableBundles){const t=e.bundles.listBundlesForAsset(this);if(t&&t.find(t=>t?.file?.variants[n]))break}}}const e=this._file,s=t?new l(t.url,t.filename,t.hash,t.size,t.opt,t.contents):null;(!!s!=!!e||s&&!s.equals(e))&&(this._file=s,this.fire("change",this,"file",s,e),this.reload())}get file(){return this._file}set data(t){const e=this._data;this._data=t,t!==e&&(this.fire("change",this,"data",t,e),this.loaded&&this.registry._loader.patch(this,this.registry))}get data(){return this._data}set resource(t){const e=this._resources[0];this._resources[0]=t,this.fire("change",this,"resource",t,e)}get resource(){return this._resources[0]}set resources(t){const e=this._resources;this._resources=t,this.fire("change",this,"resources",t,e)}get resources(){return this._resources}set preload(t){t=!!t,this._preload!==t&&(this._preload=t,this._preload&&!this.loaded&&!this.loading&&this.registry&&this.registry.load(this))}get preload(){return this._preload}set loadFaces(t){t=!!t,this.hasOwnProperty("_loadFaces")&&t===this._loadFaces||(this._loadFaces=t,this.loaded&&this.registry._loader.patch(this,this.registry))}get loadFaces(){return this._loadFaces}getFileUrl(){const t=this.file;if(!t||!t.url)return null;let e=t.url;if(this.registry&&this.registry.prefix&&!o._3.test(e)&&(e=this.registry.prefix+e),"script"!==this.type&&t.hash){const s=-1!==e.indexOf("?")?"&":"?";e+=`${s}t=${t.hash}`}return e}getAbsoluteUrl(t){if(t.startsWith("blob:")||t.startsWith("data:"))return t;const e=i.A.getDirectory(this.file.url);return i.A.join(e,t)}getLocalizedAssetId(t){return t=(0,a.Tw)(t,this._i18n),this._i18n[t]||null}addLocalizedAssetId(t,e){this._i18n[t]=e,this.fire("add:localized",t,e)}removeLocalizedAssetId(t){const e=this._i18n[t];e&&(delete this._i18n[t],this.fire("remove:localized",t,e))}ready(t,e){e=e||this,this.loaded?t.call(e,this):this.once("load",s=>{t.call(e,s)})}reload(){this.loaded&&(this.loaded=!1,this.registry.load(this))}unload(){if(!this.loaded&&0===this._resources.length)return;this.fire("unload",this),this.registry.fire(`unload:${this.id}`,this);const t=this._resources;this.urlObject&&(URL.revokeObjectURL(this.urlObject),this.urlObject=null),this.resources=[],this.loaded=!1,this.file&&this.registry._loader.clearCache(this.getFileUrl(),this.type);for(let e=0;e<t.length;++e){const s=t[e];s&&s.destroy&&s.destroy()}}static fetchArrayBuffer(t,e,s,i=0){s?.file?.contents?setTimeout(()=>{e(null,s.file.contents)}):c.L.get(t,{cache:!0,responseType:"arraybuffer",retry:i>0,maxRetries:i,progress:s},e)}}},58333:(t,e,s)=>{s.d(e,{O:()=>a});var i=s(91622),n=s(39964);let r=0;class a{constructor(t={}){this.id=r++;const e=t.colorBuffer?.device??t.colorBuffers?.[0].device??t.depthBuffer?.device??t.graphicsDevice;this._device=e;const{maxSamples:s}=this._device;if(this._samples=Math.min(t.samples??1,s),e.isWebGPU&&(this._samples=this._samples>1?s:1),this._colorBuffer=t.colorBuffer,t.colorBuffer&&(this._colorBuffers=[t.colorBuffer]),this._depthBuffer=t.depthBuffer,this._face=t.face??0,this._depthBuffer){const t=this._depthBuffer._format;t===i.Wbd||t===i.F0N?(this._depth=!0,this._stencil=!1):t===i.Mg$?(this._depth=!0,this._stencil=!0):t===i.IQA&&this._depthBuffer.device.isWebGPU&&this._samples>1?(this._depth=!0,this._stencil=!1):(this._depth=!1,this._stencil=!1)}else this._depth=t.depth??!0,this._stencil=t.stencil??!1;t.colorBuffers&&(this._colorBuffers||(this._colorBuffers=[...t.colorBuffers],this._colorBuffer=t.colorBuffers[0])),this.autoResolve=t.autoResolve??!0,this.name=t.name,this.name||(this.name=this._colorBuffer?.name),this.name||(this.name=this._depthBuffer?.name),this.name||(this.name="Untitled"),this.flipY=t.flipY??!1,this._mipLevel=t.mipLevel??0,this._mipLevel>0&&this._depth&&(this._mipLevel=0),this._mipmaps=void 0===t.mipLevel,this.validateMrt(),this.impl=e.createRenderTargetImpl(this)}destroy(){const t=this._device;t&&(t.targets.delete(this),t.renderTarget===this&&t.setRenderTarget(null),this.destroyFrameBuffers())}destroyFrameBuffers(){const t=this._device;t&&this.impl.destroy(t)}destroyTextureBuffers(){this._depthBuffer?.destroy(),this._depthBuffer=null,this._colorBuffers?.forEach(t=>{t.destroy()}),this._colorBuffers=null,this._colorBuffer=null}resize(t,e){if(this.width!==t||this.height!==e){if(this.mipLevel>0)return;const s=this._device;this.destroyFrameBuffers(),s.renderTarget===this&&s.setRenderTarget(null),this._depthBuffer?.resize(t,e),this._colorBuffers?.forEach(s=>{s.resize(t,e)}),this.validateMrt(),this.impl=s.createRenderTargetImpl(this)}}validateMrt(){}init(){this.impl.init(this._device,this)}get initialized(){return this.impl.initialized}get device(){return this._device}loseContext(){this.impl.loseContext()}resolve(t=!0,e=!!this._depthBuffer){this._device&&this._samples>1&&this.impl.resolve(this._device,this,t,e)}copy(t,e,s){if(!this._device){if(!t._device)return!1;this._device=t._device}return this._device.copyRenderTarget(t,this,e,s)}get samples(){return this._samples}get depth(){return this._depth}get stencil(){return this._stencil}get colorBuffer(){return this._colorBuffer}getColorBuffer(t){return this._colorBuffers?.[t]}get depthBuffer(){return this._depthBuffer}get face(){return this._face}get mipLevel(){return this._mipLevel}get mipmaps(){return this._mipmaps}get width(){let t=this._colorBuffer?.width||this._depthBuffer?.width||this._device.width;return this._mipLevel>0&&(t=n.V.calcLevelDimension(t,this._mipLevel)),t}get height(){let t=this._colorBuffer?.height||this._depthBuffer?.height||this._device.height;return this._mipLevel>0&&(t=n.V.calcLevelDimension(t,this._mipLevel)),t}isColorBufferSrgb(t=0){if(this.device.backBuffer===this)return(0,i.mMQ)(this.device.backBufferFormat);const e=this.getColorBuffer(t);return!!e&&(0,i.mMQ)(e.format)}}},58666:(t,e,s)=>{s.d(e,{T:()=>o,s:()=>a});var i=s(91622),n=s(17176);let r=0;class a{constructor(){this.offsets=[]}}class o{constructor(t,e,s){this.renderVersionUpdated=-1,this.uniformBufferOffsets=[],this.id=r++,this.device=t,this.format=e,this.dirty=!0,this.impl=t.createBindGroupImpl(this),this.textures=[],this.storageTextures=[],this.storageBuffers=[],this.uniformBuffers=[],this.defaultUniformBuffer=s,s&&this.setUniformBuffer(i.rb7,s)}destroy(){this.impl.destroy(),this.impl=null,this.format=null,this.defaultUniformBuffer=null}setUniformBuffer(t,e){const s=this.format.bufferFormatsMap.get(t);this.uniformBuffers[s]!==e&&(this.uniformBuffers[s]=e,this.dirty=!0)}setStorageBuffer(t,e){const s=this.format.storageBufferFormatsMap.get(t);this.storageBuffers[s]!==e&&(this.storageBuffers[s]=e,this.dirty=!0)}setTexture(t,e){const s=this.format.textureFormatsMap.get(t);this.textures[s]!==e?(this.textures[s]=e,this.dirty=!0):this.renderVersionUpdated<e.renderVersionDirty&&(this.dirty=!0)}setStorageTexture(t,e){const s=this.format.storageTextureFormatsMap.get(t);this.storageTextures[s]!==e?(this.storageTextures[s]=e,this.dirty=!0):this.renderVersionUpdated<e.renderVersionDirty&&(this.dirty=!0)}updateUniformBuffers(){for(let t=0;t<this.uniformBuffers.length;t++)this.uniformBuffers[t].update()}update(){const{textureFormats:t,storageTextureFormats:e,storageBufferFormats:s}=this.format;for(let i=0;i<t.length;i++){const e=t[i];let s=e.scopeId.value;s||("uSceneDepthMap"===e.name&&(s=(0,n.L)(this.device,"white")),"uSceneColorMap"===e.name&&(s=(0,n.L)(this.device,"pink")),s||(s=(0,n.L)(this.device,"pink"))),this.setTexture(e.name,s)}for(let i=0;i<e.length;i++){const t=e[i],s=t.scopeId.value;this.setStorageTexture(t.name,s)}for(let i=0;i<s.length;i++){const t=s[i],e=t.scopeId.value;this.setStorageBuffer(t.name,e)}this.uniformBufferOffsets.length=this.uniformBuffers.length;for(let i=0;i<this.uniformBuffers.length;i++){const t=this.uniformBuffers[i];this.uniformBufferOffsets[i]=t.offset,this.renderVersionUpdated<t.renderVersionDirty&&(this.dirty=!0)}this.dirty&&(this.dirty=!1,this.renderVersionUpdated=this.device.renderVersion,this.impl.update(this))}}},58817:(t,e,s)=>{s.d(e,{i:()=>a});var i=s(18881),n=s(71586),r=s(53282);const a=t=>{const e=(0,r.cF)(t,o);return(0,i.x)("camera",e,o.schema),null},o=(0,r.xE)("Camera",()=>new n.w("mock-camera",(0,r.s_)()).addComponent("camera"),t=>t.system.destroy(),"CameraComponent")},59752:(t,e,s)=>{s.d(e,{D:()=>i});const i={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp:(t,e,s)=>t>=s?s:t<=e?e:t,intToBytes24:t=>[t>>16&255,t>>8&255,255&t],intToBytes32:t=>[t>>24&255,t>>16&255,t>>8&255,255&t],bytesToInt24:(t,e,s)=>(t.length&&(s=t[2],e=t[1],t=t[0]),t<<16|e<<8|s),bytesToInt32:(t,e,s,i)=>(t.length&&(i=t[3],s=t[2],e=t[1],t=t[0]),(t<<24|e<<16|s<<8|i)>>>0),lerp:(t,e,s)=>t+(e-t)*i.clamp(s,0,1),lerpAngle:(t,e,s)=>(e-t>180&&(e-=360),e-t<-180&&(e+=360),i.lerp(t,e,i.clamp(s,0,1))),powerOfTwo:t=>0!==t&&!(t&t-1),nextPowerOfTwo:t=>(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t),nearestPowerOfTwo:t=>Math.pow(2,Math.round(Math.log2(t))),random(t,e){const s=e-t;return Math.random()*s+t},smoothstep:(t,e,s)=>s<=t?0:s>=e?1:(s=(s-t)/(e-t))*s*(3-2*s),smootherstep:(t,e,s)=>s<=t?0:s>=e?1:(s=(s-t)/(e-t))*s*s*(s*(6*s-15)+10),roundUp:(t,e)=>0===e?t:Math.ceil(t/e)*e,between(t,e,s,i){const n=Math.min(e,s),r=Math.max(e,s);return i?t>=n&&t<=r:t>n&&t<r}}},61531:(t,e,s)=>{s.d(e,{R:()=>i});class i{equals(t){return this.globalId===t.globalId&&this.revision===t.revision}copy(t){this.globalId=t.globalId,this.revision=t.revision}reset(){this.globalId=0,this.revision=0}constructor(){this.globalId=0,this.revision=0}}},64919:(t,e,s)=>{s.d(e,{p:()=>i});class i{incRefCount(){this._refCount++}decRefCount(){this._refCount--}get refCount(){return this._refCount}constructor(){this._refCount=0}}},65137:(t,e,s)=>{s.d(e,{J:()=>r,q:()=>n});var i=s(96540);const n=(0,i.createContext)(null),r=()=>{const t=(0,i.useContext)(n);if(null===t)throw new Error("usePointerEventsContext must be used within a PointerEventsContext.Provider");return t}},65762:(t,e,s)=>{s.d(e,{X:()=>i,f:()=>n});const i="en-US",n={en:"en-US",es:"en-ES",zh:"zh-CN","zh-HK":"zh-TW","zh-TW":"zh-HK","zh-MO":"zh-HK",fr:"fr-FR",de:"de-DE",it:"it-IT",ru:"ru-RU",ja:"ja-JP"}},67248:(t,e,s)=>{s.d(e,{g:()=>o});var i=s(59752),n=s(91622),r=s(39964);let a=0;class o{constructor(t,e={}){this._gpuSize=0,this.id=a++,this._invalid=!1,this._lockedLevel=-1,this._lockedMode=n.erz,this.renderVersionDirty=0,this._storage=!1,this._numLevels=0,this.device=t,this.name=e.name??"",this._width=Math.floor(e.width??4),this._height=Math.floor(e.height??4),this._format=e.format??n.Lxj,this._compressed=(0,n.Nvm)(this._format),this._integerFormat=(0,n.YfE)(this._format),this._integerFormat&&(e.minFilter=n.uhC,e.magFilter=n.uhC),this._volume=e.volume??!1,this._depth=Math.floor(e.depth??1),this._arrayLength=Math.floor(e.arrayLength??0),this._storage=e.storage??!1,this._cubemap=e.cubemap??!1,this._flipY=e.flipY??!1,this._premultiplyAlpha=e.premultiplyAlpha??!1,this._mipmaps=e.mipmaps??!0,this._numLevelsRequested=e.numLevels,void 0!==e.numLevels&&(this._numLevels=e.numLevels),this._updateNumLevel(),this._minFilter=e.minFilter??n.qn_,this._magFilter=e.magFilter??n.DrA,this._anisotropy=e.anisotropy??1,this._addressU=e.addressU??n.x3I,this._addressV=e.addressV??n.x3I,this._addressW=e.addressW??n.x3I,this._compareOnRead=e.compareOnRead??!1,this._compareFunc=e.compareFunc??n.v1A,this._type=e.type??n.s64,this.projection=n.w7A,this._cubemap?this.projection=n.$mg:e.projection&&e.projection!==n.$mg&&(this.projection=e.projection),this._levels=e.levels;const s=!!e.levels;this._levels||this._clearLevels(),this.recreateImpl(s),t.textures.push(this)}destroy(){const t=this.device;if(t){const e=t.textures.indexOf(this);-1!==e&&t.textures.splice(e,1),t.scope.removeValue(this),this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this._gpuSize),this._levels=null,this.device=null}}recreateImpl(t=!0){const{device:e}=this;this.impl?.destroy(e),this.impl=null,this.impl=e.createTextureImpl(this),this.dirtyAll(),t&&this.upload()}_clearLevels(){this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null]}resize(t,e,s=1){const i=this.device;this.adjustVramSizeTracking(i._vram,-this._gpuSize),this.impl.destroy(i),this._clearLevels(),this._width=Math.floor(t),this._height=Math.floor(e),this._depth=Math.floor(s),this._updateNumLevel(),this.impl=i.createTextureImpl(this),this.dirtyAll()}loseContext(){this.impl.loseContext(),this.dirtyAll()}adjustVramSizeTracking(t,e){t.tex+=e}propertyChanged(t){this.impl.propertyChanged(t),this.renderVersionDirty=this.device.renderVersion}_updateNumLevel(){const t=this.mipmaps?r.V.calcMipLevelsCount(this.width,this.height):1,e=this._numLevelsRequested;this._numLevels=Math.min(e??t,t),this._mipmaps=this._numLevels>1}get lockedMode(){return this._lockedMode}set minFilter(t){this._minFilter!==t&&((0,n.YfE)(this._format)||(this._minFilter=t,this.propertyChanged(n.pTl)))}get minFilter(){return this._minFilter}set magFilter(t){this._magFilter!==t&&((0,n.YfE)(this._format)||(this._magFilter=t,this.propertyChanged(n.KT$)))}get magFilter(){return this._magFilter}set addressU(t){this._addressU!==t&&(this._addressU=t,this.propertyChanged(n.qA2))}get addressU(){return this._addressU}set addressV(t){this._addressV!==t&&(this._addressV=t,this.propertyChanged(n.jDC))}get addressV(){return this._addressV}set addressW(t){this._volume&&t!==this._addressW&&(this._addressW=t,this.propertyChanged(n.qfQ))}get addressW(){return this._addressW}set compareOnRead(t){this._compareOnRead!==t&&(this._compareOnRead=t,this.propertyChanged(n.kur))}get compareOnRead(){return this._compareOnRead}set compareFunc(t){this._compareFunc!==t&&(this._compareFunc=t,this.propertyChanged(n.QUq))}get compareFunc(){return this._compareFunc}set anisotropy(t){this._anisotropy!==t&&(this._anisotropy=t,this.propertyChanged(n.YdP))}get anisotropy(){return this._anisotropy}set mipmaps(t){this._mipmaps!==t&&(this.device.isWebGPU||(0,n.YfE)(this._format)||(this._mipmaps=t),t&&(this._needsMipmapsUpload=!0))}get mipmaps(){return this._mipmaps}get numLevels(){return this._numLevels}get storage(){return this._storage}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get format(){return this._format}get cubemap(){return this._cubemap}get gpuSize(){const t=this.pot&&this._mipmaps&&!(this._compressed&&1===this._levels.length);return r.V.calcGpuSize(this._width,this._height,this._depth,this._format,t,this._cubemap)}get array(){return this._arrayLength>0}get arrayLength(){return this._arrayLength}get volume(){return this._volume}set type(t){this._type!==t&&(this._type=t,this.device._shadersDirty=!0)}get type(){return this._type}set srgb(t){if(t!==(0,n.mMQ)(this.format))if(t){const t=(0,n.d0G)(this.format);this._format!==t&&(this._format=t,this.recreateImpl(),this.device._shadersDirty=!0)}else{const t=(0,n.d0F)(this.format);this._format!==t&&(this._format=t,this.recreateImpl(),this.device._shadersDirty=!0)}}get srgb(){return(0,n.mMQ)(this.format)}set flipY(t){this._flipY!==t&&(this._flipY=t,this._needsUpload=!0)}get flipY(){return this._flipY}set premultiplyAlpha(t){this._premultiplyAlpha!==t&&(this._premultiplyAlpha=t,this._needsUpload=!0)}get premultiplyAlpha(){return this._premultiplyAlpha}get pot(){return i.D.powerOfTwo(this._width)&&i.D.powerOfTwo(this._height)}get encoding(){switch(this.type){case n.fW0:return"rgbm";case n.TOD:return"rgbe";case n.mEg:return"rgbp"}return(0,n.s5o)(this.format)?"srgb":"linear"}dirtyAll(){this._levelsUpdated=this._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0],this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this._mipmapsUploaded=!1,this.propertyChanged(n.pPX)}lock(t={}){t.level??=0,t.face??=0,t.mode??=n.$Q8,this._lockedMode=t.mode,this._lockedLevel=t.level;const e=this.cubemap?this._levels[t.face]:this._levels;if(null===e[t.level]){const s=Math.max(1,this._width>>t.level),i=Math.max(1,this._height>>t.level),a=Math.max(1,this._depth>>t.level),o=new ArrayBuffer(r.V.calcLevelGpuSize(s,i,a,this._format));e[t.level]=new((0,n.FxX)(this._format))(o)}return e[t.level]}setSource(t,e=0){let s,i,n=!1;if(this._cubemap){if(t[0]){s=t[0].width||0,i=t[0].height||0;for(let e=0;e<6;e++){const r=t[e];if(!r||r.width!==s||r.height!==i||!this.device._isBrowserInterface(r)){n=!0;break}}}else n=!0;if(!n)for(let s=0;s<6;s++)this._levels[e][s]!==t[s]&&(this._levelsUpdated[e][s]=!0)}else this.device._isBrowserInterface(t)||(n=!0),n||(t!==this._levels[e]&&(this._levelsUpdated[e]=!0),t instanceof HTMLVideoElement?(s=t.videoWidth,i=t.videoHeight):(s=t.width,i=t.height));if(n)if(this._width=4,this._height=4,this._cubemap)for(let r=0;r<6;r++)this._levels[e][r]=null,this._levelsUpdated[e][r]=!0;else this._levels[e]=null,this._levelsUpdated[e]=!0;else 0===e&&(this._width=s,this._height=i),this._levels[e]=t;this._invalid===n&&n||(this._invalid=n,this.upload())}getSource(t=0){return this._levels[t]}unlock(){this._lockedMode,n.erz,this._lockedMode===n.$Q8&&this.upload(),this._lockedLevel=-1,this._lockedMode=n.erz}upload(){this._needsUpload=!0,this._needsMipmapsUpload=this._mipmaps,this.impl.uploadImmediate?.(this.device,this)}read(t,e,s,i,n={}){return this.impl.read?.(t,e,s,i,n)}write(t,e,s,i,n){return this.impl.write?.(t,e,s,i,n)}}},67454:(t,e,s)=>{s.d(e,{i:()=>u});const i="undefined"!=typeof navigator?navigator.userAgent:"",n="undefined"!=typeof window?"browser":"undefined"!=typeof global?"node":"worker",r=/android/i.test(i)?"android":/ip(?:[ao]d|hone)/i.test(i)?"ios":/windows/i.test(i)?"windows":/mac os/i.test(i)?"osx":/linux/i.test(i)?"linux":/cros/i.test(i)?"cros":null,a="browser"!==n?null:/Chrome\/|Chromium\/|Edg.*\//.test(i)?"chrome":/Safari\//.test(i)?"safari":/Firefox\//.test(i)?"firefox":"other",o=/xbox/i.test(i),l="browser"===n&&("ontouchstart"in window||"maxTouchPoints"in navigator&&navigator.maxTouchPoints>0),h=!("browser"!==n||!navigator.getGamepads&&!navigator.webkitGetGamepads),c="undefined"!=typeof Worker,d=(()=>{let t=!1;try{const e=Object.defineProperty({},"passive",{get:function(){return t=!0,!1}});window.addEventListener("testpassive",null,e),window.removeEventListener("testpassive",null,e)}catch(e){}return t})(),u={name:r,environment:n,global:("undefined"!=typeof globalThis&&globalThis)??("browser"===n&&window)??("node"===n&&global)??("worker"===n&&self),browser:"browser"===n,worker:"worker"===n,desktop:["windows","osx","linux","cros"].includes(r),mobile:["android","ios"].includes(r),ios:"ios"===r,android:"android"===r,xbox:o,gamepads:h,touch:l,workers:c,passiveEvents:d,browserName:a}},71586:(t,e,s)=>{s.d(e,{w:()=>c});const i={create:()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)})};var n=s(6739),r=s(17402);const a=(t,e)=>t.constructor.order-e.constructor.order,o=[],l=[],h=t=>{t.length=0,l.push(t)};class c extends n.t{static{this.EVENT_DESTROY="destroy"}constructor(t,e=(0,r.D)()){super(t),this.c={},this._destroying=!1,this._guid=null,this._template=!1,this._app=e}addComponent(t,e){const s=this._app.systems[t];return s?this.c[t]?null:s.addComponent(this,e):null}removeComponent(t){const e=this._app.systems[t];e&&this.c[t]&&e.removeComponent(this)}findComponent(t){const e=this.findOne(e=>e.c?.[t]);return e&&e.c[t]}findComponents(t){return this.find(e=>e.c?.[t]).map(e=>e.c[t])}findScript(t){const e=this.findOne(e=>e.c?.script?.has(t));return e?.c.script.get(t)}findScripts(t){return this.find(e=>e.c?.script?.has(t)).map(e=>e.c.script.get(t))}getGuid(){return this._guid||this.setGuid(i.create()),this._guid}setGuid(t){const e=this._app._entityIndex;this._guid&&delete e[this._guid],this._guid=t,e[this._guid]=this}_notifyHierarchyStateChanged(t,e){let s=!1;t===this&&0===o.length&&(s=!0),t._beingEnabled=!0,t._onHierarchyStateChanged(e),t._onHierarchyStatePostChanged&&o.push(t);const i=t._children;for(let n=0,r=i.length;n<r;n++)i[n]._enabled&&this._notifyHierarchyStateChanged(i[n],e);if(t._beingEnabled=!1,s){for(let t=0;t<o.length;t++)o[t]._onHierarchyStatePostChanged();o.length=0}}_onHierarchyStateChanged(t){super._onHierarchyStateChanged(t);const e=this._getSortedComponents();for(let s=0;s<e.length;s++){const i=e[s];i.enabled&&(t?i.onEnable():i.onDisable())}h(e)}_onHierarchyStatePostChanged(){const t=this._getSortedComponents();for(let e=0;e<t.length;e++)t[e].onPostStateChange();h(t)}findByGuid(t){if(this._guid===t)return this;const e=this._app._entityIndex[t];return e&&(e===this||e.isDescendantOf(this))?e:null}destroy(){this._destroying=!0;for(const t in this.c)this.c[t].enabled=!1;for(const t in this.c)this.c[t].system.removeComponent(this);super.destroy(),this._guid&&delete this._app._entityIndex[this._guid],this._destroying=!1}clone(){const t={},e=this._cloneRecursively(t);return t[this.getGuid()]=e,d(this,this,e,t),e}_getSortedComponents(){const t=this.c,e=l.pop()??[];let s=0;for(const i in t)if(t.hasOwnProperty(i)){const n=t[i];s|=0!==n.constructor.order,e.push(n)}return s&&e.length>1&&e.sort(a),e}_cloneRecursively(t){const e=new this.constructor(void 0,this._app);super._cloneInternal(e);for(const s in this.c){this.c[s].system.cloneComponent(this,e)}for(let s=0;s<this._children.length;s++){const i=this._children[s];if(i instanceof c){const s=i._cloneRecursively(t);e.addChild(s),t[i.getGuid()]=s}}return e}}function d(t,e,s,i){if(e instanceof c){const n=e.c;for(const e in n){const r=n[e],a=r.system.getPropertiesOfType("entity");for(let n=0,o=a.length;n<o;n++){const o=a[n].name,l=r[o];if(!!t.findByGuid(l)){const t=i[l].getGuid();t&&(s.c[e][o]=t)}}}n.script&&s.script.resolveDuplicatedEntityReferenceProperties(n.script,i),n.render&&s.render.resolveDuplicatedEntityReferenceProperties(n.render,i),n.button&&s.button.resolveDuplicatedEntityReferenceProperties(n.button,i),n.scrollview&&s.scrollview.resolveDuplicatedEntityReferenceProperties(n.scrollview,i),n.scrollbar&&s.scrollbar.resolveDuplicatedEntityReferenceProperties(n.scrollbar,i),n.anim&&s.anim.resolveDuplicatedEntityReferenceProperties(n.anim,i);const r=e.children.filter(t=>t instanceof c),a=s.children.filter(t=>t instanceof c);for(let e=0,s=r.length;e<s;e++)d(t,r[e],a[e],i)}}},72233:(t,e,s)=>{s.d(e,{z:()=>O});var i=s(59752),n=s(67454),r=s(48355),a=s(91622),o=s(15979),l=s(58333),h=s(67248);class c{destroy(t){this.bufferId&&(t.gl.deleteBuffer(this.bufferId),this.bufferId=null)}get initialized(){return!!this.bufferId}loseContext(){this.bufferId=null}unlock(t,e,s,i){const n=t.gl;if(this.bufferId)n.bindBuffer(s,this.bufferId),n.bufferSubData(s,0,i);else{let t;switch(e){case a.y1K:t=n.STATIC_DRAW;break;case a.pCO:t=n.DYNAMIC_DRAW;break;case a.oDV:t=n.STREAM_DRAW;break;case a.xHx:t=n.DYNAMIC_COPY}this.bufferId=n.createBuffer(),n.bindBuffer(s,this.bufferId),n.bufferData(s,i,t)}}constructor(){this.bufferId=null}}class d extends c{destroy(t){super.destroy(t),t.unbindVertexArray()}loseContext(){super.loseContext(),this.vao=null}unlock(t){const e=t.device;super.unlock(e,t.usage,e.gl.ARRAY_BUFFER,t.storage)}constructor(...t){super(...t),this.vao=null}}class u extends c{constructor(t){super();const e=t.device.gl,s=t.format;s===a.zYw?this.glFormat=e.UNSIGNED_BYTE:s===a.c02?this.glFormat=e.UNSIGNED_SHORT:s===a.gpl&&(this.glFormat=e.UNSIGNED_INT)}unlock(t){const e=t.device;super.unlock(e,t.usage,e.gl.ELEMENT_ARRAY_BUFFER,t.storage)}}var f=s(61531);class p{constructor(t,e,s,i){if(this.locationId=i,this.scopeId=t.scope.resolve(e),this.version=new f.R,"[0]"===e.substring(e.length-3))switch(s){case a.GF5:s=a.Nv2;break;case a.pG9:s=a.aJo;break;case a.GAt:s=a.lW3;break;case a.MX7:s=a.lGY;break;case a.Qhq:s=a.FEO;break;case a.dD6:s=a.kzn;break;case a.jk_:s=a.CiQ;break;case a.enT:s=a.F1y;break;case a.XAr:s=a.iYc;break;case a.Yj5:s=a.n7d;break;case a.qYl:s=a.Jm2;break;case a.ZKF:s=a.yD7;break;case a.cyR:s=a.$Cd;break;case a.RsJ:s=a.KP3;break;case a.jFk:s=a.Ych;break;case a.S8r:s=a.rlo}this.dataType=s,this.value=[null,null,null,null],this.array=[]}}var m=s(422);const _=new Set(["gl_VertexID","gl_InstanceID","gl_DrawID","gl_BaseVertex","gl_BaseInstance"]);class g{destroy(t){this.map.forEach(e=>{t.gl.deleteShader(e)})}loseContext(t){this.map.clear()}constructor(){this.map=new Map}}const v=new m.N,S=new m.N;class y{constructor(t){this.compileDuration=0,this.init(),this.compile(t.device,t),this.link(t.device,t),t.device.shaders.push(t)}destroy(t){this.glProgram&&(t.device.gl.deleteProgram(this.glProgram),this.glProgram=null)}init(){this.uniforms=[],this.samplers=[],this.attributes=[],this.glProgram=null,this.glVertexShader=null,this.glFragmentShader=null}loseContext(){this.init()}restoreContext(t,e){this.compile(t,e),this.link(t,e)}compile(t,e){const s=e.definition;this.glVertexShader=this._compileShaderSource(t,s.vshader,!0),this.glFragmentShader=this._compileShaderSource(t,s.fshader,!1)}link(t,e){if(this.glProgram)return;const s=t.gl;if(s.isContextLost())return;const i=s.createProgram();this.glProgram=i,s.attachShader(i,this.glVertexShader),s.attachShader(i,this.glFragmentShader);const n=e.definition,r=n.attributes;if(n.useTransformFeedback){const t=[];for(const e in r)r.hasOwnProperty(e)&&t.push(`out_${e}`);s.transformFeedbackVaryings(i,t,s.INTERLEAVED_ATTRIBS)}for(const o in r)if(r.hasOwnProperty(o)){const t=r[o],e=a.tJj[t];s.bindAttribLocation(i,e,o)}s.linkProgram(i)}_compileShaderSource(t,e,s){const i=t.gl;if(i.isContextLost())return null;const n=(s?v:S).get(t,()=>new g);let r=n.map.get(e);return r||(r=i.createShader(s?i.VERTEX_SHADER:i.FRAGMENT_SHADER),i.shaderSource(r,e),i.compileShader(r),n.map.set(e,r)),r}finalize(t,e){const s=t.gl;if(s.isContextLost())return!0;const i=this.glProgram,n=e.definition;if(!s.getProgramParameter(i,s.LINK_STATUS)){if(!this._isCompiled(t,e,this.glVertexShader,n.vshader,"vertex"))return!1;if(!this._isCompiled(t,e,this.glFragmentShader,n.fshader,"fragment"))return!1;const r=`Failed to link shader program. Error: ${s.getProgramInfoLog(i)}`;return console.error(r),!1}const r=s.getProgramParameter(i,s.ACTIVE_ATTRIBUTES);e.attributes.clear();for(let l=0;l<r;l++){const t=s.getActiveAttrib(i,l),r=s.getAttribLocation(i,t.name);_.has(t.name)||(void 0===n.attributes[t.name]?(console.error(`Vertex shader attribute "${t.name}" is not mapped to a semantic in shader definition, shader [${e.label}]`,e),e.failed=!0):e.attributes.set(r,t.name))}const a=t._samplerTypes,o=s.getProgramParameter(i,s.ACTIVE_UNIFORMS);for(let l=0;l<o;l++){const e=s.getActiveUniform(i,l),n=s.getUniformLocation(i,e.name),r=new p(t,e.name,t.pcUniformType[e.type],n);a.has(e.type)?this.samplers.push(r):this.uniforms.push(r)}return e.ready=!0,!0}_isCompiled(t,e,s,i,n){const r=t.gl;if(!r.getShaderParameter(s,r.COMPILE_STATUS)){const t=r.getShaderInfoLog(s),[e,a]=this._processError(i,t),o=`Failed to compile ${n} shader:\n\n${t}\n${e} while rendering undefined`;return console.error(o),!1}return!0}isLinked(t){const{extParallelShaderCompile:e}=t;return!e||t.gl.getProgramParameter(this.glProgram,e.COMPLETION_STATUS_KHR)}_processError(t,e){const s={};let i="";if(t){const n=t.split("\n");let r=0,a=n.length;if(e&&e.startsWith("ERROR:")){const t=e.match(/^ERROR:\s(\d+):(\d+):\s*(.+)/);t&&(s.message=t[3],s.line=parseInt(t[2],10),r=Math.max(0,s.line-6),a=Math.min(n.length,s.line+5))}for(let t=r;t<a;t++){i+=`${t+1===s.line?"> ":"  "}${t+1}:\t${n[t]}\n`}s.source=t}return[i,s]}}function x(t,e){const s=t.width,i=t.height;if(s>e||i>e){const n=e/Math.max(s,i),r=Math.floor(s*n),a=Math.floor(i*n),o=document.createElement("canvas");o.width=r,o.height=a;return o.getContext("2d").drawImage(t,0,0,s,i,0,0,r,a),o}return t}class T{constructor(t){this._glTexture=null,this.dirtyParameterFlags=0,this.texture=t}destroy(t){if(this._glTexture){for(let e=0;e<t.textureUnits.length;e++){const s=t.textureUnits[e];for(let t=0;t<s.length;t++)s[t]===this._glTexture&&(s[t]=null)}t.gl.deleteTexture(this._glTexture),this._glTexture=null}}loseContext(){this._glTexture=null}propertyChanged(t){this.dirtyParameterFlags|=t}initialize(t,e){const s=t.gl;switch(this._glTexture=s.createTexture(),this._glTarget=e._cubemap?s.TEXTURE_CUBE_MAP:e._volume?s.TEXTURE_3D:e.array?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D,e._format){case a.SWx:this._glFormat=s.ALPHA,this._glInternalFormat=s.ALPHA,this._glPixelType=s.UNSIGNED_BYTE;break;case a.RSt:this._glFormat=s.LUMINANCE,this._glInternalFormat=s.LUMINANCE,this._glPixelType=s.UNSIGNED_BYTE;break;case a._3:this._glFormat=s.LUMINANCE_ALPHA,this._glInternalFormat=s.LUMINANCE_ALPHA,this._glPixelType=s.UNSIGNED_BYTE;break;case a.FfR:this._glFormat=s.RED,this._glInternalFormat=s.R8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.MqB:this._glFormat=s.RG,this._glInternalFormat=s.RG8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.kqw:this._glFormat=s.RGB,this._glInternalFormat=s.RGB565,this._glPixelType=s.UNSIGNED_SHORT_5_6_5;break;case a.zIz:this._glFormat=s.RGBA,this._glInternalFormat=s.RGB5_A1,this._glPixelType=s.UNSIGNED_SHORT_5_5_5_1;break;case a.LDn:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA4,this._glPixelType=s.UNSIGNED_SHORT_4_4_4_4;break;case a.akF:this._glFormat=s.RGB,this._glInternalFormat=s.RGB8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.Lxj:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.$$M:case a.wzA:break;case a.S$n:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case a.EPU:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case a.E_6:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case a.G24:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureETC1.COMPRESSED_RGB_ETC1_WEBGL;break;case a.TyC:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case a.apD:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case a.xyx:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;break;case a.Ijy:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case a.ZyS:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGB8_ETC2;break;case a.ArW:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;break;case a.jYy:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;break;case a.x8T:this._glFormat=s.RGB,this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGB_ATC_WEBGL;break;case a.qEN:this._glFormat=s.RGBA,this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;break;case a.Amt:this._glFormat=s.RGB,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;break;case a.ZFf:this._glFormat=s.RGB,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;break;case a.T00:this._glFormat=s.RGBA,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGBA_BPTC_UNORM_EXT;break;case a.LCL:this._glFormat=s.SRGB,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_S3TC_DXT1_EXT;break;case a.I1V:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;break;case a.ImV:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;break;case a.cme:this._glFormat=s.SRGB,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ETC2;break;case a.bjN:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;break;case a.UpR:this._glFormat=s.SRGB_ALPHA,this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;break;case a.vI2:this._glFormat=s.RGBA,this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT;break;case a.qGG:this._glFormat=s.RED,this._glInternalFormat=s.R16F,this._glPixelType=s.HALF_FLOAT;break;case a.RUv:this._glFormat=s.RG,this._glInternalFormat=s.RG16F,this._glPixelType=s.HALF_FLOAT;break;case a.Nnq:this._glFormat=s.RGB,this._glInternalFormat=s.RGB16F,this._glPixelType=s.HALF_FLOAT;break;case a.WBN:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA16F,this._glPixelType=s.HALF_FLOAT;break;case a.FQW:this._glFormat=s.RGB,this._glInternalFormat=s.RGB32F,this._glPixelType=s.FLOAT;break;case a.s7h:this._glFormat=s.RGBA,this._glInternalFormat=s.RGBA32F,this._glPixelType=s.FLOAT;break;case a.IQA:this._glFormat=s.RED,this._glInternalFormat=s.R32F,this._glPixelType=s.FLOAT;break;case a.Wbd:this._glFormat=s.DEPTH_COMPONENT,this._glInternalFormat=s.DEPTH_COMPONENT32F,this._glPixelType=s.FLOAT;break;case a.F0N:this._glFormat=s.DEPTH_COMPONENT,this._glInternalFormat=s.DEPTH_COMPONENT16,this._glPixelType=s.UNSIGNED_SHORT;break;case a.Mg$:this._glFormat=s.DEPTH_STENCIL,this._glInternalFormat=s.DEPTH24_STENCIL8,this._glPixelType=s.UNSIGNED_INT_24_8;break;case a.s_z:this._glFormat=s.RGB,this._glInternalFormat=s.R11F_G11F_B10F,this._glPixelType=s.UNSIGNED_INT_10F_11F_11F_REV;break;case a.FTO:this._glFormat=s.RGB,this._glInternalFormat=s.SRGB8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.Mb4:this._glFormat=s.RGBA,this._glInternalFormat=s.SRGB8_ALPHA8,this._glPixelType=s.UNSIGNED_BYTE;break;case a.OTs:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R8I,this._glPixelType=s.BYTE;break;case a.QyC:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case a.XjN:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R16I,this._glPixelType=s.SHORT;break;case a.XpR:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case a.Ndk:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R32I,this._glPixelType=s.INT;break;case a.zc3:this._glFormat=s.RED_INTEGER,this._glInternalFormat=s.R32UI,this._glPixelType=s.UNSIGNED_INT;break;case a.HZv:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG8I,this._glPixelType=s.BYTE;break;case a.HfE:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case a.Ybx:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG16I,this._glPixelType=s.SHORT;break;case a.YtF:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case a.S$i:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG32I,this._glPixelType=s.INT;break;case a.EYT:this._glFormat=s.RG_INTEGER,this._glInternalFormat=s.RG32UI,this._glPixelType=s.UNSIGNED_INT;break;case a.Cyu:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA8I,this._glPixelType=s.BYTE;break;case a.Qj:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA8UI,this._glPixelType=s.UNSIGNED_BYTE;break;case a.PQv:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA16I,this._glPixelType=s.SHORT;break;case a.bSO:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA16UI,this._glPixelType=s.UNSIGNED_SHORT;break;case a.zVD:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA32I,this._glPixelType=s.INT;break;case a.zbM:this._glFormat=s.RGBA_INTEGER,this._glInternalFormat=s.RGBA32UI,this._glPixelType=s.UNSIGNED_INT}this._glCreated=!1}upload(t,e){const s=t.gl;if(!e._needsUpload&&(e._needsMipmapsUpload&&e._mipmapsUploaded||!e.pot))return;let i,n,r=0;const a=e.numLevels;for(e.array&&!this._glCreated&&s.texStorage3D(s.TEXTURE_2D_ARRAY,a,this._glInternalFormat,e._width,e._height,e._arrayLength);e._levels[r]||0===r;)if(e._needsUpload||0!==r){if(r&&(!e._needsMipmapsUpload||!e._mipmaps))break;if(i=e._levels[r],n=1/Math.pow(2,r),1===r&&!e._compressed&&!e._integerFormat&&e._levels.length<a&&(s.generateMipmap(this._glTarget),e._mipmapsUploaded=!0),e._cubemap){let a;if(t._isBrowserInterface(i[0]))for(a=0;a<6;a++){if(!e._levelsUpdated[0][a])continue;let n=i[a];t._isImageBrowserInterface(n)&&(n.width>t.maxCubeMapSize||n.height>t.maxCubeMapSize)&&(n=x(n,t.maxCubeMapSize),0===r&&(e._width=n.width,e._height=n.height)),t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated?s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,0,0,this._glFormat,this._glPixelType,n):s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,this._glInternalFormat,this._glFormat,this._glPixelType,n)}else for(n=1/Math.pow(2,r),a=0;a<6;a++){if(!e._levelsUpdated[0][a])continue;const o=i[a];e._compressed?this._glCreated&&o?s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glInternalFormat,o):s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,o):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&o?s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glFormat,this._glPixelType,o):s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,r,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,this._glFormat,this._glPixelType,o))}}else if(e._volume)e._compressed?s.compressedTexImage3D(s.TEXTURE_3D,r,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),Math.max(e._depth*n,1),0,i):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),s.texImage3D(s.TEXTURE_3D,r,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),Math.max(e._depth*n,1),0,this._glFormat,this._glPixelType,i));else if(e.array&&"object"==typeof i){if(e._arrayLength===i.length)if(e._compressed)for(let t=0;t<e._arrayLength;t++)s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,r,0,0,t,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),1,this._glInternalFormat,i[t]);else for(let t=0;t<e._arrayLength;t++)s.texSubImage3D(s.TEXTURE_2D_ARRAY,r,0,0,t,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),1,this._glFormat,this._glPixelType,i[t])}else{if(t._isBrowserInterface(i)){t._isImageBrowserInterface(i)&&(i.width>t.maxTextureSize||i.height>t.maxTextureSize)&&(i=x(i,t.maxTextureSize),0===r&&(e._width=i.width,e._height=i.height));const n=i.width||i.videoWidth,a=i.height||i.videoHeight;t.setUnpackFlipY(e._flipY),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&e._width===n&&e._height===a&&!t._isImageVideoInterface(i)?s.texSubImage2D(s.TEXTURE_2D,r,0,0,this._glFormat,this._glPixelType,i):(s.texImage2D(s.TEXTURE_2D,r,this._glInternalFormat,this._glFormat,this._glPixelType,i),0===r&&(e._width=n,e._height=a))}else n=1/Math.pow(2,r),e._compressed?this._glCreated&&i?s.compressedTexSubImage2D(s.TEXTURE_2D,r,0,0,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),this._glInternalFormat,i):s.compressedTexImage2D(s.TEXTURE_2D,r,this._glInternalFormat,Math.max(Math.floor(e._width*n),1),Math.max(Math.floor(e._height*n),1),0,i):(t.setUnpackFlipY(!1),t.setUnpackPremultiplyAlpha(e._premultiplyAlpha),this._glCreated&&i?s.texSubImage2D(s.TEXTURE_2D,r,0,0,Math.max(e._width*n,1),Math.max(e._height*n,1),this._glFormat,this._glPixelType,i):s.texImage2D(s.TEXTURE_2D,r,this._glInternalFormat,Math.max(e._width*n,1),Math.max(e._height*n,1),0,this._glFormat,this._glPixelType,i));e._mipmapsUploaded=0!==r}r++}else r++;if(e._needsUpload)if(e._cubemap)for(let o=0;o<6;o++)e._levelsUpdated[0][o]=!1;else e._levelsUpdated[0]=!1;!e._compressed&&!e._integerFormat&&e._mipmaps&&e._needsMipmapsUpload&&1===e._levels.length&&(s.generateMipmap(this._glTarget),e._mipmapsUploaded=!0),e._gpuSize&&e.adjustVramSizeTracking(t._vram,-e._gpuSize),e._gpuSize=e.gpuSize,e.adjustVramSizeTracking(t._vram,e._gpuSize),this._glCreated=!0}uploadImmediate(t,e){(e._needsUpload||e._needsMipmapsUpload)&&(t.setTexture(e,0),e._needsUpload=!1,e._needsMipmapsUpload=!1)}read(t,e,s,i,n){const r=this.texture;return r.device.readTextureAsync(r,t,e,s,i,n)}write(t,e,s,i,n){const{texture:r}=this,{device:a}=r;return a.setTexture(r,0),a.writeTextureAsync(r,t,e,s,i,n)}}var w=s(52874);class b{constructor(t,e){this.msaaFB=t,this.resolveFB=e}destroy(t){this.msaaFB&&(t.deleteRenderbuffer(this.msaaFB),this.msaaFB=null),this.resolveFB&&(t.deleteRenderbuffer(this.resolveFB),this.resolveFB=null)}}class E{destroy(t){const e=t.gl;this._isInitialized=!1,this._glFrameBuffer&&(this._glFrameBuffer!==this.suppliedColorFramebuffer&&e.deleteFramebuffer(this._glFrameBuffer),this._glFrameBuffer=null),this._glDepthBuffer&&(e.deleteRenderbuffer(this._glDepthBuffer),this._glDepthBuffer=null),this._glResolveFrameBuffer&&(this._glResolveFrameBuffer!==this.suppliedColorFramebuffer&&e.deleteFramebuffer(this._glResolveFrameBuffer),this._glResolveFrameBuffer=null),this._glMsaaColorBuffers.forEach(t=>{e.deleteRenderbuffer(t)}),this._glMsaaColorBuffers.length=0,this.colorMrtFramebuffers?.forEach(t=>{t.destroy(e)}),this.colorMrtFramebuffers=null,this._glMsaaDepthBuffer&&(this._glMsaaDepthBuffer=null,this.msaaDepthBufferKey&&(0,w.D)(t).release(this.msaaDepthBufferKey)),this.suppliedColorFramebuffer=void 0}get initialized(){return this._isInitialized}init(t,e){const s=t.gl;this._isInitialized=!0;const i=[];if(void 0!==this.suppliedColorFramebuffer)this._glFrameBuffer=this.suppliedColorFramebuffer;else{this._glFrameBuffer=s.createFramebuffer(),t.setFramebuffer(this._glFrameBuffer);const n=e._colorBuffers?.length??0,r=s.COLOR_ATTACHMENT0;for(let o=0;o<n;++o){const n=e.getColorBuffer(o);n&&(n.impl._glTexture||(n._width=Math.min(n.width,t.maxRenderBufferSize),n._height=Math.min(n.height,t.maxRenderBufferSize),t.setTexture(n,0)),s.framebufferTexture2D(s.FRAMEBUFFER,r+o,n._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,n.impl._glTexture,e.mipLevel),i.push(r+o))}s.drawBuffers(i);const a=e._depthBuffer;if(a||e._depth){const i=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;if(a)a.impl._glTexture||(a._width=Math.min(a.width,t.maxRenderBufferSize),a._height=Math.min(a.height,t.maxRenderBufferSize),t.setTexture(a,0)),s.framebufferTexture2D(s.FRAMEBUFFER,i,a._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,e._depthBuffer.impl._glTexture,e.mipLevel);else{if(!(e._samples>1)){this._glDepthBuffer||(this._glDepthBuffer=s.createRenderbuffer());const t=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F;s.bindRenderbuffer(s.RENDERBUFFER,this._glDepthBuffer),s.renderbufferStorage(s.RENDERBUFFER,t,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,i,s.RENDERBUFFER,this._glDepthBuffer),s.bindRenderbuffer(s.RENDERBUFFER,null)}}}}if(e._samples>1){this._glResolveFrameBuffer=this._glFrameBuffer,this._glFrameBuffer=s.createFramebuffer(),t.setFramebuffer(this._glFrameBuffer);const n=e._colorBuffers?.length??0;if(void 0!==this.suppliedColorFramebuffer){const i=s.createRenderbuffer();this._glMsaaColorBuffers.push(i);const n=t.backBufferFormat===a.Lxj?s.RGBA8:s.RGB8;s.bindRenderbuffer(s.RENDERBUFFER,i),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,n,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,i)}else for(let t=0;t<n;++t){const i=e.getColorBuffer(t);if(i){const n=s.createRenderbuffer();this._glMsaaColorBuffers.push(n),s.bindRenderbuffer(s.RENDERBUFFER,n),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,i.impl._glInternalFormat,e.width,e.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+t,s.RENDERBUFFER,n)}}if(e._depth){const i=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F,n=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;let r;const a=e._depthBuffer;a&&(r=`${a.id}:${e.width}:${e.height}:${e._samples}:${i}:${n}`,this._glMsaaDepthBuffer=(0,w.D)(t).get(r)),this._glMsaaDepthBuffer||(this._glMsaaDepthBuffer=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,this._glMsaaDepthBuffer),s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,i,e.width,e.height),this._glMsaaDepthBuffer.destroy=function(){s.deleteRenderbuffer(this)},a&&(0,w.D)(t).set(r,this._glMsaaDepthBuffer)),this.msaaDepthBufferKey=r,s.framebufferRenderbuffer(s.FRAMEBUFFER,n,s.RENDERBUFFER,this._glMsaaDepthBuffer)}n>1&&(this._createMsaaMrtFramebuffers(t,e,n),t.setFramebuffer(this._glFrameBuffer),s.drawBuffers(i))}}_createMsaaMrtFramebuffers(t,e,s){const i=t.gl;this.colorMrtFramebuffers=[];for(let n=0;n<s;++n){const s=e.getColorBuffer(n),r=i.createFramebuffer();t.setFramebuffer(r);const a=this._glMsaaColorBuffers[n];i.bindRenderbuffer(i.RENDERBUFFER,a),i.renderbufferStorageMultisample(i.RENDERBUFFER,e._samples,s.impl._glInternalFormat,e.width,e.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,a),i.drawBuffers([i.COLOR_ATTACHMENT0]);const o=i.createFramebuffer();t.setFramebuffer(o),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,s._cubemap?i.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:i.TEXTURE_2D,s.impl._glTexture,0),this.colorMrtFramebuffers[n]=new b(r,o)}}_checkFbo(t,e,s=""){const i=t.gl;switch(i.checkFramebufferStatus(i.FRAMEBUFFER)){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:case i.FRAMEBUFFER_UNSUPPORTED:}}loseContext(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this._glMsaaColorBuffers.length=0,this._glMsaaDepthBuffer=null,this.msaaDepthBufferKey=void 0,this.colorMrtFramebuffers=null,this.suppliedColorFramebuffer=void 0,this._isInitialized=!1}internalResolve(t,e,s,i,n){t.setScissor(0,0,i.width,i.height);const r=t.gl;r.bindFramebuffer(r.READ_FRAMEBUFFER,e),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,s),r.blitFramebuffer(0,0,i.width,i.height,0,0,i.width,i.height,n,r.NEAREST)}resolve(t,e,s,i){const n=t.gl;if(this.colorMrtFramebuffers){if(s)for(let s=0;s<this.colorMrtFramebuffers.length;s++){const i=this.colorMrtFramebuffers[s];this.internalResolve(t,i.msaaFB,i.resolveFB,e,n.COLOR_BUFFER_BIT)}i&&this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,n.DEPTH_BUFFER_BIT)}else this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,(s?n.COLOR_BUFFER_BIT:0)|(i?n.DEPTH_BUFFER_BIT:0));n.bindFramebuffer(n.FRAMEBUFFER,this._glFrameBuffer)}constructor(){this._glFrameBuffer=null,this._glDepthBuffer=null,this._glResolveFrameBuffer=null,this.colorMrtFramebuffers=null,this._glMsaaColorBuffers=[],this._glMsaaDepthBuffer=null,this._isInitialized=!1}}var A=s(84140),C=s(47422),P=s(53480),D=s(87513);class L{destroy(t){this.queries.forEach(e=>t.deleteQuery(e)),this.queries=null}constructor(){this.queries=[]}}class M extends D.M{constructor(t){super(),this.freeQueries=[],this.frameQueries=[],this.previousFrameQueries=[],this.timings=[],this.device=t,this.ext=t.extDisjointTimerQuery}destroy(){this.freeQueries.forEach(t=>this.device.gl.deleteQuery(t)),this.frameQueries.forEach(t=>this.device.gl.deleteQuery(t)),this.previousFrameQueries.forEach(t=>t.destroy(this.device.gl)),this.freeQueries=null,this.frameQueries=null,this.previousFrameQueries=null}loseContext(){super.loseContext(),this.freeQueries=[],this.frameQueries=[],this.previousFrameQueries=[]}restoreContext(){this.ext=this.device.extDisjointTimerQuery}getQuery(){return this.freeQueries.pop()??this.device.gl.createQuery()}start(t){if(this.ext){const e=this.getSlot(t),s=this.getQuery();return this.frameQueries[e]=s,this.device.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,s),e}}end(t){void 0!==t&&this.device.gl.endQuery(this.ext.TIME_ELAPSED_EXT)}frameStart(){this.processEnableRequest(),this._enabled&&(this.frameGPUMarkerSlot=this.start("GpuFrame"))}frameEnd(){this._enabled&&this.end(this.frameGPUMarkerSlot)}request(){if(this._enabled){const t=this.ext,e=this.device.gl,s=this.device.renderVersion,i=this.frameQueries;if(i.length>0){this.frameQueries=[];const t=new L;t.queries=i,t.renderVersion=s,this.previousFrameQueries.push(t)}if(this.previousFrameQueries.length>0){const s=this.previousFrameQueries[0],i=s.queries,n=i[i.length-1],r=e.getQueryParameter(n,e.QUERY_RESULT_AVAILABLE),a=e.getParameter(t.GPU_DISJOINT_EXT);if(r&&!a){this.previousFrameQueries.shift();const t=this.timings;t.length=0;for(let s=0;s<i.length;s++){const n=i[s],r=e.getQueryParameter(n,e.QUERY_RESULT);t[s]=1e-6*r,this.freeQueries.push(n)}this.report(s.renderVersion,t)}a&&(this.previousFrameQueries.forEach(t=>{this.report(t.renderVersion,null),t.destroy(e)}),this.previousFrameQueries.length=0)}super.request(s)}}}var I=s(39964),R=s(17176);const F=[];class O extends o.G{constructor(t,e={}){super(t,e),this._defaultFramebuffer=null,this._defaultFramebufferChanged=!1,e=this.initOptions,this.updateClientRect(),this.initTextureUnits(),this.contextLost=!1,this._contextLostHandler=t=>{t.preventDefault(),this.loseContext(),this.fire("devicelost")},this._contextRestoredHandler=()=>{this.restoreContext(),this.fire("devicerestored")};const s="undefined"!=typeof navigator&&navigator.userAgent;if(this.forceDisableMultisampling=s&&s.includes("AppleWebKit")&&(s.includes("15.4")||s.includes("15_4")),this.forceDisableMultisampling&&(e.antialias=!1),"firefox"===n.i.browserName){const t=("undefined"!=typeof navigator?navigator.userAgent:"").match(/Firefox\/(\d+(\.\d+)*)/),s=t?t[1]:null;if(s){const t=parseFloat(s);("windows"===n.i.name&&(t>=120||115===t)||"android"===n.i.name&&t>=132)&&(e.antialias=!1)}}this.backBufferAntialias=e.antialias??!1,e.antialias=!1;const i=e.gl??t.getContext("webgl2",e);if(!i)throw new Error("WebGL not supported");this.gl=i,this.isWebGL2=!0,this._deviceType=a.Nwc,this.updateBackbufferFormat(null);const r="chrome"===n.i.browserName,o="safari"===n.i.browserName,l=n.i.browser&&-1!==navigator.appVersion.indexOf("Mac");let h,c,d,u,f;this._tempEnableSafariTextureUnitWorkaround=o,this._tempMacChromeBlitFramebufferWorkaround=l&&r&&!e.alpha,t.addEventListener("webglcontextlost",this._contextLostHandler,!1),t.addEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this.initializeExtensions(),this.initializeCapabilities(),this.initializeRenderState(),this.initializeContextCaches(),this.createBackbuffer(null),this.supportsImageBitmap=!o&&"undefined"!=typeof ImageBitmap,this._samplerTypes=new Set([i.SAMPLER_2D,i.SAMPLER_CUBE,i.UNSIGNED_INT_SAMPLER_2D,i.INT_SAMPLER_2D,i.SAMPLER_2D_SHADOW,i.SAMPLER_CUBE_SHADOW,i.SAMPLER_3D,i.INT_SAMPLER_3D,i.UNSIGNED_INT_SAMPLER_3D,i.SAMPLER_2D_ARRAY,i.INT_SAMPLER_2D_ARRAY,i.UNSIGNED_INT_SAMPLER_2D_ARRAY]),this.glAddress=[i.REPEAT,i.CLAMP_TO_EDGE,i.MIRRORED_REPEAT],this.glBlendEquation=[i.FUNC_ADD,i.FUNC_SUBTRACT,i.FUNC_REVERSE_SUBTRACT,i.MIN,i.MAX],this.glBlendFunctionColor=[i.ZERO,i.ONE,i.SRC_COLOR,i.ONE_MINUS_SRC_COLOR,i.DST_COLOR,i.ONE_MINUS_DST_COLOR,i.SRC_ALPHA,i.SRC_ALPHA_SATURATE,i.ONE_MINUS_SRC_ALPHA,i.DST_ALPHA,i.ONE_MINUS_DST_ALPHA,i.CONSTANT_COLOR,i.ONE_MINUS_CONSTANT_COLOR],this.glBlendFunctionAlpha=[i.ZERO,i.ONE,i.SRC_COLOR,i.ONE_MINUS_SRC_COLOR,i.DST_COLOR,i.ONE_MINUS_DST_COLOR,i.SRC_ALPHA,i.SRC_ALPHA_SATURATE,i.ONE_MINUS_SRC_ALPHA,i.DST_ALPHA,i.ONE_MINUS_DST_ALPHA,i.CONSTANT_ALPHA,i.ONE_MINUS_CONSTANT_ALPHA],this.glComparison=[i.NEVER,i.LESS,i.EQUAL,i.LEQUAL,i.GREATER,i.NOTEQUAL,i.GEQUAL,i.ALWAYS],this.glStencilOp=[i.KEEP,i.ZERO,i.REPLACE,i.INCR,i.INCR_WRAP,i.DECR,i.DECR_WRAP,i.INVERT],this.glClearFlag=[0,i.COLOR_BUFFER_BIT,i.DEPTH_BUFFER_BIT,i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT,i.STENCIL_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.COLOR_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.DEPTH_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT],this.glCull=[0,i.BACK,i.FRONT,i.FRONT_AND_BACK],this.glFilter=[i.NEAREST,i.LINEAR,i.NEAREST_MIPMAP_NEAREST,i.NEAREST_MIPMAP_LINEAR,i.LINEAR_MIPMAP_NEAREST,i.LINEAR_MIPMAP_LINEAR],this.glPrimitive=[i.POINTS,i.LINES,i.LINE_LOOP,i.LINE_STRIP,i.TRIANGLES,i.TRIANGLE_STRIP,i.TRIANGLE_FAN],this.glType=[i.BYTE,i.UNSIGNED_BYTE,i.SHORT,i.UNSIGNED_SHORT,i.INT,i.UNSIGNED_INT,i.FLOAT,i.HALF_FLOAT],this.pcUniformType={},this.pcUniformType[i.BOOL]=a.MX7,this.pcUniformType[i.INT]=a.pG9,this.pcUniformType[i.FLOAT]=a.GF5,this.pcUniformType[i.FLOAT_VEC2]=a.Qhq,this.pcUniformType[i.FLOAT_VEC3]=a.XAr,this.pcUniformType[i.FLOAT_VEC4]=a.cyR,this.pcUniformType[i.INT_VEC2]=a.dD6,this.pcUniformType[i.INT_VEC3]=a.Yj5,this.pcUniformType[i.INT_VEC4]=a.RsJ,this.pcUniformType[i.BOOL_VEC2]=a.enT,this.pcUniformType[i.BOOL_VEC3]=a.ZKF,this.pcUniformType[i.BOOL_VEC4]=a.S8r,this.pcUniformType[i.FLOAT_MAT2]=a.Eb5,this.pcUniformType[i.FLOAT_MAT3]=a.xzR,this.pcUniformType[i.FLOAT_MAT4]=a.CPw,this.pcUniformType[i.SAMPLER_2D]=a.rlY,this.pcUniformType[i.SAMPLER_CUBE]=a.KpZ,this.pcUniformType[i.UNSIGNED_INT]=a.GAt,this.pcUniformType[i.UNSIGNED_INT_VEC2]=a.jk_,this.pcUniformType[i.UNSIGNED_INT_VEC3]=a.qYl,this.pcUniformType[i.UNSIGNED_INT_VEC4]=a.jFk,this.pcUniformType[i.SAMPLER_2D_SHADOW]=a.yLH,this.pcUniformType[i.SAMPLER_CUBE_SHADOW]=a.zYo,this.pcUniformType[i.SAMPLER_2D_ARRAY]=a.$AA,this.pcUniformType[i.SAMPLER_3D]=a.q8s,this.pcUniformType[i.INT_SAMPLER_2D]=a.olY,this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D]=a.sxV,this.pcUniformType[i.INT_SAMPLER_CUBE]=a.ZLq,this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D]=a.nml,this.pcUniformType[i.INT_SAMPLER_3D]=a.DLt,this.pcUniformType[i.UNSIGNED_INT_SAMPLER_3D]=a.hOr,this.pcUniformType[i.INT_SAMPLER_2D_ARRAY]=a.EYZ,this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D_ARRAY]=a.uVS,this.targetToSlot={},this.targetToSlot[i.TEXTURE_2D]=0,this.targetToSlot[i.TEXTURE_CUBE_MAP]=1,this.targetToSlot[i.TEXTURE_3D]=2,this.commitFunction=[],this.commitFunction[a.MX7]=function(t,e){t.value!==e&&(i.uniform1i(t.locationId,e),t.value=e)},this.commitFunction[a.pG9]=this.commitFunction[a.MX7],this.commitFunction[a.GF5]=function(t,e){t.value!==e&&(i.uniform1f(t.locationId,e),t.value=e)},this.commitFunction[a.Qhq]=function(t,e){f=t.value,h=e[0],c=e[1],f[0]===h&&f[1]===c||(i.uniform2fv(t.locationId,e),f[0]=h,f[1]=c)},this.commitFunction[a.XAr]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],f[0]===h&&f[1]===c&&f[2]===d||(i.uniform3fv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d)},this.commitFunction[a.cyR]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],u=e[3],f[0]===h&&f[1]===c&&f[2]===d&&f[3]===u||(i.uniform4fv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d,f[3]=u)},this.commitFunction[a.dD6]=function(t,e){f=t.value,h=e[0],c=e[1],f[0]===h&&f[1]===c||(i.uniform2iv(t.locationId,e),f[0]=h,f[1]=c)},this.commitFunction[a.enT]=this.commitFunction[a.dD6],this.commitFunction[a.Yj5]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],f[0]===h&&f[1]===c&&f[2]===d||(i.uniform3iv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d)},this.commitFunction[a.ZKF]=this.commitFunction[a.Yj5],this.commitFunction[a.RsJ]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],u=e[3],f[0]===h&&f[1]===c&&f[2]===d&&f[3]===u||(i.uniform4iv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d,f[3]=u)},this.commitFunction[a.S8r]=this.commitFunction[a.RsJ],this.commitFunction[a.Eb5]=function(t,e){i.uniformMatrix2fv(t.locationId,!1,e)},this.commitFunction[a.xzR]=function(t,e){i.uniformMatrix3fv(t.locationId,!1,e)},this.commitFunction[a.CPw]=function(t,e){i.uniformMatrix4fv(t.locationId,!1,e)},this.commitFunction[a.Nv2]=function(t,e){i.uniform1fv(t.locationId,e)},this.commitFunction[a.FEO]=function(t,e){i.uniform2fv(t.locationId,e)},this.commitFunction[a.iYc]=function(t,e){i.uniform3fv(t.locationId,e)},this.commitFunction[a.$Cd]=function(t,e){i.uniform4fv(t.locationId,e)},this.commitFunction[a.GAt]=function(t,e){t.value!==e&&(i.uniform1ui(t.locationId,e),t.value=e)},this.commitFunction[a.jk_]=function(t,e){f=t.value,h=e[0],c=e[1],f[0]===h&&f[1]===c||(i.uniform2uiv(t.locationId,e),f[0]=h,f[1]=c)},this.commitFunction[a.qYl]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],f[0]===h&&f[1]===c&&f[2]===d||(i.uniform3uiv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d)},this.commitFunction[a.jFk]=function(t,e){f=t.value,h=e[0],c=e[1],d=e[2],u=e[3],f[0]===h&&f[1]===c&&f[2]===d&&f[3]===u||(i.uniform4uiv(t.locationId,e),f[0]=h,f[1]=c,f[2]=d,f[3]=u)},this.commitFunction[a.aJo]=function(t,e){i.uniform1iv(t.locationId,e)},this.commitFunction[a.lW3]=function(t,e){i.uniform1uiv(t.locationId,e)},this.commitFunction[a.lGY]=this.commitFunction[a.aJo],this.commitFunction[a.kzn]=function(t,e){i.uniform2iv(t.locationId,e)},this.commitFunction[a.CiQ]=function(t,e){i.uniform2uiv(t.locationId,e)},this.commitFunction[a.F1y]=this.commitFunction[a.kzn],this.commitFunction[a.n7d]=function(t,e){i.uniform3iv(t.locationId,e)},this.commitFunction[a.Jm2]=function(t,e){i.uniform3uiv(t.locationId,e)},this.commitFunction[a.yD7]=this.commitFunction[a.n7d],this.commitFunction[a.KP3]=function(t,e){i.uniform4iv(t.locationId,e)},this.commitFunction[a.Ych]=function(t,e){i.uniform4uiv(t.locationId,e)},this.commitFunction[a.rlo]=this.commitFunction[a.KP3],this.commitFunction[a.TWL]=function(t,e){i.uniformMatrix4fv(t.locationId,!1,e)},this.constantTexSource=this.scope.resolve("source"),this.postInit()}postInit(){super.postInit(),this.gpuProfiler=new M(this)}destroy(){super.destroy();const t=this.gl;this.feedback&&t.deleteTransformFeedback(this.feedback),this.clearVertexArrayObjectCache(),this.canvas.removeEventListener("webglcontextlost",this._contextLostHandler,!1),this.canvas.removeEventListener("webglcontextrestored",this._contextRestoredHandler,!1),this._contextLostHandler=null,this._contextRestoredHandler=null,this.gl=null,super.postDestroy()}createBackbuffer(t){this.supportsStencil=this.initOptions.stencil,this.backBuffer=new l.O({name:"WebglFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples}),this.backBuffer.impl.suppliedColorFramebuffer=t}updateBackbufferFormat(t){const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,t);const s=this.gl.getParameter(this.gl.ALPHA_BITS);this.backBufferFormat=s?a.Lxj:a.akF}updateBackbuffer(){const t=this.canvas.width!==this.backBufferSize.x||this.canvas.height!==this.backBufferSize.y;(this._defaultFramebufferChanged||t)&&(this._defaultFramebufferChanged&&this.updateBackbufferFormat(this._defaultFramebuffer),this._defaultFramebufferChanged=!1,this.backBufferSize.set(this.canvas.width,this.canvas.height),this.backBuffer.destroy(),this.createBackbuffer(this._defaultFramebuffer))}createVertexBufferImpl(t,e){return new d}createIndexBufferImpl(t){return new u(t)}createShaderImpl(t){return new y(t)}createTextureImpl(t){return new T(t)}createRenderTargetImpl(t){return new E}getPrecision(){const t=this.gl;let e="highp";if(t.getShaderPrecisionFormat){const s=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT),i=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT),n=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT),r=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT);if(s&&i&&n&&r){const t=s.precision>0&&n.precision>0,a=i.precision>0&&r.precision>0;t||(e=a?"mediump":"lowp")}}return e}getExtension(){for(let t=0;t<arguments.length;t++)if(-1!==this.supportedExtensions.indexOf(arguments[t]))return this.gl.getExtension(arguments[t]);return null}get extDisjointTimerQuery(){return this._extDisjointTimerQuery||(this._extDisjointTimerQuery=this.getExtension("EXT_disjoint_timer_query_webgl2","EXT_disjoint_timer_query")),this._extDisjointTimerQuery}initializeExtensions(){const t=this.gl;this.supportedExtensions=t.getSupportedExtensions()??[],this._extDisjointTimerQuery=null,this.textureRG11B10Renderable=!0,this.extColorBufferFloat=this.getExtension("EXT_color_buffer_float"),this.textureFloatRenderable=!!this.extColorBufferFloat,this.extColorBufferHalfFloat=this.getExtension("EXT_color_buffer_half_float"),this.textureHalfFloatRenderable=!!this.extColorBufferHalfFloat||!!this.extColorBufferFloat,this.extDebugRendererInfo=this.getExtension("WEBGL_debug_renderer_info"),this.extTextureFloatLinear=this.getExtension("OES_texture_float_linear"),this.textureFloatFilterable=!!this.extTextureFloatLinear,this.extFloatBlend=this.getExtension("EXT_float_blend"),this.extTextureFilterAnisotropic=this.getExtension("EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic"),this.extParallelShaderCompile=this.getExtension("KHR_parallel_shader_compile"),this.extCompressedTextureETC1=this.getExtension("WEBGL_compressed_texture_etc1"),this.extCompressedTextureETC=this.getExtension("WEBGL_compressed_texture_etc"),this.extCompressedTexturePVRTC=this.getExtension("WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc"),this.extCompressedTextureS3TC=this.getExtension("WEBGL_compressed_texture_s3tc","WEBKIT_WEBGL_compressed_texture_s3tc"),this.extCompressedTextureS3TC_SRGB=this.getExtension("WEBGL_compressed_texture_s3tc_srgb"),this.extCompressedTextureATC=this.getExtension("WEBGL_compressed_texture_atc"),this.extCompressedTextureASTC=this.getExtension("WEBGL_compressed_texture_astc"),this.extTextureCompressionBPTC=this.getExtension("EXT_texture_compression_bptc")}initializeCapabilities(){const t=this.gl;let e;const s="undefined"!=typeof navigator?navigator.userAgent:"";this.maxPrecision=this.precision=this.getPrecision();const i=t.getContextAttributes();this.supportsMsaa=i?.antialias??!1,this.supportsStencil=i?.stencil??!1,this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxCubeMapSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxRenderBufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxTextures=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxCombinedTextures=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.vertexUniformsCount=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this.fragmentUniformsCount=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),this.maxColorAttachments=t.getParameter(t.MAX_COLOR_ATTACHMENTS),this.maxVolumeSize=t.getParameter(t.MAX_3D_TEXTURE_SIZE),e=this.extDebugRendererInfo,this.unmaskedRenderer=e?t.getParameter(e.UNMASKED_RENDERER_WEBGL):"",this.unmaskedVendor=e?t.getParameter(e.UNMASKED_VENDOR_WEBGL):"";this.supportsGpuParticles=!("ARM"===this.unmaskedVendor&&s.match(/SM-[a-zA-Z0-9]+/)||this.unmaskedRenderer.match(/\bMali-G52+/)),e=this.extTextureFilterAnisotropic,this.maxAnisotropy=e?t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1;const r=!this.forceDisableMultisampling;this.maxSamples=r?t.getParameter(t.MAX_SAMPLES):1,this.maxSamples=Math.min(this.maxSamples,4),this.samples=r&&this.backBufferAntialias?this.maxSamples:1,this.supportsAreaLights=!n.i.android,this.maxTextures<=8&&(this.supportsAreaLights=!1),this.initCapsDefines()}initializeRenderState(){super.initializeRenderState();const t=this.gl;t.disable(t.BLEND),t.blendFunc(t.ONE,t.ZERO),t.blendEquation(t.FUNC_ADD),t.colorMask(!0,!0,!0,!0),t.blendColor(0,0,0,0),t.enable(t.CULL_FACE),this.cullFace=t.BACK,t.cullFace(t.BACK),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.depthMask(!0),this.stencil=!1,t.disable(t.STENCIL_TEST),this.stencilFuncFront=this.stencilFuncBack=a.vpx,this.stencilRefFront=this.stencilRefBack=0,this.stencilMaskFront=this.stencilMaskBack=255,t.stencilFunc(t.ALWAYS,0,255),this.stencilFailFront=this.stencilFailBack=a.GU6,this.stencilZfailFront=this.stencilZfailBack=a.GU6,this.stencilZpassFront=this.stencilZpassBack=a.GU6,this.stencilWriteMaskFront=255,this.stencilWriteMaskBack=255,t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.stencilMask(255),this.alphaToCoverage=!1,this.raster=!0,t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.disable(t.RASTERIZER_DISCARD),this.depthBiasEnabled=!1,t.disable(t.POLYGON_OFFSET_FILL),this.clearDepth=1,t.clearDepth(1),this.clearColor=new r.Q(0,0,0,0),t.clearColor(0,0,0,0),this.clearStencil=0,t.clearStencil(0),t.hint(t.FRAGMENT_SHADER_DERIVATIVE_HINT,t.NICEST),t.enable(t.SCISSOR_TEST),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE),this.unpackFlipY=!1,t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1),this.unpackPremultiplyAlpha=!1,t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),t.pixelStorei(t.UNPACK_ALIGNMENT,1)}initTextureUnits(t=16){this.textureUnits=[];for(let e=0;e<t;e++)this.textureUnits.push([null,null,null])}initializeContextCaches(){super.initializeContextCaches(),this._vaoMap=new Map,this.boundVao=null,this.activeFramebuffer=null,this.feedback=null,this.transformFeedbackBuffer=null,this.textureUnit=0,this.initTextureUnits(this.maxCombinedTextures)}loseContext(){super.loseContext();for(const t of this.shaders)t.loseContext()}restoreContext(){this.initializeExtensions(),this.initializeCapabilities(),super.restoreContext();for(const t of this.shaders)t.restoreContext()}setViewport(t,e,s,i){this.vx===t&&this.vy===e&&this.vw===s&&this.vh===i||(this.gl.viewport(t,e,s,i),this.vx=t,this.vy=e,this.vw=s,this.vh=i)}setScissor(t,e,s,i){this.sx===t&&this.sy===e&&this.sw===s&&this.sh===i||(this.gl.scissor(t,e,s,i),this.sx=t,this.sy=e,this.sw=s,this.sh=i)}setFramebuffer(t){if(this.activeFramebuffer!==t){const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,t),this.activeFramebuffer=t}}copyRenderTarget(t,e,s,i){const n=this.gl;if(t===this.backBuffer&&(t=null),s)if(e){if(t){if(!t._colorBuffer||!e._colorBuffer)return!1;if(t._colorBuffer._format!==e._colorBuffer._format)return!1}}else if(!t._colorBuffer)return!1;if(i&&t&&!t._depth){if(!t._depthBuffer||!e._depthBuffer)return!1;if(t._depthBuffer._format!==e._depthBuffer._format)return!1}const r=this.renderTarget;this.renderTarget=e,this.updateBegin();const a=t?t.impl._glFrameBuffer:this.backBuffer?.impl._glFrameBuffer,o=e?e.impl._glFrameBuffer:this.backBuffer?.impl._glFrameBuffer;n.bindFramebuffer(n.READ_FRAMEBUFFER,a),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,o);const l=t?t.width:e?e.width:this.width,h=t?t.height:e?e.height:this.height;return n.blitFramebuffer(0,0,l,h,0,0,l,h,(s?n.COLOR_BUFFER_BIT:0)|(i?n.DEPTH_BUFFER_BIT:0),n.NEAREST),this.renderTarget=r,n.bindFramebuffer(n.FRAMEBUFFER,r?r.impl._glFrameBuffer:null),!0}frameStart(){super.frameStart(),this.updateBackbuffer(),this.gpuProfiler.frameStart()}frameEnd(){super.frameEnd(),this.gpuProfiler.frameEnd(),this.gpuProfiler.request()}startRenderPass(t){const e=t.renderTarget??this.backBuffer;this.renderTarget=e,this.updateBegin();const{width:s,height:i}=e;this.setViewport(0,0,s,i),this.setScissor(0,0,s,i);const n=t.colorOps,r=t.depthStencilOps;if(n?.clear||r.clearDepth||r.clearStencil){let t=0;const e={};n?.clear&&(t|=a.Sue,e.color=[n.clearValue.r,n.clearValue.g,n.clearValue.b,n.clearValue.a]),r.clearDepth&&(t|=a.YKI,e.depth=r.clearDepthValue),r.clearStencil&&(t|=a.zwO,e.stencil=r.clearStencilValue),e.flags=t,this.clear(e)}this.insideRenderPass=!0}endRenderPass(t){this.unbindVertexArray();const e=this.renderTarget,s=t.colorArrayOps.length;if(e){F.length=0;const i=this.gl;for(let e=0;e<s;e++){const s=t.colorArrayOps[e];s.store||s.resolve||F.push(i.COLOR_ATTACHMENT0+e)}e!==this.backBuffer&&(t.depthStencilOps.storeDepth||F.push(i.DEPTH_ATTACHMENT),t.depthStencilOps.storeStencil||F.push(i.STENCIL_ATTACHMENT)),F.length>0&&t.fullSizeClearRect&&i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,F),s&&t.colorOps?.resolve&&t.samples>1&&e.autoResolve&&e.resolve(!0,!1),e.depthBuffer&&t.depthStencilOps.resolveDepth&&t.samples>1&&e.autoResolve&&e.resolve(!1,!0);for(let n=0;n<s;n++){if(t.colorArrayOps[n].genMipmaps){const t=e._colorBuffers[n];t&&t.impl._glTexture&&t.mipmaps&&(this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(t),this.gl.generateMipmap(t.impl._glTarget))}}}this.insideRenderPass=!1}set defaultFramebuffer(t){this._defaultFramebuffer!==t&&(this._defaultFramebuffer=t,this._defaultFramebufferChanged=!0)}get defaultFramebuffer(){return this._defaultFramebuffer}updateBegin(){if(this.boundVao=null,this._tempEnableSafariTextureUnitWorkaround)for(let s=0;s<this.textureUnits.length;++s)for(let t=0;t<3;++t)this.textureUnits[s][t]=null;const t=this.renderTarget??this.backBuffer,e=t.impl;e.initialized||this.initRenderTarget(t),this.setFramebuffer(e._glFrameBuffer)}updateEnd(){this.unbindVertexArray();const t=this.renderTarget;if(t&&t!==this.backBuffer){t._samples>1&&t.autoResolve&&t.resolve();const e=t._colorBuffer;e&&e.impl._glTexture&&e.mipmaps&&(this.activeTexture(this.maxCombinedTextures-1),this.bindTexture(e),this.gl.generateMipmap(e.impl._glTarget))}}setUnpackFlipY(t){if(this.unpackFlipY!==t){this.unpackFlipY=t;const e=this.gl;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t)}}setUnpackPremultiplyAlpha(t){if(this.unpackPremultiplyAlpha!==t){this.unpackPremultiplyAlpha=t;const e=this.gl;e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t)}}activeTexture(t){this.textureUnit!==t&&(this.gl.activeTexture(this.gl.TEXTURE0+t),this.textureUnit=t)}bindTexture(t){const e=t.impl,s=e._glTarget,i=e._glTexture,n=this.textureUnit,r=this.targetToSlot[s];this.textureUnits[n][r]!==i&&(this.gl.bindTexture(s,i),this.textureUnits[n][r]=i)}bindTextureOnUnit(t,e){const s=t.impl,i=s._glTarget,n=s._glTexture,r=this.targetToSlot[i];this.textureUnits[e][r]!==n&&(this.activeTexture(e),this.gl.bindTexture(i,n),this.textureUnits[e][r]=n)}setTextureParameters(t){const e=this.gl,s=t.impl.dirtyParameterFlags,n=t.impl._glTarget;if(s&a.pTl){let s=t._minFilter;(!t._mipmaps||t._compressed&&1===t._levels.length)&&(s===a.GLw||s===a.hs2?s=a.uhC:s!==a.reG&&s!==a.qn_||(s=a.DrA)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,this.glFilter[s])}if(s&a.KT$&&e.texParameteri(n,e.TEXTURE_MAG_FILTER,this.glFilter[t._magFilter]),s&a.qA2&&e.texParameteri(n,e.TEXTURE_WRAP_S,this.glAddress[t._addressU]),s&a.jDC&&e.texParameteri(n,e.TEXTURE_WRAP_T,this.glAddress[t._addressV]),s&a.qfQ&&e.texParameteri(n,e.TEXTURE_WRAP_R,this.glAddress[t._addressW]),s&a.kur&&e.texParameteri(n,e.TEXTURE_COMPARE_MODE,t._compareOnRead?e.COMPARE_REF_TO_TEXTURE:e.NONE),s&a.QUq&&e.texParameteri(n,e.TEXTURE_COMPARE_FUNC,this.glComparison[t._compareFunc]),s&a.YdP){const s=this.extTextureFilterAnisotropic;s&&e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,i.D.clamp(Math.round(t._anisotropy),1,this.maxAnisotropy))}}setTexture(t,e){const s=t.impl;s._glTexture||s.initialize(this,t),s.dirtyParameterFlags>0||t._needsUpload||t._needsMipmapsUpload?(this.activeTexture(e),this.bindTexture(t),s.dirtyParameterFlags&&(this.setTextureParameters(t),s.dirtyParameterFlags=0),(t._needsUpload||t._needsMipmapsUpload)&&(s.upload(this,t),t._needsUpload=!1,t._needsMipmapsUpload=!1)):this.bindTextureOnUnit(t,e)}createVertexArray(t){let e,s;const i=t.length>1;if(i){e="";for(let s=0;s<t.length;s++){const i=t[s];e+=i.id+i.format.renderingHash}s=this._vaoMap.get(e)}if(!s){const n=this.gl;s=n.createVertexArray(),n.bindVertexArray(s),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null);for(let e=0;e<t.length;e++){const s=t[e];n.bindBuffer(n.ARRAY_BUFFER,s.impl.bufferId);const i=s.format.elements;for(let t=0;t<i.length;t++){const e=i[t],r=a.tJj[e.name];e.asInt?n.vertexAttribIPointer(r,e.numComponents,this.glType[e.dataType],e.stride,e.offset):n.vertexAttribPointer(r,e.numComponents,this.glType[e.dataType],e.normalize,e.stride,e.offset),n.enableVertexAttribArray(r),s.format.instancing&&n.vertexAttribDivisor(r,1)}}n.bindVertexArray(null),n.bindBuffer(n.ARRAY_BUFFER,null),i&&this._vaoMap.set(e,s)}return s}unbindVertexArray(){this.boundVao&&(this.boundVao=null,this.gl.bindVertexArray(null))}setBuffers(t){const e=this.gl;let s;if(1===this.vertexBuffers.length){const t=this.vertexBuffers[0];t.impl.vao||(t.impl.vao=this.createVertexArray(this.vertexBuffers)),s=t.impl.vao}else s=this.createVertexArray(this.vertexBuffers);this.boundVao!==s&&(this.boundVao=s,e.bindVertexArray(s));const i=t?t.impl.bufferId:null;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i)}draw(t,e,s,i,n=!0,r=!0){const a=this.shader;if(a&&(this.activateShader(),this.shaderValid)){const i=this.gl;n&&this.setBuffers(e);let r=0;const o=a.impl.samplers;for(let t=0,e=o.length;t<e;t++){const e=o[t];let s=e.scopeId.value;if(!s){const t=e.scopeId.name;"uSceneDepthMap"===t&&(s=(0,R.L)(this,"white")),"uSceneColorMap"===t&&(s=(0,R.L)(this,"pink")),s||(s=(0,R.L)(this,"pink"))}if(s instanceof h.g){const t=s;this.setTexture(t,r),e.slot!==r&&(i.uniform1i(e.locationId,r),e.slot=r),r++}else{e.array.length=0;const t=s.length;for(let i=0;i<t;i++){const t=s[i];this.setTexture(t,r),e.array[i]=r,r++}i.uniform1iv(e.locationId,e.array)}}const l=a.impl.uniforms;for(let t=0,e=l.length;t<e;t++){const e=l[t],s=e.scopeId,i=e.version,n=s.versionObject.version;if(i.globalId!==n.globalId||i.revision!==n.revision){i.globalId=n.globalId,i.revision=n.revision;const t=s.value;null!=t&&this.commitFunction[e.dataType](e,t)}}this.transformFeedbackBuffer&&(i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,0,this.transformFeedbackBuffer.impl.bufferId),i.beginTransformFeedback(i.POINTS));const c=this.glPrimitive[t.type],d=t.count;if(t.indexed){const n=e.impl.glFormat,r=t.base*e.bytesPerIndex;s>0?i.drawElementsInstanced(c,d,n,r,s):i.drawElements(c,d,n,r)}else{const e=t.base;s>0?i.drawArraysInstanced(c,e,d,s):i.drawArrays(c,e,d)}this.transformFeedbackBuffer&&(i.endTransformFeedback(),i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,0,null)),this._drawCallsPerFrame++}r&&this.clearVertexBuffer()}clear(t){const e=this.defaultClearOptions,s=(t=t||e).flags??e.flags;if(0!==s){const i=this.gl;if(s&a.Sue){const s=t.color??e.color,i=s[0],n=s[1],r=s[2],a=s[3],o=this.clearColor;i===o.r&&n===o.g&&r===o.b&&a===o.a||(this.gl.clearColor(i,n,r,a),this.clearColor.set(i,n,r,a)),this.setBlendState(A.t.NOBLEND)}if(s&a.YKI){const s=t.depth??e.depth;s!==this.clearDepth&&(this.gl.clearDepth(s),this.clearDepth=s),this.setDepthState(C.H.WRITEDEPTH)}if(s&a.zwO){const s=t.stencil??e.stencil;s!==this.clearStencil&&(this.gl.clearStencil(s),this.clearStencil=s),i.stencilMask(255),this.stencilWriteMaskFront=255,this.stencilWriteMaskBack=255}i.clear(this.glClearFlag[s])}}submit(){this.gl.flush()}readPixels(t,e,s,i,n){const r=this.gl;r.readPixels(t,e,s,i,r.RGBA,r.UNSIGNED_BYTE,n)}clientWaitAsync(t,e){const s=this.gl,i=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);return this.submit(),new Promise((n,r)=>{!function a(){const o=s.clientWaitSync(i,t,0);o===s.TIMEOUT_EXPIRED?setTimeout(a,e):(s.deleteSync(i),o===s.WAIT_FAILED?r(new Error("webgl clientWaitSync sync failed")):n())}()})}async readPixelsAsync(t,e,s,i,n){const r=this.gl,a=this.renderTarget.colorBuffer?.impl,o=a?._glFormat??r.RGBA,l=a?._glPixelType??r.UNSIGNED_BYTE,h=r.createBuffer();return r.bindBuffer(r.PIXEL_PACK_BUFFER,h),r.bufferData(r.PIXEL_PACK_BUFFER,n.byteLength,r.STREAM_READ),r.readPixels(t,e,s,i,o,l,0),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),await this.clientWaitAsync(0,16),r.bindBuffer(r.PIXEL_PACK_BUFFER,h),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),r.deleteBuffer(h),n}readTextureAsync(t,e,s,i,n,r){const o=r.face??0,h=r.renderTarget??new l.O({colorBuffer:t,depth:!1,face:o}),c=new ArrayBuffer(I.V.calcLevelGpuSize(i,n,1,t._format)),d=r.data??new((0,a.FxX)(t._format))(c);return this.setRenderTarget(h),this.initRenderTarget(h),new Promise((t,a)=>{this.readPixelsAsync(e,s,i,n,d).then(e=>{r.renderTarget||h.destroy(),t(e)}).catch(a)})}async writeTextureAsync(t,e,s,i,n,r){const a=this.gl,o=t.impl,l=o?._glFormat??a.RGBA,h=o?._glPixelType??a.UNSIGNED_BYTE,c=a.createBuffer();a.bindBuffer(a.PIXEL_UNPACK_BUFFER,c),a.bufferData(a.PIXEL_UNPACK_BUFFER,r,a.STREAM_DRAW),a.bindTexture(a.TEXTURE_2D,o._glTexture),a.texSubImage2D(a.TEXTURE_2D,0,e,s,i,n,l,h,0),a.bindBuffer(a.PIXEL_UNPACK_BUFFER,null),t._needsUpload=!1,t._mipmapsUploaded=!1,await this.clientWaitAsync(0,16)}setAlphaToCoverage(t){this.alphaToCoverage!==t&&(this.alphaToCoverage=t,t?this.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE):this.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE))}setTransformFeedbackBuffer(t){if(this.transformFeedbackBuffer!==t){this.transformFeedbackBuffer=t;const e=this.gl;t?(this.feedback||(this.feedback=e.createTransformFeedback()),e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.feedback)):e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null)}}setRaster(t){this.raster!==t&&(this.raster=t,t?this.gl.disable(this.gl.RASTERIZER_DISCARD):this.gl.enable(this.gl.RASTERIZER_DISCARD))}setStencilTest(t){if(this.stencil!==t){const e=this.gl;t?e.enable(e.STENCIL_TEST):e.disable(e.STENCIL_TEST),this.stencil=t}}setStencilFunc(t,e,s){this.stencilFuncFront===t&&this.stencilRefFront===e&&this.stencilMaskFront===s&&this.stencilFuncBack===t&&this.stencilRefBack===e&&this.stencilMaskBack===s||(this.gl.stencilFunc(this.glComparison[t],e,s),this.stencilFuncFront=this.stencilFuncBack=t,this.stencilRefFront=this.stencilRefBack=e,this.stencilMaskFront=this.stencilMaskBack=s)}setStencilFuncFront(t,e,s){if(this.stencilFuncFront!==t||this.stencilRefFront!==e||this.stencilMaskFront!==s){const i=this.gl;i.stencilFuncSeparate(i.FRONT,this.glComparison[t],e,s),this.stencilFuncFront=t,this.stencilRefFront=e,this.stencilMaskFront=s}}setStencilFuncBack(t,e,s){if(this.stencilFuncBack!==t||this.stencilRefBack!==e||this.stencilMaskBack!==s){const i=this.gl;i.stencilFuncSeparate(i.BACK,this.glComparison[t],e,s),this.stencilFuncBack=t,this.stencilRefBack=e,this.stencilMaskBack=s}}setStencilOperation(t,e,s,i){this.stencilFailFront===t&&this.stencilZfailFront===e&&this.stencilZpassFront===s&&this.stencilFailBack===t&&this.stencilZfailBack===e&&this.stencilZpassBack===s||(this.gl.stencilOp(this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]),this.stencilFailFront=this.stencilFailBack=t,this.stencilZfailFront=this.stencilZfailBack=e,this.stencilZpassFront=this.stencilZpassBack=s),this.stencilWriteMaskFront===i&&this.stencilWriteMaskBack===i||(this.gl.stencilMask(i),this.stencilWriteMaskFront=i,this.stencilWriteMaskBack=i)}setStencilOperationFront(t,e,s,i){this.stencilFailFront===t&&this.stencilZfailFront===e&&this.stencilZpassFront===s||(this.gl.stencilOpSeparate(this.gl.FRONT,this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]),this.stencilFailFront=t,this.stencilZfailFront=e,this.stencilZpassFront=s),this.stencilWriteMaskFront!==i&&(this.gl.stencilMaskSeparate(this.gl.FRONT,i),this.stencilWriteMaskFront=i)}setStencilOperationBack(t,e,s,i){this.stencilFailBack===t&&this.stencilZfailBack===e&&this.stencilZpassBack===s||(this.gl.stencilOpSeparate(this.gl.BACK,this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]),this.stencilFailBack=t,this.stencilZfailBack=e,this.stencilZpassBack=s),this.stencilWriteMaskBack!==i&&(this.gl.stencilMaskSeparate(this.gl.BACK,i),this.stencilWriteMaskBack=i)}setBlendState(t){const e=this.blendState;if(!e.equals(t)){const s=this.gl,{blend:i,colorOp:n,alphaOp:r,colorSrcFactor:a,colorDstFactor:o,alphaSrcFactor:l,alphaDstFactor:h}=t;if(e.blend!==i&&(i?s.enable(s.BLEND):s.disable(s.BLEND)),e.colorOp!==n||e.alphaOp!==r){const t=this.glBlendEquation;s.blendEquationSeparate(t[n],t[r])}e.colorSrcFactor===a&&e.colorDstFactor===o&&e.alphaSrcFactor===l&&e.alphaDstFactor===h||s.blendFuncSeparate(this.glBlendFunctionColor[a],this.glBlendFunctionColor[o],this.glBlendFunctionAlpha[l],this.glBlendFunctionAlpha[h]),e.allWrite!==t.allWrite&&this.gl.colorMask(t.redWrite,t.greenWrite,t.blueWrite,t.alphaWrite),e.copy(t)}}setBlendColor(t,e,s,i){const n=this.blendColor;t===n.r&&e===n.g&&s===n.b&&i===n.a||(this.gl.blendColor(t,e,s,i),n.set(t,e,s,i))}setStencilState(t,e){t||e?(this.setStencilTest(!0),t===e?(this.setStencilFunc(t.func,t.ref,t.readMask),this.setStencilOperation(t.fail,t.zfail,t.zpass,t.writeMask)):(t??=P.n.DEFAULT,this.setStencilFuncFront(t.func,t.ref,t.readMask),this.setStencilOperationFront(t.fail,t.zfail,t.zpass,t.writeMask),e??=P.n.DEFAULT,this.setStencilFuncBack(e.func,e.ref,e.readMask),this.setStencilOperationBack(e.fail,e.zfail,e.zpass,e.writeMask))):this.setStencilTest(!1)}setDepthState(t){const e=this.depthState;if(!e.equals(t)){const s=this.gl,i=t.write;e.write!==i&&s.depthMask(i);let{func:n,test:r}=t;!r&&i&&(r=!0,n=a.vpx),e.func!==n&&s.depthFunc(this.glComparison[n]),e.test!==r&&(r?s.enable(s.DEPTH_TEST):s.disable(s.DEPTH_TEST));const{depthBias:o,depthBiasSlope:l}=t;o||l?(this.depthBiasEnabled||(this.depthBiasEnabled=!0,this.gl.enable(this.gl.POLYGON_OFFSET_FILL)),s.polygonOffset(l,o)):this.depthBiasEnabled&&(this.depthBiasEnabled=!1,this.gl.disable(this.gl.POLYGON_OFFSET_FILL)),e.copy(t)}}setCullMode(t){if(this.cullMode!==t){if(t===a.pLF)this.gl.disable(this.gl.CULL_FACE);else{this.cullMode===a.pLF&&this.gl.enable(this.gl.CULL_FACE);const e=this.glCull[t];this.cullFace!==e&&(this.gl.cullFace(e),this.cullFace=e)}this.cullMode=t}}setShader(t,e=!1){t!==this.shader&&(this.shader=t,this.shaderAsyncCompile=e,this.shaderValid=void 0)}activateShader(){const{shader:t}=this,{impl:e}=t;void 0===this.shaderValid&&(t.failed?this.shaderValid=!1:t.ready||(this.shaderAsyncCompile?e.isLinked(this)?e.finalize(this,t)||(t.failed=!0,this.shaderValid=!1):this.shaderValid=!1:e.finalize(this,t)||(t.failed=!0,this.shaderValid=!1))),void 0===this.shaderValid&&(this.gl.useProgram(e.glProgram),this.shaderValid=!0)}clearVertexArrayObjectCache(){const t=this.gl;this._vaoMap.forEach((e,s,i)=>{t.deleteVertexArray(e)}),this._vaoMap.clear()}set fullscreen(t){if(t){this.gl.canvas.requestFullscreen()}else document.exitFullscreen()}get fullscreen(){return!!document.fullscreenElement}}},73273:(t,e,s)=>{s.d(e,{$x:()=>i,Wx:()=>r,ZP:()=>a,k5:()=>n,qK:()=>o});const i="initialize",n="postInitialize",r="update",a="postUpdate",o="swap"},74644:(t,e,s)=>{s.d(e,{D8:()=>a,GN:()=>l,OR:()=>o,a$:()=>c});var i=s(91622);let n=0;class r{constructor(t,e){this.slot=-1,this.scopeId=null,this.name=t,this.visibility=e}}class a extends r{}class o extends r{constructor(t,e,s=!1){super(t,e),this.format="",this.readOnly=s}}class l extends r{constructor(t,e,s=i.HeG,n=i.CZm,r=!0,a=null){super(t,e),this.textureDimension=s,this.sampleType=n,this.hasSampler=r,this.samplerName=a??`${t}_sampler`}}class h extends r{constructor(t,e=i.Lxj,s=i.HeG,n=!0,r=!1){super(t,i.ULN),this.format=e,this.textureDimension=s,this.write=n,this.read=r}}class c{constructor(t,e){this.uniformBufferFormats=[],this.textureFormats=[],this.storageTextureFormats=[],this.storageBufferFormats=[],this.id=n++;let s=0;e.forEach(t=>{t.slot=s++,t instanceof l&&t.hasSampler&&s++,t instanceof a?this.uniformBufferFormats.push(t):t instanceof l?this.textureFormats.push(t):t instanceof h?this.storageTextureFormats.push(t):t instanceof o&&this.storageBufferFormats.push(t)}),this.device=t;const i=t.scope;this.bufferFormatsMap=new Map,this.uniformBufferFormats.forEach((t,e)=>this.bufferFormatsMap.set(t.name,e)),this.textureFormatsMap=new Map,this.textureFormats.forEach((t,e)=>{this.textureFormatsMap.set(t.name,e),t.scopeId=i.resolve(t.name)}),this.storageTextureFormatsMap=new Map,this.storageTextureFormats.forEach((t,e)=>{this.storageTextureFormatsMap.set(t.name,e),t.scopeId=i.resolve(t.name)}),this.storageBufferFormatsMap=new Map,this.storageBufferFormats.forEach((t,e)=>{this.storageBufferFormatsMap.set(t.name,e),t.scopeId=i.resolve(t.name)}),this.impl=t.createBindGroupFormatImpl(this)}destroy(){this.impl.destroy()}getTexture(t){const e=this.textureFormatsMap.get(t);return void 0!==e?this.textureFormats[e]:null}getStorageTexture(t){const e=this.storageTextureFormatsMap.get(t);return void 0!==e?this.storageTextureFormats[e]:null}loseContext(){}}},77062:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n#define VERTEXSHADER\n"},80290:(t,e,s)=>{s.d(e,{W:()=>l});var i=s(91622),n=s(422),r=s(88525);class a extends Map{set(t,e){return this.has(t)&&this.get(t)===e||this.markDirty(),super.set(t,e)}add(t){for(const[e,s]of Object.entries(t))this.set(e,s);return this}delete(t){const e=this.has(t),s=super.delete(t);return e&&s&&this.markDirty(),s}clear(){this.size>0&&this.markDirty(),super.clear()}markDirty(){this._dirty=!0,this._keyDirty=!0}isDirty(){return this._dirty}resetDirty(){this._dirty=!1}get key(){return this._keyDirty&&(this._keyDirty=!1,this._key=Array.from(this.entries()).sort(([t],[e])=>t<e?-1:t>e?1:0).map(([t,e])=>`${t}=${(0,r.s)(e)}`).join(",")),this._key}copy(t){this.clear();for(const[e,s]of t)this.set(e,s);return this}constructor(...t){super(...t),this._keyDirty=!1,this._key=""}}const o=new n.N;class l{static get(t,e=i.BzK){const s=o.get(t,()=>new l);return e===i.BzK?s.glsl:s.wgsl}get useWGSL(){return 0===this.glsl.size||this.wgsl.size>0}get key(){return`GLSL:${this.glsl.key}|WGSL:${this.wgsl.key}|API:${this.version}`}isDirty(){return this.glsl.isDirty()||this.wgsl.isDirty()}resetDirty(){this.glsl.resetDirty(),this.wgsl.resetDirty()}copy(t){return this.version=t.version,this.glsl.copy(t.glsl),this.wgsl.copy(t.wgsl),this}constructor(){this.glsl=new a,this.wgsl=new a,this.version=""}}},80823:(t,e,s)=>{s.d(e,{l:()=>Pg});var i=s(67454),n=s(72233),r=s(97213),a=s(59752),o=s(3964),l=s(93953);class h{constructor(t){this.position=new l.e,this.orientation=new o.$,this._manager=t}getPosition(){return this.position}setPosition(t){this.position.copy(t);const e=this.listener;e&&("positionX"in e?(e.positionX.value=t.x,e.positionY.value=t.y,e.positionZ.value=t.z):e.setPosition&&e.setPosition(t.x,t.y,t.z))}setOrientation(t){this.orientation.copy(t);const e=this.listener;if(e){const s=t.data;"forwardX"in e?(e.forwardX.value=-s[8],e.forwardY.value=-s[9],e.forwardZ.value=-s[10],e.upX.value=s[4],e.upY.value=s[5],e.upZ.value=s[6]):e.setOrientation&&e.setOrientation(-s[8],-s[9],-s[10],s[4],s[5],s[6])}}getOrientation(){return this.orientation}get listener(){const t=this._manager.context;return t?t.listener:null}}const c="running",d=["click","touchstart","mousedown"];class u extends r.J{constructor(){super(),this._context=null,this.AudioContext="undefined"!=typeof AudioContext&&AudioContext||"undefined"!=typeof webkitAudioContext&&webkitAudioContext,this.AudioContext,this._unlockHandlerFunc=this._unlockHandler.bind(this),this._userSuspended=!1,this.listener=new h(this),this._volume=1}set volume(t){t=a.D.clamp(t,0,1),this._volume=t,this.fire("volumechange",t)}get volume(){return this._volume}get suspended(){return this._userSuspended}get context(){return!this._context&&this.AudioContext&&(this._context=new this.AudioContext,this._context.state!==c&&this._registerUnlockListeners()),this._context}suspend(){this._userSuspended||(this._userSuspended=!0,this._context&&this._context.state===c&&this._suspend())}resume(){this._userSuspended&&(this._userSuspended=!1,this._context&&this._context.state!==c&&this._resume())}destroy(){this.fire("destroy"),this._context&&(this._removeUnlockListeners(),this._context?.close(),this._context=null)}_resume(){this._context.resume().then(()=>{const t=this._context.createBufferSource();t.buffer=this._context.createBuffer(1,1,this._context.sampleRate),t.connect(this._context.destination),t.start(0),t.onended=e=>{t.disconnect(0),this.fire("resume")}},t=>{}).catch(t=>{})}_suspend(){this._context.suspend().then(()=>{this.fire("suspend")},t=>{}).catch(t=>{})}_unlockHandler(){this._removeUnlockListeners(),this._userSuspended||this._context.state===c||this._resume()}_registerUnlockListeners(){d.forEach(t=>{window.addEventListener(t,this._unlockHandlerFunc,!1)})}_removeUnlockListeners(){d.forEach(t=>{window.removeEventListener(t,this._unlockHandlerFunc,!1)})}}var f=s(88004),p=s(48355);const m=new l.e,_=new l.e,g=new l.e,v=new l.e,S=new l.e;class y{constructor(t,e){this.center=new l.e,this.halfExtents=new l.e(.5,.5,.5),this._min=new l.e,this._max=new l.e,t&&this.center.copy(t),e&&this.halfExtents.copy(e)}add(t){const e=this.center,s=e.x,i=e.y,n=e.z,r=this.halfExtents,a=r.x,o=r.y,l=r.z;let h=s-a,c=s+a,d=i-o,u=i+o,f=n-l,p=n+l;const m=t.center,_=m.x,g=m.y,v=m.z,S=t.halfExtents,y=S.x,x=S.y,T=S.z,w=_-y,b=_+y,E=g-x,A=g+x,C=v-T,P=v+T;w<h&&(h=w),b>c&&(c=b),E<d&&(d=E),A>u&&(u=A),C<f&&(f=C),P>p&&(p=P),e.x=.5*(h+c),e.y=.5*(d+u),e.z=.5*(f+p),r.x=.5*(c-h),r.y=.5*(u-d),r.z=.5*(p-f)}copy(t){this.center.copy(t.center),this.halfExtents.copy(t.halfExtents)}clone(){return new y(this.center,this.halfExtents)}intersects(t){const e=this.getMax(),s=this.getMin(),i=t.getMax(),n=t.getMin();return s.x<=i.x&&e.x>=n.x&&s.y<=i.y&&e.y>=n.y&&s.z<=i.z&&e.z>=n.z}_intersectsRay(t,e){const s=m.copy(this.getMin()).sub(t.origin),i=_.copy(this.getMax()).sub(t.origin),n=t.direction;0===n.x?(s.x=s.x<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.x=i.x<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.x/=n.x,i.x/=n.x),0===n.y?(s.y=s.y<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.y=i.y<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.y/=n.y,i.y/=n.y),0===n.z?(s.z=s.z<0?-Number.MAX_VALUE:Number.MAX_VALUE,i.z=i.z<0?-Number.MAX_VALUE:Number.MAX_VALUE):(s.z/=n.z,i.z/=n.z);const r=g.set(Math.min(s.x,i.x),Math.min(s.y,i.y),Math.min(s.z,i.z)),a=v.set(Math.max(s.x,i.x),Math.max(s.y,i.y),Math.max(s.z,i.z)),o=Math.min(Math.min(a.x,a.y),a.z),l=Math.max(Math.max(r.x,r.y),r.z),h=o>=l&&l>=0;return h&&e.copy(t.direction).mulScalar(l).add(t.origin),h}_fastIntersectsRay(t){const e=m,s=_,i=g,n=v,r=S,a=t.direction;return e.sub2(t.origin,this.center),n.set(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z)),i.mul2(e,a),!(n.x>this.halfExtents.x&&i.x>=0)&&(!(n.y>this.halfExtents.y&&i.y>=0)&&(!(n.z>this.halfExtents.z&&i.z>=0)&&(r.set(Math.abs(a.x),Math.abs(a.y),Math.abs(a.z)),s.cross(a,e),s.set(Math.abs(s.x),Math.abs(s.y),Math.abs(s.z)),!(s.x>this.halfExtents.y*r.z+this.halfExtents.z*r.y)&&(!(s.y>this.halfExtents.x*r.z+this.halfExtents.z*r.x)&&!(s.z>this.halfExtents.x*r.y+this.halfExtents.y*r.x)))))}intersectsRay(t,e){return e?this._intersectsRay(t,e):this._fastIntersectsRay(t)}setMinMax(t,e){this.center.add2(e,t).mulScalar(.5),this.halfExtents.sub2(e,t).mulScalar(.5)}getMin(){return this._min.copy(this.center).sub(this.halfExtents)}getMax(){return this._max.copy(this.center).add(this.halfExtents)}containsPoint(t){const e=this.getMin(),s=this.getMax();return!(t.x<e.x||t.x>s.x||t.y<e.y||t.y>s.y||t.z<e.z||t.z>s.z)}setFromTransformedAabb(t,e,s=!1){const i=t.center,n=t.halfExtents,r=e.data;let a=r[0],o=r[4],l=r[8],h=r[1],c=r[5],d=r[9],u=r[2],f=r[6],p=r[10];if(s){let t=a*a+o*o+l*l;if(t>0){const e=1/Math.sqrt(t);a*=e,o*=e,l*=e}if(t=h*h+c*c+d*d,t>0){const e=1/Math.sqrt(t);h*=e,c*=e,d*=e}if(t=u*u+f*f+p*p,t>0){const e=1/Math.sqrt(t);u*=e,f*=e,p*=e}}this.center.set(r[12]+a*i.x+o*i.y+l*i.z,r[13]+h*i.x+c*i.y+d*i.z,r[14]+u*i.x+f*i.y+p*i.z),this.halfExtents.set(Math.abs(a)*n.x+Math.abs(o)*n.y+Math.abs(l)*n.z,Math.abs(h)*n.x+Math.abs(c)*n.y+Math.abs(d)*n.z,Math.abs(u)*n.x+Math.abs(f)*n.y+Math.abs(p)*n.z)}static computeMinMax(t,e,s,i=t.length/3){if(i>0){let n=t[0],r=t[1],a=t[2],o=n,l=r,h=a;const c=3*i;for(let e=3;e<c;e+=3){const s=t[e],i=t[e+1],c=t[e+2];s<n&&(n=s),i<r&&(r=i),c<a&&(a=c),s>o&&(o=s),i>l&&(l=i),c>h&&(h=c)}e.set(n,r,a),s.set(o,l,h)}}compute(t,e){y.computeMinMax(t,m,_,e),this.setMinMax(m,_)}intersectsBoundingSphere(t){return this._distanceToBoundingSphereSq(t)<=t.radius*t.radius}_distanceToBoundingSphereSq(t){const e=this.getMin(),s=this.getMax();let i=0;const n=["x","y","z"];for(let r=0;r<3;++r){let a=0;const o=t.center[n[r]],l=e[n[r]],h=s[n[r]];let c=0;o<l&&(c=l-o,a+=c*c),o>h&&(c=o-h,a+=c*c),i+=a}return i}_expand(t,e){m.add2(this.getMin(),t),_.add2(this.getMax(),e),this.setMinMax(m,_)}}var x=s(91622),T=s(58333),w=s(38964),b=s(58666);class E{constructor(t,e,s){this.uniformFormats=[],this.bindGroupFormats=[],this.uniformFormats[x.PyI]=t,this.bindGroupFormats[x.PyI]=e,this.vertexFormat=s}hasUniform(t){for(let e=0;e<this.uniformFormats.length;e++){const s=this.uniformFormats[e];if(s?.get(t))return!0}return!1}hasTexture(t){for(let e=0;e<this.bindGroupFormats.length;e++){const s=this.bindGroupFormats[e];if(s?.getTexture(t))return!0}return!1}getVertexElement(t){return this.vertexFormat?.elements.find(e=>e.name===t)}generateKey(t){let e=JSON.stringify(this.uniformFormats)+JSON.stringify(this.bindGroupFormats);return t.isWebGPU&&(e+=this.vertexFormat?.shaderProcessingHashString),e}}var A=s(18982),C=s(55443),P=s(4517),D=s(422);const L=new D.N;function M(t){return L.get(t)}var I=s(88525);class R{static definesHash(t){const e=Array.from(t).sort((t,e)=>t[0]>e[0]?1:-1);return(0,I.s)(JSON.stringify(e))}}var F=s(27351);const O=new D.N;class N{constructor(t,e,s={}){this.defines=new Map,this.name=t,this.index=e,Object.assign(this,s),this.buildShaderDefines()}buildShaderDefines(){let t;this.isShadow?t="SHADOW":this.isForward?t="FORWARD":this.index===F.czD&&(t="PICK"),this.defines.set(`${t}_PASS`,""),this.defines.set(`${this.name.toUpperCase()}_PASS`,"")}}class k{constructor(){this.passesNamed=new Map,this.passesIndexed=[],this.nextIndex=0;const t=(t,e,s)=>{this.allocate(t,s)};t("forward",F.OPe,{isForward:!0}),t("prepass"),t("shadow"),t("pick")}static get(t){return O.get(t,()=>new k)}allocate(t,e){let s=this.passesNamed.get(t);return void 0===s&&(s=new N(t,this.nextIndex,e),this.passesNamed.set(s.name,s),this.passesIndexed[s.index]=s,this.nextIndex++),s}getByIndex(t){return this.passesIndexed[t]}getByName(t){return this.passesNamed.get(t)}}var B=s(80290);class U{static merge(...t){const e=new Map(t[0]??[]);for(let s=1;s<t.length;s++){const i=t[s];if(i)for(const[t,s]of i)e.set(t,s)}return e}}class z extends R{constructor(t,e){super(),this.key=t,this.shaderDefinition=e}generateKey(t){return this.key}createShaderDefinition(t,e){return this.shaderDefinition}}class V{static createShader(t,e){const s=M(t);let i=s.getCachedShader(e.uniqueName);if(!i){const n=t.isWebGPU&&(!!e.vertexWGSL||!!e.vertexChunk)&&(!!e.fragmentWGSL||!!e.fragmentChunk),r=B.W.get(t,n?x.g80:x.BzK),a=e.vertexChunk?r.get(e.vertexChunk):n?e.vertexWGSL:e.vertexGLSL,o=e.fragmentChunk?r.get(e.fragmentChunk):n?e.fragmentWGSL:e.fragmentGLSL,l=U.merge(r,e.fragmentIncludes),h=U.merge(r,e.vertexIncludes);i=new C.M(t,P.C.createDefinition(t,{name:e.uniqueName,shaderLanguage:n?x.g80:x.BzK,attributes:e.attributes,vertexCode:a,fragmentCode:o,useTransformFeedback:e.useTransformFeedback,vertexIncludes:h,vertexDefines:e.vertexDefines,fragmentIncludes:l,fragmentDefines:e.fragmentDefines,fragmentOutputTypes:e.fragmentOutputTypes})),s.setCachedShader(e.uniqueName,i)}return i}static getCoreDefines(t,e){const s=new Map(t.defines);e.cameraShaderParams.defines.forEach((t,e)=>s.set(e,t));return k.get(e.device).getByIndex(e.pass).defines.forEach((t,e)=>s.set(e,t)),s}static processShader(t,e){const s=t.definition,i=`${s.name??"shader"}-id-${t.id}`,n=new z(i,s),r="shader",a=M(t.device);a.register(r,n);const o=a.getProgram(r,{},e);return a.unregister(r),o}static addScreenDepthChunkDefines(t,e,s){e.sceneDepthMapLinear&&s.set("SCENE_DEPTHMAP_LINEAR",""),t.textureFloatRenderable&&s.set("SCENE_DEPTHMAP_FLOAT","")}}const G={type:x.SF$,base:0,baseVertex:0,count:4,indexed:!1},H=new w.Z,W=new w.Z,X=new b.s;class ${constructor(t){const e=t.device;if(this.shader=t,e.supportsUniformBuffers){const s=new E;this.shader=V.processShader(t,s);const i=this.shader.meshUniformBufferFormat;i&&(this.uniformBuffer=new A.D(e,i,!1));const n=this.shader.meshBindGroupFormat;this.bindGroup=new b.T(e,n)}}destroy(){this.uniformBuffer?.destroy(),this.uniformBuffer=null,this.bindGroup?.destroy(),this.bindGroup=null}render(t,e){const s=this.shader.device;t&&(H.set(s.vx,s.vy,s.vw,s.vh),W.set(s.sx,s.sy,s.sw,s.sh),e=e??t,s.setViewport(t.x,t.y,t.z,t.w),s.setScissor(e.x,e.y,e.z,e.w)),s.setVertexBuffer(s.quadVertexBuffer);const i=this.shader;if(s.setShader(i),s.supportsUniformBuffers){s.setBindGroup(x.PyI,s.emptyBindGroup);const t=this.bindGroup;t.update(),s.setBindGroup(x.pNk,t);const e=this.uniformBuffer;e?(e.update(X),s.setBindGroup(x.xBw,X.bindGroup,X.offsets)):s.setBindGroup(x.xBw,s.emptyBindGroup)}s.draw(G),t&&(s.setViewport(H.x,H.y,H.z,H.w),s.setScissor(W.x,W.y,W.z,W.w))}}var q=s(47422),j=s(55485);class Y extends j.A{constructor(t,e,s,i){super(t),this.quad=e,this.rect=s,this.scissorRect=i}execute(){const{device:t}=this;t.setCullMode(x.pLF),t.setDepthState(q.H.NODEPTH),t.setStencilState(null,null),this.quad.render(this.rect,this.scissorRect)}}const K=new w.Z;function Z(t,e,s,i,n){const r=new $(s);i||((i=K).x=0,i.y=0,i.z=e?e.width:t.width,i.w=e?e.height:t.height);const a=new Y(t,r,i,n);a.init(e),a.colorOps.clear=!1,a.depthStencilOps.clearDepth=!1,t.isWebGPU&&null===e&&t.samples>1&&(a.colorOps.store=!0),a.render(),r.destroy()}var Q=s(67248);const J=new l.e,tt=new l.e;class et{constructor(t=new l.e,e=.5){this.center=t,this.radius=e}containsPoint(t){const e=J.sub2(t,this.center).lengthSq(),s=this.radius;return e<s*s}intersectsRay(t,e){const s=J.copy(t.origin).sub(this.center),i=s.dot(tt.copy(t.direction).normalize()),n=s.dot(s)-this.radius*this.radius;if(n>0&&i>0)return!1;const r=i*i-n;if(r<0)return!1;const a=Math.abs(-i-Math.sqrt(r));return e&&e.copy(t.direction).mulScalar(a).add(t.origin),!0}intersectsBoundingSphere(t){J.sub2(t.center,this.center);const e=t.radius+this.radius;return J.lengthSq()<=e*e}}var st=s(48786);class it{destroy(){this.cache.forEach((t,e)=>{e.destroy()}),this.cache.clear()}incRef(t){const e=(this.cache.get(t)||0)+1;this.cache.set(t,e)}decRef(t){if(t){let e=this.cache.get(t);e&&(e--,0===e?(this.cache.delete(t),t.destroy()):this.cache.set(t,e))}}constructor(){this.cache=new Map}}class nt{static{this.cache=new it}static incRef(t){this.cache.incRef(t)}static decRef(t){this.cache.decRef(t)}static destroy(){this.cache.destroy()}}let rt=0;const at=new y,ot=new y,lt=new et,ht=new Set,ct=new Uint32Array(4);class dt{constructor(t){this.vertexBuffer=null,this._destroyVertexBuffer=!1,this.count=t}destroy(){this._destroyVertexBuffer&&this.vertexBuffer?.destroy(),this.vertexBuffer=null}}class ut{get(t){return this.map.get(t)??this.map.get(null)}constructor(){this.map=new Map,this.meshMetaData=new Int32Array(4)}}class ft{getBindGroup(t){if(!this.bindGroup){const e=this.shader.meshBindGroupFormat;this.bindGroup=new b.T(t,e)}return this.bindGroup}getUniformBuffer(t){if(!this.uniformBuffer){const e=this.shader.meshUniformBufferFormat;this.uniformBuffer=new A.D(t,e,!1)}return this.uniformBuffer}destroy(){this.bindGroup?.destroy(),this.bindGroup=null,this.uniformBuffer?.destroy(),this.uniformBuffer=null}constructor(){this.bindGroup=null,this.uniformBuffer=null}}class pt{constructor(t,e,s=null){if(this.castShadow=!1,this.shadowCascadeMask=F.g72,this.cull=!0,this.drawOrder=0,this._drawBucket=127,this.visible=!0,this.visibleThisFrame=!1,this.flipFacesFactor=1,this.gsplatInstance=null,this.id=rt++,this.isVisibleFunc=null,this.instancingData=null,this.indirectData=null,this.parameters={},this.pick=!0,this.stencilFront=null,this.stencilBack=null,this.transparent=!1,this._aabb=new y,this._aabbVer=-1,this._aabbMeshVer=-1,this._customAabb=null,this._updateAabb=!0,this._updateAabbFunc=null,this._sortKeyShadow=0,this._sortKeyForward=0,this._sortKeyDynamic=0,this._layer=F.$1A,this._material=null,this._skinInstance=null,this._morphInstance=null,this._receiveShadow=!0,this._renderStyle=F.OZy,this._screenSpace=!1,this._shaderCache=new Map,this._shaderDefs=F.XjC<<16,this._calculateSortDistance=null,this.node=s,this._mesh=t,t.incRefCount(),this.material=e,t.vertexBuffer){const e=t.vertexBuffer.format;this._shaderDefs|=e.hasUv0?F.JqS:0,this._shaderDefs|=e.hasUv1?F.Cno:0,this._shaderDefs|=e.hasColor?F.L$7:0,this._shaderDefs|=e.hasTangents?F.kav:0}this.updateKey()}set drawBucket(t){this._drawBucket=255&Math.floor(t),this.updateKey()}get drawBucket(){return this._drawBucket}set renderStyle(t){this._renderStyle=t,this.mesh.prepareRenderState(t)}get renderStyle(){return this._renderStyle}set mesh(t){t!==this._mesh&&(this._mesh&&this._mesh.decRefCount(),this._mesh=t,t&&t.incRefCount())}get mesh(){return this._mesh}set aabb(t){this._aabb=t}get aabb(){if(!this._updateAabb)return this._aabb;if(this._updateAabbFunc)return this._updateAabbFunc(this._aabb);let t=this._customAabb,e=!!t;if(!t)if(t=at,this.skinInstance){if(!this.mesh.boneAabb){const t=this._morphInstance?this._morphInstance.morph._targets:null;this.mesh._initBoneAabbs(t)}const s=this.mesh.boneUsed;let i=!0;for(let e=0;e<this.mesh.boneAabb.length;e++)s[e]&&(ot.setFromTransformedAabb(this.mesh.boneAabb[e],this.skinInstance.matrices[e]),i?(i=!1,t.center.copy(ot.center),t.halfExtents.copy(ot.halfExtents)):t.add(ot));e=!0}else if(this.node._aabbVer!==this._aabbVer||this.mesh._aabbVer!==this._aabbMeshVer){if(this.mesh?(t.center.copy(this.mesh.aabb.center),t.halfExtents.copy(this.mesh.aabb.halfExtents)):(t.center.set(0,0,0),t.halfExtents.set(0,0,0)),this.mesh&&this.mesh.morph){const e=this.mesh.morph.aabb;t._expand(e.getMin(),e.getMax())}e=!0,this._aabbVer=this.node._aabbVer,this._aabbMeshVer=this.mesh._aabbVer}return e&&this._aabb.setFromTransformedAabb(t,this.node.getWorldTransform()),this._aabb}clearShaders(){this._shaderCache.forEach(t=>{t.destroy()}),this._shaderCache.clear()}getShaderInstance(t,e,s,i,n,r,a){const o=this._shaderDefs;ct[0]=t,ct[1]=e,ct[2]=o,ct[3]=i.hash;const l=(0,I.m)(ct);let h=this._shaderCache.get(l);if(!h){const e=this._material;if(h=new ft,h.shader=e.variants.get(l),h.hashes=new Uint32Array(ct),!h.shader){const c=e.getShaderVariant({device:this.mesh.device,scene:s,objDefs:o,cameraShaderParams:i,pass:t,sortedLights:a,viewUniformFormat:n,viewBindGroupFormat:r,vertexFormat:this.mesh.vertexBuffer?.format});e.variants.set(l,c),h.shader=c}this._shaderCache.set(l,h)}return h}set material(t){this.clearShaders();const e=this._material;e&&e.removeMeshInstanceRef(this),this._material=t,t&&(t.addMeshInstanceRef(this),this.transparent=t.transparent,this.updateKey())}get material(){return this._material}_updateShaderDefs(t){t!==this._shaderDefs&&(this._shaderDefs=t,this.clearShaders())}set calculateSortDistance(t){this._calculateSortDistance=t}get calculateSortDistance(){return this._calculateSortDistance}set receiveShadow(t){this._receiveShadow!==t&&(this._receiveShadow=t,this._updateShaderDefs(t?-2&this._shaderDefs:this._shaderDefs|F.b2c))}get receiveShadow(){return this._receiveShadow}set batching(t){this._updateShaderDefs(t?this._shaderDefs|F.amd:-16385&this._shaderDefs)}get batching(){return 0!==(this._shaderDefs&F.amd)}set skinInstance(t){this._skinInstance=t,this._updateShaderDefs(t?this._shaderDefs|F.Df4:-3&this._shaderDefs),this._setupSkinUpdate()}get skinInstance(){return this._skinInstance}set morphInstance(t){this._morphInstance?.destroy(),this._morphInstance=t;let e=this._shaderDefs;e=t&&t.morph.morphPositions?e|F.Ckn:-1025&e,e=t&&t.morph.morphNormals?e|F.ov8:-2049&e,e=t&&t.morph.intRenderFormat?e|F.Yrs:-8193&e,this._updateShaderDefs(e)}get morphInstance(){return this._morphInstance}set screenSpace(t){this._screenSpace!==t&&(this._screenSpace=t,this._updateShaderDefs(t?this._shaderDefs|F.yrP:-257&this._shaderDefs))}get screenSpace(){return this._screenSpace}set key(t){this._sortKeyForward=t}get key(){return this._sortKeyForward}set mask(t){const e=65535&this._shaderDefs;this._updateShaderDefs(e|t<<16)}get mask(){return this._shaderDefs>>16}set instancingCount(t){this.instancingData&&(this.instancingData.count=t)}get instancingCount(){return this.instancingData?this.instancingData.count:0}destroy(){const t=this.mesh;t&&(this.mesh=null,t.refCount<1&&t.destroy()),this.setRealtimeLightmap(pt.lightmapParamNames[0],null),this.setRealtimeLightmap(pt.lightmapParamNames[1],null),this._skinInstance?.destroy(),this._skinInstance=null,this.morphInstance?.destroy(),this.morphInstance=null,this.clearShaders(),this.material=null,this.instancingData?.destroy()}static{this.lightmapParamNames=["texture_lightMap","texture_dirLightMap"]}static _prepareRenderStyleForArray(t,e){if(t){for(let s=0;s<t.length;s++){t[s]._renderStyle=e;const i=t[s].mesh;ht.has(i)||(ht.add(i),i.prepareRenderState(e))}ht.clear()}}_isVisible(t){return!!this.visible&&(this.isVisibleFunc?this.isVisibleFunc(t):(lt.center=this.aabb.center,lt.radius=this._aabb.halfExtents.length(),t.frustum.containsSphere(lt)>0))}updateKey(){const{material:t}=this;this._sortKeyForward=this._drawBucket<<23|(t.alphaToCoverage||t.alphaTest?4194304:0)|4194303&t.id}setInstancing(t,e=!1){t?(this.instancingData=new dt(t.numVertices),this.instancingData.vertexBuffer=t,t.format.instancing=!0,this.cull=e):(this.instancingData=null,this.cull=!0),this._updateShaderDefs(t?this._shaderDefs|F.Q$0:-33&this._shaderDefs)}setIndirect(t,e){this._allocIndirectData(),this.indirectData.map.set(t?.camera??null,e);this.mesh.device.mapsToClear.add(this.indirectData.map)}getIndirectMetaData(){this._allocIndirectData();const t=this.mesh?.primitive[this.renderStyle],e=this.indirectData.meshMetaData;return e[0]=t.count,e[1]=t.base,e[2]=t.baseVertex,e}_allocIndirectData(){this.indirectData||(this.indirectData=new ut)}ensureMaterial(t){this.material||(this.material=(0,st.h)(t))}clearParameters(){this.parameters={}}getParameters(){return this.parameters}getParameter(t){return this.parameters[t]}setParameter(t,e,s=4294967295){const i=this.parameters[t];i?(i.data=e,i.passFlags=s):this.parameters[t]={scopeId:null,data:e,passFlags:s}}setRealtimeLightmap(t,e){const s=this.getParameter(t);s!==e&&(s&&nt.decRef(s.data),e?(nt.incRef(e),this.setParameter(t,e)):this.deleteParameter(t))}deleteParameter(t){this.parameters[t]&&delete this.parameters[t]}setParameters(t,e){const s=this.parameters;for(const i in s){const n=s[i];n.passFlags&e&&(n.scopeId||(n.scopeId=t.scope.resolve(i)),n.scopeId.setValue(n.data))}}setLightmapped(t){t?this.mask=-6&(this.mask|F.beI):(this.setRealtimeLightmap(pt.lightmapParamNames[0],null),this.setRealtimeLightmap(pt.lightmapParamNames[1],null),this._shaderDefs&=-4289,this.mask=-7&(this.mask|F.XjC))}setCustomAabb(t){t?this._customAabb?this._customAabb.copy(t):this._customAabb=t.clone():(this._customAabb=null,this._aabbVer=-1),this._setupSkinUpdate()}_setupSkinUpdate(){this._skinInstance&&(this._skinInstance._updateBeforeCull=!this._customAabb)}}class mt{constructor(t,e,s){this._areaLightsEnabled=!1,this._cells=new l.e(10,3,10),this._maxLightsPerCell=255,this._shadowsEnabled=!0,this._shadowType=F.Q_7,this._shadowAtlasResolution=2048,this._cookiesEnabled=!1,this._cookieAtlasResolution=2048,this.atlasSplit=null,this._supportsAreaLights=t,this._maxTextureSize=e,this._dirtyLightsFnc=s}applySettings(t){this.shadowsEnabled=t.lightingShadowsEnabled??this.shadowsEnabled,this.cookiesEnabled=t.lightingCookiesEnabled??this.cookiesEnabled,this.areaLightsEnabled=t.lightingAreaLightsEnabled??this.areaLightsEnabled,this.shadowAtlasResolution=t.lightingShadowAtlasResolution??this.shadowAtlasResolution,this.cookieAtlasResolution=t.lightingCookieAtlasResolution??this.cookieAtlasResolution,this.maxLightsPerCell=t.lightingMaxLightsPerCell??this.maxLightsPerCell,this.shadowType=t.lightingShadowType??this.shadowType,t.lightingCells&&(this.cells=new l.e(t.lightingCells))}set cells(t){this._cells.copy(t)}get cells(){return this._cells}set maxLightsPerCell(t){this._maxLightsPerCell=a.D.clamp(t,1,255)}get maxLightsPerCell(){return this._maxLightsPerCell}set cookieAtlasResolution(t){this._cookieAtlasResolution=a.D.clamp(t,32,this._maxTextureSize)}get cookieAtlasResolution(){return this._cookieAtlasResolution}set shadowAtlasResolution(t){this._shadowAtlasResolution=a.D.clamp(t,32,this._maxTextureSize)}get shadowAtlasResolution(){return this._shadowAtlasResolution}set shadowType(t){this._shadowType!==t&&(this._shadowType=t,this._dirtyLightsFnc())}get shadowType(){return this._shadowType}set cookiesEnabled(t){this._cookiesEnabled!==t&&(this._cookiesEnabled=t,this._dirtyLightsFnc())}get cookiesEnabled(){return this._cookiesEnabled}set areaLightsEnabled(t){this._supportsAreaLights&&this._areaLightsEnabled!==t&&(this._areaLightsEnabled=t,this._dirtyLightsFnc())}get areaLightsEnabled(){return this._areaLightsEnabled}set shadowsEnabled(t){this._shadowsEnabled!==t&&(this._shadowsEnabled=t,this._dirtyLightsFnc())}get shadowsEnabled(){return this._shadowsEnabled}}const _t=new Float32Array(1),gt=new Int32Array(_t.buffer);class vt{static float2Half(t){_t[0]=t;const e=gt[0];let s=e>>16&32768,i=e>>12&2047;const n=e>>23&255;return n<103?s:n>142?(s|=31744,s|=(255===n?0:1)&&8388607&e,s):n<113?(i|=2048,s|=(i>>114-n)+(i>>113-n&1),s):(s|=n-112<<10|i>>1,s+=1&i,s)}static float2RGBA8(t,e){_t[0]=t;const s=gt[0];e.r=(s>>24&255)/255,e.g=(s>>16&255)/255,e.b=(s>>8&255)/255,e.a=(255&s)/255}}var St=s(36805);class yt{constructor(t=l.e.UP,e=0){this.normal=new l.e,this.normal.copy(t),this.distance=e}clone(){return(new(0,this.constructor)).copy(this)}copy(t){return this.normal.copy(t.normal),this.distance=t.distance,this}intersectsLine(t,e,s){const i=this.distance,n=this.normal.dot(t)+i,r=n/(n-(this.normal.dot(e)+i)),a=r>=0&&r<=1;return a&&s&&s.lerp(t,e,r),a}intersectsRay(t,e){const s=this.normal.dot(t.direction);if(0===s)return!1;const i=-(this.normal.dot(t.origin)+this.distance)/s;return i>=0&&e&&e.copy(t.direction).mulScalar(i).add(t.origin),i>=0}normalize(){const t=1/this.normal.length();return this.normal.mulScalar(t),this.distance*=t,this}set(t,e,s,i){return this.normal.set(t,e,s),this.distance=i,this}setFromPointNormal(t,e){return this.normal.copy(e),this.distance=-this.normal.dot(t),this}}class xt{constructor(){this.planes=[];for(let t=0;t<6;t++)this.planes[t]=new yt}clone(){return(new(0,this.constructor)).copy(this)}copy(t){for(let e=0;e<6;e++)this.planes[e].copy(t.planes[e]);return this}setFromMat4(t){const[e,s,i,n,r,a,o,l,h,c,d,u,f,p,m,_]=t.data,g=this.planes;g[0].set(n-e,l-r,u-h,_-f).normalize(),g[1].set(n+e,l+r,u+h,_+f).normalize(),g[2].set(n+s,l+a,u+c,_+p).normalize(),g[3].set(n-s,l-a,u-c,_-p).normalize(),g[4].set(n-i,l-o,u-d,_-m).normalize(),g[5].set(n+i,l+o,u+d,_+m).normalize()}containsPoint(t){for(let e=0;e<6;e++){const{normal:s,distance:i}=this.planes[e];if(s.dot(t)+i<=0)return!1}return!0}containsSphere(t){const{center:e,radius:s}=t;let i=0;for(let n=0;n<6;n++){const{normal:t,distance:r}=this.planes[n],a=t.dot(e)+r;if(a<=-s)return 0;a>s&&i++}return 6===i?2:1}}const Tt="uSceneColorMap";class wt extends j.A{destroy(){super.destroy(),this.releaseRenderTarget(this.colorRenderTarget)}shouldReallocate(t,e,s){const i=t?.colorBuffer.format;if(i!==s)return!0;const n=e?.width||this.device.width,r=e?.height||this.device.height;return!t||n!==t.width||r!==t.height}allocateRenderTarget(t,e,s,i){const n=new Q.g(s,{name:Tt,format:i,width:e?e.colorBuffer.width:s.width,height:e?e.colorBuffer.height:s.height,mipmaps:!0,minFilter:x.qn_,magFilter:x.DrA,addressU:x.vq6,addressV:x.vq6});return t?(t.destroyFrameBuffers(),t._colorBuffer=n,t._colorBuffers=[n]):t=new T.O({name:"ColorGrabRT",colorBuffer:n,depth:!1,stencil:!1,autoResolve:!1}),t}releaseRenderTarget(t){t&&(t.destroyTextureBuffers(),t.destroy())}frameUpdate(){const t=this.device,e=this.source,s=e?.colorBuffer.format??this.device.backBufferFormat;this.shouldReallocate(this.colorRenderTarget,e?.colorBuffer,s)&&(this.releaseRenderTarget(this.colorRenderTarget),this.colorRenderTarget=this.allocateRenderTarget(this.colorRenderTarget,e,t,s));const i=this.colorRenderTarget.colorBuffer;t.scope.resolve(Tt).setValue(i)}execute(){const t=this.device,e=this.source,s=this.colorRenderTarget.colorBuffer;t.isWebGPU?(t.copyRenderTarget(e,this.colorRenderTarget,!0,!1),t.mipmapRenderer.generate(this.colorRenderTarget.colorBuffer.impl)):(t.copyRenderTarget(e,this.colorRenderTarget,!0,!1),t.activeTexture(t.maxCombinedTextures-1),t.bindTexture(s),t.gl.generateMipmap(s.impl._glTarget))}constructor(...t){super(...t),this.colorRenderTarget=null,this.source=null}}const bt="uSceneDepthMap";class Et extends j.A{constructor(t,e){super(t),this.depthRenderTarget=null,this.camera=null,this.camera=e}destroy(){super.destroy(),this.releaseRenderTarget(this.depthRenderTarget)}shouldReallocate(t,e){const s=e?.width||this.device.width,i=e?.height||this.device.height;return!t||s!==t.width||i!==t.height}allocateRenderTarget(t,e,s,i,n){const r=new Q.g(s,{name:bt,format:i,width:e?e.colorBuffer.width:s.width,height:e?e.colorBuffer.height:s.height,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6});return t?(t.destroyFrameBuffers(),n?t._depthBuffer=r:(t._colorBuffer=r,t._colorBuffers=[r])):t=new T.O({name:"DepthGrabRT",colorBuffer:n?null:r,depthBuffer:n?r:null,depth:!n,stencil:s.supportsStencil,autoResolve:!1}),t}releaseRenderTarget(t){t&&(t.destroyTextureBuffers(),t.destroy())}before(){const t=this.camera,e=this.device,s=t?.renderTarget??e.backBuffer;let i=!0,n=s.stencil?x.Mg$:x.Wbd;if(e.isWebGPU){s.samples>1&&(n=x.IQA,i=!1)}const r=t.renderTarget?.depthBuffer??t.renderTarget?.colorBuffer;this.shouldReallocate(this.depthRenderTarget,r)&&(this.releaseRenderTarget(this.depthRenderTarget),this.depthRenderTarget=this.allocateRenderTarget(this.depthRenderTarget,t.renderTarget,e,n,i));const a=i?this.depthRenderTarget.depthBuffer:this.depthRenderTarget.colorBuffer;e.scope.resolve(bt).setValue(a)}execute(){const t=this.device;if(t.isWebGL2&&t.renderTarget.samples>1){const e=t.renderTarget.impl._glFrameBuffer,s=this.depthRenderTarget;t.renderTarget=s,t.updateBegin(),this.depthRenderTarget.impl.internalResolve(t,e,s.impl._glFrameBuffer,this.depthRenderTarget,t.gl.DEPTH_BUFFER_BIT)}else t.copyRenderTarget(t.renderTarget,this.depthRenderTarget,!1,!0)}}class At{get hash(){if(void 0===this._hash){const t=`${this.gammaCorrection}_${this.toneMapping}_${this.srgbRenderTarget}_${this.fog}_${this.ssaoEnabled}_${this.sceneDepthMapLinear}`;this._hash=(0,I.s)(t)}return this._hash}get defines(){const t=this._defines;return this._definesDirty&&(this._definesDirty=!1,t.clear(),this._sceneDepthMapLinear&&t.set("SCENE_DEPTHMAP_LINEAR",!0),t.set("FOG",this._fog.toUpperCase()),t.set("TONEMAP",F.lh8[this._toneMapping]),t.set("GAMMA",F.IaO[this.shaderOutputGamma])),t}markDirty(){this._hash=void 0,this._definesDirty=!0}set fog(t){this._fog!==t&&(this._fog=t,this.markDirty())}get fog(){return this._fog}set ssaoEnabled(t){this._ssaoEnabled!==t&&(this._ssaoEnabled=t,this.markDirty())}get ssaoEnabled(){return this._ssaoEnabled}set gammaCorrection(t){this._gammaCorrectionAssigned=!0,this._gammaCorrection!==t&&(this._gammaCorrection=t,this.markDirty())}get gammaCorrection(){return this._gammaCorrection}set toneMapping(t){this._toneMapping!==t&&(this._toneMapping=t,this.markDirty())}get toneMapping(){return this._toneMapping}set srgbRenderTarget(t){this._srgbRenderTarget!==t&&(this._srgbRenderTarget=t,this.markDirty())}get srgbRenderTarget(){return this._srgbRenderTarget}set sceneDepthMapLinear(t){this._sceneDepthMapLinear!==t&&(this._sceneDepthMapLinear=t,this.markDirty())}get sceneDepthMapLinear(){return this._sceneDepthMapLinear}get shaderOutputGamma(){return this._gammaCorrection===F.JdY&&!this._srgbRenderTarget?F.JdY:F.hcE}constructor(){this._gammaCorrection=F.JdY,this._toneMapping=F.llM,this._srgbRenderTarget=!1,this._ssaoEnabled=!1,this._fog=F.qXo,this._sceneDepthMapLinear=!1,this._defines=new Map,this._definesDirty=!0}}const Ct=new l.e,Pt=new l.e,Dt=new l.e,Lt=new o.$,Mt=[new l.e,new l.e,new l.e,new l.e,new l.e,new l.e,new l.e,new l.e];class It{constructor(){this.shaderPassInfo=null,this.renderPassColorGrab=null,this.renderPassDepthGrab=null,this.fogParams=null,this.shaderParams=new At,this.renderPasses=[],this.jitter=0,this._aspectRatio=16/9,this._aspectRatioMode=F.LF5,this._calculateProjection=null,this._calculateTransform=null,this._clearColor=new p.Q(.75,.75,.75,1),this._clearColorBuffer=!0,this._clearDepth=1,this._clearDepthBuffer=!0,this._clearStencil=0,this._clearStencilBuffer=!0,this._cullFaces=!0,this._farClip=1e3,this._flipFaces=!1,this._fov=45,this._frustumCulling=!0,this._horizontalFov=!1,this._layers=[F.uEK,F.$9T,F.CTD,F.Qed,F.t0Z],this._layersSet=new Set(this._layers),this._nearClip=.1,this._node=null,this._orthoHeight=10,this._projection=F.$JG,this._rect=new w.Z(0,0,1,1),this._renderTarget=null,this._scissorRect=new w.Z(0,0,1,1),this._scissorRectClear=!1,this._aperture=16,this._shutter=.001,this._sensitivity=1e3,this._projMat=new o.$,this._projMatDirty=!0,this._projMatSkybox=new o.$,this._viewMat=new o.$,this._viewMatDirty=!0,this._viewProjMat=new o.$,this._viewProjMatDirty=!0,this._shaderMatricesVersion=0,this._viewProjInverse=new o.$,this._viewProjCurrent=null,this._viewProjPrevious=new o.$,this._jitters=[0,0,0,0],this.frustum=new xt,this._xr=null,this._xrProperties={horizontalFov:this._horizontalFov,fov:this._fov,aspectRatio:this._aspectRatio,farClip:this._farClip,nearClip:this._nearClip}}destroy(){this.renderPassColorGrab?.destroy(),this.renderPassColorGrab=null,this.renderPassDepthGrab?.destroy(),this.renderPassDepthGrab=null,this.renderPasses.length=0}_storeShaderMatrices(t,e,s,i){this._shaderMatricesVersion!==i&&(this._shaderMatricesVersion=i,this._viewProjPrevious.copy(this._viewProjCurrent??t),this._viewProjCurrent??=new o.$,this._viewProjCurrent.copy(t),this._viewProjInverse.invert(t),this._jitters[2]=this._jitters[0],this._jitters[3]=this._jitters[1],this._jitters[0]=e,this._jitters[1]=s)}get fullSizeClearRect(){const t=this._scissorRectClear?this.scissorRect:this._rect;return 0===t.x&&0===t.y&&1===t.z&&1===t.w}set aspectRatio(t){this._aspectRatio!==t&&(this._aspectRatio=t,this._projMatDirty=!0)}get aspectRatio(){return this.xr?.active?this._xrProperties.aspectRatio:this._aspectRatio}set aspectRatioMode(t){this._aspectRatioMode!==t&&(this._aspectRatioMode=t,this._projMatDirty=!0)}get aspectRatioMode(){return this._aspectRatioMode}set calculateProjection(t){this._calculateProjection=t,this._projMatDirty=!0}get calculateProjection(){return this._calculateProjection}set calculateTransform(t){this._calculateTransform=t}get calculateTransform(){return this._calculateTransform}set clearColor(t){this._clearColor.copy(t)}get clearColor(){return this._clearColor}set clearColorBuffer(t){this._clearColorBuffer=t}get clearColorBuffer(){return this._clearColorBuffer}set clearDepth(t){this._clearDepth=t}get clearDepth(){return this._clearDepth}set clearDepthBuffer(t){this._clearDepthBuffer=t}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencil(t){this._clearStencil=t}get clearStencil(){return this._clearStencil}set clearStencilBuffer(t){this._clearStencilBuffer=t}get clearStencilBuffer(){return this._clearStencilBuffer}set cullFaces(t){this._cullFaces=t}get cullFaces(){return this._cullFaces}set farClip(t){this._farClip!==t&&(this._farClip=t,this._projMatDirty=!0)}get farClip(){return this.xr?.active?this._xrProperties.farClip:this._farClip}set flipFaces(t){this._flipFaces=t}get flipFaces(){return this._flipFaces}set fov(t){this._fov!==t&&(this._fov=t,this._projMatDirty=!0)}get fov(){return this.xr?.active?this._xrProperties.fov:this._fov}set frustumCulling(t){this._frustumCulling=t}get frustumCulling(){return this._frustumCulling}set horizontalFov(t){this._horizontalFov!==t&&(this._horizontalFov=t,this._projMatDirty=!0)}get horizontalFov(){return this.xr?.active?this._xrProperties.horizontalFov:this._horizontalFov}set layers(t){this._layers=t.slice(0),this._layersSet=new Set(this._layers)}get layers(){return this._layers}get layersSet(){return this._layersSet}set nearClip(t){this._nearClip!==t&&(this._nearClip=t,this._projMatDirty=!0)}get nearClip(){return this.xr?.active?this._xrProperties.nearClip:this._nearClip}set node(t){this._node=t}get node(){return this._node}set orthoHeight(t){this._orthoHeight!==t&&(this._orthoHeight=t,this._projMatDirty=!0)}get orthoHeight(){return this._orthoHeight}set projection(t){this._projection!==t&&(this._projection=t,this._projMatDirty=!0)}get projection(){return this._projection}get projectionMatrix(){return this._evaluateProjectionMatrix(),this._projMat}set rect(t){this._rect.copy(t)}get rect(){return this._rect}set renderTarget(t){this._renderTarget=t}get renderTarget(){return this._renderTarget}set scissorRect(t){this._scissorRect.copy(t)}get scissorRect(){return this._scissorRect}get viewMatrix(){if(this._viewMatDirty){const t=this._node.getWorldTransform();this._viewMat.copy(t).invert(),this._viewMatDirty=!1}return this._viewMat}set aperture(t){this._aperture=t}get aperture(){return this._aperture}set sensitivity(t){this._sensitivity=t}get sensitivity(){return this._sensitivity}set shutter(t){this._shutter=t}get shutter(){return this._shutter}set xr(t){this._xr!==t&&(this._xr=t,this._projMatDirty=!0)}get xr(){return this._xr}clone(){return(new It).copy(this)}copy(t){return this._aspectRatio=t._aspectRatio,this._farClip=t._farClip,this._fov=t._fov,this._horizontalFov=t._horizontalFov,this._nearClip=t._nearClip,this._xrProperties.aspectRatio=t._xrProperties.aspectRatio,this._xrProperties.farClip=t._xrProperties.farClip,this._xrProperties.fov=t._xrProperties.fov,this._xrProperties.horizontalFov=t._xrProperties.horizontalFov,this._xrProperties.nearClip=t._xrProperties.nearClip,this.aspectRatioMode=t.aspectRatioMode,this.calculateProjection=t.calculateProjection,this.calculateTransform=t.calculateTransform,this.clearColor=t.clearColor,this.clearColorBuffer=t.clearColorBuffer,this.clearDepth=t.clearDepth,this.clearDepthBuffer=t.clearDepthBuffer,this.clearStencil=t.clearStencil,this.clearStencilBuffer=t.clearStencilBuffer,this.cullFaces=t.cullFaces,this.flipFaces=t.flipFaces,this.frustumCulling=t.frustumCulling,this.layers=t.layers,this.orthoHeight=t.orthoHeight,this.projection=t.projection,this.rect=t.rect,this.renderTarget=t.renderTarget,this.scissorRect=t.scissorRect,this.aperture=t.aperture,this.shutter=t.shutter,this.sensitivity=t.sensitivity,this.shaderPassInfo=t.shaderPassInfo,this.jitter=t.jitter,this._projMatDirty=!0,this}_enableRenderPassColorGrab(t,e){e?this.renderPassColorGrab||(this.renderPassColorGrab=new wt(t)):(this.renderPassColorGrab?.destroy(),this.renderPassColorGrab=null)}_enableRenderPassDepthGrab(t,e,s){s?this.renderPassDepthGrab||(this.renderPassDepthGrab=new Et(t,this)):(this.renderPassDepthGrab?.destroy(),this.renderPassDepthGrab=null)}_updateViewProjMat(){(this._projMatDirty||this._viewMatDirty||this._viewProjMatDirty)&&(this._viewProjMat.mul2(this.projectionMatrix,this.viewMatrix),this._viewProjMatDirty=!1)}worldToScreen(t,e,s,i=new l.e){this._updateViewProjMat(),this._viewProjMat.transformPoint(t,i);const n=this._viewProjMat.data,r=t.x*n[3]+t.y*n[7]+t.z*n[11]+1*n[15];i.x=.5*(i.x/r+1),i.y=.5*(1-i.y/r);const{x:a,y:o,z:h,w:c}=this._rect;return i.x=i.x*h*e+a*e,i.y=i.y*c*s+(1-o-c)*s,i}screenToWorld(t,e,s,i,n,r=new l.e){const{x:a,y:h,z:c,w:d}=this._rect,u=this.farClip-this.nearClip;if(Ct.set((t-a*i)/(c*i),1-(e-(1-h-d)*n)/(d*n),s/u),Ct.mulScalar(2),Ct.sub(l.e.ONE),this._projection===F.$JG){o.$._getPerspectiveHalfSize(Pt,this.fov,this.aspectRatio,this.nearClip,this.horizontalFov),Pt.x*=Ct.x,Pt.y*=Ct.y;const t=this._node.getWorldTransform();Pt.z=-this.nearClip,t.transformPoint(Pt,Dt);const e=this._node.getPosition();r.sub2(Dt,e),r.normalize(),r.mulScalar(s),r.add(e)}else this._updateViewProjMat(),Lt.copy(this._viewProjMat).invert(),Lt.transformPoint(Ct,r);return r}_evaluateProjectionMatrix(){if(this._projMatDirty){if(this._projection===F.$JG)this._projMat.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip,this.horizontalFov),this._projMatSkybox.copy(this._projMat);else{const t=this._orthoHeight,e=t*this.aspectRatio;this._projMat.setOrtho(-e,e,-t,t,this.nearClip,this.farClip),this._projMatSkybox.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip)}this._projMatDirty=!1}}getProjectionMatrixSkybox(){return this._evaluateProjectionMatrix(),this._projMatSkybox}getExposure(){const t=Math.log2(this._aperture*this._aperture/this._shutter*100/this._sensitivity);return 1/(1.2*Math.pow(2,t))}getScreenSize(t){if(this._projection===F.$JG){const e=this._node.getPosition().distance(t.center);if(e<t.radius)return 1;const s=Math.asin(t.radius/e),i=Math.tan(s),n=Math.tan(this.fov/2*a.D.DEG_TO_RAD);return Math.min(i/n,1)}return a.D.clamp(t.radius/this._orthoHeight,0,1)}getFrustumCorners(t=this.nearClip,e=this.farClip){const s=this.fov*Math.PI/180;let i,n;this.projection===F.$JG?this.horizontalFov?(i=t*Math.tan(s/2),n=i/this.aspectRatio):(n=t*Math.tan(s/2),i=n*this.aspectRatio):(n=this._orthoHeight,i=n*this.aspectRatio);const r=Mt;return r[0].x=i,r[0].y=-n,r[0].z=-t,r[1].x=i,r[1].y=n,r[1].z=-t,r[2].x=-i,r[2].y=n,r[2].z=-t,r[3].x=-i,r[3].y=-n,r[3].z=-t,this._projection===F.$JG&&(this.horizontalFov?(i=e*Math.tan(s/2),n=i/this.aspectRatio):(n=e*Math.tan(s/2),i=n*this.aspectRatio)),r[4].x=i,r[4].y=-n,r[4].z=-e,r[5].x=i,r[5].y=n,r[5].z=-e,r[6].x=-i,r[6].y=n,r[6].z=-e,r[7].x=-i,r[7].y=-n,r[7].z=-e,r}setXrProperties(t){Object.assign(this._xrProperties,t),this._projMatDirty=!0}}var Rt=s(6739);const Ft=new o.$,Ot=new o.$,Nt=new o.$;class kt{static{this.pointLightRotations=[(new St.k).setFromEulerAngles(0,90,180),(new St.k).setFromEulerAngles(0,-90,180),(new St.k).setFromEulerAngles(90,0,0),(new St.k).setFromEulerAngles(-90,0,0),(new St.k).setFromEulerAngles(0,180,180),(new St.k).setFromEulerAngles(0,0,180)]}static create(t,e,s){const i=new It;switch(i.node=new Rt.t(t),i.aspectRatio=1,i.aspectRatioMode=F.E5o,i._scissorRectClear=!0,e){case F.dGk:i.node.setRotation(kt.pointLightRotations[s]),i.fov=90,i.projection=F.$JG;break;case F.GyL:i.projection=F.$JG;break;case F.kxh:i.projection=F.RDY}return i}static{this._spotCookieCamera=null}static evalSpotCookieMatrix(t){let e=kt._spotCookieCamera;e||(e=kt.create("SpotCookieCamera",F.GyL),kt._spotCookieCamera=e),e.fov=2*t._outerConeAngle;const s=e._node;s.setPosition(t._node.getPosition()),s.setRotation(t._node.getRotation()),s.rotateLocal(-90,0,0),Ft.setTRS(s.getPosition(),s.getRotation(),l.e.ONE).invert(),Ot.mul2(e.projectionMatrix,Ft);const i=t.cookieMatrix,n=t.atlasViewport;return Nt.setViewport(n.x,n.y,n.z,n.w),i.mul2(Nt,Ot),i}}const Bt=new l.e,Ut=new Float32Array(6),zt=new l.e(-.5,0,0),Vt=new l.e(0,0,.5),Gt={POSITION_RANGE:0,DIRECTION_FLAGS:1,COLOR_ANGLES_BIAS:2,PROJ_MAT_0:3,ATLAS_VIEWPORT:3,PROJ_MAT_1:4,PROJ_MAT_2:5,PROJ_MAT_3:6,AREA_DATA_WIDTH:7,AREA_DATA_HEIGHT:8,COUNT:9},Ht={LIGHTSHAPE_PUNCTUAL:`${F.j06}u`,LIGHTSHAPE_RECT:`${F.tt$}u`,LIGHTSHAPE_DISK:`${F.iUs}u`,LIGHTSHAPE_SPHERE:`${F.SYz}u`,LIGHT_COLOR_DIVIDER:`${F.rpD}.0`},Wt=(t,e)=>Object.keys(t).map(s=>`#define {${e}${s}} ${t[s]}`).join("\n"),Xt=`\n\n\t\t${Wt(Gt,"CLUSTER_TEXTURE_")}\n\t\t${Wt(Ht,"")}\n`;class $t{constructor(t){this.areaLightsEnabled=!1,this.device=t,B.W.get(t,x.BzK).set("lightBufferDefinesPS",Xt),B.W.get(t,x.g80).set("lightBufferDefinesPS",Xt),this.cookiesEnabled=!1,this.shadowsEnabled=!1,this.areaLightsEnabled=!1,this.maxLights=255;const e=Gt.COUNT;this.lightsFloat=new Float32Array(4*e*this.maxLights),this.lightsUint=new Uint32Array(this.lightsFloat.buffer),this.lightsTexture=this.createTexture(this.device,e,this.maxLights,x.s7h,"LightsTexture"),this._lightsTextureId=this.device.scope.resolve("lightsTexture"),this.invMaxColorValue=0,this.invMaxAttenuation=0,this.boundsMin=new l.e,this.boundsDelta=new l.e}destroy(){this.lightsTexture?.destroy(),this.lightsTexture=null}createTexture(t,e,s,i,n){return new Q.g(t,{name:n,width:e,height:s,mipmaps:!1,format:i,addressU:x.vq6,addressV:x.vq6,type:x.s64,magFilter:x.uhC,minFilter:x.uhC,anisotropy:1})}setBounds(t,e){this.boundsMin.copy(t),this.boundsDelta.copy(e)}uploadTextures(){this.lightsTexture.lock().set(this.lightsFloat),this.lightsTexture.unlock()}updateUniforms(){this._lightsTextureId.setValue(this.lightsTexture)}getSpotDirection(t,e){e._node.getWorldTransform().getY(t).mulScalar(-1),t.normalize()}getLightAreaSizes(t){const e=t._node.getWorldTransform();return e.transformVector(zt,Bt),Ut[0]=Bt.x,Ut[1]=Bt.y,Ut[2]=Bt.z,e.transformVector(Vt,Bt),Ut[3]=Bt.x,Ut[4]=Bt.y,Ut[5]=Bt.z,Ut}addLightData(t,e){const s=t._type===F.GyL,i=t.atlasViewportAllocated,n=this.cookiesEnabled&&!!t._cookie&&i,r=this.areaLightsEnabled&&t.shape!==F.j06,a=this.shadowsEnabled&&t.castShadows&&i,o=t._node.getPosition();let l=null,h=null;if(s)if(a){l=t.getRenderData(null,0).shadowMatrix}else n&&(l=kt.evalSpotCookieMatrix(t));else(a||n)&&(h=t.atlasViewport);const c=this.lightsFloat,d=this.lightsUint,u=e*this.lightsTexture.width*4;c[u+4*Gt.POSITION_RANGE+0]=o.x,c[u+4*Gt.POSITION_RANGE+1]=o.y,c[u+4*Gt.POSITION_RANGE+2]=o.z,c[u+4*Gt.POSITION_RANGE+3]=t.attenuationEnd;const f=t.clusteredData;if(d[u+4*Gt.COLOR_ANGLES_BIAS+0]=f[0],d[u+4*Gt.COLOR_ANGLES_BIAS+1]=f[1],d[u+4*Gt.COLOR_ANGLES_BIAS+2]=f[2],t.castShadows){const e=t.getRenderData(null,0),s=t._getUniformBiasValues(e),i=vt.float2Half(s.bias),n=vt.float2Half(s.normalBias);d[u+4*Gt.COLOR_ANGLES_BIAS+3]=i|n<<16}if(s&&(this.getSpotDirection(Bt,t),c[u+4*Gt.DIRECTION_FLAGS+0]=Bt.x,c[u+4*Gt.DIRECTION_FLAGS+1]=Bt.y,c[u+4*Gt.DIRECTION_FLAGS+2]=Bt.z),d[u+4*Gt.DIRECTION_FLAGS+3]=t.getClusteredFlags(a,n),l){const t=l.data;for(let e=0;e<16;e++)c[u+4*Gt.PROJ_MAT_0+e]=t[e]}if(h&&(c[u+4*Gt.ATLAS_VIEWPORT+0]=h.x,c[u+4*Gt.ATLAS_VIEWPORT+1]=h.y,c[u+4*Gt.ATLAS_VIEWPORT+2]=h.z/3),r){const e=this.getLightAreaSizes(t);c[u+4*Gt.AREA_DATA_WIDTH+0]=e[0],c[u+4*Gt.AREA_DATA_WIDTH+1]=e[1],c[u+4*Gt.AREA_DATA_WIDTH+2]=e[2],c[u+4*Gt.AREA_DATA_HEIGHT+0]=e[3],c[u+4*Gt.AREA_DATA_HEIGHT+1]=e[4],c[u+4*Gt.AREA_DATA_HEIGHT+2]=e[5]}}}const qt=new l.e,jt=new l.e,Yt=new l.e,Kt=new y;class Zt{constructor(){this.light=null,this.min=new l.e,this.max=new l.e}}class Qt{constructor(t){this.device=t,this.name="Untitled",this.reportCount=0,this.boundsMin=new l.e,this.boundsMax=new l.e,this.boundsDelta=new l.e,this._cells=new l.e(1,1,1),this._cellsLimit=new l.e,this.cells=this._cells,this.maxCellLightCount=4,this._usedLights=[],this._usedLights.push(new Zt),this.lightsBuffer=new $t(t),this.registerUniforms(t)}set maxCellLightCount(t){t!==this._maxCellLightCount&&(this._maxCellLightCount=t,this._cellsDirty=!0)}get maxCellLightCount(){return this._maxCellLightCount}set cells(t){qt.copy(t).floor(),this._cells.equals(qt)||(this._cells.copy(qt),this._cellsLimit.copy(qt).sub(l.e.ONE),this._cellsDirty=!0)}get cells(){return this._cells}destroy(){this.lightsBuffer.destroy(),this.releaseClusterTexture()}releaseClusterTexture(){this.clusterTexture&&(this.clusterTexture.destroy(),this.clusterTexture=null)}registerUniforms(t){this._clusterSkipId=t.scope.resolve("clusterSkip"),this._clusterMaxCellsId=t.scope.resolve("clusterMaxCells"),this._clusterWorldTextureId=t.scope.resolve("clusterWorldTexture"),this._clusterTextureSizeId=t.scope.resolve("clusterTextureSize"),this._clusterTextureSizeData=new Float32Array(3),this._clusterBoundsMinId=t.scope.resolve("clusterBoundsMin"),this._clusterBoundsMinData=new Float32Array(3),this._clusterBoundsDeltaId=t.scope.resolve("clusterBoundsDelta"),this._clusterBoundsDeltaData=new Float32Array(3),this._clusterCellsCountByBoundsSizeId=t.scope.resolve("clusterCellsCountByBoundsSize"),this._clusterCellsCountByBoundsSizeData=new Float32Array(3),this._clusterCellsDotId=t.scope.resolve("clusterCellsDot"),this._clusterCellsDotData=new Float32Array(3),this._clusterCellsMaxId=t.scope.resolve("clusterCellsMax"),this._clusterCellsMaxData=new Float32Array(3)}updateParams(t){t&&(this.cells=t.cells,this.maxCellLightCount=t.maxLightsPerCell,this.lightsBuffer.cookiesEnabled=t.cookiesEnabled,this.lightsBuffer.shadowsEnabled=t.shadowsEnabled,this.lightsBuffer.areaLightsEnabled=t.areaLightsEnabled)}updateCells(){if(this._cellsDirty){this._cellsDirty=!1;const t=this._cells.x,e=this._cells.y,s=this._cells.z,i=t*e*s,n=this.maxCellLightCount*i;let r=Math.ceil(Math.sqrt(n));r=a.D.roundUp(r,this.maxCellLightCount);const o=Math.ceil(n/r);this._clusterCellsMaxData[0]=t,this._clusterCellsMaxData[1]=e,this._clusterCellsMaxData[2]=s,this._clusterCellsDotData[0]=this.maxCellLightCount,this._clusterCellsDotData[1]=t*s*this.maxCellLightCount,this._clusterCellsDotData[2]=t*this.maxCellLightCount,this.clusters=new Uint8ClampedArray(n),this.counts=new Int32Array(i),this._clusterTextureSizeData[0]=r,this._clusterTextureSizeData[1]=1/r,this._clusterTextureSizeData[2]=1/o,this.releaseClusterTexture(),this.clusterTexture=this.lightsBuffer.createTexture(this.device,r,o,x.FfR,"ClusterTexture")}}uploadTextures(){this.clusterTexture.lock().set(this.clusters),this.clusterTexture.unlock(),this.lightsBuffer.uploadTextures()}updateUniforms(){this._clusterSkipId.setValue(this._usedLights.length>1?0:1),this.lightsBuffer.updateUniforms(),this._clusterWorldTextureId.setValue(this.clusterTexture),this._clusterMaxCellsId.setValue(this.maxCellLightCount);const t=this.boundsDelta;this._clusterCellsCountByBoundsSizeData[0]=this._cells.x/t.x,this._clusterCellsCountByBoundsSizeData[1]=this._cells.y/t.y,this._clusterCellsCountByBoundsSizeData[2]=this._cells.z/t.z,this._clusterCellsCountByBoundsSizeId.setValue(this._clusterCellsCountByBoundsSizeData),this._clusterBoundsMinData[0]=this.boundsMin.x,this._clusterBoundsMinData[1]=this.boundsMin.y,this._clusterBoundsMinData[2]=this.boundsMin.z,this._clusterBoundsDeltaData[0]=t.x,this._clusterBoundsDeltaData[1]=t.y,this._clusterBoundsDeltaData[2]=t.z,this._clusterTextureSizeId.setValue(this._clusterTextureSizeData),this._clusterBoundsMinId.setValue(this._clusterBoundsMinData),this._clusterBoundsDeltaId.setValue(this._clusterBoundsDeltaData),this._clusterCellsDotId.setValue(this._clusterCellsDotData),this._clusterCellsMaxId.setValue(this._clusterCellsMaxData)}evalLightCellMinMax(t,e,s){e.copy(t.min),e.sub(this.boundsMin),e.div(this.boundsDelta),e.mul2(e,this.cells),e.floor(),s.copy(t.max),s.sub(this.boundsMin),s.div(this.boundsDelta),s.mul2(s,this.cells),s.ceil(),e.max(l.e.ZERO),s.min(this._cellsLimit)}collectLights(t){const e=this.lightsBuffer.maxLights,s=this._usedLights;let i=1;t.forEach(t=>{const n=!!(t.mask&(F.XjC|F.beI)),r=t.type===F.GyL&&0===t._outerConeAngle;if(t.enabled&&t.type!==F.kxh&&t.visibleThisFrame&&t.intensity>0&&n&&!r&&i<e){let e;i<s.length?e=s[i]:(e=new Zt,s.push(e)),e.light=t,t.getBoundingBox(Kt),e.min.copy(Kt.getMin()),e.max.copy(Kt.getMax()),i++}}),s.length=i}evaluateBounds(){const t=this._usedLights,e=this.boundsMin,s=this.boundsMax;if(t.length>1){e.copy(t[1].min),s.copy(t[1].max);for(let i=2;i<t.length;i++)e.min(t[i].min),s.max(t[i].max)}else e.set(0,0,0),s.set(1,1,1);this.boundsDelta.sub2(s,e),this.lightsBuffer.setBounds(e,this.boundsDelta)}updateClusters(t){this.counts.fill(0),this.clusters.fill(0),this.lightsBuffer.areaLightsEnabled=!!t&&t.areaLightsEnabled;const e=this._cells.x,s=this._cells.z,i=this.counts,n=this._maxCellLightCount,r=this.clusters,a=this.maxCellLightCount,o=this._usedLights;for(let l=1;l<o.length;l++){const t=o[l],h=t.light;this.lightsBuffer.addLightData(h,l),this.evalLightCellMinMax(t,jt,Yt);const c=jt.x,d=Yt.x,u=jt.y,f=Yt.y,p=jt.z,m=Yt.z;for(let o=c;o<=d;o++)for(let t=p;t<=m;t++)for(let h=u;h<=f;h++){const c=o+e*(t+h*s),d=i[c];d<n&&(r[a*c+d]=l,i[c]=d+1)}}}update(t,e=null){this.updateParams(e),this.updateCells(),this.collectLights(t),this.evaluateBounds(),this.updateClusters(e),this.uploadTextures()}activate(){this.updateUniforms()}}var Jt=s(40050);const te=2.399963229728653,ee={circlePoint(t){const e=Math.sqrt(Math.random()),s=2*Math.random()*Math.PI;t.x=e*Math.cos(s),t.y=e*Math.sin(s)},circlePointDeterministic(t,e,s){const i=e*te,n=Math.sqrt(e)/Math.sqrt(s);t.x=n*Math.cos(i),t.y=n*Math.sin(i)},spherePointDeterministic(t,e,s,i=0,n=1){i=1-2*i,n=1-2*n;const r=a.D.lerp(i,n,e/s),o=Math.sqrt(1-r*r),l=te*e;t.x=Math.cos(l)*o,t.y=r,t.z=Math.sin(l)*o},radicalInverse(t){let e=(t<<16|t>>>16)>>>0;return e=((1431655765&e)<<1|(2863311530&e)>>>1)>>>0,e=((858993459&e)<<2|(3435973836&e)>>>2)>>>0,e=((252645135&e)<<4|(4042322160&e)>>>4)>>>0,e=((16711935&e)<<8|(4278255360&e)>>>8)>>>0,2.3283064365386963e-10*e}},se={linear:"decodeLinear",srgb:"decodeGamma",rgbm:"decodeRGBM",rgbe:"decodeRGBE",rgbp:"decodeRGBP",xy:"unpackNormalXY",xyz:"unpackNormalXYZ"},ie={linear:"encodeLinear",srgb:"encodeGamma",rgbm:"encodeRGBM",rgbe:"encodeRGBE",rgbp:"encodeRGBP"};class ne{static decodeFunc(t){return se[t]??"decodeGamma"}static encodeFunc(t){return ie[t]??"encodeGamma"}}var re=s(84140);const ae=t=>{switch(t){case x.$mg:return"Cubemap";case x.vct:return"Octahedral";default:return"Equirect"}},oe=(t,e,s)=>{if(t<=0)e[s+0]=0,e[s+1]=0,e[s+2]=0,e[s+3]=0;else if(t>=1)e[s+0]=255,e[s+1]=0,e[s+2]=0,e[s+3]=0;else{let i=1*t%1,n=255*t%1,r=65025*t%1;const a=16581375*t%1;i-=n/255,n-=r/255,r-=a/255,e[s+0]=Math.min(255,Math.floor(256*i)),e[s+1]=Math.min(255,Math.floor(256*n)),e[s+2]=Math.min(255,Math.floor(256*r)),e[s+3]=Math.min(255,Math.floor(256*a))}},le=(t,e,s,i)=>{const n=2*s*Math.PI,r=Math.pow(1-e,1/(i+1)),a=Math.sqrt(1-r*r);t.set(Math.cos(n)*a,Math.sin(n)*a,r).normalize()},he=(t,e,s)=>{const i=2*s*Math.PI,n=Math.sqrt(1-e),r=Math.sqrt(e);t.set(Math.cos(i)*r,Math.sin(i)*r,n).normalize()},ce=(t,e,s,i)=>{const n=2*s*Math.PI,r=Math.sqrt((1-e)/(1+(i*i-1)*e)),a=Math.sqrt(1-r*r);t.set(Math.cos(n)*a,Math.sin(n)*a,r).normalize()},de=(t,e)=>{const s=t*e,i=e/(1-t*t+s*s);return i*i*(1/Math.PI)},ue={16:{2:26,8:20,32:17,128:16,512:16},32:{2:53,8:40,32:34,128:32,512:32},128:{2:214,8:163,32:139,128:130,512:128},1024:{2:1722,8:1310,32:1114,128:1041,512:1025}},fe=(t,e,s)=>{const i=s/t,n=1-Math.log2(e)/11,r=n*n,a=new l.e,o=new l.e,h=new l.e(0,0,1),c=[],d=((t,e)=>{const s=ue[t];return s&&s[e]||t})(t,e);for(let l=0;l<d;++l){ce(a,l/d,ee.radicalInverse(l),r);const t=a.z;if(o.set(a.x,a.y,a.z).mulScalar(2*t).sub(h),o.z>0){const e=de(Math.min(1,t),r)/4+.001,s=.5*Math.log2(i/e);c.push(o.x,o.y,o.z,s)}}for(;c.length<4*t;)c.push(0,0,0,0);return c},pe=(t,e,s)=>{const i=(t=>{const e=t.length,s=Math.min(e,512),i=Math.ceil(e/s),n=new Uint8Array(s*i*4);let r=0;for(let a=0;a<e;a+=4)oe(.5*t[a+0]+.5,n,r+0),oe(.5*t[a+1]+.5,n,r+4),oe(.5*t[a+2]+.5,n,r+8),oe(t[a+3]/8,n,r+12),r+=16;return{width:s,height:i,data:n}})(s);return new Q.g(t,{name:e,width:i.width,height:i.height,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,levels:[i.data]})};class me{constructor(t=!0){this.map=new Map,this.destroyContent=t}destroy(){this.destroyContent&&this.map.forEach((t,e)=>{t.destroy()})}get(t,e){if(!this.map.has(t)){const s=e();return this.map.set(t,s),s}return this.map.get(t)}}const _e=new me(!1),ge=new D.N,ve=(t,e,s)=>ge.get(t,()=>new me).get(e,()=>pe(t,e,_e.get(e,s))),Se=(t,e,s)=>ve(t,`lambert-samples-${e}-${s}`,()=>((t,e)=>{const s=e/t,i=new l.e,n=[];for(let r=0;r<t;++r){he(i,r/t,ee.radicalInverse(r));const e=i.z/Math.PI,a=.5*Math.log2(s/e);n.push(i.x,i.y,i.z,a)}return n})(e,s)),ye=(t,e,s)=>ve(t,`phong-samples-${e}-${s}`,()=>((t,e)=>{const s=new l.e,i=[];for(let n=0;n<t;++n)le(s,n/t,ee.radicalInverse(n),e),i.push(s.x,s.y,s.z,0);return i})(e,s));function xe(t,e,s={}){const i=s.seamPixels??0,n=(s.rect?.z??e.width)-2*i,r=(s.rect?.w??e.height)-2*i;if(n<1||r<1)return!1;const a=s.hasOwnProperty("specularPower")?s.specularPower:1,o=s.hasOwnProperty("face")?s.face:null,l=s.hasOwnProperty("distribution")?s.distribution:1===a?"none":"phong",h={none:"reproject",lambert:"prefilterSamplesUnweighted",phong:"prefilterSamplesUnweighted",ggx:"prefilterSamples"}[l]||"reproject",c=h.startsWith("prefilterSamples"),d=ne.decodeFunc(t.encoding),u=ne.encodeFunc(e.encoding),f=`sample${ae(t.projection)}`,p=`getDirection${ae(e.projection)}`,m=s.hasOwnProperty("numSamples")?s.numSamples:1024,_=`ReprojectShader:${h}_${d}_${u}_${f}_${p}_${m}`,g=t.device;let v=M(g).getCachedShader(_);if(!v){const e=new Map;c&&e.set("USE_SAMPLES_TEX",""),t.cubemap&&e.set("CUBEMAP_SOURCE",""),e.set("{PROCESS_FUNC}",h),e.set("{DECODE_FUNC}",d),e.set("{ENCODE_FUNC}",u),e.set("{SOURCE_FUNC}",f),e.set("{TARGET_FUNC}",p),e.set("{NUM_SAMPLES}",m),e.set("{NUM_SAMPLES_SQRT}",Math.round(Math.sqrt(m)).toFixed(1));const s=g.isWebGPU,i=B.W.get(g,s?x.g80:x.BzK),n=new Map;n.set("decodePS",i.get("decodePS")),n.set("encodePS",i.get("encodePS")),v=V.createShader(g,{uniqueName:_,attributes:{vertex_position:x.JYe},vertexChunk:"reprojectVS",fragmentChunk:"reprojectPS",fragmentIncludes:n,fragmentDefines:e})}g.setBlendState(re.t.NOBLEND);g.scope.resolve(t.cubemap?"sourceCube":"sourceTex").setValue(t);const S=g.scope.resolve("params"),y=g.scope.resolve("uvMod");i>0?y.setValue([(n+2*i)/n,(r+2*i)/r,-i/n,-i/r]):y.setValue([1,1,0,0]);const w=[0,e.width*e.height*(e.cubemap?6:1),t.width*t.height*(t.cubemap?6:1)];if(c){const e=t.width*t.height*(t.cubemap?6:1),s="ggx"===l?((t,e,s,i)=>ve(t,`ggx-samples-${e}-${s}-${i}`,()=>fe(e,s,i)))(g,m,a,e):"lambert"===l?Se(g,m,e):ye(g,m,a);g.scope.resolve("samplesTex").setValue(s),g.scope.resolve("samplesTexInverseSize").setValue([1/s.width,1/s.height])}for(let x=0;x<(e.cubemap?6:1);x++)if(null===o||x===o){const t=new T.O({colorBuffer:e,face:x,depth:!1,flipY:g.isWebGPU});w[0]=x,S.setValue(w),Z(g,t,v,s?.rect),t.destroy()}return!0}const Te=(t,e=0)=>1+Math.floor(Math.log2(Math.max(t,e)));class we{static generateSkyboxCubemap(t,e){const s=((t,e,s)=>new Q.g(t,{name:`lighting-${e}`,cubemap:!0,width:e,height:e,format:s,type:x.mEg,addressU:x.vq6,addressV:x.vq6,mipmaps:!1}))(t.device,e||(t.cubemap?t.width:t.width/4),x.Lxj);return xe(t,s,{numSamples:1024}),s}static generateLightingSource(t,e){const s=t.device,i=(t=>(t=>t.textureHalfFloatRenderable)(t)?x.WBN:(t=>t.textureFloatRenderable)(t)?x.s7h:x.Lxj)(s),n=e?.target||new Q.g(s,{name:"lighting-source",cubemap:!0,width:e?.size||128,height:e?.size||128,format:i,type:i===x.Lxj?x.mEg:x.s64,addressU:x.vq6,addressV:x.vq6,mipmaps:!0});return xe(t,n,{numSamples:t.mipmaps?1:1024}),n}static generateAtlas(t,e){const s=t.device,i=x.Lxj,n=e?.target||new Q.g(s,{name:"envAtlas",width:e?.size||512,height:e?.size||512,format:i,type:x.mEg,projection:x.CG0,addressU:x.vq6,addressV:x.vq6,mipmaps:!1}),r=n.width/512,a=new w.Z(0,0,512*r,256*r),o=Te(256)-Te(4);for(let l=0;l<o;++l)xe(t,n,{numSamples:1,rect:a,seamPixels:r}),a.x+=a.w,a.y+=a.w,a.z=Math.max(1,Math.floor(.5*a.z)),a.w=Math.max(1,Math.floor(.5*a.w));a.set(0,256*r,256*r,128*r);for(let l=1;l<7;++l)xe(t,n,{numSamples:e?.numReflectionSamples||1024,distribution:e?.distribution||"ggx",specularPower:Math.max(1,2048>>2*l),rect:a,seamPixels:r}),a.y+=a.w,a.z=Math.max(1,Math.floor(.5*a.z)),a.w=Math.max(1,Math.floor(.5*a.w));return a.set(128*r,384*r,64*r,32*r),xe(t,n,{numSamples:e?.numAmbientSamples||2048,distribution:"lambert",rect:a,seamPixels:r}),n}static generatePrefilteredAtlas(t,e){const s=t[0].device,i=t[0].format,n=t[0].type,r=e?.target||new Q.g(s,{name:"envPrefilteredAtlas",width:e?.size||512,height:e?.size||512,format:i,type:n,projection:x.CG0,addressU:x.vq6,addressV:x.vq6,mipmaps:!1}),a=r.width/512,o=new w.Z(0,0,512*a,256*a),l=Te(512);for(let h=0;h<l;++h)xe(t[0],r,{numSamples:1,rect:o,seamPixels:a}),o.x+=o.w,o.y+=o.w,o.z=Math.max(1,Math.floor(.5*o.z)),o.w=Math.max(1,Math.floor(.5*o.w));o.set(0,256*a,256*a,128*a);for(let h=1;h<t.length;++h)xe(t[h],r,{numSamples:1,rect:o,seamPixels:a}),o.y+=o.w,o.z=Math.max(1,Math.floor(.5*o.z)),o.w=Math.max(1,Math.floor(.5*o.w));return o.set(128*a,384*a,64*a,32*a),e?.legacyAmbient?xe(t[5],r,{numSamples:1,rect:o,seamPixels:a}):xe(t[0],r,{numSamples:e?.numSamples||2048,distribution:"lambert",rect:o,seamPixels:a}),r}}const be={vertex_normal:x.XF6,vertex_tangent:x.h3u,vertex_texCoord0:x.slc,vertex_texCoord1:x.zEd,vertex_color:x.F8$,vertex_boneWeights:x.Hn_,vertex_boneIndices:x.aVd};class Ee{constructor(t,e,s=!0){this.varyingsCode="",this.vDefines=new Map,this.fDefines=new Map,this.includes=new Map,this.chunks=null,this.device=t,this.options=e;const i=e.shaderChunks;if(this.shaderLanguage=t.isWebGPU&&s&&i?.useWGSL?x.g80:x.BzK,this.attributes={vertex_position:x.JYe},e.userAttributes)for(const[r,a]of Object.entries(e.userAttributes))this.attributes[a]=r;const n=B.W.get(t,this.shaderLanguage);if(this.chunks=new Map(n),i){(this.shaderLanguage===x.BzK?i.glsl:i.wgsl).forEach((t,e)=>{for(const s in be)be.hasOwnProperty(s)&&t.indexOf(s)>=0&&(this.attributes[s]=be[s]);this.chunks.set(e,t)})}this.shaderPassInfo=k.get(this.device).getByIndex(e.pass),this.shadowPass=this.shaderPassInfo.isShadow,this.lighting=e.lights.length>0||e.dirLightMapEnabled||e.clusteredLightingEnabled,this.reflections=e.reflectionSource!==F.ZSD,this.needsNormal=this.lighting||this.reflections||e.useSpecular||e.ambientSH||e.useHeights||e.enableGGXSpecular||e.clusteredLightingEnabled&&!this.shadowPass||e.useClearCoatNormals,this.needsNormal=this.needsNormal&&!this.shadowPass,this.needsSceneColor=e.useDynamicRefraction,this.needsScreenSize=e.useDynamicRefraction,this.needsTransforms=e.useDynamicRefraction,this.vshader=null,this.fshader=null}fDefineSet(t,e,s=""){t&&this.fDefines.set(e,s)}generateVertexShader(t,e,s){const{options:i,vDefines:n,attributes:r}=this,a=new Map;if(a.set("vPositionW","vec3"),i.nineSlicedMode!==F.FCf&&i.nineSlicedMode!==F.jZy||n.set("NINESLICED",!0),this.options.linearDepth&&(n.set("LINEAR_DEPTH",!0),a.set("vLinearDepth","float")),this.needsNormal&&n.set("NORMALS",!0),this.options.useInstancing){const t=B.W.get(this.device,this.shaderLanguage);this.chunks.get("transformInstancingVS")===t.get("transformInstancingVS")&&(r.instance_line1=x.rGZ,r.instance_line2=x.yZ0,r.instance_line3=x.yof,r.instance_line4=x.FHg)}this.needsNormal&&(r.vertex_normal=x.XF6,a.set("vNormalW","vec3"),i.hasTangents&&(i.useHeights||i.useNormals||i.useClearCoatNormals||i.enableGGXSpecular)?(n.set("TANGENTS",!0),r.vertex_tangent=x.h3u,a.set("vTangentW","vec3"),a.set("vBinormalW","vec3")):i.enableGGXSpecular&&(n.set("GGX_SPECULAR",!0),a.set("vObjectSpaceUpW","vec3")));for(let h=0;h<2;h++)t[h]&&(n.set(`UV${h}`,!0),r[`vertex_texCoord${h}`]=`TEXCOORD${h}`),e[h]&&(n.set(`UV${h}_UNMODIFIED`,!0),a.set(`vUv${h}`,"vec2"));let o=0;const l=new Set;s.forEach(t=>{const{id:e,uv:s,name:i}=t,r=e+100*s;if(!l.has(r)){l.add(r),a.set(`vUV${s}_${e}`,"vec2");const t=`texture_${i}MapTransform`;n.set(`{TRANSFORM_NAME_${o}}`,t),n.set(`{TRANSFORM_UV_${o}}`,s),n.set(`{TRANSFORM_ID_${o}}`,e),o++}}),n.set("UV_TRANSFORMS_COUNT",o),i.vertexColors&&(r.vertex_color=x.F8$,n.set("VERTEX_COLOR",!0),a.set("vVertexColor","vec4")),i.useMsdf&&i.msdfTextAttribute&&(r.vertex_outlineParameters=x.$_V,r.vertex_shadowParameters=x.URU,n.set("MSDF",!0)),(i.useMorphPosition||i.useMorphNormal)&&(n.set("MORPHING",!0),i.useMorphTextureBasedInt&&n.set("MORPHING_INT",!0),i.useMorphPosition&&n.set("MORPHING_POSITION",!0),i.useMorphNormal&&n.set("MORPHING_NORMAL",!0),r.morph_vertex_id=x.FHg),i.skin&&(r.vertex_boneIndices=x.aVd,i.batch?n.set("BATCH",!0):(r.vertex_boneWeights=x.Hn_,n.set("SKIN",!0))),i.useInstancing&&n.set("INSTANCING",!0),i.screenSpace&&n.set("SCREENSPACE",!0),i.pixelSnap&&n.set("PIXELSNAP",!0),a.forEach((t,e)=>{this.varyingsCode+=`#define VARYING_${e.toUpperCase()}\n`,this.varyingsCode+=this.shaderLanguage===x.g80?`varying ${e}: ${x.iUf.get(t)};\n`:`varying ${t} ${e};\n`}),this.includes.set("varyingsVS",this.varyingsCode),this.includes.set("varyingsPS",this.varyingsCode),this.vshader='\n\t\t\t\t\t\t#include "litMainVS"\n\t\t\t\t'}_setupLightingDefines(t,e){const s=this.fDefines,i=this.options;if(this.fDefines.set("LIGHT_COUNT",i.lights.length),t&&s.set("AREA_LIGHTS",!0),e&&this.lighting&&(s.set("LIT_CLUSTERED_LIGHTS",!0),i.clusteredLightingCookiesEnabled&&s.set("CLUSTER_COOKIES",!0),i.clusteredLightingAreaLightsEnabled&&s.set("CLUSTER_AREALIGHTS",!0),i.lightMaskDynamic&&s.set("CLUSTER_MESH_DYNAMIC_LIGHTS",!0),i.clusteredLightingShadowsEnabled&&!i.noShadow)){const t=F.$Tp.get(i.clusteredLightingShadowType);s.set("CLUSTER_SHADOWS",!0),s.set(`SHADOW_KIND_${t.kind}`,!0),s.set(`CLUSTER_SHADOW_TYPE_${t.kind}`,!0)}for(let n=0;n<i.lights.length;n++){const r=i.lights[n],a=r._type;if(e&&a!==F.kxh)continue;const o=t&&r._shape?r._shape:F.j06,l=r._shadowType,h=r.castShadows&&!i.noShadow,c=F.$Tp.get(l);s.set(`LIGHT${n}`,!0),s.set(`LIGHT${n}TYPE`,`${F.VqA[a]}`),s.set(`LIGHT${n}SHADOWTYPE`,`${c.name}`),s.set(`LIGHT${n}SHAPE`,`${F.cbd[o]}`),s.set(`LIGHT${n}FALLOFF`,`${F.Z0g[r._falloffMode]}`),r.affectSpecularity&&s.set(`LIGHT${n}AFFECT_SPECULARITY`,!0),r._cookie&&(a===F.GyL&&!r._cookie._cubemap||a===F.dGk&&r._cookie._cubemap)&&(s.set(`LIGHT${n}COOKIE`,!0),s.set(`{LIGHT${n}COOKIE_CHANNEL}`,r._cookieChannel),a===F.GyL&&(r._cookieTransform&&s.set(`LIGHT${n}COOKIE_TRANSFORM`,!0),r._cookieFalloff&&s.set(`LIGHT${n}COOKIE_FALLOFF`,!0))),h&&(s.set(`LIGHT${n}CASTSHADOW`,!0),c.pcf&&s.set(`LIGHT${n}SHADOW_PCF`,!0),r._normalOffsetBias&&!r._isVsm&&s.set(`LIGHT${n}_SHADOW_SAMPLE_NORMAL_OFFSET`,!0),a===F.kxh&&(s.set(`LIGHT${n}_SHADOW_SAMPLE_ORTHO`,!0),r.cascadeBlend>0&&s.set(`LIGHT${n}_SHADOW_CASCADE_BLEND`,!0),r.numCascades>1&&s.set(`LIGHT${n}_SHADOW_CASCADES`,!0)),(c.pcf||c.pcss||this.device.isWebGPU)&&s.set(`LIGHT${n}_SHADOW_SAMPLE_SOURCE_ZBUFFER`,!0),a===F.dGk&&s.set(`LIGHT${n}_SHADOW_SAMPLE_POINT`,!0)),h&&(s.set(`SHADOW_KIND_${c.kind}`,!0),a===F.kxh&&s.set("SHADOW_DIRECTIONAL",!0))}}prepareForwardPass(t){const{options:e}=this,s=e.clusteredLightingEnabled&&e.clusteredLightingAreaLightsEnabled||e.lights.some(t=>t._shape&&t._shape!==F.j06),i=!e.lightMapEnabled||e.lightMapWithoutAmbient,n=this.needsNormal&&(e.useNormals||e.useClearCoatNormals||e.enableGGXSpecular&&!e.useHeights);e.useSpecular&&(this.fDefineSet(!0,"LIT_SPECULAR"),this.fDefineSet(this.reflections,"LIT_REFLECTIONS"),this.fDefineSet(e.useClearCoat,"LIT_CLEARCOAT"),this.fDefineSet(e.fresnelModel>0,"LIT_SPECULAR_FRESNEL"),this.fDefineSet(e.useSheen,"LIT_SHEEN"),this.fDefineSet(e.useIridescence,"LIT_IRIDESCENCE")),this.fDefineSet(this.lighting&&e.useSpecular||this.reflections,"LIT_SPECULAR_OR_REFLECTION"),this.fDefineSet(this.needsSceneColor,"LIT_SCENE_COLOR"),this.fDefineSet(this.needsScreenSize,"LIT_SCREEN_SIZE"),this.fDefineSet(this.needsTransforms,"LIT_TRANSFORMS"),this.fDefineSet(this.needsNormal,"LIT_NEEDS_NORMAL"),this.fDefineSet(this.lighting,"LIT_LIGHTING"),this.fDefineSet(e.useMetalness,"LIT_METALNESS"),this.fDefineSet(e.enableGGXSpecular,"LIT_GGX_SPECULAR"),this.fDefineSet(e.useSpecularityFactor,"LIT_SPECULARITY_FACTOR"),this.fDefineSet(e.useCubeMapRotation,"CUBEMAP_ROTATION"),this.fDefineSet(e.occludeSpecularFloat,"LIT_OCCLUDE_SPECULAR_FLOAT"),this.fDefineSet(e.separateAmbient,"LIT_SEPARATE_AMBIENT"),this.fDefineSet(e.twoSidedLighting,"LIT_TWO_SIDED_LIGHTING"),this.fDefineSet(e.lightMapEnabled,"LIT_LIGHTMAP"),this.fDefineSet(e.dirLightMapEnabled,"LIT_DIR_LIGHTMAP"),this.fDefineSet(e.skyboxIntensity>0,"LIT_SKYBOX_INTENSITY"),this.fDefineSet(e.clusteredLightingShadowsEnabled,"LIT_CLUSTERED_SHADOWS"),this.fDefineSet(e.clusteredLightingAreaLightsEnabled,"LIT_CLUSTERED_AREA_LIGHTS"),this.fDefineSet(n,"LIT_TBN"),this.fDefineSet(i,"LIT_ADD_AMBIENT"),this.fDefineSet(e.hasTangents,"LIT_TANGENTS"),this.fDefineSet(e.useNormals,"LIT_USE_NORMALS"),this.fDefineSet(e.useClearCoatNormals,"LIT_USE_CLEARCOAT_NORMALS"),this.fDefineSet(e.useRefraction,"LIT_REFRACTION"),this.fDefineSet(e.useDynamicRefraction,"LIT_DYNAMIC_REFRACTION"),this.fDefineSet(e.dispersion,"LIT_DISPERSION"),this.fDefineSet(e.useHeights,"LIT_HEIGHTS"),this.fDefineSet(e.opacityFadesSpecular,"LIT_OPACITY_FADES_SPECULAR"),this.fDefineSet(e.alphaToCoverage,"LIT_ALPHA_TO_COVERAGE"),this.fDefineSet(e.alphaTest,"LIT_ALPHA_TEST"),this.fDefineSet(e.useMsdf,"LIT_MSDF"),this.fDefineSet(e.ssao,"LIT_SSAO"),this.fDefineSet(e.useAo,"LIT_AO"),this.fDefineSet(e.occludeDirect,"LIT_OCCLUDE_DIRECT"),this.fDefineSet(e.msdfTextAttribute,"LIT_MSDF_TEXT_ATTRIBUTE"),this.fDefineSet(e.diffuseMapEnabled,"LIT_DIFFUSE_MAP"),this.fDefineSet(e.shadowCatcher,"LIT_SHADOW_CATCHER"),this.fDefineSet(!0,"LIT_FRESNEL_MODEL",F.wJX[e.fresnelModel]),this.fDefineSet(!0,"LIT_NONE_SLICE_MODE",F.nxd[e.nineSlicedMode]),this.fDefineSet(!0,"LIT_BLEND_TYPE",F._wM[e.blendType]),this.fDefineSet(!0,"LIT_CUBEMAP_PROJECTION",F.Bo6[e.cubeMapProjection]),this.fDefineSet(!0,"LIT_OCCLUDE_SPECULAR",F.Vx7[e.occludeSpecular]),this.fDefineSet(!0,"LIT_REFLECTION_SOURCE",F.AyA[e.reflectionSource]),this.fDefineSet(!0,"LIT_AMBIENT_SOURCE",F.nZ5[e.ambientSource]),this.fDefineSet(!0,"{lightingUv}",t??""),this.fDefineSet(!0,"{reflectionDecode}",ne.decodeFunc(e.reflectionEncoding)),this.fDefineSet(!0,"{reflectionCubemapDecode}",ne.decodeFunc(e.reflectionCubemapEncoding)),this.fDefineSet(!0,"{ambientDecode}",ne.decodeFunc(e.ambientEncoding)),this._setupLightingDefines(s,e.clusteredLightingEnabled)}prepareShadowPass(){const{options:t}=this,e=this.shaderPassInfo.lightType,s=this.shaderPassInfo.shadowType,i=F.$Tp.get(s),n=e===F.kxh||!i.vsm&&e===F.GyL;this.fDefineSet(n,"PERSPECTIVE_DEPTH"),this.fDefineSet(!0,"LIGHT_TYPE",`${F.VqA[e]}`),this.fDefineSet(!0,"SHADOW_TYPE",`${i.name}`),this.fDefineSet(t.alphaTest,"LIT_ALPHA_TEST")}generateFragmentShader(t,e,s){const i=this.options;this.includes.set("frontendDeclPS",t??""),this.includes.set("frontendCodePS",e??""),i.pass===F.czD||i.pass===F.pP7||(this.shadowPass?this.prepareShadowPass():this.prepareForwardPass(s)),this.fshader='\n\t\t\t\t\t\t#include "litMainPS"\n\t\t\t\t'}}class Ae{constructor(){this.hasTangents=!1,this.shaderChunks=null,this.pass=0,this.alphaTest=!1,this.blendType=F.RjB,this.separateAmbient=!1,this.screenSpace=!1,this.skin=!1,this.batch=!1,this.useInstancing=!1,this.useMorphPosition=!1,this.useMorphNormal=!1,this.useMorphTextureBasedInt=!1,this.nineSlicedMode=0,this.clusteredLightingEnabled=!0,this.clusteredLightingCookiesEnabled=!1,this.clusteredLightingShadowsEnabled=!1,this.clusteredLightingShadowType=0,this.clusteredLightingAreaLightsEnabled=!1,this.vertexColors=!1,this.lightMapEnabled=!1,this.dirLightMapEnabled=!1,this.useHeights=!1,this.useNormals=!1,this.useClearCoatNormals=!1,this.useAo=!1,this.diffuseMapEnabled=!1,this.pixelSnap=!1,this.ambientSH=!1,this.ssao=!1,this.twoSidedLighting=!1,this.occludeDirect=!1,this.occludeSpecular=0,this.occludeSpecularFloat=!1,this.useMsdf=!1,this.msdfTextAttribute=!1,this.alphaToCoverage=!1,this.opacityFadesSpecular=!1,this.opacityDither=F.gH7,this.opacityShadowDither=F.gH7,this.cubeMapProjection=0,this.useSpecular=!1,this.useSpecularityFactor=!1,this.enableGGXSpecular=!1,this.fresnelModel=0,this.useRefraction=!1,this.useClearCoat=!1,this.useSheen=!1,this.useIridescence=!1,this.useMetalness=!1,this.useDynamicRefraction=!1,this.dispersion=!1,this.fog=F.qXo,this.gamma=F.hcE,this.toneMap=-1,this.reflectionSource=F.ZSD,this.reflectionEncoding=null,this.reflectionCubemapEncoding=null,this.ambientSource="constant",this.ambientEncoding=null,this.skyboxIntensity=1,this.useCubeMapRotation=!1,this.lightMapWithoutAmbient=!1,this.lights=[],this.noShadow=!1,this.lightMaskDynamic=0,this.userAttributes={},this.linearDepth=!1,this.shadowCatcher=!1}}class Ce{get pass(){return this.litOptions.pass}constructor(){this.defines=new Map,this.forceUv1=!1,this.specularTint=!1,this.metalnessTint=!1,this.glossTint=!1,this.emissiveEncoding="linear",this.lightMapEncoding="linear",this.packedNormal=!1,this.normalDetailPackedNormal=!1,this.clearCoatPackedNormal=!1,this.glossInvert=!1,this.sheenGlossInvert=!1,this.clearCoatGlossInvert=!1,this.useAO=!1,this.litOptions=new Ae}}const Pe={generateKey:t=>`lit${Object.keys(t).sort().map(e=>"shaderChunks"===e?t.shaderChunks?.key??"":"lights"===e?Pe.generateLightsKey(t):e+t[e]).join("\n")}`,generateLightsKey:t=>`lights:${t.lights.map(e=>t.clusteredLightingEnabled&&e._type!==F.kxh?"":`${e.key},`).join("")}`},De=[],Le=t=>Object.keys(t).filter(t=>"litOptions"!==t).sort();const Me=new class extends R{generateKey(t){let e;t===this.optionsContextMin?(this.propsMin||(this.propsMin=Le(t)),e=this.propsMin):t===this.optionsContext?(this.props||(this.props=Le(t)),e=this.props):e=Le(t);return`standard:\n${R.definesHash(t.defines)}\n${e.map(e=>e+t[e]).join("\n")}${Pe.generateKey(t.litOptions)}`}_getUvSourceExpression(t,e,s){const i=s[t],n=s[e],r=s.litOptions.pass===F.OPe;let a;return r&&s.litOptions.nineSlicedMode===F.FCf||r&&s.litOptions.nineSlicedMode===F.jZy?a="nineSlicedUv":(a=0===i?`vUv${n}`:`vUV${n}_${i}`,s.heightMap&&"heightMapTransform"!==t&&(a+=" + dUvOffset")),a}_validateMapChunk(t,e,s){}_addMapDefines(t,e,s,i,n,r,a=null){const o=`${e}Map`,l=e.toUpperCase(),h=`${o}Uv`,c=`${o}Identifier`,d=`${o}Transform`,u=`${o}Channel`,f=`${e}VertexColorChannel`,p=`${e}VertexColor`,m=`${e}Mode`,_=`${e}Invert`,g=i[`${e}Tint`],v=i[p],S=i[o],y=i[c],x=i[m],T=n.get(s);if(S){t.set(`STD_${l}_TEXTURE`,"");const e=this._getUvSourceExpression(d,h,i);t.set(`{STD_${l}_TEXTURE_UV}`,e),t.set(`{STD_${l}_TEXTURE_CHANNEL}`,i[u]);const s=`{STD_${l}_TEXTURE_NAME}`;if(T.includes(s)){let e=`texture_${o}`;const i=r[y];i?e=i:(r[y]=e,t.set(`STD_${l}_TEXTURE_ALLOCATE`,"")),t.set(s,e)}if(a){const e="aaa"===i[u]?"passThrough":ne.decodeFunc(a);t.set(`{STD_${l}_TEXTURE_DECODE}`,e)}}v&&(t.set(`STD_${l}_VERTEX`,""),t.set(`{STD_${l}_VERTEX_CHANNEL}`,i[f])),x&&t.set(`{STD_${l}_DETAILMODE}`,x),g&&t.set(`STD_${l}_CONSTANT`,""),i[_]&&t.set(`STD_${l}_INVERT`,"")}_correctChannel(t,e,s){if(s[t]>0){if(s[t]<e.length)return e.substring(0,s[t]);if(s[t]>e.length){let i=e;const n=i.charAt(i.length-1),r=s[t]-i.length;for(let t=0;t<r;t++)i+=n;return i}return e}}createVertexShader(t,e){const s=[],i=[],n=[];for(const r in De){const t=`${r}Map`;if(e[`${r}VertexColor`]){const t=`${r}VertexColorChannel`;e[t]=this._correctChannel(r,e[t],De)}if(e[t]){const a=`${t}Channel`,o=`${t}Transform`,l=`${t}Uv`;e[l]=Math.min(e[l],1),e[a]=this._correctChannel(r,e[a],De);const h=e[l];s[h]=!0,i[h]=i[h]||e[t]&&!e[o],e[o]&&n.push({name:r,id:e[o],uv:e[l]})}}e.forceUv1&&(s[1]=!0,i[1]=void 0===i[1]||i[1]),t.generateVertexShader(s,i,n)}prepareFragmentDefines(t,e,s){const i=(t,s,i="")=>{t&&e.set(s,i)};i(t.lightMap,"STD_LIGHTMAP",""),i(t.lightVertexColor,"STD_LIGHT_VERTEX_COLOR",""),i(t.dirLightMap&&t.litOptions.useSpecular,"STD_LIGHTMAP_DIR",""),i(t.heightMap,"STD_HEIGHT_MAP",""),i(t.useSpecularColor,"STD_SPECULAR_COLOR",""),i(t.aoMap||t.aoVertexColor||t.useAO,"STD_AO",""),i(!0,"STD_OPACITY_DITHER",F.tN7[s.isForward?t.litOptions.opacityDither:t.litOptions.opacityShadowDither])}createShaderDefinition(t,e){const s=k.get(t).getByIndex(e.litOptions.pass),i=s.isForward,n=new Ee(t,e.litOptions);this.createVertexShader(n,e);const r={};e.litOptions.fresnelModel=0===e.litOptions.fresnelModel?F.SU_:e.litOptions.fresnelModel;const a=n.fDefines;this.prepareFragmentDefines(e,a,s);let o="";if(i){if(e.heightMap&&this._addMapDefines(a,"height","parallaxPS",e,n.chunks,r),(e.litOptions.blendType!==F.RjB||e.litOptions.alphaTest||e.litOptions.alphaToCoverage||e.litOptions.opacityDither!==F.gH7)&&this._addMapDefines(a,"opacity","opacityPS",e,n.chunks,r),n.needsNormal){if((e.normalMap||e.clearCoatNormalMap)&&!e.litOptions.hasTangents){const t=e.normalMap?"normalMap":"clearCoatNormalMap";o=this._getUvSourceExpression(`${t}Transform`,`${t}Uv`,e)}this._addMapDefines(a,"normalDetail","normalMapPS",e,n.chunks,r,e.normalDetailPackedNormal?"xy":"xyz"),this._addMapDefines(a,"normal","normalMapPS",e,n.chunks,r,e.packedNormal?"xy":"xyz")}e.diffuseDetail&&this._addMapDefines(a,"diffuseDetail","diffusePS",e,n.chunks,r,e.diffuseDetailEncoding),this._addMapDefines(a,"diffuse","diffusePS",e,n.chunks,r,e.diffuseEncoding),e.litOptions.useRefraction&&(this._addMapDefines(a,"refraction","transmissionPS",e,n.chunks,r),this._addMapDefines(a,"thickness","thicknessPS",e,n.chunks,r)),e.litOptions.useIridescence&&(this._addMapDefines(a,"iridescence","iridescencePS",e,n.chunks,r),this._addMapDefines(a,"iridescenceThickness","iridescenceThicknessPS",e,n.chunks,r)),(n.lighting&&e.litOptions.useSpecular||n.reflections)&&(e.litOptions.useSheen&&(this._addMapDefines(a,"sheen","sheenPS",e,n.chunks,r,e.sheenEncoding),this._addMapDefines(a,"sheenGloss","sheenGlossPS",e,n.chunks,r)),e.litOptions.useMetalness&&(this._addMapDefines(a,"metalness","metalnessPS",e,n.chunks,r),this._addMapDefines(a,"ior","iorPS",e,n.chunks,r)),e.litOptions.useSpecularityFactor&&this._addMapDefines(a,"specularityFactor","specularityFactorPS",e,n.chunks,r),e.useSpecularColor&&this._addMapDefines(a,"specular","specularPS",e,n.chunks,r,e.specularEncoding),this._addMapDefines(a,"gloss","glossPS",e,n.chunks,r)),e.aoDetail&&this._addMapDefines(a,"aoDetail","aoPS",e,n.chunks,r),(e.aoMap||e.aoVertexColor||e.useAO)&&this._addMapDefines(a,"ao","aoPS",e,n.chunks,r),this._addMapDefines(a,"emissive","emissivePS",e,n.chunks,r,e.emissiveEncoding),e.litOptions.useClearCoat&&(this._addMapDefines(a,"clearCoat","clearCoatPS",e,n.chunks,r),this._addMapDefines(a,"clearCoatGloss","clearCoatGlossPS",e,n.chunks,r),this._addMapDefines(a,"clearCoatNormal","clearCoatNormalPS",e,n.chunks,r,e.clearCoatPackedNormal?"xy":"xyz")),e.litOptions.enableGGXSpecular&&this._addMapDefines(a,"anisotropy","anisotropyPS",e,n.chunks,r),(e.lightMap||e.lightVertexColor)&&this._addMapDefines(a,"light","lightmapPS",e,n.chunks,r,e.lightMapEncoding)}else{const t=e.litOptions.opacityShadowDither;(e.litOptions.alphaTest||t)&&this._addMapDefines(a,"opacity","opacityPS",e,n.chunks,r)}n.generateFragmentShader(n.chunks.get("stdDeclarationPS"),n.chunks.get("stdFrontEndPS"),o);const l=U.merge(n.chunks,n.includes),h=n.vDefines;e.defines.forEach((t,e)=>h.set(e,t)),e.defines.forEach((t,e)=>a.set(e,t));const c=P.C.createDefinition(t,{name:"StandardShader",attributes:n.attributes,shaderLanguage:n.shaderLanguage,vertexCode:n.vshader,fragmentCode:n.fshader,vertexIncludes:l,fragmentIncludes:l,fragmentDefines:a,vertexDefines:h});return n.shaderPassInfo.isForward&&(c.tag=x.EB8),c}constructor(...t){super(...t),this.optionsContext=new Ce,this.optionsContextMin=new Ce}};var Ie=s(85450);class Re{static update(t,e,s,i,n,r,a){Re.updateSharedOptions(t,e,s,n,r),Re.updateMaterialOptions(t,e),Re.updateEnvOptions(t,e,s,i),Re.updateLightingOptions(t,e,s,n,a)}static updateSharedOptions(t,e,s,i,n){t.shaderChunks=e.shaderChunks,t.pass=n,t.alphaTest=e.alphaTest>0,t.blendType=e.blendType,t.screenSpace=i&&0!==(i&F.yrP),t.skin=i&&0!==(i&F.Df4),t.useInstancing=i&&0!==(i&F.Q$0),t.useMorphPosition=i&&0!==(i&F.Ckn),t.useMorphNormal=i&&0!==(i&F.ov8),t.useMorphTextureBasedInt=i&&0!==(i&F.Yrs),t.hasTangents=i&&0!==(i&F.kav),t.nineSlicedMode=e.nineSlicedMode||F.hA3,e.useLighting&&s.clusteredLightingEnabled?(t.clusteredLightingEnabled=!0,t.clusteredLightingCookiesEnabled=s.lighting.cookiesEnabled,t.clusteredLightingShadowsEnabled=s.lighting.shadowsEnabled,t.clusteredLightingShadowType=s.lighting.shadowType,t.clusteredLightingAreaLightsEnabled=s.lighting.areaLightsEnabled):(t.clusteredLightingEnabled=!1,t.clusteredLightingCookiesEnabled=!1,t.clusteredLightingShadowsEnabled=!1,t.clusteredLightingAreaLightsEnabled=!1)}static updateMaterialOptions(t,e){t.separateAmbient=!1,t.pixelSnap=e.pixelSnap,t.ambientSH=e.ambientSH,t.twoSidedLighting=e.twoSidedLighting,t.occludeDirect=e.occludeDirect,t.occludeSpecular=e.occludeSpecular,t.occludeSpecularFloat=1!==e.occludeSpecularIntensity,t.useMsdf=!1,t.msdfTextAttribute=!1,t.alphaToCoverage=e.alphaToCoverage,t.opacityFadesSpecular=e.opacityFadesSpecular,t.opacityDither=e.opacityDither,t.cubeMapProjection=F.ipw,t.useSpecular=e.hasSpecular,t.useSpecularityFactor=e.hasSpecularityFactor,t.enableGGXSpecular=e.ggxSpecular,t.fresnelModel=e.fresnelModel,t.useRefraction=e.hasRefraction,t.useClearCoat=e.hasClearCoat,t.useSheen=e.hasSheen,t.useIridescence=e.hasIrridescence,t.useMetalness=e.hasMetalness,t.useDynamicRefraction=e.dynamicRefraction,t.dispersion=e.dispersion>0,t.vertexColors=!1,t.lightMapEnabled=e.hasLighting,t.dirLightMapEnabled=e.dirLightMap,t.useHeights=e.hasHeights,t.useNormals=e.hasNormals,t.useClearCoatNormals=e.hasClearCoatNormals,t.useAo=e.hasAo,t.diffuseMapEnabled=e.hasDiffuseMap}static updateEnvOptions(t,e,s,i){t.fog=e.useFog?i.fog:F.qXo,t.gamma=i.shaderOutputGamma,t.toneMap=e.useTonemap?i.toneMapping:F.YJk,e.useSkybox&&s.envAtlas&&s.skybox?(t.reflectionSource=F.cKd,t.reflectionEncoding=s.envAtlas.encoding,t.reflectionCubemapEncoding=s.skybox.encoding):e.useSkybox&&s.envAtlas?(t.reflectionSource=F.hQr,t.reflectionEncoding=s.envAtlas.encoding):e.useSkybox&&s.skybox?(t.reflectionSource=F.Gc8,t.reflectionEncoding=s.skybox.encoding):(t.reflectionSource=F.ZSD,t.reflectionEncoding=null),e.ambientSH?(t.ambientSource=F.$se,t.ambientEncoding=null):t.reflectionSource!==F.ZSD&&s.envAtlas?(t.ambientSource=F.hQF,t.ambientEncoding=s.envAtlas.encoding):(t.ambientSource=F.G2Z,t.ambientEncoding=null);const n=t.reflectionSource!==F.ZSD;t.skyboxIntensity=n,t.useCubeMapRotation=n&&s._skyboxRotationShaderInclude}static updateLightingOptions(t,e,s,i,n){if(t.lightMapWithoutAmbient=!1,e.useLighting){const e=[],r=i?i>>16:F.XjC;t.lightMaskDynamic=!!(r&F.XjC),t.lightMapWithoutAmbient=!1,n&&(Re.collectLights(F.kxh,n[F.kxh],e,r),s.clusteredLightingEnabled||(Re.collectLights(F.dGk,n[F.dGk],e,r),Re.collectLights(F.GyL,n[F.GyL],e,r))),t.lights=e}else t.lights=[];(0===t.lights.length&&!s.clusteredLightingEnabled||0!==(i&F.b2c))&&(t.noShadow=!0)}static collectLights(t,e,s,i){for(let n=0;n<e.length;n++){const t=e[n];t.enabled&&t.mask&i&&s.push(t)}}}const Fe=(t,e)=>{if(t.length!==e.length)return!1;for(let s=0;s<t.length;++s)if(t[s]!==e[s])return!1;return!0};class Oe{constructor(){this._mapXForms=null}updateMinRef(t,e,s,i,n,r){this._updateSharedOptions(t,e,s,i,n),this._updateMinOptions(t,s,n),this._updateUVOptions(t,s,i,!0)}updateRef(t,e,s,i,n,r,a){this._updateSharedOptions(t,e,i,n,r),this._updateEnvOptions(t,i,e,s),this._updateMaterialOptions(t,i,e),t.litOptions.hasTangents=n&&0!==(n&F.kav),this._updateLightOptions(t,e,i,n,a),this._updateUVOptions(t,i,n,!1,s)}_updateSharedOptions(t,e,s,i,n){t.forceUv1=s.forceUv1,s.userAttributes&&(t.litOptions.userAttributes=Object.fromEntries(s.userAttributes.entries())),t.litOptions.shaderChunks=s.shaderChunks,t.litOptions.pass=n,t.litOptions.alphaTest=s.alphaTest>0,t.litOptions.blendType=s.blendType,t.litOptions.screenSpace=i&&0!==(i&F.yrP),t.litOptions.skin=i&&0!==(i&F.Df4),t.litOptions.batch=i&&0!==(i&F.amd),t.litOptions.useInstancing=i&&0!==(i&F.Q$0),t.litOptions.useMorphPosition=i&&0!==(i&F.Ckn),t.litOptions.useMorphNormal=i&&0!==(i&F.ov8),t.litOptions.useMorphTextureBasedInt=i&&0!==(i&F.Yrs),t.litOptions.nineSlicedMode=s.nineSlicedMode||0,e.clusteredLightingEnabled&&s.useLighting?(t.litOptions.clusteredLightingEnabled=!0,t.litOptions.clusteredLightingCookiesEnabled=e.lighting.cookiesEnabled,t.litOptions.clusteredLightingShadowsEnabled=e.lighting.shadowsEnabled,t.litOptions.clusteredLightingShadowType=e.lighting.shadowType,t.litOptions.clusteredLightingAreaLightsEnabled=e.lighting.areaLightsEnabled):(t.litOptions.clusteredLightingEnabled=!1,t.litOptions.clusteredLightingCookiesEnabled=!1,t.litOptions.clusteredLightingShadowsEnabled=!1,t.litOptions.clusteredLightingAreaLightsEnabled=!1)}_updateUVOptions(t,e,s,i,n){let r=!1,a=!1,o=!1;s&&(r=0!==(s&F.JqS),a=0!==(s&F.Cno),o=0!==(s&F.L$7)),t.litOptions.vertexColors=!1,this._mapXForms=[];const l={};for(const h in De)this._updateTexOptions(t,e,h,r,a,o,i,l);this._mapXForms=null,t.litOptions.ssao=n?.ssaoEnabled,t.useAO=t.litOptions.ssao,t.litOptions.lightMapEnabled=t.lightMap,t.litOptions.dirLightMapEnabled=t.dirLightMap,t.litOptions.useHeights=t.heightMap,t.litOptions.useNormals=t.normalMap,t.litOptions.useClearCoatNormals=t.clearCoatNormalMap,t.litOptions.useAo=t.aoMap||t.aoVertexColor||t.litOptions.ssao,t.litOptions.diffuseMapEnabled=t.diffuseMap}_updateTexOptions(t,e,s,i,n,r,a,o){const l="opacity"===s;if(!a||l){const a=`${s}Map`,h=`${s}VertexColor`,c=`${s}VertexColorChannel`,d=`${a}Channel`,u=`${a}Transform`,f=`${a}Uv`,p=`${a}Identifier`;if("light"!==s&&(t[a]=!1,t[p]=void 0,t[d]="",t[u]=0,t[f]=0),t[h]=!1,t[c]="",l&&e.blendType===F.RjB&&0===e.alphaTest&&!e.alphaToCoverage&&e.opacityDither===F.gH7)return;if("height"!==s&&e[h]&&r&&(t[h]=e[h],t[c]=e[c],t.litOptions.vertexColors=!0),e[a]){let r=!0;if(0!==e[f]||i||(r=!1),1!==e[f]||n||(r=!1),r){const i=e[a].id;let n=o[i];void 0===n&&(o[i]=s,n=s),t[a]=!!e[a],t[p]=n,t[u]=this._getMapTransformID(e.getUniform(u),e[f]),t[d]=e[d],t[f]=e[f]}}}}_updateMinOptions(t,e,s){const i=s===F.pP7;t.litOptions.opacityShadowDither=i?e.opacityDither:e.opacityShadowDither,t.litOptions.linearDepth=i,t.litOptions.lights=[]}_updateMaterialOptions(t,e,s){const i=!!(e.useMetalness||e.specularMap||e.sphereMap||e.cubeMap||(n=e.specular,0!==n.r||0!==n.g||0!==n.b)||e.specularityFactor>0&&e.useMetalness||e.enableGGXSpecular||e.clearCoat>0);var n;const r=!e.useMetalness||e.useMetalnessSpecularColor,a=i&&(e.specularTint||!e.specularMap&&!e.specularVertexColor)&&(t=>1!==t.r||1!==t.g||1!==t.b)(e.specular),o=i&&e.useMetalnessSpecularColor&&(e.specularityFactorTint||e.specularityFactor<1&&!e.specularityFactorMap),l=t=>!!t&&(t.format===x.E_6||t.type===x.wmq),h=(t,e)=>Math.abs(t-e)<1e-4;t.specularTint=a,t.specularityFactorTint=o,t.metalnessTint=e.useMetalness&&e.metalness<1,t.glossTint=!0,t.diffuseEncoding=e.diffuseMap?.encoding,t.diffuseDetailEncoding=e.diffuseDetailMap?.encoding,t.emissiveEncoding=e.emissiveMap?.encoding,t.lightMapEncoding=e.lightMap?.encoding,t.packedNormal=l(e.normalMap),t.refractionTint=h(e.refraction,1),t.refractionIndexTint=h(e.refractionIndex,1/1.5),t.thicknessTint=e.useDynamicRefraction&&1!==e.thickness,t.specularEncoding=e.specularMap?.encoding,t.sheenEncoding=e.sheenMap?.encoding,t.aoMapUv=e.aoUvSet,t.aoDetail=!!e.aoDetailMap,t.diffuseDetail=!!e.diffuseDetailMap,t.normalDetail=!!e.normalMap,t.normalDetailPackedNormal=l(e.normalDetailMap),t.diffuseDetailMode=e.diffuseDetailMode,t.aoDetailMode=e.aoDetailMode,t.clearCoatGloss=!!e.clearCoatGloss,t.clearCoatPackedNormal=l(e.clearCoatNormalMap),t.iorTint=h(e.refractionIndex,1/1.5),s.forcePassThroughSpecular&&(t.specularEncoding="linear",t.sheenEncoding="linear"),t.iridescenceTint=1!==e.iridescence,t.glossInvert=e.glossInvert,t.sheenGlossInvert=e.sheenGlossInvert,t.clearCoatGlossInvert=e.clearCoatGlossInvert,t.useSpecularColor=r,t.litOptions.separateAmbient=!1,t.litOptions.pixelSnap=e.pixelSnap,t.litOptions.ambientSH=!!e.ambientSH,t.litOptions.twoSidedLighting=e.twoSidedLighting,t.litOptions.occludeSpecular=e.occludeSpecular,t.litOptions.occludeSpecularFloat=1!==e.occludeSpecularIntensity,t.litOptions.useMsdf=!!e.msdfMap,t.litOptions.msdfTextAttribute=!!e.msdfTextAttribute,t.litOptions.alphaToCoverage=e.alphaToCoverage,t.litOptions.opacityFadesSpecular=e.opacityFadesSpecular,t.litOptions.opacityDither=e.opacityDither,t.litOptions.cubeMapProjection=e.cubeMapProjection,t.litOptions.occludeDirect=e.occludeDirect,t.litOptions.useSpecular=i,t.litOptions.useSpecularityFactor=(o||!!e.specularityFactorMap)&&e.useMetalnessSpecularColor,t.litOptions.enableGGXSpecular=e.enableGGXSpecular,t.litOptions.fresnelModel=e.fresnelModel,t.litOptions.useRefraction=(e.refraction||!!e.refractionMap)&&(e.useDynamicRefraction||t.litOptions.reflectionSource!==F.ZSD),t.litOptions.useClearCoat=!!e.clearCoat,t.litOptions.useSheen=e.useSheen,t.litOptions.useIridescence=e.useIridescence&&0!==e.iridescence,t.litOptions.useMetalness=e.useMetalness,t.litOptions.useDynamicRefraction=e.useDynamicRefraction,t.litOptions.dispersion=e.dispersion>0,t.litOptions.shadowCatcher=e.shadowCatcher}_updateEnvOptions(t,e,s,i){t.litOptions.fog=e.useFog?i.fog:F.qXo,t.litOptions.gamma=i.shaderOutputGamma,t.litOptions.toneMap=e.useTonemap?i.toneMapping:F.YJk;let n=!1;if(e.envAtlas&&e.cubeMap?(t.litOptions.reflectionSource=F.cKd,t.litOptions.reflectionEncoding=e.envAtlas.encoding,t.litOptions.reflectionCubemapEncoding=e.cubeMap.encoding):e.envAtlas?(t.litOptions.reflectionSource=F.hQr,t.litOptions.reflectionEncoding=e.envAtlas.encoding):e.cubeMap?(t.litOptions.reflectionSource=F.Gc8,t.litOptions.reflectionEncoding=e.cubeMap.encoding):e.sphereMap?(t.litOptions.reflectionSource=F.q_c,t.litOptions.reflectionEncoding=e.sphereMap.encoding):e.useSkybox&&s.envAtlas&&s.skybox?(t.litOptions.reflectionSource=F.cKd,t.litOptions.reflectionEncoding=s.envAtlas.encoding,t.litOptions.reflectionCubemapEncoding=s.skybox.encoding,n=!0):e.useSkybox&&s.envAtlas?(t.litOptions.reflectionSource=F.hQr,t.litOptions.reflectionEncoding=s.envAtlas.encoding,n=!0):e.useSkybox&&s.skybox?(t.litOptions.reflectionSource=F.Gc8,t.litOptions.reflectionEncoding=s.skybox.encoding,n=!0):(t.litOptions.reflectionSource=F.ZSD,t.litOptions.reflectionEncoding=null),e.ambientSH)t.litOptions.ambientSource=F.$se,t.litOptions.ambientEncoding=null;else{const i=e.envAtlas||(e.useSkybox&&s.envAtlas?s.envAtlas:null);i&&!e.sphereMap?(t.litOptions.ambientSource=F.hQF,t.litOptions.ambientEncoding=i.encoding):(t.litOptions.ambientSource=F.G2Z,t.litOptions.ambientEncoding=null)}t.litOptions.skyboxIntensity=n,t.litOptions.useCubeMapRotation=n&&s._skyboxRotationShaderInclude}_updateLightOptions(t,e,s,i,n){if(t.lightMap=!1,t.lightMapChannel="",t.lightMapUv=0,t.lightMapTransform=0,t.litOptions.lightMapWithoutAmbient=!1,t.dirLightMap=!1,i&&(t.litOptions.noShadow=0!==(i&F.b2c),0!==(i&F.tTI)&&(t.lightMapEncoding=e.lightmapPixelFormat===x.Lxj?"rgbm":"linear",t.lightMap=!0,t.lightMapChannel="rgb",t.lightMapUv=1,t.lightMapTransform=0,t.litOptions.lightMapWithoutAmbient=!s.lightMap,0!==(i&F.COF)&&(t.dirLightMap=!0),0!==(i&F.tEI)&&(t.litOptions.lightMapWithoutAmbient=!1))),s.useLighting){const s=[],r=i?i>>16:F.XjC;t.litOptions.lightMaskDynamic=!!(r&F.XjC),n&&(Re.collectLights(F.kxh,n[F.kxh],s,r),e.clusteredLightingEnabled||(Re.collectLights(F.dGk,n[F.dGk],s,r),Re.collectLights(F.GyL,n[F.GyL],s,r))),t.litOptions.lights=s}else t.litOptions.lights=[];0!==t.litOptions.lights.length||e.clusteredLightingEnabled||(t.litOptions.noShadow=!0)}_getMapTransformID(t,e){if(!t)return 0;let s=this._mapXForms[e];s||(s=[],this._mapXForms[e]=s);for(let i=0;i<s.length;i++)if(Fe(s[i][0].value,t[0].value)&&Fe(s[i][1].value,t[1].value))return i+1;return s.push(t)}}function Ne(t,e=!0,s=!0){const i={};return i[`${t}Map`]="texture",i[`${t}MapTiling`]="vec2",i[`${t}MapOffset`]="vec2",i[`${t}MapRotation`]="number",i[`${t}MapUv`]="number",e&&(i[`${t}MapChannel`]="string",s&&(i[`${t}VertexColor`]="boolean",i[`${t}VertexColorChannel`]="string")),i}const ke={name:"string",chunks:"chunks",mappingFormat:"string",_engine:"boolean",ambient:"rgb",...Ne("ao"),...Ne("aoDetail",!0,!1),aoDetailMode:"string",aoIntensity:"number",diffuse:"rgb",...Ne("diffuse"),...Ne("diffuseDetail",!0,!1),diffuseDetailMode:"string",specular:"rgb",specularTint:"boolean",...Ne("specular"),occludeSpecular:"enum:occludeSpecular",specularityFactor:"number",specularityFactorTint:"boolean",...Ne("specularityFactor"),useMetalness:"boolean",metalness:"number",enableGGXSpecular:"boolean",metalnessTint:"boolean",...Ne("metalness"),useMetalnessSpecularColor:"boolean",anisotropyIntensity:"number",anisotropyRotation:"number",...Ne("anisotropy"),shininess:"number",gloss:"number",glossInvert:"boolean",...Ne("gloss"),clearCoat:"number",...Ne("clearCoat"),clearCoatGloss:"number",clearCoatGlossInvert:"boolean",...Ne("clearCoatGloss"),clearCoatBumpiness:"number",...Ne("clearCoatNormal",!1),useSheen:"boolean",sheen:"rgb",...Ne("sheen"),sheenGloss:"number",sheenGlossInvert:"boolean",...Ne("sheenGloss"),fresnelModel:"number",emissive:"rgb",...Ne("emissive"),emissiveIntensity:"number",...Ne("normal",!1),bumpiness:"number",...Ne("normalDetail",!1),normalDetailMapBumpiness:"number",...Ne("height",!0,!1),heightMapFactor:"number",alphaToCoverage:"boolean",alphaTest:"number",alphaFade:"number",opacity:"number",...Ne("opacity"),opacityFadesSpecular:"boolean",opacityDither:"string",opacityShadowDither:"string",reflectivity:"number",refraction:"number",refractionTint:"boolean",...Ne("refraction"),refractionIndex:"number",dispersion:"number",thickness:"number",thicknessTint:"boolean",...Ne("thickness"),attenuation:"rgb",attenuationDistance:"number",useDynamicRefraction:"boolean",sphereMap:"texture",cubeMap:"cubemap",cubeMapProjection:"number",cubeMapProjectionBox:"boundingbox",useIridescence:"boolean",iridescence:"number",iridescenceTint:"boolean",...Ne("iridescence"),iridescenceThicknessTint:"boolean",iridescenceThicknessMin:"number",iridescenceThicknessMax:"number",iridescenceRefractionIndex:"number",...Ne("iridescenceThickness"),...Ne("light"),depthTest:"boolean",depthFunc:"enum:depthFunc",depthWrite:"boolean",depthBias:"number",slopeDepthBias:"number",cull:"enum:cull",blendType:"enum:blendType",useFog:"boolean",useLighting:"boolean",useSkybox:"boolean",useTonemap:"boolean",envAtlas:"texture",twoSidedLighting:"boolean",shadowCatcher:"boolean"},Be=[];for(const Dg in ke){"texture"===ke[Dg]&&Be.push(Dg)}const Ue=[];for(const Dg in ke){"cubemap"===ke[Dg]&&Ue.push(Dg)}const ze={aoMapVertexColor:"boolean",diffuseMapTint:"boolean",diffuseMapVertexColor:"boolean",emissiveMapTint:"boolean",emissiveMapVertexColor:"boolean",glossMapVertexColor:"boolean",metalnessMapVertexColor:"boolean",opacityMapVertexColor:"boolean",specularAntialias:"boolean",specularMapTint:"boolean",specularMapVertexColor:"boolean",ambientTint:"boolean",emissiveTint:"boolean",diffuseTint:"boolean",sheenTint:"boolean",conserveEnergy:"boolean",useGamma:"boolean",useGammaTonemap:"boolean",sheenGlossTint:"boolean",anisotropy:"boolean"},Ve={},Ge={};let He=new Set;const We=new p.Q;class Xe extends Ie.i{static{this.TEXTURE_PARAMETERS=Be}static{this.CUBEMAP_PARAMETERS=Ue}constructor(){super(),this.userAttributes=new Map,this._assetReferences={},this._activeParams=new Set,this._activeLightingParams=new Set,this.shaderOptBuilder=new Oe,this.reset()}reset(){Object.keys(Ve).forEach(t=>{this[`_${t}`]=Ve[t].value()}),this._uniformCache={}}copy(t){return super.copy(t),Object.keys(Ve).forEach(e=>{this[e]=t[e]}),this.userAttributes=new Map(t.userAttributes),this}setAttribute(t,e){this.userAttributes.set(e,t)}_setParameter(t,e){He.add(t),this.setParameter(t,e)}_setParameters(t){t.forEach(t=>{this._setParameter(t.name,t.value)})}_processParameters(t){const e=this[t];e.forEach(t=>{He.has(t)||delete this.parameters[t]}),this[t]=He,He=e,He.clear()}_updateMap(t){const e=`${t}Map`,s=this[e];if(s){this._setParameter(`texture_${e}`,s);const t=`${e}Transform`,i=this.getUniform(t);i&&this._setParameters(i)}}_allocUniform(t,e){let s=this._uniformCache[t];return s||(s=e(),this._uniformCache[t]=s),s}getUniform(t,e,s){return Ge[t](this,e,s)}updateUniforms(t,e){const s=s=>this.getUniform(s,t,e);this._setParameter("material_ambient",s("ambient")),this._setParameter("material_diffuse",s("diffuse")),this._setParameter("material_aoIntensity",this.aoIntensity),this.useMetalness?((!this.metalnessMap||this.metalness<1)&&this._setParameter("material_metalness",this.metalness),this.specularMap&&!this.specularTint||this._setParameter("material_specular",s("specular")),this.specularityFactorMap&&!this.specularityFactorTint||this._setParameter("material_specularityFactor",this.specularityFactor),this._setParameter("material_sheen",s("sheen")),this._setParameter("material_sheenGloss",this.sheenGloss),this._setParameter("material_refractionIndex",this.refractionIndex)):this.specularMap&&!this.specularTint||this._setParameter("material_specular",s("specular")),this.enableGGXSpecular&&(this._setParameter("material_anisotropyIntensity",this.anisotropyIntensity),this._setParameter("material_anisotropyRotation",[Math.cos(this.anisotropyRotation*a.D.DEG_TO_RAD),Math.sin(this.anisotropyRotation*a.D.DEG_TO_RAD)])),this.clearCoat>0&&(this._setParameter("material_clearCoat",this.clearCoat),this._setParameter("material_clearCoatGloss",this.clearCoatGloss),this._setParameter("material_clearCoatBumpiness",this.clearCoatBumpiness)),this._setParameter("material_gloss",this.gloss),this._setParameter("material_emissive",s("emissive")),this._setParameter("material_emissiveIntensity",this.emissiveIntensity),this.refraction>0&&this._setParameter("material_refraction",this.refraction),this.dispersion>0&&this._setParameter("material_dispersion",this.dispersion),this.useDynamicRefraction&&(this._setParameter("material_thickness",this.thickness),this._setParameter("material_attenuation",s("attenuation")),this._setParameter("material_invAttenuationDistance",0===this.attenuationDistance?0:1/this.attenuationDistance)),this.useIridescence&&(this._setParameter("material_iridescence",this.iridescence),this._setParameter("material_iridescenceRefractionIndex",this.iridescenceRefractionIndex),this._setParameter("material_iridescenceThicknessMin",this.iridescenceThicknessMin),this._setParameter("material_iridescenceThicknessMax",this.iridescenceThicknessMax)),this._setParameter("material_opacity",this.opacity),!1===this.opacityFadesSpecular&&this._setParameter("material_alphaFade",this.alphaFade),this.occludeSpecular&&this._setParameter("material_occludeSpecularIntensity",this.occludeSpecularIntensity),this.cubeMapProjection===F.fJi&&this._setParameter(s("cubeMapProjectionBox"));for(const i in De)this._updateMap(i);this.ambientSH&&this._setParameter("ambientSH[0]",this.ambientSH),this.normalMap&&this._setParameter("material_bumpiness",this.bumpiness),this.normalMap&&this.normalDetailMap&&this._setParameter("material_normalDetailMapBumpiness",this.normalDetailMapBumpiness),this.heightMap&&this._setParameter("material_heightMapFactor",s("heightMapFactor")),this.envAtlas&&this.cubeMap?(this._setParameter("texture_envAtlas",this.envAtlas),this._setParameter("texture_cubeMap",this.cubeMap)):this.envAtlas?this._setParameter("texture_envAtlas",this.envAtlas):this.cubeMap?this._setParameter("texture_cubeMap",this.cubeMap):this.sphereMap&&this._setParameter("texture_sphereMap",this.sphereMap),this._setParameter("material_reflectivity",this.reflectivity),this._processParameters("_activeParams"),super.updateUniforms(t,e)}updateEnvUniforms(t,e){!(this.envAtlas||this.cubeMap||this.sphereMap)&&this.useSkybox&&(e.envAtlas&&e.skybox?(this._setParameter("texture_envAtlas",e.envAtlas),this._setParameter("texture_cubeMap",e.skybox)):e.envAtlas?this._setParameter("texture_envAtlas",e.envAtlas):e.skybox&&this._setParameter("texture_cubeMap",e.skybox)),this._processParameters("_activeLightingParams")}getShaderVariant(t){const{device:e,scene:s,pass:i,objDefs:n,sortedLights:r,cameraShaderParams:a}=t;this.updateEnvUniforms(e,s);const o=k.get(e).getByIndex(i),l=i===F.czD||i===F.pP7||o.isShadow;let h=l?Me.optionsContextMin:Me.optionsContext;h.defines=V.getCoreDefines(this,t),l?this.shaderOptBuilder.updateMinRef(h,s,this,n,i,r):this.shaderOptBuilder.updateRef(h,s,a,this,n,i,r),this.useFog||h.defines.set("FOG","NONE"),h.defines.set("TONEMAP",F.lh8[h.litOptions.toneMap]),this.onUpdateShader&&(h=this.onUpdateShader(h));const c=new E(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat),d=M(e);d.register("standard",Me);const u=d.getProgram("standard",h,c,this.userId);return this._dirtyShader=!1,u}destroy(){for(const t in this._assetReferences)this._assetReferences[t]._unbind();this._assetReferences=null,super.destroy()}}const $e=(t,e)=>{Ge[t]=e},qe=(t,e,s,i)=>{Object.defineProperty(Xe.prototype,t,{get:i||function(){return this[`_${t}`]},set:s}),Ve[t]={value:e}},je=t=>{const e=`_${t.name}`,s=t.dirtyShaderFunc||(()=>!0);qe(t.name,()=>t.defaultValue,function(t){const i=this[e];i!==t&&(this._dirtyShader=this._dirtyShader||s(i,t),this[e]=t)},t.getterFunc)},Ye=t=>{const e=`_${t.name}`,s=t.dirtyShaderFunc||(()=>!0);qe(t.name,()=>t.defaultValue.clone(),function(t){const i=this[e];i.equals(t)||(this._dirtyShader=this._dirtyShader||s(i,t),this[e]=i.copy(t))},t.getterFunc)},Ke=t=>t.defaultValue&&t.defaultValue.clone?Ye(t):je(t);function Ze(t,e="rgb",s=!0,i=0){De[t]=e.length||-1,Ke({name:`${t}Map`,defaultValue:null,dirtyShaderFunc:(t,e)=>!!t!=!!e||t&&(t.type!==e.type||t.format!==e.format)}),Ke({name:`${t}MapTiling`,defaultValue:new Jt.Z(1,1)}),Ke({name:`${t}MapOffset`,defaultValue:new Jt.Z(0,0)}),Ke({name:`${t}MapRotation`,defaultValue:0}),Ke({name:`${t}MapUv`,defaultValue:i}),e&&(Ke({name:`${t}MapChannel`,defaultValue:e}),s&&(Ke({name:`${t}VertexColor`,defaultValue:!1}),Ke({name:`${t}VertexColorChannel`,defaultValue:e})));const n=`${t}MapTiling`,r=`${t}MapOffset`,o=`${t}MapRotation`,l=`${t}MapTransform`;$e(l,(t,e,s)=>{const i=t[n],h=t[r],c=t[o];if(1===i.x&&1===i.y&&0===h.x&&0===h.y&&0===c)return null;const d=t._allocUniform(l,()=>[{name:`texture_${l}0`,value:new Float32Array(3)},{name:`texture_${l}1`,value:new Float32Array(3)}]),u=Math.cos(c*a.D.DEG_TO_RAD),f=Math.sin(c*a.D.DEG_TO_RAD),p=d[0].value;p[0]=u*i.x,p[1]=-f*i.y,p[2]=h.x;const m=d[1].value;return m[0]=f*i.x,m[1]=u*i.y,m[2]=1-i.y-h.y,d})}function Qe(t,e){Ke({name:t,defaultValue:e,getterFunc:function(){return this._dirtyShader=!0,this[`_${t}`]}}),$e(t,(e,s,i)=>{const n=e._allocUniform(t,()=>new Float32Array(3)),r=e[t];return We.linear(r),n[0]=We.r,n[1]=We.g,n[2]=We.b,n})}function Je(t,e,s){Ke({name:t,defaultValue:e,dirtyShaderFunc:(t,e)=>(0===t||1===t)!=(0===e||1===e)}),$e(t,s)}function ts(t,e){Ke({name:t,defaultValue:null,dirtyShaderFunc:(t,e)=>!!t==!!e}),$e(t,e)}function es(t,e){Ke({name:t,defaultValue:e})}!function(){Qe("ambient",new p.Q(1,1,1)),Qe("diffuse",new p.Q(1,1,1)),Qe("specular",new p.Q(0,0,0)),Qe("emissive",new p.Q(0,0,0)),Qe("sheen",new p.Q(1,1,1)),Qe("attenuation",new p.Q(1,1,1)),Je("emissiveIntensity",1),Je("specularityFactor",1),Je("sheenGloss",0),Je("gloss",.25),Je("aoIntensity",1),Je("heightMapFactor",1,(t,e,s)=>.025*t.heightMapFactor),Je("opacity",1),Je("alphaFade",1),Je("alphaTest",0),Je("bumpiness",1),Je("normalDetailMapBumpiness",1),Je("reflectivity",1),Je("occludeSpecularIntensity",1),Je("refraction",0),Je("refractionIndex",1/1.5),Je("dispersion",0),Je("thickness",0),Je("attenuationDistance",0),Je("metalness",1),Je("anisotropyIntensity",0),Je("anisotropyRotation",0),Je("clearCoat",0),Je("clearCoatGloss",1),Je("clearCoatBumpiness",1),Je("aoUvSet",0,null),Je("iridescence",0),Je("iridescenceRefractionIndex",1/1.5),Je("iridescenceThicknessMin",0),Je("iridescenceThicknessMax",0),ts("ambientSH"),ts("cubeMapProjectionBox",(t,e,s)=>{const i=t._allocUniform("cubeMapProjectionBox",()=>[{name:"envBoxMin",value:new Float32Array(3)},{name:"envBoxMax",value:new Float32Array(3)}]),n=t.cubeMapProjectionBox.getMin(),r=i[0].value;r[0]=n.x,r[1]=n.y,r[2]=n.z;const a=t.cubeMapProjectionBox.getMax(),o=i[1].value;return o[0]=a.x,o[1]=a.y,o[2]=a.z,i}),es("specularTint",!1),es("specularityFactorTint",!1),es("useMetalness",!1),es("useMetalnessSpecularColor",!1),es("useSheen",!1),es("enableGGXSpecular",!1),es("occludeDirect",!1),es("opacityFadesSpecular",!0),es("occludeSpecular",F.aPl),es("fresnelModel",F.SU_),es("useDynamicRefraction",!1),es("cubeMapProjection",F.ipw),es("useFog",!0),es("useLighting",!0),es("useTonemap",!0),es("useSkybox",!0),es("forceUv1",!1),es("pixelSnap",!1),es("twoSidedLighting",!1),es("nineSlicedMode",void 0),es("msdfTextAttribute",!1),es("useIridescence",!1),es("glossInvert",!1),es("sheenGlossInvert",!1),es("clearCoatGlossInvert",!1),es("opacityDither",F.gH7),es("opacityShadowDither",F.gH7),es("shadowCatcher",!1),Ze("diffuse"),Ze("specular"),Ze("emissive"),Ze("thickness","g"),Ze("specularityFactor","g"),Ze("normal",""),Ze("metalness","g"),Ze("gloss","g"),Ze("opacity","a"),Ze("refraction","g"),Ze("height","g",!1),Ze("ao","g"),Ze("light","rgb",!0,1),Ze("msdf",""),Ze("diffuseDetail","rgb",!1),Ze("normalDetail",""),Ze("aoDetail","g",!1),Ze("clearCoat","g"),Ze("clearCoatGloss","g"),Ze("clearCoatNormal",""),Ze("sheen","rgb"),Ze("sheenGloss","g"),Ze("iridescence","g"),Ze("iridescenceThickness","g"),Ze("anisotropy",""),es("diffuseDetailMode",F.QKi),es("aoDetailMode",F.QKi),ts("cubeMap"),ts("sphereMap"),ts("envAtlas");const t=[null,null,null,null,null,null];qe("prefilteredCubemaps",()=>t.slice(),function(t){const e=this._prefilteredCubemaps;t=t||[];let s=!1,i=!0;for(let n=0;n<6;++n){const r=t[n]||null;e[n]!==r&&(e[n]=r,s=!0),i=i&&!!e[n]}s&&(i?this.envAtlas=we.generatePrefilteredAtlas(e,{target:this.envAtlas}):this.envAtlas&&(this.envAtlas.destroy(),this.envAtlas=null),this._dirtyShader=!0)},function(){return this._prefilteredCubemaps})}();const ss=new et;class is{constructor(t,e,s){this.scene=t,this.light=e,this.store(),e.numCascades=1,this.scene.clusteredLightingEnabled&&!s.shadowsEnabled&&(e.castShadows=!1),e.type!==F.kxh&&(e._node.getWorldTransform(),e.getBoundingSphere(ss),this.lightBounds=new y,this.lightBounds.center.copy(ss.center),this.lightBounds.halfExtents.set(ss.radius,ss.radius,ss.radius))}store(){this.mask=this.light.mask,this.shadowUpdateMode=this.light.shadowUpdateMode,this.enabled=this.light.enabled,this.intensity=this.light.intensity,this.rotation=this.light._node.getLocalRotation().clone(),this.numCascades=this.light.numCascades,this.castShadows=this.light._castShadows}restore(){const t=this.light;t.mask=this.mask,t.shadowUpdateMode=this.shadowUpdateMode,t.enabled=this.enabled,t.intensity=this.intensity,t._node.setLocalRotation(this.rotation),t.numCascades=this.numCascades,t._castShadows=this.castShadows}startBake(){this.light.enabled=!0,this.light._destroyShadowMap(),this.light.beginFrame()}endBake(t){const e=this.light;e.enabled=!1,e.shadowMap&&(e.shadowMap.cached&&t.add(e,e.shadowMap),e.shadowMap=null)}}const ns=new Jt.Z;class rs extends is{constructor(t,e){super(t.scene,e,t.lightingParams)}get numVirtualLights(){return this.light.type===F.kxh?this.light.bakeNumSamples:1}prepareVirtualLight(t,e){const s=this.light;if(s._node.setLocalRotation(this.rotation),t>0){const i=s.bakeArea;ee.circlePointDeterministic(ns,t,e),ns.mulScalar(.5*i),s._node.rotateLocal(ns.x,0,ns.y)}s._node.getWorldTransform();const i=Math.pow(this.intensity,2.2);s.intensity=Math.pow(i/e,1/2.2)}}var as=s(71586);const os=new l.e;class ls extends is{constructor(t){const e=t.scene,s=new as.w("AmbientLight");s.addComponent("light",{type:"directional",affectDynamic:!0,affectLightmapped:!1,bake:!0,bakeNumSamples:e.ambientBakeNumSamples,castShadows:!0,normalOffsetBias:.05,shadowBias:.2,shadowDistance:1,shadowResolution:2048,shadowType:F.Q_7,color:p.Q.WHITE,intensity:1,bakeDir:!1}),super(e,s.light.light,t.lightingParams)}get numVirtualLights(){return this.light.bakeNumSamples}prepareVirtualLight(t,e){ee.spherePointDeterministic(os,t,e,0,this.scene.ambientBakeSpherePart),this.light._node.lookAt(os.mulScalar(-1)),this.light._node.rotateLocal(90,0,0);const s=2*Math.PI*this.scene.ambientBakeSpherePart,i=Math.pow(s,2.2);this.light.intensity=Math.pow(i/e,1/2.2)}}class hs{constructor(t,e=null){this.node=t,this.component=t.render||t.model,e=e||this.component.meshInstances,this.store(),this.meshInstances=e,this.bounds=null,this.renderTargets=[]}store(){this.castShadows=this.component.castShadows}restore(){this.component.castShadows=this.castShadows}}const cs={glslBilateralDeNoisePS:"\nfloat normpdf3(in vec3 v, in float sigma) {\n\treturn 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;\n}\nvec3 decodeRGBM(vec4 rgbm) {\n\tvec3 color = (8.0 * rgbm.a) * rgbm.rgb;\n\treturn color * color;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 encodeRGBM(vec3 color) {\n\tvec4 encoded;\n\tencoded.rgb = pow(color.rgb, vec3(0.5));\n\tencoded.rgb *= 1.0 / 8.0;\n\tencoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );\n\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\n\tencoded.rgb /= encoded.a;\n\treturn encoded;\n}\nvec3 decode(vec4 pixel) {\n\t#if HDR\n\t\treturn pixel.rgb;\n\t#else\n\t\treturn decodeRGBM(pixel);\n\t#endif\n}\nbool isUsed(vec4 pixel) {\n\t#if HDR\n\t\treturn any(greaterThan(pixel.rgb, vec3(0.0)));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nuniform vec2 sigmas;\nuniform float bZnorm;\nuniform float kernel[{MSIZE}];\nvoid main(void) {\n\t\n\tvec4 pixel = texture2DLod(source, vUv0, 0.0);\n\tif (!isUsed(pixel)) {\n\t\tgl_FragColor = pixel;\n\t\treturn ;\n\t}\n\tfloat sigma = sigmas.x;\n\tfloat bSigma = sigmas.y;\n\tvec3 pixelHdr = decode(pixel);\n\tvec3 accumulatedHdr = vec3(0.0);\n\tfloat accumulatedFactor = 0.000001;\n\tconst int kSize = ({MSIZE} - 1) / 2;\n\tfor (int i = -kSize; i <= kSize; ++i) {\n\t\tfor (int j = -kSize; j <= kSize; ++j) {\n\t\t\t\n\t\t\tvec2 coord = vUv0 + vec2(float(i), float(j)) * pixelOffset;\n\t\t\tvec4 pix = texture2DLod(source, coord, 0.0);\n\t\t\tif (isUsed(pix)) {\n\t\t\t\tvec3 hdr = decode(pix);\n\t\t\t\tfloat factor = kernel[kSize + j] * kernel[kSize + i];\n\t\t\t\tfactor *= normpdf3(hdr - pixelHdr, bSigma) * bZnorm;\n\t\t\t\taccumulatedHdr += factor * hdr;\n\t\t\t\taccumulatedFactor += factor;\n\t\t\t}\n\t\t}\n\t}\n\tvec3 finalHDR = accumulatedHdr / accumulatedFactor;\n\t#if HDR\n\t\tgl_FragColor = vec4(finalHDR, 1.0);\n\t#else\n\t\tgl_FragColor = encodeRGBM(finalHDR);\n\t#endif\n}\n",glslDilatePS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nbool isUsed(vec4 pixel) {\n\t#if HDR\n\t\treturn any(greaterThan(pixel.rgb, vec3(0.0)));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvoid main(void) {\n\tvec4 c = texture2DLod(source, vUv0, 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 - pixelOffset, 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, -pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, 0), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, 0), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + pixelOffset, 0.0);\n\tgl_FragColor = c;\n}\n"},ds={wgslBilateralDeNoisePS:"\nfn normpdf3(v: vec3f, sigma: f32) -> f32 {\n\treturn 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;\n}\nfn decodeRGBM(rgbm: vec4f) -> vec3f {\n\tlet color = (8.0 * rgbm.a) * rgbm.rgb;\n\treturn color * color;\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn encodeRGBM(color: vec3f) -> vec4f {\n\tvar encoded: vec4f;\n\tlet rgb_processed = pow(color.rgb, vec3f(0.5)) * (1.0 / 8.0);\n\tencoded = vec4f(rgb_processed, 0.0);\n\tlet max_g_b = max( encoded.g, max( encoded.b, 1.0 / 255.0 ) );\n\tlet max_rgb = max( encoded.r, max_g_b );\n\tencoded.a = clamp(max_rgb, 0.0, 1.0);\n\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\n\tencoded = vec4f(encoded.rgb / encoded.a, encoded.a);\n\treturn encoded;\n}\nfn decode(pixel: vec4f) -> vec3f {\n\t#if HDR\n\t\treturn pixel.rgb;\n\t#else\n\t\treturn decodeRGBM(pixel);\n\t#endif\n}\nfn isUsed(pixel: vec4f) -> bool {\n\t#if HDR\n\t\treturn any(pixel.rgb > vec3f(0.0));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\nuniform kernel: array<f32, {MSIZE}>;\nuniform pixelOffset: vec2f;\nuniform sigmas: vec2f;\nuniform bZnorm: f32;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet pixel = textureSampleLevel(source, sourceSampler, input.vUv0, 0.0);\n\tif (!isUsed(pixel)) {\n\t\toutput.color = pixel;\n\t\treturn output;\n\t}\n\tlet sigma = uniform.sigmas.x;\n\tlet bSigma = uniform.sigmas.y;\n\tlet pixelHdr = decode(pixel);\n\tvar accumulatedHdr = vec3f(0.0);\n\tvar accumulatedFactor = 0.000001;\n\tconst kSize = ({MSIZE} - 1) / 2;\n\tfor (var i: i32 = -kSize; i <= kSize; i = i + 1) {\n\t\tfor (var j: i32 = -kSize; j <= kSize; j = j + 1) {\n\t\t\tlet coord = input.vUv0 + vec2f(f32(i), f32(j)) * uniform.pixelOffset;\n\t\t\tlet pix = textureSampleLevel(source, sourceSampler, coord, 0.0);\n\t\t\tif (isUsed(pix)) {\n\t\t\t\tlet hdr = decode(pix);\n\t\t\t\tvar factor = uniform.kernel[u32(kSize + j)].element * uniform.kernel[u32(kSize + i)].element;\n\t\t\t\tfactor = factor * normpdf3(hdr - pixelHdr, bSigma) * uniform.bZnorm;\n\t\t\t\taccumulatedHdr = accumulatedHdr + factor * hdr;\n\t\t\t\taccumulatedFactor = accumulatedFactor + factor;\n\t\t\t}\n\t\t}\n\t}\n\tlet finalHDR = accumulatedHdr / accumulatedFactor;\n\t#if HDR\n\t\toutput.color = vec4f(finalHDR, 1.0);\n\t#else\n\t\toutput.color = encodeRGBM(finalHDR);\n\t#endif\n\treturn output;\n}\n",wgslDilatePS:"\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\nuniform pixelOffset: vec2f;\nfn isUsed(pixel: vec4f) -> bool {\n\t#ifdef HDR\n\t\treturn any(pixel.rgb > vec3f(0.0));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar c: vec4f = textureSampleLevel(source, sourceSampler, input.vUv0, 0.0);\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 - uniform.pixelOffset, 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(0.0, -uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(uniform.pixelOffset.x, -uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(-uniform.pixelOffset.x, 0.0), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(uniform.pixelOffset.x, 0.0), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(-uniform.pixelOffset.x, uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(0.0, uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + uniform.pixelOffset, 0.0), c, isUsed(c));\n\tvar output: FragmentOutput;\n\toutput.color = c;\n\treturn output;\n}\n"};class us{constructor(t){this.shaderDilate=[],this.shaderDenoise=[],this.device=t,B.W.get(this.device,x.BzK).add(cs),B.W.get(this.device,x.g80).add(ds),this.constantTexSource=t.scope.resolve("source"),this.constantPixelOffset=t.scope.resolve("pixelOffset"),this.pixelOffset=new Float32Array(2),this.sigmas=null,this.constantSigmas=null,this.kernel=null}setSourceTexture(t){this.constantTexSource.setValue(t)}prepare(t,e){this.pixelOffset[0]=1/t,this.pixelOffset[1]=1/e,this.constantPixelOffset.setValue(this.pixelOffset)}prepareDenoise(t,e,s){const i=s?0:1;if(!this.shaderDenoise[i]){const t=new Map;t.set("{MSIZE}",15),s&&t.set("HDR",""),this.shaderDenoise[i]=V.createShader(this.device,{uniqueName:"lmBilateralDeNoise-"+(s?"hdr":"rgbm"),attributes:{vertex_position:x.JYe},vertexGLSL:B.W.get(this.device,x.BzK).get("fullscreenQuadVS"),vertexWGSL:B.W.get(this.device,x.g80).get("fullscreenQuadVS"),fragmentGLSL:B.W.get(this.device,x.BzK).get("glslBilateralDeNoisePS"),fragmentWGSL:B.W.get(this.device,x.g80).get("wgslBilateralDeNoisePS"),fragmentDefines:t}),this.sigmas=new Float32Array(2),this.constantSigmas=this.device.scope.resolve("sigmas"),this.constantKernel=this.device.scope.resolve("kernel[0]"),this.bZnorm=this.device.scope.resolve("bZnorm")}this.sigmas[0]=t,this.sigmas[1]=e,this.constantSigmas.setValue(this.sigmas),this.evaluateDenoiseUniforms(t,e)}getDenoise(t){const e=t?0:1;return this.shaderDenoise[e]}getDilate(t,e){const s=e?0:1;if(!this.shaderDilate[s]){const i=e?"#define HDR\n":"";this.shaderDilate[s]=V.createShader(t,{uniqueName:"lmDilate-"+(e?"hdr":"rgbm"),attributes:{vertex_position:x.JYe},vertexGLSL:B.W.get(this.device,x.BzK).get("fullscreenQuadVS"),vertexWGSL:B.W.get(this.device,x.g80).get("fullscreenQuadVS"),fragmentGLSL:i+B.W.get(this.device,x.BzK).get("glslDilatePS"),fragmentWGSL:i+B.W.get(this.device,x.g80).get("wgslDilatePS")})}return this.shaderDilate[s]}evaluateDenoiseUniforms(t,e){function s(t,e){return.39894*Math.exp(-.5*t*t/(e*e))/e}this.kernel=this.kernel||new Float32Array(15);const i=this.kernel,n=Math.floor(7);for(let a=0;a<=n;++a){const e=s(a,t);i[n+a]=e,i[n-a]=e}this.constantKernel.setValue(this.kernel);const r=1/s(0,e);this.bZnorm.setValue(r)}}class fs extends j.A{constructor(t,e,s,i,n,r){super(t),this.viewBindGroups=[],this.renderer=e,this.camera=s,this.worldClusters=i,this.receivers=n,this.lightArray=r}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}execute(){this.device;const{renderer:t,camera:e,receivers:s,renderTarget:i,worldClusters:n,lightArray:r}=this;t.renderForwardLayer(e,i,null,void 0,F.OPe,this.viewBindGroups,{meshInstances:s,splitLights:r,lightClusters:n})}}const ps=new l.e;class ms{constructor(t,e,s,i,n){this.device=t,this.root=e,this.scene=s,this.renderer=i,this.assets=n,this.shadowMapCache=i.shadowMapCache,this._tempSet=new Set,this._initCalled=!1,this.passMaterials=[],this.ambientAOMaterial=null,this.fog="",this.ambientLight=new p.Q,this.renderTargets=new Map,this.stats={renderPasses:0,lightmapCount:0,totalRenderTime:0,forwardTime:0,fboTime:0,shadowMapTime:0,compileTime:0,shadersLinked:0}}destroy(){nt.decRef(this.blackTex),this.blackTex=null,nt.destroy(),this.device=null,this.root=null,this.scene=null,this.renderer=null,this.assets=null,this.camera?.destroy(),this.camera=null}initBake(t){if(this.bakeHDR=this.scene.lightmapPixelFormat!==x.Lxj,!this._initCalled){this._initCalled=!0,this.lightmapFilters=new us(t),this.constantBakeDir=t.scope.resolve("bakeDir"),this.materials=[],this.blackTex=new Q.g(this.device,{width:4,height:4,format:x.Lxj,type:x.fW0,name:"lightmapBlack"}),nt.incRef(this.blackTex);const e=new It;e.clearColor.set(0,0,0,0),e.clearColorBuffer=!0,e.clearDepthBuffer=!1,e.clearStencilBuffer=!1,e.frustumCulling=!1,e.projection=F.RDY,e.aspectRatio=1,e.node=new Rt.t,this.camera=e,this.camera.shaderParams.gammaCorrection=F.hcE,this.camera.shaderParams.toneMapping=F.llM}if(this.scene.clusteredLightingEnabled){const e=new mt(t.supportsAreaLights,t.maxTextureSize,()=>{});this.lightingParams=e;const s=this.scene.lighting;e.shadowsEnabled=s.shadowsEnabled,e.shadowAtlasResolution=s.shadowAtlasResolution,e.cookiesEnabled=s.cookiesEnabled,e.cookieAtlasResolution=s.cookieAtlasResolution,e.areaLightsEnabled=s.areaLightsEnabled,e.cells=new l.e(3,3,3),e.maxLightsPerCell=4,this.worldClusters=new Qt(t),this.worldClusters.name="ClusterLightmapper"}}finishBake(t){function e(t){nt.decRef(t.colorBuffer),t.destroy()}this.materials=[],this.renderTargets.forEach(t=>{e(t)}),this.renderTargets.clear(),t.forEach(t=>{t.renderTargets.forEach(t=>{e(t)}),t.renderTargets.length=0}),this.ambientAOMaterial=null,this.worldClusters&&(this.worldClusters.destroy(),this.worldClusters=null)}createMaterialForPass(t,e,s){const i=new Xe;return i.name=`lmMaterial-pass:${e}-ambient:${s}`,i.setDefine("UV1LAYOUT",""),i.setDefine("LIT_LIGHTMAP_BAKING",""),0===e?(i.setDefine("LIT_LIGHTMAP_BAKING_COLOR",""),s?i.setDefine("LIT_LIGHTMAP_BAKING_ADD_AMBIENT",""):i.ambient=new p.Q(0,0,0),this.bakeHDR||i.setDefine("LIGHTMAP_RGBM",""),i.lightMap=this.blackTex):(i.setDefine("LIT_LIGHTMAP_BAKING_DIR",""),i.setDefine("STD_LIGHTMAP_DIR","")),i.cull=x.pLF,i.forceUv1=!0,i.update(),i}createMaterials(t,e,s){for(let i=0;i<s;i++)this.passMaterials[i]||(this.passMaterials[i]=this.createMaterialForPass(e,i,!1));this.ambientAOMaterial||(this.ambientAOMaterial=this.createMaterialForPass(e,0,!0),this.ambientAOMaterial.onUpdateShader=function(t){return t.litOptions.lightMapWithoutAmbient=!0,t.litOptions.separateAmbient=!0,t})}createTexture(t,e){return new Q.g(this.device,{width:t,height:t,format:this.scene.lightmapPixelFormat,mipmaps:!1,type:this.bakeHDR?x.s64:x.fW0,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6,name:e})}collectModels(t,e,s){if(!t.enabled)return;let i;if(t.model?.model&&t.model?.enabled&&(s&&s.push(new hs(t)),t.model.lightmapped&&e&&(i=t.model.model.meshInstances)),t.render?.enabled&&(s&&s.push(new hs(t)),t.render.lightmapped&&e&&(i=t.render.meshInstances)),i){let s=!0;for(let t=0;t<i.length;t++)if(!i[t].mesh.vertexBuffer.format.hasUv1){s=!1;break}if(s){const s=[];for(let n=0;n<i.length;n++){const r=i[n].mesh;this._tempSet.has(r)?e.push(new hs(t,[i[n]])):s.push(i[n]),this._tempSet.add(r)}this._tempSet.clear(),s.length>0&&e.push(new hs(t,s))}}for(let n=0;n<t._children.length;n++)this.collectModels(t._children[n],e,s)}prepareShadowCasters(t){const e=[];for(let s=0;s<t.length;s++){const i=t[s].component;if(i.castShadows=i.castShadowsLightmap,i.castShadowsLightmap){const i=t[s].meshInstances;for(let t=0;t<i.length;t++)i[t].visibleThisFrame=!0,e.push(i[t])}}return e}updateTransforms(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;for(let t=0;t<s.length;t++)s[t].node.getWorldTransform()}}calculateLightmapSize(t){let e;const s=this.scene.lightmapSizeMultiplier||16,i=ps;let n,r;t.model?(r=t.model.lightmapSizeMultiplier,t.model.asset?(e=this.assets.get(t.model.asset).data,e.area&&(n=e.area)):t.model._area&&(e=t.model,e._area&&(n=e._area))):t.render&&(r=t.render.lightmapSizeMultiplier,"asset"!==t.render.type&&t.render._area&&(e=t.render,e._area&&(n=e._area)));const o={x:1,y:1,z:1,uv:1};n&&(o.x=n.x,o.y=n.y,o.z=n.z,o.uv=n.uv);const l=r||1;o.x*=l,o.y*=l,o.z*=l;const h=t.render||t.model,c=this.computeNodeBounds(h.meshInstances);i.copy(c.halfExtents);let d=o.x*i.y*i.z+o.y*i.x*i.z+o.z*i.x*i.y;d/=o.uv,d=Math.sqrt(d);return Math.min(a.D.nextPowerOfTwo(d*s),this.scene.lightmapMaxResolution||2048)}setLightmapping(t,e,s,i){for(let n=0;n<t.length;n++){const r=t[n],a=r.meshInstances;for(let t=0;t<a.length;t++){const n=a[t];if(n.setLightmapped(e),e){i&&(n._shaderDefs|=i),n.mask=F.beI;for(let t=0;t<s;t++){const e=r.renderTargets[t].colorBuffer;e.minFilter=x.DrA,e.magFilter=x.DrA,n.setRealtimeLightmap(pt.lightmapParamNames[t],e)}}}}}bake(t,e=F.N9O){const s=this.device,i=(0,f.t)();this.scene._updateSkyMesh(),this.stats.renderPasses=0,this.stats.shadowMapTime=0,this.stats.forwardTime=0;const n=s._shaderStats.linked,r=s._renderTargetCreationTime,a=s._shaderStats.compileTime,o=[],l=[];if(t){for(let e=0;e<t.length;e++)this.collectModels(t[e],o,null);this.collectModels(this.root,null,l)}else this.collectModels(this.root,o,l);if(o.length>0){this.renderer.shadowRenderer.frameUpdate();const t=e===F.N9O?2:1;this.setLightmapping(o,!1,t),this.initBake(s),this.bakeInternal(t,o,l);let i=F.tTI;e===F.N9O&&(i|=F.COF),this.scene.ambientBake&&(i|=F.tEI),this.setLightmapping(o,!0,t,i),this.finishBake(o)}const h=(0,f.t)();this.stats.totalRenderTime=h-i,this.stats.shadersLinked=s._shaderStats.linked-n,this.stats.compileTime=s._shaderStats.compileTime-a,this.stats.fboTime=s._renderTargetCreationTime-r,this.stats.lightmapCount=o.length}allocateTextures(t,e){for(let s=0;s<t.length;s++){const i=t[s],n=this.calculateLightmapSize(i.node);for(let t=0;t<e;t++){const e=this.createTexture(n,`lightmapper_lightmap_${s}`);nt.incRef(e),i.renderTargets[t]=new T.O({colorBuffer:e,depth:!1})}if(!this.renderTargets.has(n)){const t=this.createTexture(n,`lightmapper_temp_lightmap_${n}`);nt.incRef(t),this.renderTargets.set(n,new T.O({colorBuffer:t,depth:!1}))}}}prepareLightsToBake(t,e){if(this.scene.ambientBake){const t=new ls(this);e.push(t)}const s=this.renderer.lights;for(let i=0;i<s.length;i++){const n=s[i],r=new rs(this,n);t.push(r),n.enabled&&0!==(n.mask&F.XEj)&&(n.mask=F.XEj|F.beI|F.XjC,n.shadowUpdateMode=n.type===F.kxh?F.M5l:F.e3T,e.push(r))}e.sort()}restoreLights(t){for(let e=0;e<t.length;e++)t[e].restore()}setupScene(){this.ambientLight.copy(this.scene.ambientLight),this.scene.ambientBake||this.scene.ambientLight.set(0,0,0),this.renderer.setSceneConstants(),this.device.scope.resolve("ambientBakeOcclusionContrast").setValue(this.scene.ambientBakeOcclusionContrast),this.device.scope.resolve("ambientBakeOcclusionBrightness").setValue(this.scene.ambientBakeOcclusionBrightness)}restoreScene(){this.scene.ambientLight.copy(this.ambientLight)}computeNodeBounds(t){const e=new y;if(t.length>0){e.copy(t[0].aabb);for(let s=1;s<t.length;s++)e.add(t[s].aabb)}return e}computeNodesBounds(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;t[e].bounds=this.computeNodeBounds(s)}}computeBounds(t){const e=new y;for(let s=0;s<t.length;s++){e.copy(t[0].aabb);for(let s=1;s<t.length;s++)e.add(t[s].aabb)}return e}backupMaterials(t){for(let e=0;e<t.length;e++)this.materials[e]=t[e].material}restoreMaterials(t){for(let e=0;e<t.length;e++)t[e].material=this.materials[e]}lightCameraPrepare(t,e){const s=e.light;let i;if(s.type===F.GyL){i=s.getRenderData(null,0).shadowCamera,i._node.setPosition(s._node.getPosition()),i._node.setRotation(s._node.getRotation()),i._node.rotateLocal(-90,0,0),i.projection=F.$JG,i.nearClip=s.attenuationEnd/1e3,i.farClip=s.attenuationEnd,i.aspectRatio=1,i.fov=2*s._outerConeAngle,this.renderer.updateCameraFrustum(i)}return i}lightCameraPrepareAndCull(t,e,s,i){const n=t.light;let r=!0;if(n.type===F.kxh){ps.copy(i.center),ps.y+=i.halfExtents.y,this.camera.node.setPosition(ps),this.camera.node.setEulerAngles(-90,0,0),this.camera.nearClip=0,this.camera.farClip=2*i.halfExtents.y;const t=Math.max(i.halfExtents.x,i.halfExtents.z);this.camera.orthoHeight=t}else t.lightBounds.intersects(e.bounds)||(r=!1);if(n.type===F.GyL){let t=!1;const i=e.meshInstances;for(let e=0;e<i.length;e++)if(i[e]._isVisible(s)){t=!0;break}t||(r=!1)}return r}setupLightArray(t,e){t[F.kxh].length=0,t[F.dGk].length=0,t[F.GyL].length=0,t[e.type][0]=e,e.visibleThisFrame=!0}renderShadowMap(t,e,s,i){const n=i.light,r=this.scene.clusteredLightingEnabled,a=n.castShadows&&(!r||this.scene.lighting.shadowsEnabled);if(!e&&a)if(n.shadowMap||r||(n.shadowMap=this.shadowMapCache.get(this.device,n)),n.type===F.kxh){this.renderer._shadowRendererDirectional.cull(n,t,this.camera,s);const e=this.renderer._shadowRendererDirectional.getLightRenderPass(n,this.camera);e?.render()}else{if(this.device.isWebGPU)return!0;this.renderer._shadowRendererLocal.cull(n,t,s);const e=!1;this.renderer.shadowRenderer.render(n,this.camera,e)}return!0}postprocessTextures(t,e,s){const i=this.lightmapFilters.getDilate(t,this.bakeHDR);let n;const r=this.scene.lightmapFilterEnabled;r&&(this.lightmapFilters.prepareDenoise(this.scene.lightmapFilterRange,this.scene.lightmapFilterSmoothness,this.bakeHDR),n=this.lightmapFilters.getDenoise(this.bakeHDR)),t.setBlendState(re.t.NOBLEND),t.setDepthState(q.H.NODEPTH),t.setStencilState(null,null);for(let a=0;a<e.length;a++){const o=e[a];for(let e=0;e<s;e++){const s=o.renderTargets[e],a=s.colorBuffer,l=this.renderTargets.get(a.width),h=l.colorBuffer;this.lightmapFilters.prepare(a.width,a.height);for(let o=0;o<1;o++){this.lightmapFilters.setSourceTexture(a);Z(t,l,r&&0===e&&0===o?n:i),this.lightmapFilters.setSourceTexture(h),Z(t,s,i)}}}}bakeInternal(t,e,s){const i=this.scene,n=i.layers,r=this.device,a=i.clusteredLightingEnabled;this.createMaterials(r,i,t),this.setupScene(),n._update(),this.computeNodesBounds(e),this.allocateTextures(e,t),this.renderer.collectLights(n);const o=[],l=[];this.prepareLightsToBake(o,l),this.updateTransforms(s);const h=this.prepareShadowCasters(s);this.renderer.updateCpuSkinMatrices(h),this.renderer.gpuUpdate(h);const c=this.computeBounds(h);let d,u,f,p;for(d=0;d<e.length;d++){for(f=e[d].meshInstances,u=0;u<f.length;u++)p=f[u],p.setLightmapped(!1),p.mask=F.XEj,p.setRealtimeLightmap(pt.lightmapParamNames[0],this.blackTex),p.setRealtimeLightmap(pt.lightmapParamNames[1],this.blackTex)}for(u=0;u<l.length;u++)l[u].light.enabled=!1;const m=[[],[],[]];let _,g,v=!1;for(d=0;d<l.length;d++){const s=l[d],o=s instanceof ls,S=s.light.type===F.kxh;let y=s.numVirtualLights;t>1&&y>1&&s.light.bakeDir&&(y=1);for(let l=0;l<y;l++){y>1&&s.prepareVirtualLight(l,y),s.startBake();let d=!1;const x=this.lightCameraPrepare(r,s);for(g=0;g<e.length;g++){const T=e[g];f=T.meshInstances;if(!this.lightCameraPrepareAndCull(s,T,x,c))continue;this.setupLightArray(m,s.light);const w=S?[]:[s.light];for(a&&this.renderer.lightTextureAtlas.update(w,this.lightingParams),d=this.renderShadowMap(n,d,h,s),a&&this.worldClusters.update(w,this.lightingParams),this.backupMaterials(f),_=0;_<t&&!(_>0&&l>0)&&!(o&&_>0);_++){const t=T.renderTargets[_],e=T.renderTargets[_].colorBuffer.width,n=this.renderTargets.get(e),h=n.colorBuffer;0===_?v=i.updateShaders:v&&(i.updateShaders=!0);let c=this.passMaterials[_];if(o){l+1===y&&0===_&&(c=this.ambientAOMaterial)}for(u=0;u<f.length;u++)f[u].material=c;if(this.renderer.updateShaders(f),1===_&&this.constantBakeDir.setValue(s.light.bakeDir?1:0),r.isWebGPU){const t=new fs(r,this.renderer,this.camera,a?this.worldClusters:null,f,m);t.init(n),t.render(),t.destroy()}else this.renderer.setCamera(this.camera,n,!0),a&&this.worldClusters.activate(),this.renderer._forwardTime=0,this.renderer._shadowMapTime=0,this.renderer.renderForward(this.camera,n,f,m,F.OPe),r.updateEnd();for(T.renderTargets[_]=n,this.renderTargets.set(e,t),u=0;u<f.length;u++)p=f[u],p.setRealtimeLightmap(pt.lightmapParamNames[_],h),p._shaderDefs|=F.tTI}this.restoreMaterials(f)}s.endBake(this.shadowMapCache)}}for(this.postprocessTextures(r,e,t),g=0;g<s.length;g++)s[g].restore();this.restoreLights(o),this.restoreScene(),a||this.shadowMapCache.clear()}}var _s=s(94441),gs=s(64919);let vs=0;class Ss{constructor(t,e,s,i=x.y1K,n,r){this.device=t,this.format=e,this.numIndices=s,this.usage=i,this.id=vs++,this.impl=t.createIndexBufferImpl(this,r);const a=x.lBd[e];this.bytesPerIndex=a,this.numBytes=this.numIndices*a,n?this.setData(n):this.storage=new ArrayBuffer(this.numBytes),this.adjustVramSizeTracking(t._vram,this.numBytes),this.device.buffers.push(this)}destroy(){const t=this.device,e=t.buffers.indexOf(this);-1!==e&&t.buffers.splice(e,1),this.device.indexBuffer===this&&(this.device.indexBuffer=null),this.impl.initialized&&(this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this.storage.byteLength))}adjustVramSizeTracking(t,e){t.ib+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getNumIndices(){return this.numIndices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){return t.byteLength===this.numBytes&&(this.storage=t,this.unlock(),!0)}_lockTypedArray(){const t=this.lock();return this.format===x.gpl?new Uint32Array(t):this.format===x.c02?new Uint16Array(t):new Uint8Array(t)}writeData(t,e){const s=this._lockTypedArray();if(t.length>e)if(ArrayBuffer.isView(t))t=t.subarray(0,e),s.set(t);else for(let i=0;i<e;i++)s[i]=t[i];else s.set(t);this.unlock()}readData(t){const e=this._lockTypedArray(),s=this.numIndices;if(ArrayBuffer.isView(t))t.set(e);else{t.length=0;for(let i=0;i<s;i++)t[i]=e[i]}return s}}var ys=s(84636),xs=s(27393);function Ts(t){this.array[this.index]=t}function ws(t,e){this.array[this.index]=t,this.array[this.index+1]=e}function bs(t,e,s){this.array[this.index]=t,this.array[this.index+1]=e,this.array[this.index+2]=s}function Es(t,e,s,i){this.array[this.index]=t,this.array[this.index+1]=e,this.array[this.index+2]=s,this.array[this.index+3]=i}function As(t,e,s){this.array[t]=e[s]}function Cs(t,e,s){this.array[t]=e[s],this.array[t+1]=e[s+1]}function Ps(t,e,s){this.array[t]=e[s],this.array[t+1]=e[s+1],this.array[t+2]=e[s+2]}function Ds(t,e,s){this.array[t]=e[s],this.array[t+1]=e[s+1],this.array[t+2]=e[s+2],this.array[t+3]=e[s+3]}function Ls(t,e,s){e[s]=this.array[t]}function Ms(t,e,s){e[s]=this.array[t],e[s+1]=this.array[t+1]}function Is(t,e,s){e[s]=this.array[t],e[s+1]=this.array[t+1],e[s+2]=this.array[t+2]}function Rs(t,e,s){e[s]=this.array[t],e[s+1]=this.array[t+1],e[s+2]=this.array[t+2],e[s+3]=this.array[t+3]}class Fs{constructor(t,e,s){switch(this.index=0,this.numComponents=e.numComponents,s.interleaved?this.array=new x.B8J[e.dataType](t,e.offset):this.array=new x.B8J[e.dataType](t,e.offset,s.vertexCount*e.numComponents),this.stride=e.stride/this.array.constructor.BYTES_PER_ELEMENT,e.numComponents){case 1:this.set=Ts,this.getToArray=Ls,this.setFromArray=As;break;case 2:this.set=ws,this.getToArray=Ms,this.setFromArray=Cs;break;case 3:this.set=bs,this.getToArray=Is,this.setFromArray=Ps;break;case 4:this.set=Es,this.getToArray=Rs,this.setFromArray=Ds}}get(t){return this.array[this.index+t]}set(t,e,s,i){}getToArray(t,e,s){}setFromArray(t,e,s){}}class Os{constructor(t){this.vertexBuffer=t,this.vertexFormatSize=t.getFormat().size,this.buffer=this.vertexBuffer.lock(),this.accessors=[],this.element={};const e=this.vertexBuffer.getFormat();for(let s=0;s<e.elements.length;s++){const t=e.elements[s];this.accessors[s]=new Fs(this.buffer,t,e),this.element[t.name]=this.accessors[s]}}next(t=1){let e=0;const s=this.accessors,i=this.accessors.length;for(;e<i;){const i=s[e++];i.index+=t*i.stride}}end(){this.vertexBuffer.unlock()}writeData(t,e,s){const i=this.element[t];if(i){s>this.vertexBuffer.numVertices&&(s=this.vertexBuffer.numVertices);const t=i.numComponents;if(this.vertexBuffer.getFormat().interleaved){let n=0;for(let r=0;r<s;r++)i.setFromArray(n,e,r*t),n+=i.stride}else if(e.length>s*t){const n=s*t;if(ArrayBuffer.isView(e))e=e.subarray(0,n),i.array.set(e);else for(let t=0;t<n;t++)i.array[t]=e[t]}else i.array.set(e)}}readData(t,e){const s=this.element[t];let i=0;if(s){let t;i=this.vertexBuffer.numVertices;const n=s.numComponents;if(this.vertexBuffer.getFormat().interleaved){Array.isArray(e)&&(e.length=0),s.index=0;let r=0;for(t=0;t<i;t++)s.getToArray(r,e,t*n),r+=s.stride}else if(ArrayBuffer.isView(e))e.set(s.array);else{e.length=0;const r=i*n;for(t=0;t<r;t++)e[t]=s.array[t]}}return i}}let Ns=0;class ks{constructor(){this.initDefaults()}initDefaults(){this.recreate=!1,this.verticesUsage=x.y1K,this.indicesUsage=x.y1K,this.maxVertices=0,this.maxIndices=0,this.vertexCount=0,this.indexCount=0,this.vertexStreamsUpdated=!1,this.indexStreamUpdated=!1,this.vertexStreamDictionary={},this.indices=null}_changeVertexCount(t,e){this.vertexCount||(this.vertexCount=t)}static{this.DEFAULT_COMPONENTS_POSITION=3}static{this.DEFAULT_COMPONENTS_NORMAL=3}static{this.DEFAULT_COMPONENTS_UV=2}static{this.DEFAULT_COMPONENTS_COLORS=4}}class Bs{constructor(t,e,s,i,n){this.data=t,this.componentCount=e,this.dataType=s,this.dataTypeNormalize=i,this.asInt=n}}class Us extends gs.p{constructor(t,e){super(),this.indexBuffer=[null],this.vertexBuffer=null,this.primitive=[{type:0,base:0,baseVertex:0,count:0}],this.skin=null,this.boneAabb=null,this._aabbVer=0,this._aabb=new y,this._geometryData=null,this._morph=null,this._storageIndex=!1,this._storageVertex=!1,this.id=Ns++,this.device=t,this._storageIndex=e?.storageIndex||!1,this._storageVertex=e?.storageVertex||!1}static fromGeometry(t,e,s={}){const i=new Us(t,s),{positions:n,normals:r,tangents:a,colors:o,uvs:l,uvs1:h,blendIndices:c,blendWeights:d,indices:u}=e;return n&&i.setPositions(n),r&&i.setNormals(r),a&&i.setVertexStream(x.h3u,a,4),o&&i.setColors32(o),l&&i.setUvs(0,l),h&&i.setUvs(1,h),c&&i.setVertexStream(x.aVd,c,4,c.length/4,x.EUX),d&&i.setVertexStream(x.Hn_,d,4),u&&i.setIndices(u),i.update(),i}set morph(t){t!==this._morph&&(this._morph&&this._morph.decRefCount(),this._morph=t,t&&t.incRefCount())}get morph(){return this._morph}set aabb(t){this._aabb=t,this._aabbVer++}get aabb(){return this._aabb}destroy(){const t=this.morph;t&&(this.morph=null,t.refCount<1&&t.destroy()),this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);for(let e=0;e<this.indexBuffer.length;e++)this._destroyIndexBuffer(e);this.indexBuffer.length=0,this._geometryData=null}_destroyIndexBuffer(t){this.indexBuffer[t]&&(this.indexBuffer[t].destroy(),this.indexBuffer[t]=null)}_initBoneAabbs(t){let e,s,i,n,r;this.boneAabb=[],this.boneUsed=[];const a=[],o=[],h=this.boneUsed,c=this.skin.boneNames.length;let d,u,f;for(let y=0;y<c;y++)a[y]=new l.e(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),o[y]=new l.e(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);const p=new Os(this.vertexBuffer),m=p.element[x.JYe],_=p.element[x.Hn_],g=p.element[x.aVd],v=this.vertexBuffer.numVertices;for(let l=0;l<v;l++){for(let c=0;c<4;c++){if(_.array[_.index+c]>0){const p=g.array[g.index+c];if(h[p]=!0,e=m.array[m.index],s=m.array[m.index+1],i=m.array[m.index+2],n=o[p],r=a[p],r.x>e&&(r.x=e),r.y>s&&(r.y=s),r.z>i&&(r.z=i),n.x<e&&(n.x=e),n.y<s&&(n.y=s),n.z<i&&(n.z=i),t){let a=d=e,o=u=s,h=f=i;for(let e=0;e<t.length;e++){const s=t[e],i=s.deltaPositions[3*l],n=s.deltaPositions[3*l+1],r=s.deltaPositions[3*l+2];i<0?a+=i:d+=i,n<0?o+=n:u+=n,r<0?h+=r:f+=r}r.x>a&&(r.x=a),r.y>o&&(r.y=o),r.z>h&&(r.z=h),n.x<d&&(n.x=d),n.y<u&&(n.y=u),n.z<f&&(n.z=f)}}}p.next()}const S=this.vertexBuffer.getFormat().elements.find(t=>t.name===x.JYe);if(S&&S.normalize){const t=(()=>{switch(S.dataType){case x.VSW:return t=>Math.max(t/127,-1);case x.EUX:return t=>t/255;case x.kF:return t=>Math.max(t/32767,-1);case x.rvO:return t=>t/65535;default:return t=>t}})();for(let e=0;e<c;e++)if(h[e]){const s=a[e],i=o[e];s.set(t(s.x),t(s.y),t(s.z)),i.set(t(i.x),t(i.y),t(i.z))}}for(let l=0;l<c;l++){const t=new y;t.setMinMax(a[l],o[l]),this.boneAabb.push(t)}}_initGeometryData(){this._geometryData||(this._geometryData=new ks,this.vertexBuffer&&(this._geometryData.vertexCount=this.vertexBuffer.numVertices,this._geometryData.maxVertices=this.vertexBuffer.numVertices),this.indexBuffer.length>0&&this.indexBuffer[0]&&(this._geometryData.indexCount=this.indexBuffer[0].numIndices,this._geometryData.maxIndices=this.indexBuffer[0].numIndices))}clear(t,e,s=0,i=0){this._initGeometryData(),this._geometryData.initDefaults(),this._geometryData.recreate=!0,this._geometryData.maxVertices=s,this._geometryData.maxIndices=i,this._geometryData.verticesUsage=t?x.y1K:x.pCO,this._geometryData.indicesUsage=e?x.y1K:x.pCO}setVertexStream(t,e,s,i,n=x.n$B,r=!1,a=!1){this._initGeometryData();const o=i||e.length/s;this._geometryData._changeVertexCount(o,t),this._geometryData.vertexStreamsUpdated=!0,this._geometryData.vertexStreamDictionary[t]=new Bs(e,s,n,r,a)}getVertexStream(t,e){let s=0,i=!1;if(this._geometryData){const n=this._geometryData.vertexStreamDictionary[t];n&&(i=!0,s=this._geometryData.vertexCount,ArrayBuffer.isView(e)?e.set(n.data):(e.length=0,e.push(n.data)))}if(!i&&this.vertexBuffer){s=new Os(this.vertexBuffer).readData(t,e)}return s}setPositions(t,e=ks.DEFAULT_COMPONENTS_POSITION,s){this.setVertexStream(x.JYe,t,e,s,x.n$B,!1)}setNormals(t,e=ks.DEFAULT_COMPONENTS_NORMAL,s){this.setVertexStream(x.XF6,t,e,s,x.n$B,!1)}setUvs(t,e,s=ks.DEFAULT_COMPONENTS_UV,i){this.setVertexStream(x.CWz+t,e,s,i,x.n$B,!1)}setColors(t,e=ks.DEFAULT_COMPONENTS_COLORS,s){this.setVertexStream(x.F8$,t,e,s,x.n$B,!1)}setColors32(t,e){this.setVertexStream(x.F8$,t,ks.DEFAULT_COMPONENTS_COLORS,e,x.EUX,!0)}setIndices(t,e){this._initGeometryData(),this._geometryData.indexStreamUpdated=!0,this._geometryData.indices=t,this._geometryData.indexCount=e||t.length}getPositions(t){return this.getVertexStream(x.JYe,t)}getNormals(t){return this.getVertexStream(x.XF6,t)}getUvs(t,e){return this.getVertexStream(x.CWz+t,e)}getColors(t){return this.getVertexStream(x.F8$,t)}getIndices(t){let e=0;if(this._geometryData&&this._geometryData.indices){const s=this._geometryData.indices;if(e=this._geometryData.indexCount,ArrayBuffer.isView(t))t.set(s);else{t.length=0;for(let e=0,i=s.length;e<i;e++)t.push(s[e])}}else if(this.indexBuffer.length>0&&this.indexBuffer[0]){e=this.indexBuffer[0].readData(t)}return e}update(t=x.Qpk,e=!0){if(this._geometryData){if(e){const t=this._geometryData.vertexStreamDictionary[x.JYe];t&&3===t.componentCount&&(this._aabb.compute(t.data,this._geometryData.vertexCount),this._aabbVer++)}let s=this._geometryData.recreate;this._geometryData.vertexCount>this._geometryData.maxVertices&&(s=!0,this._geometryData.maxVertices=this._geometryData.vertexCount),s&&this.vertexBuffer&&(this.vertexBuffer.destroy(),this.vertexBuffer=null);let i=this._geometryData.recreate;this._geometryData.indexCount>this._geometryData.maxIndices&&(i=!0,this._geometryData.maxIndices=this._geometryData.indexCount),i&&this.indexBuffer.length>0&&this.indexBuffer[0]&&(this.indexBuffer[0].destroy(),this.indexBuffer[0]=null),this._geometryData.vertexStreamsUpdated&&this._updateVertexBuffer(),this._geometryData.indexStreamUpdated&&this._updateIndexBuffer(),this.primitive[0].type=t,this.indexBuffer.length>0&&this.indexBuffer[0]?this._geometryData.indexStreamUpdated&&(this.primitive[0].count=this._geometryData.indexCount,this.primitive[0].indexed=!0):this._geometryData.vertexStreamsUpdated&&(this.primitive[0].count=this._geometryData.vertexCount,this.primitive[0].indexed=!1),this._geometryData.vertexCount=0,this._geometryData.indexCount=0,this._geometryData.vertexStreamsUpdated=!1,this._geometryData.indexStreamUpdated=!1,this._geometryData.recreate=!1,this.updateRenderStates()}}_buildVertexFormat(t){const e=[];for(const s in this._geometryData.vertexStreamDictionary){const t=this._geometryData.vertexStreamDictionary[s];e.push({semantic:s,components:t.componentCount,type:t.dataType,normalize:t.dataTypeNormalize,asInt:t.asInt})}return new xs.y(this.device,e,t)}_updateVertexBuffer(){if(!this.vertexBuffer){const t=this._geometryData.maxVertices,e=this._buildVertexFormat(t);this.vertexBuffer=new ys.R(this.device,e,t,{usage:this._geometryData.verticesUsage,storage:this._storageVertex})}const t=new Os(this.vertexBuffer),e=this._geometryData.vertexCount;for(const s in this._geometryData.vertexStreamDictionary){const i=this._geometryData.vertexStreamDictionary[s];t.writeData(s,i.data,e),delete this._geometryData.vertexStreamDictionary[s]}t.end()}_updateIndexBuffer(){if(this.indexBuffer.length<=0||!this.indexBuffer[0]){const t=this._geometryData.maxVertices,e=t>65535||0===t?x.gpl:x.c02,s=this._storageIndex?{storage:!0}:void 0;this.indexBuffer[0]=new Ss(this.device,e,this._geometryData.maxIndices,this._geometryData.indicesUsage,void 0,s)}const t=this._geometryData.indices;if(t){this.indexBuffer[0].writeData(t,this._geometryData.indexCount),this._geometryData.indices=null}}prepareRenderState(t){t===F.l3Q?this.generateWireframe():t===F.KMC&&(this.primitive[F.KMC]={type:x._AA,base:0,baseVertex:0,count:this.vertexBuffer?this.vertexBuffer.numVertices:0,indexed:!1})}updateRenderStates(){this.primitive[F.KMC]&&this.prepareRenderState(F.KMC),this.primitive[F.l3Q]&&this.prepareRenderState(F.l3Q)}generateWireframe(){this._destroyIndexBuffer(F.l3Q);const t=this.vertexBuffer.numVertices,e=[];let s;if(this.indexBuffer.length>0&&this.indexBuffer[0]){const i=[[0,1],[1,2],[2,0]],n=this.primitive[F.OZy].base,r=this.primitive[F.OZy].count,a=this.primitive[F.OZy].baseVertex||0,o=this.indexBuffer[F.OZy],l=new x.SGA[o.format](o.storage),h=new Set;for(let s=n;s<n+r;s+=3)for(let n=0;n<3;n++){const r=l[s+i[n][0]]+a,o=l[s+i[n][1]]+a,c=r>o?o*t+r:r*t+o;h.has(c)||(h.add(c),e.push(r,o))}s=o.format}else{for(let s=0;s<t;s+=3)e.push(s,s+1,s+1,s+2,s+2,s);s=e.length>65535?x.gpl:x.c02}const i=new Ss(this.vertexBuffer.device,s,e.length);new x.SGA[i.format](i.storage).set(e),i.unlock(),this.primitive[F.l3Q]={type:x.EEU,base:0,baseVertex:0,count:e.length,indexed:!0},this.indexBuffer[F.l3Q]=i}}class zs{constructor(t,e,s){this._aabb=new y,this.meshInstance=null,this.origMeshInstances=t,this.dynamic=e,this.batchGroupId=s}destroy(t,e){this.meshInstance&&(this.removeFromLayers(t,e),this.meshInstance.destroy(),this.meshInstance=null)}addToLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);i&&i.addMeshInstances([this.meshInstance])}}removeFromLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);i&&i.removeMeshInstances([this.meshInstance])}}updateBoundingBox(){this._aabb.copy(this.origMeshInstances[0].aabb);for(let t=1;t<this.origMeshInstances.length;t++)this._aabb.add(this.origMeshInstances[t].aabb);this.meshInstance.aabb=this._aabb,this.meshInstance._aabbVer=0}get model(){}}class Vs{constructor(t,e,s,i,n=[F.uEK]){this._ui=!1,this._sprite=!1,this._obj={model:[],element:[],sprite:[],render:[]},this.id=t,this.name=e,this.dynamic=s,this.maxAabbSize=i,this.layers=n}static{this.MODEL="model"}static{this.ELEMENT="element"}static{this.SPRITE="sprite"}static{this.RENDER="render"}}const Gs=new o.$;class Hs{constructor(t){this._dirty=!0,this._rootBone=null,this._skinUpdateIndex=-1,this._updateBeforeCull=!0,t&&this.initSkin(t)}set rootBone(t){this._rootBone=t}get rootBone(){return this._rootBone}init(t,e){const s=3*e;let i=Math.ceil(Math.sqrt(s));i=a.D.roundUp(i,3);const n=Math.ceil(s/i);this.boneTexture=new Q.g(t,{width:i,height:n,format:x.s7h,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,name:"skin"}),this.matrixPalette=this.boneTexture.lock({mode:x.odD}),this.boneTexture.unlock()}destroy(){this.boneTexture&&(this.boneTexture.destroy(),this.boneTexture=null)}resolve(t,e){this.rootBone=t;const s=this.skin,i=[];for(let n=0;n<s.boneNames.length;n++){const r=s.boneNames[n];let a=t.findByName(r);a||(a=e),i.push(a)}this.bones=i}initSkin(t){this.skin=t,this.bones=[];const e=t.inverseBindPose.length;this.init(t.device,e),this.matrices=[];for(let s=0;s<e;s++)this.matrices[s]=new o.$}uploadBones(t){this.boneTexture.upload()}_updateMatrices(t,e){if(this._skinUpdateIndex!==e){this._skinUpdateIndex=e,Gs.copy(t.getWorldTransform()).invert();for(let t=this.bones.length-1;t>=0;t--)this.matrices[t].mulAffine2(Gs,this.bones[t].getWorldTransform()),this.matrices[t].mulAffine2(this.matrices[t],this.skin.inverseBindPose[t])}}updateMatrices(t,e){this._updateBeforeCull&&this._updateMatrices(t,e)}updateMatrixPalette(t,e){this._updateMatrices(t,e);const s=this.matrixPalette,i=this.bones.length;for(let n=0;n<i;n++){const t=this.matrices[n].data,e=12*n;s[e]=t[0],s[e+1]=t[4],s[e+2]=t[8],s[e+3]=t[12],s[e+4]=t[1],s[e+5]=t[5],s[e+6]=t[9],s[e+7]=t[13],s[e+8]=t[2],s[e+9]=t[6],s[e+10]=t[10],s[e+11]=t[14]}this.uploadBones(this.skin.device)}}class Ws extends Hs{constructor(t,e,s){super();const i=e.length;this.init(t,i),this.device=t,this.rootNode=s,this.bones=e}updateMatrices(t,e){}updateMatrixPalette(t,e){const s=this.matrixPalette,i=this.bones.length;for(let n=0;n<i;n++){const t=this.bones[n].getWorldTransform().data,e=12*n;s[e]=t[0],s[e+1]=t[4],s[e+2]=t[8],s[e+3]=t[12],s[e+4]=t[1],s[e+5]=t[5],s[e+6]=t[9],s[e+7]=t[13],s[e+8]=t[2],s[e+9]=t[6],s[e+10]=t[10],s[e+11]=t[14]}this.uploadBones(this.device)}}const Xs=[0,1,3,2,3,1],$s=[0,1,3,0,3,2],qs=new _s.U;function js(t,e){if(t&&!e)return!1;if(!t&&e)return!1;if((t=t.data)===(e=e.data))return!0;if(t instanceof Float32Array&&e instanceof Float32Array){if(t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(t[s]!==e[s])return!1;return!0}return!1}function Ys(t,e){for(const s in t)if(t.hasOwnProperty(s)&&!js(t[s],e[s]))return!1;for(const s in e)if(e.hasOwnProperty(s)&&!js(e[s],t[s]))return!1;return!0}function Ks(t){return t.node.worldTransform.scaleSign}class Zs{constructor(t,e,s){this.device=t,this.rootNode=e,this.scene=s,this._init=!1,this._batchGroups={},this._batchGroupCounter=0,this._batchList=[],this._dirtyGroups=[]}destroy(){this.device=null,this.rootNode=null,this.scene=null,this._batchGroups={},this._batchList=[],this._dirtyGroups=[]}addGroup(t,e,s,i,n){if(void 0===i&&(i=this._batchGroupCounter,this._batchGroupCounter++),this._batchGroups[i])return;const r=new Vs(i,t,e,s,n);return this._batchGroups[i]=r,r}removeGroup(t){if(!this._batchGroups[t])return;const e=[];for(let s=0;s<this._batchList.length;s++)this._batchList[s].batchGroupId===t?this.destroyBatch(this._batchList[s]):e.push(this._batchList[s]);this._batchList=e,this._removeModelsFromBatchGroup(this.rootNode,t),delete this._batchGroups[t]}markGroupDirty(t){this._dirtyGroups.indexOf(t)<0&&this._dirtyGroups.push(t)}getGroupByName(t){const e=this._batchGroups;for(const s in e)if(e.hasOwnProperty(s)&&e[s].name===t)return e[s];return null}getBatches(t){const e=[],s=this._batchList.length;for(let i=0;i<s;i++){const s=this._batchList[i];s.batchGroupId===t&&e.push(s)}return e}_removeModelsFromBatchGroup(t,e){if(t.enabled){t.model&&t.model.batchGroupId===e&&(t.model.batchGroupId=-1),t.render&&t.render.batchGroupId===e&&(t.render.batchGroupId=-1),t.element&&t.element.batchGroupId===e&&(t.element.batchGroupId=-1),t.sprite&&t.sprite.batchGroupId===e&&(t.sprite.batchGroupId=-1);for(let s=0;s<t._children.length;s++)this._removeModelsFromBatchGroup(t._children[s],e)}}insert(t,e,s){const i=this._batchGroups[e];i&&i._obj[t].indexOf(s)<0&&(i._obj[t].push(s),this.markGroupDirty(e))}remove(t,e,s){const i=this._batchGroups[e];if(i){const n=i._obj[t].indexOf(s);n>=0&&(i._obj[t].splice(n,1),this.markGroupDirty(e))}}_extractRender(t,e,s,i){return t.render&&(e=i[t.render.batchGroupId]=e.concat(t.render.meshInstances),t.render.removeFromLayers()),e}_extractModel(t,e,s,i){return t.model&&t.model.model&&(e=i[t.model.batchGroupId]=e.concat(t.model.meshInstances),t.model.removeModelFromLayers()),e}_extractElement(t,e,s){if(!t.element)return;let i=!1;t.element._text&&t.element._text._model.meshInstances.length>0?(e.push(t.element._text._model.meshInstances[0]),t.element.removeModelFromLayers(t.element._text._model),i=!0):t.element._image&&(e.push(t.element._image._renderable.meshInstance),t.element.removeModelFromLayers(t.element._image._renderable.model),t.element._image._renderable.unmaskMeshInstance&&(e.push(t.element._image._renderable.unmaskMeshInstance),t.element._image._renderable.unmaskMeshInstance.stencilFront&&t.element._image._renderable.unmaskMeshInstance.stencilBack||(t.element._dirtifyMask(),t.element._onPrerender())),i=!0),i&&(s._ui=!0)}_collectAndRemoveMeshInstances(t,e){for(let s=0;s<e.length;s++){const i=e[s],n=this._batchGroups[i];if(!n)continue;let r=t[i];r||(r=t[i]=[]);for(let e=0;e<n._obj.model.length;e++)r=this._extractModel(n._obj.model[e],r,n,t);for(let e=0;e<n._obj.render.length;e++)r=this._extractRender(n._obj.render[e],r,n,t);for(let t=0;t<n._obj.element.length;t++)this._extractElement(n._obj.element[t],r,n);for(let t=0;t<n._obj.sprite.length;t++){const e=n._obj.sprite[t];e.sprite&&e.sprite._meshInstance&&(n.dynamic||e.sprite.sprite._renderMode===F.hA3)&&(r.push(e.sprite._meshInstance),e.sprite.removeModelFromLayers(),n._sprite=!0,e.sprite._batchGroup=n)}}}generate(t){const e={};t||(t=Object.keys(this._batchGroups));const s=[];for(let o=0;o<this._batchList.length;o++)t.indexOf(this._batchList[o].batchGroupId)<0?s.push(this._batchList[o]):this.destroyBatch(this._batchList[o]);if(this._batchList=s,this._collectAndRemoveMeshInstances(e,t),t===this._dirtyGroups)this._dirtyGroups.length=0;else{const e=[];for(let s=0;s<this._dirtyGroups.length;s++)t.indexOf(this._dirtyGroups[s])<0&&e.push(this._dirtyGroups[s]);this._dirtyGroups=e}let i,n,r,a;for(const o in e)if(e.hasOwnProperty(o)&&(i=e[o],r=this._batchGroups[o],r)){n=this.prepare(i,r.dynamic,r.maxAabbSize,r._ui||r._sprite);for(let t=0;t<n.length;t++)a=this.create(n[t],r.dynamic,parseInt(o,10)),a&&a.addToLayers(this.scene,r.layers)}}prepare(t,e,s=Number.POSITIVE_INFINITY,i){if(0===t.length)return[];const n=.5*s,r=new y,a=new y;let o,l=null;const h=[];let c=0;i&&t.sort((t,e)=>t.drawOrder-e.drawOrder);let d,u=t;const f=i?function(t){l?l.add(t.aabb):l=t.aabb.clone(),d.push(t)}:function(t){d.push(t)};for(;u.length>0;){h[c]=[u[0]],d=[];const t=u[0].material,s=u[0].layer,p=u[0]._shaderDefs,m=u[0].parameters,_=u[0].stencilFront;let g=u[0].mesh.vertexBuffer.getNumVertices();const v=u[0].drawOrder;r.copy(u[0].aabb);const S=Ks(u[0]),y=u[0].mesh.vertexBuffer.format.batchingHash,x=u[0].mesh.primitive[0].indexed;l=null;for(let T=1;T<u.length;T++){const w=u[T];if(e&&h[c].length>=1024){d=d.concat(u.slice(T));break}t!==w.material||s!==w.layer||y!==w.mesh.vertexBuffer.format.batchingHash||x!==w.mesh.primitive[0].indexed||p!==w._shaderDefs||g+w.mesh.vertexBuffer.getNumVertices()>4294967295?f(w):(a.copy(r),a.add(w.aabb),a.halfExtents.x>n||a.halfExtents.y>n||a.halfExtents.z>n?f(w):(!_||(o=w.stencilFront)&&_.func===o.func&&_.zpass===o.zpass)&&S===Ks(w)&&Ys(m,w.parameters)?i&&l&&l.intersects(w.aabb)&&w.drawOrder!==v?f(w):(r.add(w.aabb),g+=w.mesh.vertexBuffer.getNumVertices(),h[c].push(w)):f(w))}c++,u=d}return h}collectBatchedMeshData(t,e){let s=null,i=0,n=0,r=null;for(let a=0;a<t.length;a++)if(t[a].visible){const o=t[a].mesh;if(i+=o.vertexBuffer.numVertices,o.primitive[0].indexed)n+=o.primitive[0].count;else{const t=o.primitive[0].type;t!==x.zl$&&t!==x.SF$||4===o.primitive[0].count&&(n+=6)}if(!s){r=t[a].material,s={};const i=o.vertexBuffer.format.elements;for(let t=0;t<i.length;t++){s[i[t].name]={numComponents:i[t].numComponents,dataType:i[t].dataType,normalize:i[t].normalize,count:0}}e&&(s[x.aVd]={numComponents:1,dataType:x.n$B,normalize:!1,count:0})}}return{streams:s,batchNumVerts:i,batchNumIndices:n,material:r}}create(t,e,s){this._init||(this.vertexFormats={},this._init=!0);let i,n,r,a=null,o=null;const l=this.collectBatchedMeshData(t,e);if(l.streams){const h=l.streams;let c=l.material;const d=l.batchNumVerts,u=l.batchNumIndices;let f,p,m,_;o=new zs(t,e,s),this._batchList.push(o);let g,v=0,S=0;const y=new(d<=65535?Uint16Array:Uint32Array)(u);for(i in h)a=h[i],a.typeArrayType=x.B8J[a.dataType],a.elementByteSize=x.sYG[a.dataType],a.buffer=new a.typeArrayType(d*a.numComponents);for(let s=0;s<t.length;s++)if(t[s].visible){for(i in n=t[s].mesh,r=n.vertexBuffer.numVertices,e||(g=t[s].node.getWorldTransform()),h)if(i!==x.aVd){a=h[i];const t=new a.typeArrayType(a.buffer.buffer,a.elementByteSize*a.count),s=n.getVertexStream(i,t)*a.numComponents;if(a.count+=s,!e&&a.numComponents>=3)if(i===x.JYe){const e=g.data,i=e[0],n=e[1],r=e[2],o=e[4],l=e[5],h=e[6],c=e[8],d=e[9],u=e[10],f=e[12],p=e[13],m=e[14];let _,v,S;for(let g=0;g<s;g+=a.numComponents)_=t[g],v=t[g+1],S=t[g+2],t[g]=_*i+v*o+S*c+f,t[g+1]=_*n+v*l+S*d+p,t[g+2]=_*r+v*h+S*u+m}else if(i===x.XF6||i===x.h3u){qs.invertMat4(g).transpose();const[e,i,n,r,o,l,h,c,d]=qs.data;let u,f,p;for(let m=0;m<s;m+=a.numComponents)u=t[m],f=t[m+1],p=t[m+2],t[m]=u*e+f*r+p*h,t[m+1]=u*i+f*o+p*c,t[m+2]=u*n+f*l+p*d}}if(e){a=h[x.aVd];for(let t=0;t<r;t++)a.buffer[a.count++]=s}if(n.primitive[0].indexed){f=n.primitive[0].base,p=n.primitive[0].baseVertex||0,m=n.primitive[0].count;const t=n.indexBuffer[0].getFormat();_=new x.SGA[t](n.indexBuffer[0].storage)}else{p=0;const t=n.primitive[0].type;if(t===x.zl$||t===x.SF$){if(4!==n.primitive[0].count){m=0;continue}f=0,m=6,_=t===x.zl$?Xs:$s}}for(let t=0;t<m;t++)y[t+S]=_[f+t]+p+v;S+=m,v+=r}for(i in n=new Us(this.device),h)a=h[i],n.setVertexStream(i,a.buffer,a.numComponents,void 0,a.dataType,a.normalize);y.length>0&&n.setIndices(y),n.update(x.Qpk,!1),e&&(c=c.clone(),c.update());const T=new pt(n,c,this.rootNode);T.castShadow=o.origMeshInstances[0].castShadow,T.parameters=o.origMeshInstances[0].parameters,T.layer=o.origMeshInstances[0].layer,T._shaderDefs=o.origMeshInstances[0]._shaderDefs,T.batching=!0,T.cull=o.origMeshInstances[0].cull;const w=this._batchGroups[s];if(w&&w._ui&&(T.cull=!1),e){const t=[];for(let e=0;e<o.origMeshInstances.length;e++)t.push(o.origMeshInstances[e].node);T.skinInstance=new Ws(this.device,t,this.rootNode)}T._updateAabb=!1,T.drawOrder=o.origMeshInstances[0].drawOrder,T.stencilFront=o.origMeshInstances[0].stencilFront,T.stencilBack=o.origMeshInstances[0].stencilBack,T.flipFacesFactor=Ks(o.origMeshInstances[0]),T.castShadow=o.origMeshInstances[0].castShadow,o.meshInstance=T,o.updateBoundingBox()}return o}updateAll(){this._dirtyGroups.length>0&&this.generate(this._dirtyGroups);for(let t=0;t<this._batchList.length;t++)this._batchList[t].dynamic&&this._batchList[t].updateBoundingBox()}clone(t,e){const s=new zs(e,t.dynamic,t.batchGroupId);this._batchList.push(s);const i=[];for(let n=0;n<e.length;n++)i.push(e[n].node);return s.meshInstance=new pt(t.meshInstance.mesh,t.meshInstance.material,t.meshInstance.node),s.meshInstance._updateAabb=!1,s.meshInstance.parameters=e[0].parameters,s.meshInstance.cull=e[0].cull,s.meshInstance.layer=e[0].layer,t.dynamic&&(s.meshInstance.skinInstance=new Ws(this.device,i,this.rootNode)),s.meshInstance.castShadow=t.meshInstance.castShadow,s}destroyBatch(t){t.destroy(this.scene,this._batchGroups[t.batchGroupId].layers)}}var Qs=s(39462),Js=s(14702),ti=s(10658);class ei{constructor(t,e){this.processedCache=new Map,this.definitionsCache=new Map,this._generators=new Map,this._device=t,this._isClearingCache=!1,this._precached=!1,this._programsCollection=[],this._defaultStdMatOption=new Ce,this._defaultStdMatOptionMin=new Ce;const s=new At;e.shaderOptBuilder.updateRef(this._defaultStdMatOption,{},s,e,null,[],F.OPe,null),e.shaderOptBuilder.updateMinRef(this._defaultStdMatOptionMin,{},e,null,F.vT3,null),t.on("destroy:shader",t=>{this.removeFromCache(t)})}destroy(){this.clearCache()}register(t,e){this._generators.has(t)||this._generators.set(t,e)}unregister(t){this._generators.has(t)&&this._generators.delete(t)}isRegistered(t){return this._generators.has(t)}generateShaderDefinition(t,e,s,i){let n=this.definitionsCache.get(s);if(!n){let r;i.litOptions?.lights&&(r=i.litOptions.lights,i.litOptions.lights=r.map(t=>{const e=t.clone?t.clone():t;return e.key=t.key,e})),this.storeNewProgram(e,i),i.litOptions?.lights&&(i.litOptions.lights=r),this._precached;const a=this._device;n=t.createShaderDefinition(a,i),n.name=n.name??(i.pass?`${e}-pass:${i.pass}`:e),this.definitionsCache.set(s,n)}return n}getCachedShader(t){return this.processedCache.get(t)}setCachedShader(t,e){this.processedCache.set(t,e)}getProgram(t,e,s,i){const n=this._generators.get(t);if(!n)return null;const r=n.generateKey(e),a=(0,I.s)(r),o=s.generateKey(this._device),l=`${a}#${(0,I.s)(o)}`;let h=this.getCachedShader(l);if(!h){const r=this.generateShaderDefinition(n,t,a,e);let o,c="";void 0!==e.pass&&(o=k.get(this._device).getByIndex(e.pass),c=`-${o.name}`),this._device.fire("shader:generate",{userMaterialId:i,shaderPassInfo:o,definition:r});const d={name:`${r.name}${c}-proc`,attributes:r.attributes,vshader:r.vshader,vincludes:r.vincludes,fincludes:r.fincludes,fshader:r.fshader,processingOptions:s,shaderLanguage:r.shaderLanguage,meshUniformBufferFormat:r.meshUniformBufferFormat,meshBindGroupFormat:r.meshBindGroupFormat};h=new C.M(this._device,d),this.setCachedShader(l,h)}return h}storeNewProgram(t,e){let s={};if("standard"===t){const t=this._getDefaultStdMatOptions(e.pass);for(const i in e)(e.hasOwnProperty(i)&&t[i]!==e[i]||"pass"===i)&&(s[i]=e[i]);for(const i in e.litOptions)s[i]=e.litOptions[i]}else s=e;this._programsCollection.push(JSON.stringify({name:t,options:s}))}dumpPrograms(){let t="let device = pc.app ? pc.app.graphicsDevice : pc.Application.getApplication().graphicsDevice;\n";t+="let shaders = [",this._programsCollection[0]&&(t+=`\n\t${this._programsCollection[0]}`);for(let s=1;s<this._programsCollection.length;++s)t+=`,\n\t${this._programsCollection[s]}`;t+="\n];\n",t+="pc.getProgramLibrary(device).precompile(shaders);\n",t+=`if (pc.version != "${ti.rE}" || pc.revision != "${ti.QL}")\n`,t+='\tconsole.warn("precompile-shaders.js: engine version mismatch, rebuild shaders lib with current engine");';const e=document.createElement("a");e.setAttribute("href",`data:text/plain;charset=utf-8,${encodeURIComponent(t)}`),e.setAttribute("download","precompile-shaders.js"),e.style.display="none",document.body.appendChild(e),e.click(),document.body.removeChild(e)}clearCache(){this._isClearingCache=!0,this.processedCache.forEach(t=>{t.destroy()}),this.processedCache.clear(),this._isClearingCache=!1}removeFromCache(t){this._isClearingCache||this.processedCache.forEach((e,s)=>{t===e&&this.processedCache.delete(s)})}_getDefaultStdMatOptions(t){const e=k.get(this._device).getByIndex(t);return t===F.czD||t===F.pP7||e.isShadow?this._defaultStdMatOptionMin:this._defaultStdMatOption}precompile(t){if(t){const e=new Array(t.length);for(let s=0;s<t.length;s++){if("standard"===t[s].name){const e=t[s].options,i=this._getDefaultStdMatOptions(e.pass);for(const t in i)i.hasOwnProperty(t)&&void 0===e[t]&&(e[t]=i[t])}e[s]=this.getProgram(t[s].name,t[s].options)}}this._precached=!0}}let si=null;const ii=()=>{if(!si){const t=atob("muPIHORMLNDCz4DxVR/ZvYfAUVEFR47KRIC4nwAAAAAP7WxlhD6Ci+2HCe7BF8jRAPZwdH2UPpI5PdLCJdkvG4UTaNDJ/0crAzne71GCrb4kbdMjjCEGzdX6fNxDMLJq5xkeoIVTdfiZkodEeArmZmp/FQzFjD4x8iOW7Dg64n+3mWqyEwLxXT8zoJXfbw8QJKDCaarUYyTlMzNFHbgUe9IQV7g4YOgtSKpIFZJ0qERm7u4PpmiF89ktHWCywaGmD6h+hfh2/Zd8KYlKqqo4Cem4T42bT/Z9FpCQF1hhSjfBzZ5XFn/y3jegWC6u86KuELRundQS/1Rp+XuKKGIgRv3CvP5y749yqLlFO495JOT3+f2CXgd71npU0/KjjpkZucbJ5m78IVyuSrSozc9jgBUhDrz0hFsyb7LFUH9//wJbBgLdNWJZObfKxrNt8TliLA9w9sXFv6g26iXpf6r/BqcAusj/QzGBZuoUGeEtw8BCXCZ3jUiw4hvM18ZVqlUD3C40LAFXW6FRjuAZGRNstb0/qVk4skwyT+MHrvRorI4rKHVMWZmKyAkzL/78u/9pMQuX14pZN50b2PHn6fRxeaCQLsfT4dpvIkWWFuFVENZIh+8xgR6lU+85W0PPdAu1j99kcCG40JBQa4JMyRzq6qriOBLtqF87vpCJan0WEduVr/mOYkS00urVA0mA6M3031+GmGmW48PaJDYOEIb3bIXWPaLoAOEinX1TN3+/vwhG6nqJu0TdHpedS7QsGZIoxH3nQYYjQP1jmbahlbNngw5ogsGk1y50XZyUmQBY+/JBJ3Unu4dApm+WmPwHPU9gLb+4mHh4BiY6M86pq+WeTyWdI3s0CXPEtHGXZ8zMZgUoyRomBi1VdazzuN+WOmQ9Pa0Z0tlNopUi8AJ4x2Xn4mmOKEbXLxlbVsWu8XhuDGYFOGCRVdSqDPXrHU5SDdUlti3k5///SBwzTMwK3L4a1H7w4lnpEas6////AfX8asyIBfeFXVJ3tgvxQ/blZuUKyIODIfr/UzdWNu7pciLBpdZRZ4pIfZ1R6szq+XNxkGG///8EZFpu7VHAhFWqHEOrB9unw+YQa5o8/9IR/V5/zq+986rJSyfgJKt2u9hxU1wzyQWPjJGvzG9+eWWxGFOHVKqI4jBQALwZZswesnvZ2UmmkEXdiRpz8B+oWE7PY70ZTMndisYSXg2TqoI+3y9BxbnY2Y4EfbdcRhAvG59NqDENNYbxKvK5HJfPG5M+Wi2AcpLVJrD6caiEOzgSoVNSgQK8fm2M3zGcF4xtClv/8Hs9oD7C3jitTATYNQxmKqKf1LhIxzf1bmfiNn7UKFmcJu4sLqVLwxGSue3taBEyknkw5hXTsUCvqmmL/f8n/w0giR7Hu/9EHvpkz3yuu64TioMkzdTJ30i0+hFnQqW1+v9mMwq+z9qGX0UFu9MomvVG2xod6vc12AAAAACq7sGa5qptFR0jF3nQt/D+7PibKYahaxP3hEixPbGi9nwNf2LAa7LkEZRKxzXeCD64Xpii5n+8Kpg8eHIv7AWXZltgMoGltmoJ0XGdOCL8WkzphvR9N2o3ARSZ42l5e5Pe4B58MCRlP3EKv+mcloknH+fto5BWsmEutW6KvjOVsznFCktkSczVk4aGvj9VXlRcLeDoKG8RkBgdcNG2bf8HUL4MT2DM+ar7NImJhKpxakX4Vk0CnP+/XNhl5UsP0lXgeZXPoDBMSW5An+DXlTCO5FQGwSPYwHLKYVIimEdAoVe49rQLaaNcye5LxU2/c5TijTgJtD5eQQIe1snxauj5jZsxJBUJdoP/zqpjqv8qBruoPsVsP8N44PCUW5Dd0DzqjSS/Dl5mI9cn1w2ndN/0KAEm1QAAAACwu6KM/083IBbH5bPa/9oHUwcU8I9v3j6/v18QYammrf+P6VL///8BrpuM3fOLCxaLNOFNF1zPbPYTP65ni6njft4eVcyrVXRQFrs52tr35StiSp55edVDCBC0H5rIfac6nzUwxQSt7y15QoKb+5zebEQUmVbrPjXuUa19Ey7sqXMiSUKHaw72PJKDdrutJoQr3u6lEYJ8K0MakWKj9zjTFi4X94TsKYco0GrLeB60M6D8M/80rhXUW8iMequg8y5F838WI0+gp3GBN5Kj/xIOxTWQuUaPV/LwvARr1VH93BFgGZR1MFW0Ua30GbYmdnAgo9VWy8SQtpDUgGE2r2zq2eTEMCL7sMKmE1hchVhuF/TCq9iXKEm86kzOf3Rp9ZnCxbpDUj+FKNxVyXe6pVZkRXv/m95SnB/EB8aME29N85MtAcDoXWlor8De2Q5Dg1tar+8wgiZufbMam81j//ASUohoR/zSh2KG4bvT6mkIPz6C5/98DC3LaWlaEZ1zA5JORZRu6J/a0GY285sEYzw71YqOT1ihAG0z5SDt1xNiDQWZdFpndArp6xWhqSDkRb4kSJEHb9liPvw7uLV/6i5MVf//A9Qjr8xkAEUh+KDI+zdtJ68d6MBOktg1iyp/SCq8O9f5pbamn1VVVQPRTWqNBvhQKa07s6P0lc9Luu/3gw4HeyOUfz8MxMwV4UQhua+t9cr4bz/nIB2wnDSK1K7I94M+s6C84htaX/CNlMQUSs2KJO+yaebfTbkNX5yWcqEJevo0vbKUiETuFXiL019A3E+lmsyZMwXrXLLiQAZ5t9+jI3JobhJTMiDH5ZOQ+8Jau5555NMjHSscP9qCVaa40doh+1a3Ukf6jqBmLddgh79/fwTfCyqiuldNkUoy+nUp+4nerwg0OjtGv2x485PJOJvUEokNhYIdWjpx7BWk0VZGWOp3jSFTJ2bnu6KCduZtG/UcBC9RZ3W/jMSfSMw4Etr/DoD/XYP2V5Ovw+YoM3F5g2dGLdvuG6ZkVGLE6Dk5Zr+sdSyGliJP1y2OFf/KFO0RWO+3gsGhesTnfZVpTd8/HwgO216gwaqo+vY3TljfJWowY+i0p0Os4SLn/1wLqDHMlszggmT/D8MRFzs+pLv6LNJSsNZ/r41mWi/rF6ZcKp/yzJdK0VU44hskq3RGpgO6mIpJDsf/mZkFrz0yYOMLbuaj/wp1v7JMFM5eqvBhmTd7U8frQAtHtys4zgpjZmzUhOVTfNNLifElGXADlqHGKrkBT/nYwX8ZRm3RjvyPvjKyEqEGKUpVnvOGx+NKPHiWM//ZDpDVGvvrjmk8RPF/wiYZD3+Us8YCXjrVOfjdd1UPAfjLp8jgSn4me7DPTpz1Ggy9XL80guFO7ECT10AvILKfD18Qx+KY/f8aRqu0oOO8hfKRFZa9PUJwCsp6VdZz6LFkm2b9Pl2LIifCwzRy7TpdG2uAtOxP2OemY26bJMa9ZGSLIRlMsgpDpnDJwd0oa5pQ13x1hrHf52HpulUWonGWsfXZbSQYKu9bnEN76ciQih0opN3deDVrbrxorfVlnCmL1R9zq3ePGWIv21c7pW8kEiFTM5JX8dAw867s/60cf79/BH+MDFCZBHlz1L+qGOJf/1txhhmrf3//As+RIJwevDb+fgNXVeHw67QptZegayhrEwr5Gy+EPo1RLaMtPbqOZYoVzXzwzjMFWZxyUG9YUIf6////AQWy84iAygLk9COtXt92+0mT/xg0zMzMBeLkb8y9SL2TDXgSX422hDgpGNLJyuPioA+YJ91G8znrpNqHkwYyscaJDEc9Vc+j4cXle3hvcd2JqDQH2lBZxDn6mUTs0b75raMvbs727codX01Anj8f3wir9P2xQaQ22v/TxCMglKDFoTjaP01XTLgxnTvPv02JgEUrW6UDgOnobFpLdvKdlypgIzPcq14fgXU5tvVW0FEs7VRlsG1IyA69fN4n+awHhT34cE+xUvdj86C8LgAsFheTjI9Ht9EyYAAAAAAVBVKRx2wLgUTI0/2QfyJo2riRw3JDqzEShmx/Lifo6mRkQVbS7X53t+EvKxcXogtdts31e9MRHdcHgsA8rt4/mt2unlzQ/wsU8Gu7+W6Oj7eD8EQdDp5XlCsVaS/AV/t5ZpPOHR3rGpyAJe9IPV+xMrBL1Oz/8MQhFs31h0N1cVnq371uqIJYHyafKH1jteAK3VpMXBcuC+yt0ZeKyRUY4QhdrJJ4tJ1wg3Hu6kDsbovxupTMkGdRrm8oZSoYPbJ+PwH/xotgTdkA1205vUEfnqkI04T/fnnd1fiZW5AwNcggd7fi4j5zasmcntZexIxqFZQMzMJpfndmI5jn17cgn5EV5t9XN0C///8Q9wlJpMGXdoiaMTG2sVyHQsn8mWRISCLNG777S0OuDRP2GlLcJ2UeOg7Fo8hTNPeJ//iTJhyqxhKRUntdXOihq2wfKfH///8B0GGrwT+fSOQRdctKxjjGCSS11d6BlQ9BDfE0J6Z25FaNTKGpFKNCMr2G/041KpWwBLVe1k08vncseQbKZdXi8x1t9XA45U/Wd43D9wAh3Tal0aiLVzGPusOZ1F+W3TWoqlX/A95+dNef11TsuGful+ctGssldk3fqpfqh+43XTxL42+leSHoF/dWHYGX6maqUEuLX7UB+r/6Llr4LKocbVIeu+hB9QTPfz9fCP8RyWmX4SmbhMFsNtCijV7lVcwejLKlvl0GfCndnWV7/39VBrtTRuUx92oke3GBgKkC5fdGK0YvNK+xenKaDmsHDjNFUM3NMz3ZiXXFuLgojosPVCDEl2W5BjX3Ms+j0GSqACHmh0+RPWyuNm/Qe8vFf9AW7N1uRaxWirrUytqEJnJ4/Flm8hSoiZ2NQBsS6w/yQlC4gCaFo8q4nyY6AFdo4hiwhBXzbNKKvZvktCjSCukRR/BbYVbNwZi2Yh3hGodEacLW8qijiWJODf0P2bhfaiPspPT4lYJBgi/KfcFwCfvyUIgkJOv///8CG/JEepRBLaMFE+2TgrqsJXOVOWHt6g/bFwVLLMVBsMR50dis/39/AlBX+/rMTJkUQrnlxpR2iu0Tp8tATkRYGmDIrcAiRP8PjoWIlb7/0ecTdSCE9Y58+a+n/FovJQTVF4F2jAxMZhTgrM/KVS5BQu6bVbkWY5HXnxRshks3urDdW4RkWp4M4TeLmFK5KF/uHkkiO5Kv96RioH984v/CSDBnG+BwlnU9B+o7Y+0X0Nob+0pLsStxjvPXMy2eCpzhOWV4XbObBHN4UE2sLQ/DIqXhOzxVf38GlTi6aG7EnePO7TRJm9yOfUUcqq1I2iQHrVDqn3TUNRi/lMw8KbMW/3/nqCz/Ef8PoW5Qxcz2yHR/f78EPB2Stbd+ZFmfNTUYILzsb9YNhpaHcaymYrBiNHmFE3Y4ccYJ25Prqm7zHobGHED8/93ZNlWro9vcKivGZs31UiK1k5zjUhexUgbqJb+fUTjxce/7Zly8a5KMC1fX5nfjPgibdvzbXV1jRT2asXvmSAusaLdq1TSIJ8fXINk5AtT34EWPAsfP9IFQqM5K11O6saoHJA==");si=Uint8Array.from(t,t=>t.charCodeAt(0))}},ni=()=>(ii(),si);class ri{constructor(t=0){this.seed=0,this.seed=4*t,ii()}_next(){this.seed=(this.seed+4)%si.length}value(){return this._next(),si[this.seed]/255}vec4(t=new w.Z){return this._next(),t.set(si[this.seed],si[this.seed+1],si[this.seed+2],si[this.seed+3]).mulScalar(1/255)}}var ai=s(43232),oi=s(74644);const li=[new l.e(-1,0,0),new l.e(1,0,0),new l.e(0,-1,0),new l.e(0,1,0),new l.e(0,0,-1),new l.e(0,0,1)];class hi{update(t,e){const s=this.colors,{r:i,g:n,b:r}=t;for(let a=0;a<6;a++)s[3*a]=i,s[3*a+1]=n,s[3*a+2]=r;for(let a=0;a<e.length;a++){const t=e[a];if(t._type===F.kxh)for(let e=0;e<6;e++){const i=Math.max(li[e].dot(t._direction),0)*t._intensity,n=t._color;s[3*e]+=n.r*i,s[3*e+1]+=n.g*i,s[3*e+2]+=n.b*i}}}constructor(){this.colors=new Float32Array(18)}}const ci=new D.N,di=t=>ci.get(t,()=>{const e=ni(),s=Math.sqrt(e.length/4);return((t,e,s,i)=>{const n=new Q.g(t,{name:`${e}${s}`,width:s,height:s,format:x.Lxj,addressU:x.x3I,addressV:x.x3I,type:x.s64,magFilter:x.uhC,minFilter:x.uhC,anisotropy:1,mipmaps:!1});return n.lock().set(i),n.unlock(),n})(t,"BlueNoise",s,e)});class ui{constructor(t,e){this.texture=t,this.cached=!1,this.renderTargets=e}destroy(){this.texture&&(this.texture.destroy(),this.texture=null);const t=this.renderTargets;for(let e=0;e<t.length;e++)t[e].destroy();this.renderTargets.length=0}static create(t,e){let s=null;return s=e._type===F.dGk?this.createCubemap(t,e._shadowResolution,e._shadowType):this.create2dMap(t,e._shadowResolution,e._shadowType),s}static createAtlas(t,e,s){const i=this.create2dMap(t,e,s),n=i.renderTargets,r=n[0];for(let a=0;a<5;a++)n.push(r);return i}static create2dMap(t,e,s){const i=F.$Tp.get(s);let n=i.format;n===x.IQA&&!t.textureFloatRenderable&&t.textureHalfFloatRenderable&&(n=x.qGG);const r=x.s7S.get(n)?.name;let a=x.DrA;s===F._Bn&&(a=t.extTextureFloatLinear?x.DrA:x.uhC),s===F.F3J&&(a=x.uhC);const o=new Q.g(t,{format:n,width:e,height:e,mipmaps:!1,minFilter:a,magFilter:a,addressU:x.vq6,addressV:x.vq6,name:`ShadowMap2D_${r}`});let l=null;return i?.pcf?(o.compareOnRead=!0,o.compareFunc=x.v1A,l=new T.O({depthBuffer:o})):l=new T.O({colorBuffer:o,depth:!0}),t.isWebGPU&&(l.flipY=!0),new ui(o,[l])}static createCubemap(t,e,s){const i=F.$Tp.get(s),n=x.s7S.get(i.format)?.name,r=s===F.F3J,a=r?x.uhC:x.DrA,o=new Q.g(t,{format:i?.format,width:e,height:e,cubemap:!0,mipmaps:!1,minFilter:a,magFilter:a,addressU:x.vq6,addressV:x.vq6,name:`ShadowMapCube_${n}`});r||(o.compareOnRead=!0,o.compareFunc=x.v1A);const l=[];for(let h=0;h<6;h++)r?l.push(new T.O({colorBuffer:o,face:h,depth:!0})):l.push(new T.O({depthBuffer:o,face:h}));return new ui(o,l)}}const fi=[],pi=[],mi=new w.Z,_i=new w.Z;class gi{constructor(t){this.size=Math.floor(1024*t.w),this.used=!1,this.lightId=-1,this.rect=t}}class vi{constructor(t){this.device=t,this.version=1,this.shadowAtlasResolution=2048,this.shadowAtlas=null,this.shadowEdgePixels=3,this.cookieAtlasResolution=4,this.cookieAtlas=new Q.g(this.device,{name:"CookieAtlas",width:this.cookieAtlasResolution,height:this.cookieAtlasResolution,format:x.Mb4,cubemap:!1,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6}),this.cookieRenderTarget=new T.O({colorBuffer:this.cookieAtlas,depth:!1,flipY:!0}),this.slots=[],this.atlasSplit=[],this.cubeSlotsOffsets=[new Jt.Z(0,0),new Jt.Z(0,1),new Jt.Z(1,0),new Jt.Z(1,1),new Jt.Z(2,0),new Jt.Z(2,1)],this.scissorVec=new w.Z,this.allocateShadowAtlas(1),this.allocateCookieAtlas(1),this.allocateUniforms()}destroy(){this.destroyShadowAtlas(),this.destroyCookieAtlas()}destroyShadowAtlas(){this.shadowAtlas?.destroy(),this.shadowAtlas=null}destroyCookieAtlas(){this.cookieAtlas?.destroy(),this.cookieAtlas=null,this.cookieRenderTarget?.destroy(),this.cookieRenderTarget=null}allocateShadowAtlas(t,e=F.Q_7){const s=this.shadowAtlas?.texture.format,i=F.$Tp.get(e).format;if(!this.shadowAtlas||this.shadowAtlas.texture.width!==t||s!==i){this.version++,this.destroyShadowAtlas(),this.shadowAtlas=ui.createAtlas(this.device,t,e),this.shadowAtlas.cached=!0;const s=4/this.shadowAtlasResolution;this.scissorVec.set(s,s,-2*s,-2*s)}}allocateCookieAtlas(t){this.cookieAtlas.width!==t&&(this.cookieRenderTarget.resize(t,t),this.version++)}allocateUniforms(){this._shadowAtlasTextureId=this.device.scope.resolve("shadowAtlasTexture"),this._shadowAtlasParamsId=this.device.scope.resolve("shadowAtlasParams"),this._shadowAtlasParams=new Float32Array(2),this._cookieAtlasTextureId=this.device.scope.resolve("cookieAtlasTexture")}updateUniforms(){const t=this.shadowAtlas.renderTargets[0].depthBuffer;this._shadowAtlasTextureId.setValue(t),this._shadowAtlasParams[0]=this.shadowAtlasResolution,this._shadowAtlasParams[1]=this.shadowEdgePixels,this._shadowAtlasParamsId.setValue(this._shadowAtlasParams),this._cookieAtlasTextureId.setValue(this.cookieAtlas)}subdivide(t,e){let s=e.atlasSplit;if(!s){const e=Math.ceil(Math.sqrt(t));s=pi,s[0]=e,s.length=1}if(i=s,n=this.atlasSplit,i.length!==n.length||!i.every((t,e)=>t===n[e])){this.version++,this.slots.length=0,this.atlasSplit.length=0,this.atlasSplit.push(...s);const t=this.atlasSplit[0];if(t>1){const e=1/t;for(let s=0;s<t;s++)for(let i=0;i<t;i++){const n=new w.Z(s*e,i*e,e,e),r=this.atlasSplit[1+s*t+i];if(r>1)for(let t=0;t<r;t++)for(let s=0;s<r;s++){const i=e/r,a=new w.Z(n.x+t*i,n.y+s*i,i,i);this.slots.push(new gi(a))}else this.slots.push(new gi(n))}}else this.slots.push(new gi(new w.Z(0,0,1,1)));this.slots.sort((t,e)=>e.size-t.size)}var i,n}collectLights(t,e){const s=e.cookiesEnabled,i=e.shadowsEnabled;let n=!1,r=!1;const a=fi;a.length=0;return(s||i)&&(t=>{for(let e=0;e<t.length;e++){const o=t[e];if(o.visibleThisFrame){const t=i&&o.castShadows,e=s&&!!o.cookie;n||=t,r||=e,(t||e)&&a.push(o)}}})(t),a.sort((t,e)=>e.maxScreenSize-t.maxScreenSize),n&&this.allocateShadowAtlas(this.shadowAtlasResolution,e.shadowType),r&&this.allocateCookieAtlas(this.cookieAtlasResolution),(n||r)&&this.subdivide(a.length,e),a}setupSlot(t,e){t.atlasViewport.copy(e);const s=t.numShadowFaces;for(let i=0;i<s;i++)if(t.castShadows||t._cookie){if(mi.copy(e),_i.copy(e),t._type===F.GyL&&mi.add(this.scissorVec),t._type===F.dGk){const t=mi.z/3,e=this.cubeSlotsOffsets[i];mi.x+=t*e.x,mi.y+=t*e.y,mi.z=t,mi.w=t,_i.copy(mi)}if(t.castShadows){const e=t.getRenderData(null,i);e.shadowViewport.copy(mi),e.shadowScissor.copy(_i)}}}assignSlot(t,e,s){t.atlasViewportAllocated=!0;const i=this.slots[e];i.lightId=t.id,i.used=!0,s&&(t.atlasSlotUpdated=!0,t.atlasVersion=this.version,t.atlasSlotIndex=e)}update(t,e){this.shadowAtlasResolution=e.shadowAtlasResolution,this.cookieAtlasResolution=e.cookieAtlasResolution;const s=this.collectLights(t,e);if(s.length>0){const t=this.slots;for(let s=0;s<t.length;s++)t[s].used=!1;const e=Math.min(s.length,t.length);for(let n=0;n<e;n++){const e=s[n];e.castShadows&&(e._shadowMap=this.shadowAtlas);const i=t[e.atlasSlotIndex];if(e.atlasVersion===this.version&&e.id===i?.lightId){const s=t[e.atlasSlotIndex];s.size!==t[n].size||s.used||this.assignSlot(e,e.atlasSlotIndex,!1)}}let i=0;for(let n=0;n<e;n++){for(;i<t.length&&t[i].used;)i++;const e=s[n];e.atlasViewportAllocated||this.assignSlot(e,i,!0);const r=t[e.atlasSlotIndex];this.setupSlot(e,r.rect)}}this.updateUniforms()}}class Si{constructor(){this.cache=new Map}destroy(){this.clear(),this.cache=null}clear(){this.cache.forEach(t=>{t.forEach(t=>{t.destroy()})}),this.cache.clear()}getKey(t){return`${t._type===F.dGk}-${t._shadowType}-${t._shadowResolution}`}get(t,e){const s=this.getKey(e),i=this.cache.get(s);if(i&&i.length)return i.pop();const n=ui.create(t,e);return n.cached=!0,n}add(t,e){const s=this.getKey(t),i=this.cache.get(s);i?i.push(e):this.cache.set(s,[e])}}class yi extends j.A{constructor(t,e,s,i,n){super(t),this.requiresCubemaps=!1,this.shadowRenderer=e,this.light=s,this.face=i,this.applyVsm=n,this.shadowCamera=e.prepareFace(s,null,i),e.setupRenderPass(this,this.shadowCamera,!0)}execute(){this.shadowRenderer.renderFace(this.light,null,this.face,!1)}after(){this.applyVsm&&this.shadowRenderer.renderVsm(this.light,this.shadowCamera)}}class xi{constructor(t,e){this.shadowLights=[],this.renderer=t,this.shadowRenderer=e,this.device=t.device}cull(t,e,s=null){const i=this.renderer.scene.clusteredLightingEnabled;t.visibleThisFrame=!0,i||t._shadowMap||(t._shadowMap=ui.create(this.device,t));const n=t._type,r=n===F.GyL?1:6;for(let o=0;o<r;o++){const r=t.getRenderData(null,o),l=r.shadowCamera;l.nearClip=t.attenuationEnd/1e3,l.farClip=t.attenuationEnd;const h=l._node,c=t._node;if(h.setPosition(c.getPosition()),n===F.GyL)l.fov=2*t._outerConeAngle,h.setRotation(c.getRotation()),h.rotateLocal(-90,0,0);else if(n===F.dGk)if(i){const e=2/(this.shadowRenderer.lightTextureAtlas.shadowAtlasResolution*t.atlasViewport.z/3)*this.shadowRenderer.lightTextureAtlas.shadowEdgePixels;l.fov=Math.atan(1+e)*a.D.RAD_TO_DEG*2}else l.fov=90;this.renderer.updateCameraFrustum(l),this.shadowRenderer.cullShadowCasters(e,t,r.visibleCasters,l,s)}}prepareLights(t,e){let s;for(let i=0;i<e.length;i++){const n=e[i];if(this.shadowRenderer.needsShadowRendering(n)&&n.atlasViewportAllocated){t.push(n);for(let t=0;t<n.numShadowFaces;t++)s=this.shadowRenderer.prepareFace(n,null,t)}}return s}buildNonClusteredRenderPasses(t,e){for(let s=0;s<e.length;s++){const i=e[s];if(this.shadowRenderer.needsShadowRendering(i)){const e=i._type===F.GyL,s=i.numShadowFaces;for(let n=0;n<s;n++){const s=new yi(this.device,this.shadowRenderer,i,n,e);t.addRenderPass(s)}}}}}class Ti extends j.A{constructor(t,e,s,i,n){super(t),this.shadowRenderer=e,this.light=s,this.camera=i,this.allCascadesRendering=n}execute(){const{light:t,camera:e,shadowRenderer:s,allCascadesRendering:i}=this,n=t.numShadowFaces,r=t.shadowUpdateOverrides;for(let a=0;a<n;a++)r?.[a]!==F.Jb9&&s.renderFace(t,e,a,!i),r?.[a]===F.e3T&&(r[a]=F.Jb9)}after(){this.shadowRenderer.renderVsm(this.light,this.camera)}}const wi=new y,bi=new l.e,Ei=new o.$,Ai=[new l.e,new l.e,new l.e,new l.e,new l.e,new l.e,new l.e,new l.e],Ci={min:0,max:0};function Pi(t,e,s){Ai[0].x=Ai[1].x=Ai[2].x=Ai[3].x=e.x,Ai[1].y=Ai[3].y=Ai[7].y=Ai[5].y=e.y,Ai[2].z=Ai[3].z=Ai[6].z=Ai[7].z=e.z,Ai[4].x=Ai[5].x=Ai[6].x=Ai[7].x=s.x,Ai[0].y=Ai[2].y=Ai[4].y=Ai[6].y=s.y,Ai[0].z=Ai[1].z=Ai[4].z=Ai[5].z=s.z;let i=9999999999,n=-9999999999;for(let r=0;r<8;++r){t.transformPoint(Ai[r],Ai[r]);const e=Ai[r].z;e<i&&(i=e),e>n&&(n=e)}return Ci.min=i,Ci.max=n,Ci}class Di{constructor(t,e){this.renderer=t,this.shadowRenderer=e,this.device=t.device}cull(t,e,s,i=null){t.visibleThisFrame=!0,t._shadowMap||(t._shadowMap=ui.create(this.device,t));const n=s._nearClip;this.generateSplitDistances(t,n,Math.min(s._farClip,t.shadowDistance));const r=t.shadowUpdateOverrides;for(let a=0;a<t.numCascades&&r?.[a]!==F.Jb9;a++){const r=t.getRenderData(s,a),o=r.shadowCamera;o.renderTarget=t._shadowMap.renderTargets[0],r.shadowViewport.copy(t.cascades[a]),r.shadowScissor.copy(t.cascades[a]);const l=o._node,h=t._node;l.setPosition(h.getPosition()),l.setRotation(h.getRotation()),l.rotateLocal(-90,0,0);const c=0===a?n:t._shadowCascadeDistances[a-1],d=t._shadowCascadeDistances[a],u=s.getFrustumCorners(c,d);bi.set(0,0,0);const f=s.node.getWorldTransform();for(let t=0;t<8;t++)f.transformPoint(u[t],u[t]),bi.add(u[t]);bi.mulScalar(1/8);let p=0;for(let t=0;t<8;t++){const e=u[t].sub(bi).length();e>p&&(p=e)}const m=l.right,_=l.up,g=l.forward,v=.25*t._shadowResolution/p,S=Math.ceil(bi.dot(_)*v)/v,y=Math.ceil(bi.dot(m)*v)/v,x=_.mulScalar(S),T=m.mulScalar(y),w=bi.dot(g),b=g.mulScalar(w);bi.add2(x,T).add(b),l.setPosition(bi),l.translateLocal(0,0,1e6),o.nearClip=.01,o.farClip=2e6,o.orthoHeight=p,this.renderer.updateCameraFrustum(o),this.shadowRenderer.cullShadowCasters(e,t,r.visibleCasters,o,i);const E=1<<a,A=r.visibleCasters,C=A.length;let P=0;for(let t=0;t<C;t++){const e=A[t];e.shadowCascadeMask&E&&(A[P++]=e,1===P?wi.copy(e.aabb):wi.add(e.aabb))}C!==P&&(A.length=P),Ei.copy(l.getWorldTransform()).invert();const D=Pi(Ei,wi.getMin(),wi.getMax());l.translateLocal(0,0,D.max+.1),o.farClip=D.max-D.min+.2,r.projectionCompensation=p}}generateSplitDistances(t,e,s){t._shadowCascadeDistances.fill(s);for(let i=1;i<t.numCascades;i++){const n=i/t.numCascades,r=e+(s-e)*n,o=e*(s/e)**n,l=a.D.lerp(r,o,t.cascadeDistribution);t._shadowCascadeDistances[i-1]=l}}getLightRenderPass(t,e){let s=null;if(this.shadowRenderer.needsShadowRendering(t)){const i=t.numShadowFaces,n=t.shadowUpdateOverrides;let r,a=!0;for(let s=0;s<i;s++)n?.[s]===F.Jb9&&(a=!1),r=this.shadowRenderer.prepareFace(t,e,s);s=new Ti(this.device,this.shadowRenderer,t,e,a),this.shadowRenderer.setupRenderPass(s,r,a)}return s}}const Li=new Set,Mi=new o.$,Ii=new o.$,Ri=new Float32Array(2),Fi=new w.Z(1,1,0,0),Oi=new o.$;function Ni(t,e){return Math.exp(-t*t/(2*e*e))}class ki{constructor(t,e){this.shadowPassCache=[],this.device=t.device,this.renderer=t,this.lightTextureAtlas=e;const s=this.device.scope;this.sourceId=s.resolve("source"),this.pixelOffsetId=s.resolve("pixelOffset"),this.weightId=s.resolve("weight[0]"),this.blurVsmShader=[{},{}],this.blurVsmWeights={},this.shadowMapLightRadiusId=s.resolve("light_radius"),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this.blendStateWrite=new re.t,this.blendStateNoWrite=new re.t,this.blendStateNoWrite.setColorWrite(!1,!1,!1,!1)}static createShadowCamera(t,e,s){const i=kt.create("ShadowCamera",e,s),n=F.$Tp.get(t),r=n?.vsm??!1,a=n?.pcf??!1;return i.clearColor=r?new p.Q(0,0,0,0):new p.Q(1,1,1,1),i.clearDepthBuffer=!0,i.clearStencilBuffer=!1,i.clearColorBuffer=!a,i}_cullShadowCastersInternal(t,e,s){const i=t.length;for(let n=0;n<i;n++){const i=t[n];i.castShadow&&(i.cull&&!i._isVisible(s)||(i.visibleThisFrame=!0,e.push(i)))}}cullShadowCasters(t,e,s,i,n){if(this.renderer.scene?.fire(F.bJd,i),s.length=0,n)this._cullShadowCastersInternal(n,s,i);else{const n=t.layerList,r=n.length;for(let t=0;t<r;t++){const r=n[t];r._lightsSet.has(e)&&(Li.has(r)||(Li.add(r),this._cullShadowCastersInternal(r.shadowCasters,s,i)))}Li.clear()}s.sort(this.sortCompareShader),this.renderer.scene?.fire(F.OjN,i)}sortCompareShader(t,e){const s=t._sortKeyShadow,i=e._sortKeyShadow;return s===i?e.mesh.id-t.mesh.id:i-s}setupRenderState(t,e){const s=this.renderer.scene.clusteredLightingEnabled?e._isPcf:e._isPcf&&e._type!==F.dGk;t.setBlendState(s?this.blendStateNoWrite:this.blendStateWrite),t.setDepthState(e.shadowDepthState),t.setStencilState(null,null)}dispatchUniforms(t,e,s,i){const n=e._node;t._type!==F.kxh&&(this.renderer.dispatchViewPos(n.getPosition()),this.shadowMapLightRadiusId.setValue(t.attenuationEnd)),Mi.setTRS(n.getPosition(),n.getRotation(),l.e.ONE).invert(),Ii.mul2(e.projectionMatrix,Mi);const r=s.shadowViewport;e.rect=r,e.scissorRect=s.shadowScissor,Oi.setViewport(r.x,r.y,r.z,r.w),s.shadowMatrix.mul2(Oi,Ii),t._type===F.kxh&&t._shadowMatrixPalette.set(s.shadowMatrix.data,16*i)}getShadowPass(t){const e=t._type,s=t._shadowType;let i=this.shadowPassCache[e]?.[s];if(!i){const t=`ShadowPass_${e}_${s}`;i=k.get(this.device).allocate(t,{isShadow:!0,lightType:e,shadowType:s}),this.shadowPassCache[e]||(this.shadowPassCache[e]=[]),this.shadowPassCache[e][s]=i}return i.index}submitCasters(t,e,s){const i=this.device,n=this.renderer,r=n.scene,a=1<<F.vT3,o=this.getShadowPass(e),l=s.shaderParams,h=s.renderTarget.flipY?-1:1,c=t.length;for(let d=0;d<c;d++){const e=t[d],c=e.mesh,u=e.instancingData;if(u&&u.count<=0)continue;e.ensureMaterial(i);const f=e.material;n.setBaseConstants(i,f),n.setSkinning(i,e),f.dirty&&(f.updateUniforms(i,r),f.dirty=!1),n.setupCullMode(!0,h,e),f.setParameters(i),e.setParameters(i,a);const p=e.getShaderInstance(o,0,r,l,this.viewUniformFormat,this.viewBindGroupFormat),m=p.shader;if(m.failed)continue;e._sortKeyShadow=m.id,i.setShader(m),n.setVertexBuffers(i,c),n.setMorphing(i,e.morphInstance),u&&i.setVertexBuffer(u.vertexBuffer),n.setMeshInstanceMatrices(e),n.setupMeshUniformBuffers(p);const _=e.renderStyle,g=e.indirectData?.get(s);i.draw(c.primitive[_],c.indexBuffer[_],u?.count,g),n._shadowDrawCalls++,u&&n._instancedDrawCalls++}}needsShadowRendering(t){const e=t.enabled&&t.castShadows&&t.shadowUpdateMode!==F.Jb9&&t.visibleThisFrame;return t.shadowUpdateMode===F.e3T&&(t.shadowUpdateMode=F.Jb9),e&&(this.renderer._shadowMapUpdates+=t.numShadowFaces),e}getLightRenderData(t,e,s){return t.getRenderData(t._type===F.kxh?e:null,s)}setupRenderPass(t,e,s){const i=e.renderTarget;t.init(i),t.depthStencilOps.clearDepthValue=1,t.depthStencilOps.clearDepth=s,i.depthBuffer?t.depthStencilOps.storeDepth=!0:(t.colorOps.clearValue.copy(e.clearColor),t.colorOps.clear=s,t.depthStencilOps.storeDepth=!1),t.requiresCubemaps=!1}prepareFace(t,e,s){const i=t._type,n=this.getLightRenderData(t,e,s).shadowCamera,r=i===F.kxh?0:s;return n.renderTarget=t._shadowMap.renderTargets[r],n}renderFace(t,e,s,i,n=!0){const r=this.device,a=this.getLightRenderData(t,e,s),o=a.shadowCamera;this.dispatchUniforms(t,o,a,s);const l=o.renderTarget,h=this.renderer;h.setCameraUniforms(o,l),r.supportsUniformBuffers&&h.setupViewUniformBuffers(a.viewBindGroups,this.viewUniformFormat,this.viewBindGroupFormat,null),n?(h.setupViewport(o,l),i&&h.clear(o)):h.clearView(o,l,!0,!1),this.setupRenderState(r,t),this.submitCasters(a.visibleCasters,t,o)}render(t,e,s=!0){if(this.needsShadowRendering(t)){const i=t.numShadowFaces;for(let n=0;n<i;n++)this.prepareFace(t,e,n),this.renderFace(t,e,n,!0,s);this.renderVsm(t,e)}}renderVsm(t,e){if(t._isVsm&&t._vsmBlurSize>1){this.renderer.scene.clusteredLightingEnabled&&t._type!==F.kxh||this.applyVsmBlur(t,e)}}getVsmBlurShader(t,e){const s=this.blurVsmShader;let i=s[t][e];if(!i){this.blurVsmWeights[e]=function(t){const e=(t-1)/6,s=.5*(t-1),i=new Array(t);let n=0;for(let r=0;r<t;++r)i[r]=Ni(r-s,e),n+=i[r];for(let r=0;r<t;++r)i[r]/=n;return i}(e);const n=new Map;n.set("{SAMPLES}",e),1===t&&n.set("GAUSS",""),i=V.createShader(this.device,{uniqueName:`blurVsm${t}${e}`,attributes:{vertex_position:x.JYe},vertexChunk:"fullscreenQuadVS",fragmentChunk:"blurVSMPS",fragmentDefines:n}),s[t][e]=i}return i}applyVsmBlur(t,e){const s=this.device;s.setBlendState(re.t.NOBLEND);const i=t.getRenderData(t._type===F.kxh?e:null,0).shadowCamera.renderTarget,n=this.renderer.shadowMapCache.get(s,t),r=n.renderTargets[0],a=t.vsmBlurMode,o=t._vsmBlurSize,l=this.getVsmBlurShader(a,o);Fi.z=t._shadowResolution-2,Fi.w=Fi.z,this.sourceId.setValue(i.colorBuffer),Ri[0]=1/t._shadowResolution,Ri[1]=0,this.pixelOffsetId.setValue(Ri),a===F.wAR&&this.weightId.setValue(this.blurVsmWeights[o]),Z(s,r,l,null,Fi),this.sourceId.setValue(r.colorBuffer),Ri[1]=Ri[0],Ri[0]=0,this.pixelOffsetId.setValue(Ri),Z(s,i,l,null,Fi),this.renderer.shadowMapCache.add(t,n)}initViewBindGroupFormat(){this.device.supportsUniformBuffers&&!this.viewUniformFormat&&(this.viewUniformFormat=new ai.Q(this.device,[new ai.g("matrix_viewProjection",x.CPw)]),this.viewBindGroupFormat=new oi.a$(this.device,[new oi.D8(x.rb7,x.rXb|x.Jnj)]))}frameUpdate(){this.initViewBindGroupFormat()}}const Bi=[];class Ui{constructor(t){this._empty=null,this._allocated=[],this._clusters=new Map,this.device=t}destroy(){this._empty&&(this._empty.destroy(),this._empty=null),this._allocated.forEach(t=>{t.destroy()}),this._allocated.length=0}get count(){return this._allocated.length}get empty(){if(!this._empty){const t=new Qt(this.device);t.name="ClusterEmpty",t.update([]),this._empty=t}return this._empty}assign(t){Bi.push(...this._allocated),this._allocated.length=0,this._clusters.clear();const e=t.length;for(let s=0;s<e;s++){const e=t[s].renderActions;if(e){const t=e.length;for(let s=0;s<t;s++){const t=e[s];t.lightClusters=null;const i=t.layer;if(i.hasClusteredLights&&i.meshInstances.length){const e=i.getLightIdHash(),s=this._clusters.get(e);let n=s?.lightClusters;n||(n=Bi.pop()??new Qt(this.device),this._allocated.push(n),this._clusters.set(e,t)),t.lightClusters=n}t.lightClusters||(t.lightClusters=this.empty)}}}Bi.forEach(t=>t.destroy()),Bi.length=0}update(t,e){this.assign(t),this._clusters.forEach(t=>{const s=t.layer;t.lightClusters.update(s.clusteredLightsSet,e)})}}const zi=new w.Z,Vi=[];class Gi extends j.A{constructor(t,e){super(t),this._quadRenderer2D=null,this._quadRendererCube=null,this._filteredLights=[],this._forceCopy=!1,this._evtDeviceRestored=null,this._cubeSlotsOffsets=e,this.requiresCubemaps=!1,this.blitTextureId=t.scope.resolve("blitTexture"),this.invViewProjId=t.scope.resolve("invViewProj"),this._evtDeviceRestored=t.on("devicerestored",this.onDeviceRestored,this)}destroy(){this._quadRenderer2D?.destroy(),this._quadRenderer2D=null,this._quadRendererCube?.destroy(),this._quadRendererCube=null,this._evtDeviceRestored?.off(),this._evtDeviceRestored=null}static create(t,e){const s=new Gi(t.device,e);return s.init(t),s.colorOps.clear=!1,s.depthStencilOps.clearDepth=!1,s}onDeviceRestored(){this._forceCopy=!0}update(t){const e=this._filteredLights;this.filter(t,e),this.executeEnabled=e.length>0}filter(t,e){for(let s=0;s<t.length;s++){const i=t[s];i._type!==F.kxh&&(i.atlasViewportAllocated&&(i.atlasSlotUpdated||this._forceCopy)&&i.enabled&&i.cookie&&i.visibleThisFrame&&e.push(i))}this._forceCopy=!1}initInvViewProjMatrices(){if(!Vi.length)for(let t=0;t<6;t++){const e=kt.create(null,F.dGk,t),s=e.projectionMatrix,i=e.node.getLocalTransform().clone().invert();Vi[t]=(new o.$).mul2(s,i).invert()}}get quadRenderer2D(){if(!this._quadRenderer2D){const t=V.createShader(this.device,{uniqueName:"cookieRenderer2d",attributes:{vertex_position:x.JYe},vertexChunk:"cookieBlitVS",fragmentChunk:"cookieBlit2DPS"});this._quadRenderer2D=new $(t)}return this._quadRenderer2D}get quadRendererCube(){if(!this._quadRendererCube){const t=V.createShader(this.device,{uniqueName:"cookieRendererCube",attributes:{vertex_position:x.JYe},vertexChunk:"cookieBlitVS",fragmentChunk:"cookieBlitCubePS"});this._quadRendererCube=new $(t)}return this._quadRendererCube}execute(){const t=this.device;t.setBlendState(re.t.NOBLEND),t.setCullMode(x.pLF),t.setDepthState(q.H.NODEPTH),t.setStencilState();const e=this.renderTarget.colorBuffer.width,s=this._cubeSlotsOffsets,i=this._filteredLights;for(let n=0;n<i.length;n++){const t=i[n],r=t.numShadowFaces,a=r>1?this.quadRendererCube:this.quadRenderer2D;r>1&&this.initInvViewProjMatrices(),this.blitTextureId.setValue(t.cookie);for(let i=0;i<r;i++){if(zi.copy(t.atlasViewport),r>1){const t=zi.z/3,e=s[i];zi.x+=t*e.x,zi.y+=t*e.y,zi.z=t,zi.w=t,this.invViewProjId.setValue(Vi[i].data)}zi.mulScalar(e),a.render(zi)}}i.length=0}}class Hi extends j.A{constructor(t,e,s){super(t),this.requiresCubemaps=!1,this.shadowRenderer=e,this.shadowRendererLocal=s}update(t){const e=this.shadowRendererLocal.shadowLights,s=this.shadowRendererLocal.prepareLights(e,t),i=e.length;this.enabled=i>0,i&&this.shadowRenderer.setupRenderPass(this,s,!1)}execute(){const t=this.shadowRendererLocal.shadowLights,e=t.length;for(let s=0;s<e;s++){const e=t[s];for(let t=0;t<e.numShadowFaces;t++)this.shadowRenderer.renderFace(e,null,t,!0)}t.length=0}}class Wi extends j.A{constructor(t,e,s,i,n){super(t),this.renderer=e,this.frameGraph=null,this.cookiesRenderPass=Gi.create(n.cookieRenderTarget,n.cubeSlotsOffsets),this.beforePasses.push(this.cookiesRenderPass),this.shadowRenderPass=new Hi(t,s,i),this.beforePasses.push(this.shadowRenderPass)}update(t,e,s,i,n){this.frameGraph=t,this.cookiesRenderPass.enabled=s,s&&this.cookiesRenderPass.update(i),this.shadowRenderPass.enabled=e,e&&this.shadowRenderPass.update(n)}destroy(){this.cookiesRenderPass.destroy(),this.cookiesRenderPass=null}execute(){const{renderer:t}=this,{scene:e}=t;t.worldClustersAllocator.update(this.frameGraph.renderPasses,e.lighting)}}let Xi=0;const $i=new o.$,qi=new o.$,ji=new o.$,Yi=new _s.U,Ki=new et,Zi=(new o.$).setScale(1,-1,1),Qi=new Set,Ji=new Set,tn=new b.s,en=(new o.$).set([1,0,0,0,0,1,0,0,0,0,.5,0,0,0,.5,1]),sn=[new Jt.Z(.5,.333333),new Jt.Z(.25,.666667),new Jt.Z(.75,.111111),new Jt.Z(.125,.444444),new Jt.Z(.625,.777778),new Jt.Z(.375,.222222),new Jt.Z(.875,.555556),new Jt.Z(.0625,.888889),new Jt.Z(.5625,.037037),new Jt.Z(.3125,.37037),new Jt.Z(.8125,.703704),new Jt.Z(.1875,.148148),new Jt.Z(.6875,.481481),new Jt.Z(.4375,.814815),new Jt.Z(.9375,.259259),new Jt.Z(.03125,.592593)],nn=new o.$,rn=new o.$,an=new o.$,on=new o.$,ln=new o.$,hn=new o.$,cn=new Set,dn=[],un=[];class fn{constructor(t,e){this.clustersDebugRendered=!1,this.processingMeshInstances=new Set,this.lights=[],this.localLights=[],this.cameraDirShadowLights=new Map,this.dirLightShadows=new Map,this.blueNoise=new ri(123),this.gsplatDirector=null,this.device=t,this.scene=e,this.worldClustersAllocator=new Ui(t),this.lightTextureAtlas=new vi(t),this.shadowMapCache=new Si,this.shadowRenderer=new ki(this,this.lightTextureAtlas),this._shadowRendererLocal=new xi(this,this.shadowRenderer),this._shadowRendererDirectional=new Di(this,this.shadowRenderer),this.scene.clusteredLightingEnabled&&(this._renderPassUpdateClustered=new Wi(this.device,this,this.shadowRenderer,this._shadowRendererLocal,this.lightTextureAtlas)),this.viewUniformFormat=null,this.viewBindGroupFormat=null,this._skinTime=0,this._morphTime=0,this._cullTime=0,this._shadowMapTime=0,this._lightClustersTime=0,this._layerCompositionUpdateTime=0,this._shadowDrawCalls=0,this._skinDrawCalls=0,this._instancedDrawCalls=0,this._shadowMapUpdates=0,this._numDrawCallsCulled=0,this._camerasRendered=0,this._lightClusters=0;const s=t.scope;this.boneTextureId=s.resolve("texture_poseMap"),this.modelMatrixId=s.resolve("matrix_model"),this.normalMatrixId=s.resolve("matrix_normal"),this.viewInvId=s.resolve("matrix_viewInverse"),this.viewPos=new Float32Array(3),this.viewPosId=s.resolve("view_position"),this.projId=s.resolve("matrix_projection"),this.projSkyboxId=s.resolve("matrix_projectionSkybox"),this.viewId=s.resolve("matrix_view"),this.viewId3=s.resolve("matrix_view3"),this.viewProjId=s.resolve("matrix_viewProjection"),this.flipYId=s.resolve("projectionFlipY"),this.tbnBasis=s.resolve("tbnBasis"),this.nearClipId=s.resolve("camera_near"),this.farClipId=s.resolve("camera_far"),this.cameraParams=new Float32Array(4),this.cameraParamsId=s.resolve("camera_params"),this.viewIndexId=s.resolve("view_index"),this.viewIndexId.setValue(0),this.blueNoiseJitterVersion=0,this.blueNoiseJitterVec=new w.Z,this.blueNoiseJitterData=new Float32Array(4),this.blueNoiseJitterId=s.resolve("blueNoiseJitter"),this.blueNoiseTextureId=s.resolve("blueNoiseTex32"),this.alphaTestId=s.resolve("alpha_ref"),this.opacityMapId=s.resolve("texture_opacityMap"),this.exposureId=s.resolve("exposure"),this.twoSidedLightingNegScaleFactorId=s.resolve("twoSidedLightingNegScaleFactor"),this.twoSidedLightingNegScaleFactorId.setValue(0),this.morphPositionTex=s.resolve("morphPositionTex"),this.morphNormalTex=s.resolve("morphNormalTex"),this.morphTexParams=s.resolve("morph_tex_params"),this.lightCube=new hi,this.constantLightCube=s.resolve("lightCube[0]")}destroy(){this.shadowRenderer=null,this._shadowRendererLocal=null,this._shadowRendererDirectional=null,this.shadowMapCache.destroy(),this.shadowMapCache=null,this._renderPassUpdateClustered?.destroy(),this._renderPassUpdateClustered=null,this.lightTextureAtlas.destroy(),this.lightTextureAtlas=null}setupViewport(t,e){const s=this.device,i=e?e.width:s.width,n=e?e.height:s.height,r=t.rect;let a=Math.floor(r.x*i),o=Math.floor(r.y*n),l=Math.floor(r.z*i),h=Math.floor(r.w*n);if(s.setViewport(a,o,l,h),t._scissorRectClear){const e=t.scissorRect;a=Math.floor(e.x*i),o=Math.floor(e.y*n),l=Math.floor(e.z*i),h=Math.floor(e.w*n)}s.setScissor(a,o,l,h)}setCameraUniforms(t,e){const s=e?.flipY;let i=null;if(t.xr&&t.xr.session){const e=t._node?.parent?.getWorldTransform()||null;i=t.xr.views.list;for(let s=0;s<i.length;s++){const n=i[s];n.updateTransforms(e),t.frustum.setFromMat4(n.projViewOffMat)}}else{let i=t.projectionMatrix;t.calculateProjection&&t.calculateProjection(i,F._Sr);let n=t.getProjectionMatrixSkybox();s&&(i=nn.mul2(Zi,i),n=rn.mul2(Zi,n)),this.device.isWebGPU&&(i=an.mul2(en,i),n=on.mul2(en,n));const{jitter:r}=t;let a=0,o=0;if(r>0){const t=e?e.width:this.device.width,s=e?e.height:this.device.height,l=sn[this.device.renderVersion%sn.length];a=r*(2*l.x-1)/t,o=r*(2*l.y-1)/s,i=ln.copy(i),i.data[8]=a,i.data[9]=o,n=hn.copy(n),n.data[8]=a,n.data[9]=o,this.blueNoiseJitterVersion!==this.device.renderVersion&&(this.blueNoiseJitterVersion=this.device.renderVersion,this.blueNoise.vec4(this.blueNoiseJitterVec))}const h=r>0?this.blueNoiseJitterVec:w.Z.ZERO;if(this.blueNoiseJitterData[0]=h.x,this.blueNoiseJitterData[1]=h.y,this.blueNoiseJitterData[2]=h.z,this.blueNoiseJitterData[3]=h.w,this.blueNoiseJitterId.setValue(this.blueNoiseJitterData),this.projId.setValue(i.data),this.projSkyboxId.setValue(n.data),t.calculateTransform)t.calculateTransform(qi,F._Sr);else{const e=t._node.getPosition(),s=t._node.getRotation();qi.setTRS(e,s,l.e.ONE)}this.viewInvId.setValue(qi.data),ji.copy(qi).invert(),this.viewId.setValue(ji.data),Yi.setFromMat4(ji),this.viewId3.setValue(Yi.data),$i.mul2(i,ji),this.viewProjId.setValue($i.data),t._storeShaderMatrices($i,a,o,this.device.renderVersion),this.flipYId.setValue(s?-1:1),this.dispatchViewPos(t._node.getPosition()),t.frustum.setFromMat4($i)}this.tbnBasis.setValue(s?-1:1);const n=t._nearClip,r=t._farClip;return this.nearClipId.setValue(n),this.farClipId.setValue(r),this.cameraParams[0]=1/r,this.cameraParams[1]=r,this.cameraParams[2]=n,this.cameraParams[3]=t.projection===F.RDY?1:0,this.cameraParamsId.setValue(this.cameraParams),this.exposureId.setValue(this.scene.physicalUnits?t.getExposure():this.scene.exposure),i}clear(t,e,s,i){const n=(e??t._clearColorBuffer?x.Sue:0)|(s??t._clearDepthBuffer?x.YKI:0)|(i??t._clearStencilBuffer?x.zwO:0);if(n){this.device.clear({color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,stencil:t._clearStencil,flags:n})}}setCamera(t,e,s,i=null){this.setCameraUniforms(t,e),this.clearView(t,e,s,!1)}clearView(t,e,s,i){const n=this.device;if(n.setRenderTarget(e),n.updateBegin(),i&&(n.setColorWrite(!0,!0,!0,!0),n.setDepthWrite(!0)),this.setupViewport(t,e),s){const e=t._clearOptions;n.clear(e||{color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,flags:(t._clearColorBuffer?x.Sue:0)|(t._clearDepthBuffer?x.YKI:0)|(t._clearStencilBuffer?x.zwO:0),stencil:t._clearStencil})}}setupCullMode(t,e,s){const i=s.material;let n=x.pLF;if(t){let t=1;i.cull!==x.CWw&&i.cull!==x.K1r||(t=e*s.flipFacesFactor*s.node.worldScaleSign),n=t<0?i.cull===x.CWw?x.K1r:x.CWw:i.cull}this.device.setCullMode(n),n===x.pLF&&i.cull===x.pLF&&this.twoSidedLightingNegScaleFactorId.setValue(s.node.worldScaleSign)}updateCameraFrustum(t){if(t.xr&&t.xr.views.list.length){const e=t.xr.views.list[0];return $i.mul2(e.projMat,e.viewOffMat),void t.frustum.setFromMat4($i)}const e=t.projectionMatrix;if(t.calculateProjection&&t.calculateProjection(e,F._Sr),t.calculateTransform)t.calculateTransform(qi,F._Sr);else{const e=t._node.getPosition(),s=t._node.getRotation();qi.setTRS(e,s,l.e.ONE),this.viewInvId.setValue(qi.data)}ji.copy(qi).invert(),$i.mul2(e,ji),t.frustum.setFromMat4($i)}setBaseConstants(t,e){t.setCullMode(e.cull),e.opacityMap&&this.opacityMapId.setValue(e.opacityMap),(e.opacityMap||e.alphaTest>0)&&this.alphaTestId.setValue(e.alphaTest)}updateCpuSkinMatrices(t){Xi++;const e=t.length;if(0!==e)for(let s=0;s<e;s++){const e=t[s].skinInstance;e&&(e.updateMatrices(t[s].node,Xi),e._dirty=!0)}}updateGpuSkinMatrices(t){for(const e of t){const t=e.skinInstance;t&&t._dirty&&(t.updateMatrixPalette(e.node,Xi),t._dirty=!1)}}updateMorphing(t){for(const e of t){const t=e.morphInstance;t&&t._dirty&&t.update()}}updateGSplats(t){for(const e of t)e.gsplatInstance?.update()}gpuUpdate(t){this.updateGpuSkinMatrices(t),this.updateMorphing(t),this.updateGSplats(t)}setVertexBuffers(t,e){t.setVertexBuffer(e.vertexBuffer)}setMorphing(t,e){e&&(e.prepareRendering(t),t.setVertexBuffer(e.morph.vertexBufferIds),this.morphPositionTex.setValue(e.texturePositions),this.morphNormalTex.setValue(e.textureNormals),this.morphTexParams.setValue(e._textureParams))}setSkinning(t,e){const s=e.skinInstance;if(s){this._skinDrawCalls++;const t=s.boneTexture;this.boneTextureId.setValue(t)}}dispatchViewPos(t){const e=this.viewPos;e[0]=t.x,e[1]=t.y,e[2]=t.z,this.viewPosId.setValue(e)}initViewBindGroupFormat(t){if(this.device.supportsUniformBuffers&&!this.viewUniformFormat){const e=[new ai.g("matrix_view",x.CPw),new ai.g("matrix_viewInverse",x.CPw),new ai.g("matrix_projection",x.CPw),new ai.g("matrix_projectionSkybox",x.CPw),new ai.g("matrix_viewProjection",x.CPw),new ai.g("matrix_view3",x.xzR),new ai.g("cubeMapRotationMatrix",x.xzR),new ai.g("view_position",x.XAr),new ai.g("skyboxIntensity",x.GF5),new ai.g("exposure",x.GF5),new ai.g("textureBias",x.GF5),new ai.g("view_index",x.GF5)];t&&e.push(new ai.g("clusterCellsCountByBoundsSize",x.XAr),new ai.g("clusterTextureSize",x.XAr),new ai.g("clusterBoundsMin",x.XAr),new ai.g("clusterBoundsDelta",x.XAr),new ai.g("clusterCellsDot",x.XAr),new ai.g("clusterCellsMax",x.XAr),new ai.g("shadowAtlasParams",x.Qhq),new ai.g("clusterMaxCells",x.pG9),new ai.g("clusterSkip",x.GF5)),this.viewUniformFormat=new ai.Q(this.device,e);const s=[new oi.D8(x.rb7,x.rXb|x.Jnj)];this.viewBindGroupFormat=new oi.a$(this.device,s)}}setupViewUniforms(t,e){this.projId.setValue(t.projMat.data),this.projSkyboxId.setValue(t.projMat.data),this.viewId.setValue(t.viewOffMat.data),this.viewInvId.setValue(t.viewInvOffMat.data),this.viewId3.setValue(t.viewMat3.data),this.viewProjId.setValue(t.projViewOffMat.data),this.viewPosId.setValue(t.positionData),this.viewIndexId.setValue(e)}setupViewUniformBuffers(t,e,s,i){const{device:n}=this,r=i?.length??1;for(;t.length<r;){const i=new A.D(n,e,!1),r=new b.T(n,s,i);t.push(r)}if(i)for(let a=0;a<r;a++){const e=i[a];this.setupViewUniforms(e,a);const s=t[a];s.defaultUniformBuffer.update(),s.update()}else{const e=t[0];e.defaultUniformBuffer.update(),e.update()}i||n.setBindGroup(x.PyI,t[0])}setupMeshUniformBuffers(t){const e=this.device;if(e.supportsUniformBuffers){const s=t.getBindGroup(e);s.update(),e.setBindGroup(x.pNk,s);t.getUniformBuffer(e).update(tn),e.setBindGroup(x.xBw,tn.bindGroup,tn.offsets)}}setMeshInstanceMatrices(t,e=!1){const s=t.node.worldTransform;this.modelMatrixId.setValue(s.data),e&&this.normalMatrixId.setValue(t.node.normalMatrix.data)}cull(t,e,s){const i=s.opaque;i.length=0;const n=s.transparent;n.length=0;const r=t.frustumCulling,a=e.length;for(let o=0;o<a;o++){const s=e[o];if(s.visible){if(!r||!s.cull||s._isVisible(t)){s.visibleThisFrame=!0;(s.transparent?n:i).push(s),(s.skinInstance||s.morphInstance||s.gsplatInstance)&&(this.processingMeshInstances.add(s),s.gsplatInstance&&s.gsplatInstance.cameras.push(t))}}}}collectLights(t){this.lights.length=0,this.localLights.length=0;const e=this.scene._stats,s=t.layerList.length;for(let i=0;i<s;i++){const e=t.layerList[i];if(!Ji.has(e)){Ji.add(e);const t=e._lights;for(let e=0;e<t.length;e++){const s=t[e];Qi.has(s)||(Qi.add(s),this.lights.push(s),s._type!==F.kxh&&this.localLights.push(s))}}}e.lights=this.lights.length,Qi.clear(),Ji.clear()}cullLights(t,e){const s=this.scene.clusteredLightingEnabled,i=this.scene.physicalUnits;for(let n=0;n<e.length;n++){const r=e[n];if(r.enabled)if(r._type!==F.kxh)if(r.getBoundingSphere(Ki),t.frustum.containsSphere(Ki)){r.visibleThisFrame=!0,r.usePhysicalUnits=i;const e=t.getScreenSize(Ki);r.maxScreenSize=Math.max(r.maxScreenSize,e)}else s||r.castShadows&&!r.shadowMap&&(r.visibleThisFrame=!0);else r.usePhysicalUnits=this.scene.physicalUnits}}cullShadowmaps(t){const e=this.scene.clusteredLightingEnabled;for(let i=0;i<this.localLights.length;i++){const s=this.localLights[i];s._type!==F.kxh&&(e?s.atlasSlotUpdated&&s.shadowUpdateMode===F.Jb9&&(s.shadowUpdateMode=F.e3T):s.shadowUpdateMode===F.Jb9&&s.castShadows&&(s.getRenderData(null,0).shadowCamera.renderTarget||(s.shadowUpdateMode=F.e3T)),s.visibleThisFrame&&s.castShadows&&s.shadowUpdateMode!==F.Jb9&&this._shadowRendererLocal.cull(s,t))}this.cameraDirShadowLights.clear();const s=t.cameras;for(let i=0;i<s.length;i++){const e=s[i];if(e.enabled){const s=e.camera;let i;const n=s.layers;for(let e=0;e<n.length;e++){const r=t.getLayerById(n[e]);if(r){const e=r.splitLights[F.kxh];for(let n=0;n<e.length;n++){const r=e[n];r.castShadows&&!cn.has(r)&&(cn.add(r),i=i??[],i.push(r),this._shadowRendererDirectional.cull(r,t,s))}}}i&&this.cameraDirShadowLights.set(s,i),cn.clear()}}}cullComposition(t){const{scene:e}=this;this.processingMeshInstances.clear();const s=t.cameras.length;this._camerasRendered+=s;for(let i=0;i<s;i++){const s=t.cameras[i];e?.fire(F.bJd,s);const n=s.renderTarget;s.frameUpdate(n),this.updateCameraFrustum(s.camera);const r=s.layers;for(let e=0;e<r.length;e++){const i=t.getLayerById(r[e]);if(i&&i.enabled){this.cullLights(s.camera,i._lights);const t=i.getCulledInstances(s.camera);this.cull(s.camera,i.meshInstances,t)}}e?.fire(F.OjN,s)}e.clusteredLightingEnabled&&this.updateLightTextureAtlas(),this.cullShadowmaps(t),e?.fire(F.UQL)}updateShaders(t,e){const s=t.length;for(let i=0;i<s;i++){const s=t[i].material;if(s&&!cn.has(s)&&(cn.add(s),s.getShaderVariant!==Ie.i.prototype.getShaderVariant)){if(e&&(!s.useLighting||s.emitter&&!s.emitter.lighting))continue;s.clearVariants()}}cn.clear()}updateFrameUniforms(){this.blueNoiseTextureId.setValue(di(this.device))}beginFrame(t){const e=this.scene,s=e.updateShaders||this.device._shadersDirty,i=t.layerList,n=i.length;for(let o=0;o<n;o++){const t=i[o].meshInstances,e=t.length;for(let i=0;i<e;i++){const e=t[i];e.visibleThisFrame=!1,s&&dn.push(e),e.skinInstance&&un.push(e)}}if(s){const t=!e.updateShaders||!this.device._shadersDirty;this.updateShaders(dn,t),e.updateShaders=!1,this.device._shadersDirty=!1,e._shaderVersion++}this.updateFrameUniforms(),this.updateCpuSkinMatrices(un),dn.length=0,un.length=0;const r=this.lights,a=r.length;for(let o=0;o<a;o++)r[o].beginFrame()}updateLightTextureAtlas(){this.lightTextureAtlas.update(this.localLights,this.scene.lighting)}updateLayerComposition(t){const e=t.layerList.length,s=this.scene._shaderVersion;for(let i=0;i<e;i++){t.layerList[i]._shaderVersion=s}t._update()}frameUpdate(){this.clustersDebugRendered=!1,this.initViewBindGroupFormat(this.scene.clusteredLightingEnabled),this.dirLightShadows.clear()}}class pn{constructor(){this.camera=null,this.layer=null,this.transparent=!1,this.renderTarget=null,this.lightClusters=null,this.clearColor=!1,this.clearDepth=!1,this.clearStencil=!1,this.triggerPostprocess=!1,this.firstCameraUse=!1,this.lastCameraUse=!1,this.viewBindGroups=[],this.useCameraPasses=!1}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}setupClears(t,e){this.clearColor=t?.clearColorBuffer||e.clearColorBuffer,this.clearDepth=t?.clearDepthBuffer||e.clearDepthBuffer,this.clearStencil=t?.clearStencilBuffer||e.clearStencilBuffer}}class mn extends j.A{constructor(t,e,s,i){super(t),this.renderActions=[],this.noDepthClear=!1,this.layerComposition=e,this.scene=s,this.renderer=i}get rendersAnything(){return this.renderActions.length>0}addRenderAction(t){this.renderActions.push(t)}addLayer(t,e,s,i=!0){const n=new pn;if(n.renderTarget=this.renderTarget,n.camera=t,n.layer=e,n.transparent=s,i){const s=0===this.renderActions.length;n.setupClears(s?t:void 0,e)}this.addRenderAction(n)}addLayers(t,e,s,i,n,r=!0){const{layerList:a,subLayerList:o}=t;let l=i,h=s;for(;h<a.length;){const t=a[h],s=o[h];if(e.camera.layersSet.has(t.id)&&(this.addLayer(e,t,s,l),l=!1),h++,t.id===n&&s===r)break}return h}updateDirectionalShadows(){const{renderer:t,renderActions:e}=this;for(let s=0;s<e.length;s++){const i=e[s].camera.camera,n=this.renderer.cameraDirShadowLights.get(i);if(n)for(let e=0;e<n.length;e++){const s=n[e];if(t.dirLightShadows.get(s)!==i){t.dirLightShadows.set(s,i);const e=t._shadowRendererDirectional.getLightRenderPass(s,i);e&&this.beforePasses.push(e)}}}}updateClears(){const t=this.renderActions[0];if(t){const e=t.camera.camera,s=e.fullSizeClearRect;this.setClearColor(s&&t.clearColor?e.clearColor:void 0),this.setClearDepth(s&&t.clearDepth&&!this.noDepthClear?e.clearDepth:void 0),this.setClearStencil(s&&t.clearStencil?e.clearStencil:void 0)}}frameUpdate(){super.frameUpdate(),this.updateDirectionalShadows(),this.updateClears()}before(){const{renderActions:t}=this;for(let e=0;e<t.length;e++){const s=t[e];s.firstCameraUse&&this.scene.fire(F.VUe,s.camera)}}execute(){const{layerComposition:t,renderActions:e}=this;for(let s=0;s<e.length;s++){const i=e[s],n=i.layer;t.isEnabled(n,i.transparent)&&this.renderRenderAction(i,0===s)}}after(){for(let t=0;t<this.renderActions.length;t++){const e=this.renderActions[t];e.lastCameraUse&&this.scene.fire(F.s0F,e.camera)}this.beforePasses.length=0}renderRenderAction(t,e){const{renderer:s,scene:i}=this,n=s.device,{layer:r,transparent:a,camera:o}=t;if(o){const l=o.gammaCorrection,h=o.toneMapping;void 0!==this.gammaCorrection&&(o.gammaCorrection=this.gammaCorrection),void 0!==this.toneMapping&&(o.toneMapping=this.toneMapping),i.fire(F.l3T,o,r,a);const c={lightClusters:t.lightClusters},d=o.camera.shaderPassInfo?.index??F.OPe;e&&o.camera.fullSizeClearRect||(c.clearColor=t.clearColor,c.clearDepth=t.clearDepth,c.clearStencil=t.clearStencil);const u=t.renderTarget??n.backBuffer;s.renderForwardLayer(o.camera,u,r,a,d,t.viewBindGroups,c),n.setBlendState(re.t.NOBLEND),n.setStencilState(null,null),n.setAlphaToCoverage(!1),i.fire(F._Oe,o,r,a),void 0!==this.gammaCorrection&&(o.gammaCorrection=l),void 0!==this.toneMapping&&(o.toneMapping=h)}}}class _n extends j.A{constructor(t,e,s){super(t),this.renderer=e,this.renderAction=s,this.requiresCubemaps=!1}execute(){this.renderAction.camera.onPostprocessing()}}const gn=[[],[],[]],vn=new p.Q,Sn={drawCalls:[],shaderInstances:[],isNewMaterial:[],lightMaskChanged:[],clear:function(){this.drawCalls.length=0,this.shaderInstances.length=0,this.isNewMaterial.length=0,this.lightMaskChanged.length=0}};class yn extends fn{constructor(t,e){super(t,e);const s=this.device;this._forwardDrawCalls=0,this._materialSwitches=0,this._depthMapTime=0,this._forwardTime=0,this._sortTime=0;const i=s.scope;this.fogColorId=i.resolve("fog_color"),this.fogStartId=i.resolve("fog_start"),this.fogEndId=i.resolve("fog_end"),this.fogDensityId=i.resolve("fog_density"),this.ambientId=i.resolve("light_globalAmbient"),this.skyboxIntensityId=i.resolve("skyboxIntensity"),this.cubeMapRotationMatrixId=i.resolve("cubeMapRotationMatrix"),this.pcssDiskSamplesId=i.resolve("pcssDiskSamples[0]"),this.pcssSphereSamplesId=i.resolve("pcssSphereSamples[0]"),this.lightColorId=[],this.lightDir=[],this.lightDirId=[],this.lightShadowMapId=[],this.lightShadowMatrixId=[],this.lightShadowParamsId=[],this.lightShadowIntensity=[],this.lightRadiusId=[],this.lightPos=[],this.lightPosId=[],this.lightWidth=[],this.lightWidthId=[],this.lightHeight=[],this.lightHeightId=[],this.lightInAngleId=[],this.lightOutAngleId=[],this.lightCookieId=[],this.lightCookieIntId=[],this.lightCookieMatrixId=[],this.lightCookieOffsetId=[],this.lightShadowSearchAreaId=[],this.lightCameraParamsId=[],this.lightSoftShadowParamsId=[],this.shadowMatrixPaletteId=[],this.shadowCascadeDistancesId=[],this.shadowCascadeCountId=[],this.shadowCascadeBlendId=[],this.screenSizeId=i.resolve("uScreenSize"),this._screenSize=new Float32Array(4),this.fogColor=new Float32Array(3),this.ambientColor=new Float32Array(3),this.pcssDiskSamples=function(t){const e=[];for(let s=0;s<t;++s){const i=Math.sqrt(s+.5)/Math.sqrt(t);e.push(i)}return e}(16),this.pcssSphereSamples=function(t){const e=[];for(let s=0;s<t;s++){const i=s/t,n=Math.sqrt(i*i);e.push(n)}return e}(16)}destroy(){super.destroy()}dispatchGlobalLights(t){const e=this.ambientColor;if(vn.linear(t.ambientLight),e[0]=vn.r,e[1]=vn.g,e[2]=vn.b,t.physicalUnits)for(let s=0;s<3;s++)e[s]*=t.ambientLuminance;this.ambientId.setValue(e),this.skyboxIntensityId.setValue(t.physicalUnits?t.skyboxLuminance:t.skyboxIntensity),this.cubeMapRotationMatrixId.setValue(t._skyboxRotationMat3.data)}_resolveLight(t,e){const s=`light${e}`;this.lightColorId[e]=t.resolve(`${s}_color`),this.lightDir[e]=new Float32Array(3),this.lightDirId[e]=t.resolve(`${s}_direction`),this.lightShadowMapId[e]=t.resolve(`${s}_shadowMap`),this.lightShadowMatrixId[e]=t.resolve(`${s}_shadowMatrix`),this.lightShadowParamsId[e]=t.resolve(`${s}_shadowParams`),this.lightShadowIntensity[e]=t.resolve(`${s}_shadowIntensity`),this.lightShadowSearchAreaId[e]=t.resolve(`${s}_shadowSearchArea`),this.lightRadiusId[e]=t.resolve(`${s}_radius`),this.lightPos[e]=new Float32Array(3),this.lightPosId[e]=t.resolve(`${s}_position`),this.lightWidth[e]=new Float32Array(3),this.lightWidthId[e]=t.resolve(`${s}_halfWidth`),this.lightHeight[e]=new Float32Array(3),this.lightHeightId[e]=t.resolve(`${s}_halfHeight`),this.lightInAngleId[e]=t.resolve(`${s}_innerConeAngle`),this.lightOutAngleId[e]=t.resolve(`${s}_outerConeAngle`),this.lightCookieId[e]=t.resolve(`${s}_cookie`),this.lightCookieIntId[e]=t.resolve(`${s}_cookieIntensity`),this.lightCookieMatrixId[e]=t.resolve(`${s}_cookieMatrix`),this.lightCookieOffsetId[e]=t.resolve(`${s}_cookieOffset`),this.lightCameraParamsId[e]=t.resolve(`${s}_cameraParams`),this.lightSoftShadowParamsId[e]=t.resolve(`${s}_softShadowParams`),this.shadowMatrixPaletteId[e]=t.resolve(`${s}_shadowMatrixPalette[0]`),this.shadowCascadeDistancesId[e]=t.resolve(`${s}_shadowCascadeDistances`),this.shadowCascadeCountId[e]=t.resolve(`${s}_shadowCascadeCount`),this.shadowCascadeBlendId[e]=t.resolve(`${s}_shadowCascadeBlend`)}setLTCDirectionalLight(t,e,s,i,n){this.lightPos[e][0]=i.x-s.x*n,this.lightPos[e][1]=i.y-s.y*n,this.lightPos[e][2]=i.z-s.z*n,this.lightPosId[e].setValue(this.lightPos[e]);const r=t.transformVector(new l.e(-.5,0,0));this.lightWidth[e][0]=r.x*n,this.lightWidth[e][1]=r.y*n,this.lightWidth[e][2]=r.z*n,this.lightWidthId[e].setValue(this.lightWidth[e]);const a=t.transformVector(new l.e(0,0,.5));this.lightHeight[e][0]=a.x*n,this.lightHeight[e][1]=a.y*n,this.lightHeight[e][2]=a.z*n,this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchDirectLights(t,e,s){let i=0;const n=this.device.scope;for(let r=0;r<t.length;r++){if(!(t[r].mask&e))continue;const a=t[r],o=a._node.getWorldTransform();if(this.lightColorId[i]||this._resolveLight(n,i),this.lightColorId[i].setValue(a._colorLinear),o.getY(a._direction).mulScalar(-1),a._direction.normalize(),this.lightDir[i][0]=a._direction.x,this.lightDir[i][1]=a._direction.y,this.lightDir[i][2]=a._direction.z,this.lightDirId[i].setValue(this.lightDir[i]),a.shape!==F.j06&&this.setLTCDirectionalLight(o,i,a._direction,s._node.getPosition(),s.farClip),a.castShadows){const t=a.getRenderData(s,0),e=a._getUniformBiasValues(t);this.lightShadowMapId[i].setValue(t.shadowBuffer),this.lightShadowMatrixId[i].setValue(t.shadowMatrix.data),this.shadowMatrixPaletteId[i].setValue(a._shadowMatrixPalette),this.shadowCascadeDistancesId[i].setValue(a._shadowCascadeDistances),this.shadowCascadeCountId[i].setValue(a.numCascades),this.shadowCascadeBlendId[i].setValue(1-a.cascadeBlend),this.lightShadowIntensity[i].setValue(a.shadowIntensity),this.lightSoftShadowParamsId[i].setValue(a._softShadowParams);t.shadowCamera.renderTarget&&this.lightShadowSearchAreaId[i].setValue(a.penumbraSize/t.shadowCamera.renderTarget.width*t.projectionCompensation);const n=a._shadowCameraParams;n.length=4,n[0]=0,n[1]=t.shadowCamera._farClip,n[2]=t.shadowCamera._nearClip,n[3]=1,this.lightCameraParamsId[i].setValue(n);const r=a._shadowRenderParams;r.length=4,r[0]=a._shadowResolution,r[1]=e.normalBias,r[2]=e.bias,r[3]=0,this.lightShadowParamsId[i].setValue(r)}i++}return i}setLTCPositionalLight(t,e){const s=t.transformVector(new l.e(-.5,0,0));this.lightWidth[e][0]=s.x,this.lightWidth[e][1]=s.y,this.lightWidth[e][2]=s.z,this.lightWidthId[e].setValue(this.lightWidth[e]);const i=t.transformVector(new l.e(0,0,.5));this.lightHeight[e][0]=i.x,this.lightHeight[e][1]=i.y,this.lightHeight[e][2]=i.z,this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchOmniLight(t,e,s){const i=e._node.getWorldTransform();if(this.lightColorId[s]||this._resolveLight(t,s),this.lightRadiusId[s].setValue(e.attenuationEnd),this.lightColorId[s].setValue(e._colorLinear),i.getTranslation(e._position),this.lightPos[s][0]=e._position.x,this.lightPos[s][1]=e._position.y,this.lightPos[s][2]=e._position.z,this.lightPosId[s].setValue(this.lightPos[s]),e.shape!==F.j06&&this.setLTCPositionalLight(i,s),e.castShadows){const t=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(t.shadowBuffer);const i=e._getUniformBiasValues(t),n=e._shadowRenderParams;n.length=4,n[0]=e._shadowResolution,n[1]=i.normalBias,n[2]=i.bias,n[3]=1/e.attenuationEnd,this.lightShadowParamsId[s].setValue(n),this.lightShadowIntensity[s].setValue(e.shadowIntensity);const r=e.penumbraSize/t.shadowCamera.renderTarget.width;this.lightShadowSearchAreaId[s].setValue(r);const a=e._shadowCameraParams;a.length=4,a[0]=0,a[1]=t.shadowCamera._farClip,a[2]=t.shadowCamera._nearClip,a[3]=0,this.lightCameraParamsId[s].setValue(a)}e._cookie&&(this.lightCookieId[s].setValue(e._cookie),this.lightShadowMatrixId[s].setValue(i.data),this.lightCookieIntId[s].setValue(e.cookieIntensity))}dispatchSpotLight(t,e,s){const i=e._node.getWorldTransform();if(this.lightColorId[s]||this._resolveLight(t,s),this.lightInAngleId[s].setValue(e._innerConeAngleCos),this.lightOutAngleId[s].setValue(e._outerConeAngleCos),this.lightRadiusId[s].setValue(e.attenuationEnd),this.lightColorId[s].setValue(e._colorLinear),i.getTranslation(e._position),this.lightPos[s][0]=e._position.x,this.lightPos[s][1]=e._position.y,this.lightPos[s][2]=e._position.z,this.lightPosId[s].setValue(this.lightPos[s]),e.shape!==F.j06&&this.setLTCPositionalLight(i,s),i.getY(e._direction).mulScalar(-1),e._direction.normalize(),this.lightDir[s][0]=e._direction.x,this.lightDir[s][1]=e._direction.y,this.lightDir[s][2]=e._direction.z,this.lightDirId[s].setValue(this.lightDir[s]),e.castShadows){const t=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(t.shadowBuffer),this.lightShadowMatrixId[s].setValue(t.shadowMatrix.data);const i=e._getUniformBiasValues(t),n=e._shadowRenderParams;n.length=4,n[0]=e._shadowResolution,n[1]=i.normalBias,n[2]=i.bias,n[3]=1/e.attenuationEnd,this.lightShadowParamsId[s].setValue(n),this.lightShadowIntensity[s].setValue(e.shadowIntensity);const r=e.penumbraSize/t.shadowCamera.renderTarget.width,a=t.shadowCamera._fov*Math.PI/180,o=1/Math.tan(a/2);this.lightShadowSearchAreaId[s].setValue(r*o);const l=e._shadowCameraParams;l.length=4,l[0]=0,l[1]=t.shadowCamera._farClip,l[2]=t.shadowCamera._nearClip,l[3]=0,this.lightCameraParamsId[s].setValue(l)}if(e._cookie){if(!e.castShadows){const t=kt.evalSpotCookieMatrix(e);this.lightShadowMatrixId[s].setValue(t.data)}this.lightCookieId[s].setValue(e._cookie),this.lightCookieIntId[s].setValue(e.cookieIntensity),e._cookieTransform&&(e._cookieTransformUniform[0]=e._cookieTransform.x,e._cookieTransformUniform[1]=e._cookieTransform.y,e._cookieTransformUniform[2]=e._cookieTransform.z,e._cookieTransformUniform[3]=e._cookieTransform.w,this.lightCookieMatrixId[s].setValue(e._cookieTransformUniform),e._cookieOffsetUniform[0]=e._cookieOffset.x,e._cookieOffsetUniform[1]=e._cookieOffset.y,this.lightCookieOffsetId[s].setValue(e._cookieOffsetUniform))}}dispatchLocalLights(t,e,s){let i=s;const n=this.device.scope,r=t[F.dGk],a=r.length;for(let h=0;h<a;h++){const t=r[h];t.mask&e&&(this.dispatchOmniLight(n,t,i),i++)}const o=t[F.GyL],l=o.length;for(let h=0;h<l;h++){const t=o[h];t.mask&e&&(this.dispatchSpotLight(n,t,i),i++)}}renderForwardPrepareMaterials(t,e,s,i,n,r){const a=t.fogParams??this.scene.fog,o=t.shaderParams;o.fog=a.type,o.srgbRenderTarget=e?.isColorBufferSrgb(0)??!1;const l=(t,e,s,i)=>{Sn.drawCalls.push(t),Sn.shaderInstances.push(e),Sn.isNewMaterial.push(s),Sn.lightMaskChanged.push(i)};Sn.clear();const h=this.device,c=this.scene,d=c.clusteredLightingEnabled,u=n?.getLightHash(d)??0;let f,p,m=null;const _=s.length;for(let g=0;g<_;g++){const t=s[g],e=t.instancingData;if(e&&e.count<=0)continue;t.ensureMaterial(h);const n=t.material,a=t._shaderDefs,d=t.mask;n&&n===m&&a!==f&&(m=null),n!==m&&(this._materialSwitches++,n._scene=c,n.dirty&&(n.updateUniforms(h,c),n.dirty=!1));const _=t.getShaderInstance(r,u,c,o,this.viewUniformFormat,this.viewBindGroupFormat,i);l(t,_,n!==m,!m||d!==p),m=n,f=a,p=d}return Sn}renderForwardInternal(t,e,s,i,n,r,a){const o=this.device,l=1<<i,h=r?-1:1,c=this.scene.clusteredLightingEnabled,d=t.xr?.session&&t.xr.views.list.length?t.xr.views.list:null,u=e.drawCalls.length;for(let f=0;f<u;f++){const i=e.drawCalls[f],r=e.isNewMaterial[f],p=e.lightMaskChanged[f],m=e.shaderInstances[f],_=i.material,g=i.mask;if(m.shader.failed)continue;if(r){const e=!1;if(o.setShader(m.shader,e),_.setParameters(o),p){const e=this.dispatchDirectLights(s[F.kxh],g,t);c||this.dispatchLocalLights(s,g,e)}this.alphaTestId.setValue(_.alphaTest),o.setBlendState(_.blendState),o.setDepthState(_.depthState),o.setAlphaToCoverage(_.alphaToCoverage)}this.setupCullMode(t._cullFaces,h,i);const v=i.stencilFront??_.stencilFront,S=i.stencilBack??_.stencilBack;o.setStencilState(v,S),i.setParameters(o,l),o.scope.resolve("meshInstanceId").setValue(i.id);const y=i.mesh;this.setVertexBuffers(o,y),this.setMorphing(o,i.morphInstance),this.setSkinning(o,i);const T=i.instancingData;T&&o.setVertexBuffer(T.vertexBuffer),this.setMeshInstanceMatrices(i,!0),this.setupMeshUniformBuffers(m);const w=i.renderStyle,b=y.indexBuffer[w];n?.(i,f);const E=i.indirectData?.get(t);if(d)for(let t=0;t<d.length;t++){const e=d[t];if(o.setViewport(e.viewport.x,e.viewport.y,e.viewport.z,e.viewport.w),o.supportsUniformBuffers){const e=a[t];o.setBindGroup(x.PyI,e)}else this.setupViewUniforms(e,t);const s=0===t,n=t===d.length-1;o.draw(y.primitive[w],b,T?.count,E,s,n),this._forwardDrawCalls++,i.instancingData&&this._instancedDrawCalls++}else o.draw(y.primitive[w],b,T?.count,E),this._forwardDrawCalls++,i.instancingData&&this._instancedDrawCalls++;f<u-1&&!e.isNewMaterial[f+1]&&_.setParameters(o,i.parameters)}}renderForward(t,e,s,i,n,r,a,o,l){const h=this.renderForwardPrepareMaterials(t,e,s,i,a,n);this.renderForwardInternal(t,h,i,n,r,o,l),Sn.clear()}renderForwardLayer(t,e,s,i,n,r,a={}){const{scene:o,device:l}=this,h=o.clusteredLightingEnabled;let c,d;if(this.setupViewport(t,e),s){s.sortVisible(t,i);const e=s.getCulledInstances(t);c=i?e.transparent:e.opaque,o.immediate.onPreRenderLayer(s,c,i),s.requiresLightCube&&(this.lightCube.update(o.ambientLight,s._lights),this.constantLightCube.setValue(this.lightCube.colors)),d=s.splitLights}else c=a.meshInstances,d=a.splitLights??gn;if(h){(a.lightClusters??this.worldClustersAllocator.empty).activate(),s&&(this.clustersDebugRendered||o.lighting.debugLayer!==s.id||(this.clustersDebugRendered=!0))}o._activeCamera=t;const u=t.fogParams??this.scene.fog;this.setFogConstants(u);const f=this.setCameraUniforms(t,e);l.supportsUniformBuffers&&this.setupViewUniformBuffers(r,this.viewUniformFormat,this.viewBindGroupFormat,f);const p=a.clearColor??!1,m=a.clearDepth??!1,_=a.clearStencil??!1;(p||m||_)&&this.clear(t,p,m,_);const g=!!(t._flipFaces^e?.flipY),v=this._forwardDrawCalls;this.renderForward(t,e,c,d,n,null,s,g,r),s&&(s._forwardDrawCalls+=this._forwardDrawCalls-v)}setFogConstants(t){if(t.type!==F.qXo){vn.linear(t.color);const e=this.fogColor;e[0]=vn.r,e[1]=vn.g,e[2]=vn.b,this.fogColorId.setValue(e),t.type===F.ZSA?(this.fogStartId.setValue(t.start),this.fogEndId.setValue(t.end)):this.fogDensityId.setValue(t.density)}}setSceneConstants(){const t=this.scene;this.dispatchGlobalLights(t);const e=this.device;this._screenSize[0]=e.width,this._screenSize[1]=e.height,this._screenSize[2]=1/e.width,this._screenSize[3]=1/e.height,this.screenSizeId.setValue(this._screenSize),this.pcssDiskSamplesId.setValue(this.pcssDiskSamples),this.pcssSphereSamplesId.setValue(this.pcssSphereSamples)}buildFrameGraph(t,e){const s=this.scene;if(t.reset(),s.clusteredLightingEnabled){const{shadowsEnabled:e,cookiesEnabled:i}=s.lighting;this._renderPassUpdateClustered.update(t,e,i,this.lights,this.localLights),t.addRenderPass(this._renderPassUpdateClustered)}else this._shadowRendererLocal.buildNonClusteredRenderPasses(t,this.localLights);let i=0,n=!0,r=null;const a=e._renderActions;for(let o=i;o<a.length;o++){const s=a[o],{layer:l,camera:h}=s;if(s.useCameraPasses)h.camera.renderPasses.forEach(e=>{t.addRenderPass(e)});else{const c=l.id===F.$9T,d=c&&(h.renderSceneColorMap||h.renderSceneDepthMap);n&&(n=!1,i=o,r=s.renderTarget);const u=a[o+1],f=!!u&&(!u.useCameraPasses&&u.layer.id===F.$9T)&&(h.renderSceneColorMap||h.renderSceneDepthMap),p=!!u&&(u.firstCameraUse&&this.cameraDirShadowLights.has(u.camera.camera));if(!u||u.renderTarget!==r||p||f||d){if(c&&i===o||this.addMainRenderPass(t,e,r,i,o),c){if(h.renderSceneColorMap){const e=h.camera.renderPassColorGrab;e.source=h.renderTarget,t.addRenderPass(e)}h.renderSceneDepthMap&&t.addRenderPass(h.camera.renderPassDepthGrab)}if(s.triggerPostprocess&&h?.onPostprocessing){const e=new _n(this.device,this,s);t.addRenderPass(e)}n=!0}}}}addMainRenderPass(t,e,s,i,n){const r=new mn(this.device,e,this.scene,this);r.init(s);const a=e._renderActions;for(let o=i;o<=n;o++)r.addRenderAction(a[o]);t.addRenderPass(r)}update(t){this.frameUpdate(),this.shadowRenderer.frameUpdate(),this.scene._updateSkyMesh(),this.updateLayerComposition(t),this.collectLights(t),this.beginFrame(t),this.setSceneConstants(),this.gsplatDirector?.update(t),this.cullComposition(t),this.gpuUpdate(this.processingMeshInstances)}}class xn{addRenderPass(t){t.frameUpdate();const e=t.beforePasses;for(let i=0;i<e.length;i++){const t=e[i];t.enabled&&this.addRenderPass(t)}t.enabled&&this.renderPasses.push(t);const s=t.afterPasses;for(let i=0;i<s.length;i++){const t=s[i];t.enabled&&this.addRenderPass(t)}}reset(){this.renderPasses.length=0}compile(){const t=this.renderTargetMap,e=this.renderPasses;for(let n=0;n<e.length;n++){const s=e[n],i=s.renderTarget;if(void 0!==i){const e=t.get(i);if(e){const t=s.colorArrayOps.length;for(let i=0;i<t;i++){s.colorArrayOps[i].clear||(e.colorArrayOps[i].store=!0)}s.depthStencilOps.clearDepth||(e.depthStencilOps.storeDepth=!0),s.depthStencilOps.clearStencil||(e.depthStencilOps.storeStencil=!0)}t.set(i,s)}}for(let n=0;n<e.length-1;n++){const t=e[n],s=t.renderTarget,i=e[n+1];s===i.renderTarget&&void 0!==s&&(i.depthStencilOps.clearDepth||i.depthStencilOps.clearStencil||i.colorArrayOps.some(t=>t.clear)||t.afterPasses.length>0||i.beforePasses.length>0||(t._skipEnd=!0,i._skipStart=!0))}let s=null,i=null;for(let n=0;n<e.length;n++){const t=e[n],r=t.renderTarget,a=r?.colorBuffer;if(a?.cubemap){if(s===a){const t=i.colorArrayOps.length;for(let e=0;e<t;e++)i.colorArrayOps[e].mipmaps=!1}s=r.colorBuffer,i=t}else t.requiresCubemaps&&(s=null,i=null)}t.clear()}render(t){this.compile();const e=this.renderPasses;for(let s=0;s<e.length;s++)e[s].render()}constructor(){this.renderPasses=[],this.renderTargetMap=new Map}}class Tn{constructor(t,e){this.texture0=t,this.texture1=e}destroy(){this.texture0?.destroy(),this.texture1?.destroy()}}const wn=new D.N;class bn{static createTexture(t,e,s,i=""){return new Q.g(t,{name:`AreaLightLUT${i}`,width:s,height:s,format:e,addressU:x.vq6,addressV:x.vq6,type:x.s64,magFilter:x.DrA,minFilter:x.uhC,anisotropy:1,mipmaps:!1})}static applyTextures(t,e,s){wn.remove(t),wn.get(t,()=>new Tn(e,e===s?null:s)),t.scope.resolve("areaLightsLutTex1").setValue(e),t.scope.resolve("areaLightsLutTex2").setValue(s)}static createPlaceholder(t){const e=bn.createTexture(t,x.WBN,2,"placeholder");e.lock().fill(0),e.unlock(),bn.applyTextures(t,e,e)}static set(t,e,s){function i(t,e,s){const i=bn.createTexture(t,s,64);return i.lock().set(e),i.unlock(),i}function n(t){const e=t.length,s=new Uint16Array(e),i=vt.float2Half;for(let n=0;n<e;n++)s[n]=i(t[n]);return s}const r=s,a=n(e),o=n(r),l=i(t,a,x.WBN),h=i(t,o,x.WBN);bn.applyTextures(t,l,h)}}var En=s(98647);const An=(t,e)=>t.priority-e.priority,Cn=t=>t.sort(An);class Pn extends r.J{constructor(t="Untitled"){super(),this.layerList=[],this.layerIdMap=new Map,this.layerNameMap=new Map,this.layerOpaqueIndexMap=new Map,this.layerTransparentIndexMap=new Map,this.subLayerList=[],this.subLayerEnabled=[],this.cameras=[],this.camerasSet=new Set,this._renderActions=[],this._dirty=!1,this.name=t,this._opaqueOrder={},this._transparentOrder={}}destroy(){this.destroyRenderActions()}destroyRenderActions(){this._renderActions.forEach(t=>t.destroy()),this._renderActions.length=0}markDirty(){this._dirty=!0}_update(){const t=this.layerList.length;if(!this._dirty)for(let e=0;e<t;e++)if(this.layerList[e]._dirtyComposition){this._dirty=!0;break}if(this._dirty){this._dirty=!1,this.cameras.length=0,this.camerasSet.clear();for(let s=0;s<t;s++){const t=this.layerList[s];t._dirtyComposition=!1;for(let e=0;e<t.cameras.length;e++){const s=t.cameras[e];this.camerasSet.has(s.camera)||(this.camerasSet.add(s.camera),this.cameras.push(s))}}this.cameras.length>1&&Cn(this.cameras);let e=0;this.destroyRenderActions();for(let s=0;s<this.cameras.length;s++){const i=this.cameras[s];if(i.camera.renderPasses.length>0){this.addDummyRenderAction(e,i),e++;continue}let n=!0;const r=e;let a=null,o=!1;for(let s=0;s<t;s++){const t=this.layerList[s];if(t.enabled&&this.subLayerEnabled[s]&&t.cameras.length>0&&i.layers.indexOf(t.id)>=0){o||t.id!==i.disablePostEffectsLayer||(o=!0,a&&(a.triggerPostprocess=!0));const r=this.subLayerList[s];a=this.addRenderAction(e,t,r,i,n,o),e++,n=!1}}r<e&&(a.lastCameraUse=!0),!o&&a&&(a.triggerPostprocess=!0),i.renderTarget&&i.postEffectsEnabled&&this.propagateRenderTarget(r-1,i)}this._logRenderActions()}}getNextRenderAction(t){const e=new pn;return this._renderActions.push(e),e}addDummyRenderAction(t,e){const s=this.getNextRenderAction(t);s.camera=e,s.useCameraPasses=!0}addRenderAction(t,e,s,i,n,r){let a=e.id!==F.$9T?i.renderTarget:null,o=!1;const l=this._renderActions;for(let u=t-1;u>=0;u--)if(l[u].camera===i&&l[u].renderTarget===a){o=!0;break}r&&i.postEffectsEnabled&&(a=null);const h=this.getNextRenderAction(t);h.triggerPostprocess=!1,h.layer=e,h.transparent=s,h.camera=i,h.renderTarget=a,h.firstCameraUse=n,h.lastCameraUse=!1;const c=n||!o,d=e.clearColorBuffer||e.clearDepthBuffer||e.clearStencilBuffer;return(c||d)&&h.setupClears(c?i:void 0,e),h}propagateRenderTarget(t,e){for(let s=t;s>=0;s--){const t=this._renderActions[s],i=t.layer;if(t.renderTarget&&i.id!==F.$9T)break;if(i.id===F.$9T)continue;if(t.useCameraPasses)break;const n=t?.camera.camera;if(n&&(!e.camera.rect.equals(n.rect)||!e.camera.scissorRect.equals(n.scissorRect)))break;t.renderTarget=e.renderTarget}}_logRenderActions(){}_isLayerAdded(t){return this.layerIdMap.get(t.id)===t}_isSublayerAdded(t,e){return void 0!==(e?this.layerTransparentIndexMap:this.layerOpaqueIndexMap).get(t)}push(t){this._isLayerAdded(t)||(this.layerList.push(t),this.layerList.push(t),this._opaqueOrder[t.id]=this.subLayerList.push(!1)-1,this._transparentOrder[t.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t))}insert(t,e){if(this._isLayerAdded(t))return;this.layerList.splice(e,0,t,t),this.subLayerList.splice(e,0,!1,!0);const s=this.layerList.length;this._updateOpaqueOrder(e,s-1),this._updateTransparentOrder(e,s-1),this.subLayerEnabled.splice(e,0,!0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t)}remove(t){let e=this.layerList.indexOf(t);for(delete this._opaqueOrder[e],delete this._transparentOrder[e];e>=0;)this.layerList.splice(e,1),this.subLayerList.splice(e,1),this.subLayerEnabled.splice(e,1),e=this.layerList.indexOf(t),this._dirty=!0,this.fire("remove",t);const s=this.layerList.length;this._updateOpaqueOrder(0,s-1),this._updateTransparentOrder(0,s-1),this._updateLayerMaps()}pushOpaque(t){this._isSublayerAdded(t,!1)||(this.layerList.push(t),this._opaqueOrder[t.id]=this.subLayerList.push(!1)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t))}insertOpaque(t,e){if(this._isSublayerAdded(t,!1))return;this.layerList.splice(e,0,t),this.subLayerList.splice(e,0,!1);const s=this.subLayerList.length;this._updateOpaqueOrder(e,s-1),this.subLayerEnabled.splice(e,0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t)}removeOpaque(t){for(let e=0,s=this.layerList.length;e<s;e++)if(this.layerList[e]===t&&!this.subLayerList[e]){this.layerList.splice(e,1),this.subLayerList.splice(e,1),s--,this._updateOpaqueOrder(e,s-1),this.subLayerEnabled.splice(e,1),this._dirty=!0,this.layerList.indexOf(t)<0&&this.fire("remove",t);break}this._updateLayerMaps()}pushTransparent(t){this._isSublayerAdded(t,!0)||(this.layerList.push(t),this._transparentOrder[t.id]=this.subLayerList.push(!0)-1,this.subLayerEnabled.push(!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t))}insertTransparent(t,e){if(this._isSublayerAdded(t,!0))return;this.layerList.splice(e,0,t),this.subLayerList.splice(e,0,!0);const s=this.subLayerList.length;this._updateTransparentOrder(e,s-1),this.subLayerEnabled.splice(e,0,!0),this._updateLayerMaps(),this._dirty=!0,this.fire("add",t)}removeTransparent(t){for(let e=0,s=this.layerList.length;e<s;e++)if(this.layerList[e]===t&&this.subLayerList[e]){this.layerList.splice(e,1),this.subLayerList.splice(e,1),s--,this._updateTransparentOrder(e,s-1),this.subLayerEnabled.splice(e,1),this._dirty=!0,this.layerList.indexOf(t)<0&&this.fire("remove",t);break}this._updateLayerMaps()}getOpaqueIndex(t){return this.layerOpaqueIndexMap.get(t)??-1}getTransparentIndex(t){return this.layerTransparentIndexMap.get(t)??-1}isEnabled(t,e){if(t.enabled){const s=e?this.getTransparentIndex(t):this.getOpaqueIndex(t);if(s>=0)return this.subLayerEnabled[s]}return!1}_updateLayerMaps(){this.layerIdMap.clear(),this.layerNameMap.clear(),this.layerOpaqueIndexMap.clear(),this.layerTransparentIndexMap.clear();for(let t=0;t<this.layerList.length;t++){const e=this.layerList[t];this.layerIdMap.set(e.id,e),this.layerNameMap.set(e.name,e);(this.subLayerList[t]?this.layerTransparentIndexMap:this.layerOpaqueIndexMap).set(e,t)}}getLayerById(t){return this.layerIdMap.get(t)??null}getLayerByName(t){return this.layerNameMap.get(t)??null}_updateOpaqueOrder(t,e){for(let s=t;s<=e;s++)!1===this.subLayerList[s]&&(this._opaqueOrder[this.layerList[s].id]=s)}_updateTransparentOrder(t,e){for(let s=t;s<=e;s++)!0===this.subLayerList[s]&&(this._transparentOrder[this.layerList[s].id]=s)}_sortLayersDescending(t,e,s){let i=-1,n=-1;for(let r=0,a=t.length;r<a;r++){const e=t[r];s.hasOwnProperty(e)&&(i=Math.max(i,s[e]))}for(let r=0,a=e.length;r<a;r++){const t=e[r];s.hasOwnProperty(t)&&(n=Math.max(n,s[t]))}return-1===i&&-1!==n?1:-1===n&&-1!==i?-1:n-i}sortTransparentLayers(t,e){return this._sortLayersDescending(t,e,this._transparentOrder)}sortOpaqueLayers(t,e){return this._sortLayersDescending(t,e,this._opaqueOrder)}}const Dn=new class extends R{generateKey(t){const e=t.shaderDesc,s=e.vertexGLSL?(0,I.s)(e.vertexGLSL):0,i=e.fragmentGLSL?(0,I.s)(e.fragmentGLSL):0,n=e.vertexWGSL?(0,I.s)(e.vertexWGSL):0,r=e.fragmentWGSL?(0,I.s)(e.fragmentWGSL):0,a=R.definesHash(t.defines),o=t.shaderChunks?.key??"";let l=`${e.uniqueName}_${a}_${s}_${i}_${n}_${r}_${o}`;return t.skin&&(l+="_skin"),t.useInstancing&&(l+="_inst"),t.useMorphPosition&&(l+="_morphp"),t.useMorphNormal&&(l+="_morphn"),t.useMorphTextureBasedInt&&(l+="_morphi"),l}createAttributesDefinition(t,e){const s=e.shaderDesc.attributes,i=s?{...s}:void 0;e.skin&&(i.vertex_boneWeights=x.Hn_,i.vertex_boneIndices=x.aVd),(e.useMorphPosition||e.useMorphNormal)&&(i.morph_vertex_id=x.FHg),t.attributes=i}createVertexDefinition(t,e,s,i){const n=e.shaderDesc,r=new Map(s);r.set("transformInstancingVS","");const a=new Map(e.defines);e.skin&&a.set("SKIN",!0),e.useInstancing&&a.set("INSTANCING",!0),(e.useMorphPosition||e.useMorphNormal)&&(a.set("MORPHING",!0),e.useMorphTextureBasedInt&&a.set("MORPHING_INT",!0),e.useMorphPosition&&a.set("MORPHING_POSITION",!0),e.useMorphNormal&&a.set("MORPHING_NORMAL",!0)),t.vertexCode=i?n.vertexWGSL:n.vertexGLSL,t.vertexIncludes=r,t.vertexDefines=a}createFragmentDefinition(t,e,s,i){const n=e.shaderDesc,r=new Map(s),a=new Map(e.defines);t.fragmentCode=i?n.fragmentWGSL:n.fragmentGLSL,t.fragmentIncludes=r,t.fragmentDefines=a}createShaderDefinition(t,e){const s=e.shaderDesc,i=t.isWebGPU&&!!s.vertexWGSL&&!!s.fragmentWGSL&&(e.shaderChunks?.useWGSL??!0),n={name:`ShaderMaterial-${s.uniqueName}`,shaderLanguage:i?x.g80:x.BzK,fragmentOutputTypes:s.fragmentOutputTypes,meshUniformBufferFormat:s.meshUniformBufferFormat,meshBindGroupFormat:s.meshBindGroupFormat},r=i?x.g80:x.BzK,a=U.merge(B.W.get(t,r),e.shaderChunks[r]);return this.createAttributesDefinition(n,e),this.createVertexDefinition(n,e,a,i),this.createFragmentDefinition(n,e,a,i),P.C.createDefinition(t,n)}};class Ln extends Ie.i{constructor(t){super(),this.shaderDesc=t}set shaderDesc(t){if(this._shaderDesc=void 0,t&&(this._shaderDesc={uniqueName:t.uniqueName,attributes:t.attributes,fragmentOutputTypes:t.fragmentOutputTypes,vertexGLSL:t.vertexGLSL,fragmentGLSL:t.fragmentGLSL,vertexWGSL:t.vertexWGSL,fragmentWGSL:t.fragmentWGSL},t.vertexCode||t.fragmentCode||t.shaderLanguage)){const e=t.shaderLanguage??x.BzK;e===x.BzK?(this._shaderDesc.vertexGLSL=t.vertexCode,this._shaderDesc.fragmentGLSL=t.fragmentCode):e===x.g80&&(this._shaderDesc.vertexWGSL=t.vertexCode,this._shaderDesc.fragmentWGSL=t.fragmentCode)}this.clearVariants()}get shaderDesc(){return this._shaderDesc}copy(t){return super.copy(t),this.shaderDesc=t.shaderDesc,this}getShaderVariant(t){const{objDefs:e}=t,s={defines:V.getCoreDefines(this,t),skin:0!==(e&F.Df4),useInstancing:0!==(e&F.Q$0),useMorphPosition:0!==(e&F.Ckn),useMorphNormal:0!==(e&F.ov8),useMorphTextureBasedInt:0!==(e&F.Yrs),pass:t.pass,gamma:t.cameraShaderParams.shaderOutputGamma,toneMapping:t.cameraShaderParams.toneMapping,fog:t.cameraShaderParams.fog,shaderDesc:this.shaderDesc,shaderChunks:this.shaderChunks},i=new E(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat),n=M(t.device);return n.register("shader-material",Dn),n.getProgram("shader-material",s,i,this.userId)}}const Mn=(t,e)=>{const s=e.length/3,i=t.length/3,n=new l.e,r=new l.e,a=new l.e,o=new l.e,h=new l.e,c=new l.e,d=[];for(let l=0;l<t.length;l++)d[l]=0;for(let l=0;l<s;l++){const s=e[3*l],i=e[3*l+1],u=e[3*l+2];n.set(t[3*s],t[3*s+1],t[3*s+2]),r.set(t[3*i],t[3*i+1],t[3*i+2]),a.set(t[3*u],t[3*u+1],t[3*u+2]),o.sub2(r,n),h.sub2(a,n),c.cross(o,h).normalize(),d[3*s]+=c.x,d[3*s+1]+=c.y,d[3*s+2]+=c.z,d[3*i]+=c.x,d[3*i+1]+=c.y,d[3*i+2]+=c.z,d[3*u]+=c.x,d[3*u+1]+=c.y,d[3*u+2]+=c.z}for(let l=0;l<i;l++){const t=d[3*l],e=d[3*l+1],s=d[3*l+2],i=1/Math.sqrt(t*t+e*e+s*s);d[3*l]*=i,d[3*l+1]*=i,d[3*l+2]*=i}return d},In=(t,e,s,i)=>{const n=i.length/3,r=t.length/3,a=new l.e,o=new l.e,h=new l.e,c=new Jt.Z,d=new Jt.Z,u=new Jt.Z,f=new l.e,p=new l.e,m=new Float32Array(3*r),_=new Float32Array(3*r),g=[];for(let l=0;l<n;l++){const e=i[3*l],n=i[3*l+1],r=i[3*l+2];a.set(t[3*e],t[3*e+1],t[3*e+2]),o.set(t[3*n],t[3*n+1],t[3*n+2]),h.set(t[3*r],t[3*r+1],t[3*r+2]),c.set(s[2*e],s[2*e+1]),d.set(s[2*n],s[2*n+1]),u.set(s[2*r],s[2*r+1]);const g=o.x-a.x,v=h.x-a.x,S=o.y-a.y,y=h.y-a.y,x=o.z-a.z,T=h.z-a.z,w=d.x-c.x,b=u.x-c.x,E=d.y-c.y,A=u.y-c.y,C=w*A-b*E;if(0===C)f.set(0,1,0),p.set(1,0,0);else{const t=1/C;f.set((A*g-E*v)*t,(A*S-E*y)*t,(A*x-E*T)*t),p.set((w*v-b*g)*t,(w*y-b*S)*t,(w*T-b*x)*t)}m[3*e+0]+=f.x,m[3*e+1]+=f.y,m[3*e+2]+=f.z,m[3*n+0]+=f.x,m[3*n+1]+=f.y,m[3*n+2]+=f.z,m[3*r+0]+=f.x,m[3*r+1]+=f.y,m[3*r+2]+=f.z,_[3*e+0]+=p.x,_[3*e+1]+=p.y,_[3*e+2]+=p.z,_[3*n+0]+=p.x,_[3*n+1]+=p.y,_[3*n+2]+=p.z,_[3*r+0]+=p.x,_[3*r+1]+=p.y,_[3*r+2]+=p.z}const v=new l.e,S=new l.e,y=new l.e,x=new l.e;for(let l=0;l<r;l++){y.set(e[3*l],e[3*l+1],e[3*l+2]),v.set(m[3*l],m[3*l+1],m[3*l+2]),S.set(_[3*l],_[3*l+1],_[3*l+2]);const t=y.dot(v);x.copy(y).mulScalar(t),x.sub2(v,x).normalize(),g[4*l]=x.x,g[4*l+1]=x.y,g[4*l+2]=x.z,x.cross(y,v),g[4*l+3]=x.dot(S)<0?-1:1}return g};class Rn{calculateNormals(){this.normals=Mn(this.positions,this.indices)}calculateTangents(){this.tangents=In(this.positions,this.normals,this.uvs,this.indices)}}const Fn=4/64;class On extends Rn{constructor(t={}){super();const e=t.halfExtents??new l.e(.5,.5,.5),s=t.widthSegments??1,i=t.lengthSegments??1,n=t.heightSegments??1,r=t.yOffset??0,a=-e.y+r,o=e.y+r,h=[new l.e(-e.x,a,e.z),new l.e(e.x,a,e.z),new l.e(e.x,o,e.z),new l.e(-e.x,o,e.z),new l.e(e.x,a,-e.z),new l.e(-e.x,a,-e.z),new l.e(-e.x,o,-e.z),new l.e(e.x,o,-e.z)],c=[[0,1,3],[4,5,7],[3,2,6],[1,0,4],[1,4,2],[5,0,6]],d=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]],u=1,f=2,p=3,m=4,_=5,g=[],v=[],S=[],y=[];let x=0;const T=(t,e,s)=>{const i=new l.e,n=new l.e,r=new l.e,a=new l.e;for(let o=0;o<=e;o++)for(let l=0;l<=s;l++){i.lerp(h[c[t][0]],h[c[t][1]],o/e),n.lerp(h[c[t][0]],h[c[t][2]],l/s),r.sub2(n,h[c[t][0]]),a.add2(i,r);let u=o/e,f=l/s;g.push(a.x,a.y,a.z),v.push(d[t][0],d[t][1],d[t][2]),S.push(u,1-f),u=.875*u+Fn,f=.875*f+Fn,u/=3,f/=3,u+=t%3/3,f+=Math.floor(t/3)/3,o<e&&l<s&&(y.push(x+s+1,x+1,x),y.push(x+s+1,x+s+2,x+1)),x++}};T(0,s,n),T(u,s,n),T(f,s,i),T(p,s,i),T(m,i,n),T(_,i,n),this.positions=g,this.normals=v,this.uvs=S,this.uvs1=S,this.indices=y,t.calculateTangents&&(this.tangents=In(g,v,S,y))}}class Nn extends Rn{constructor(t={}){super();const e=t.radius??.5,s=t.latitudeBands??16,i=t.longitudeBands??16,n=[],r=[],a=[],o=[];for(let l=0;l<=s;l++){const t=l*Math.PI/s,o=Math.sin(t),h=Math.cos(t);for(let c=0;c<=i;c++){const t=2*c*Math.PI/i-Math.PI/2,d=Math.sin(t),u=Math.cos(t)*o,f=h,p=d*o,m=1-c/i,_=1-l/s;n.push(u*e,f*e,p*e),r.push(u,f,p),a.push(m,1-_)}}for(let l=0;l<s;++l)for(let t=0;t<i;++t){const e=l*(i+1)+t,s=e+i+1;o.push(e+1,s,e),o.push(e+1,s+1,s)}this.positions=n,this.normals=r,this.uvs=a,this.uvs1=a,this.indices=o,t.calculateTangents&&(this.tangents=In(n,r,a,o))}}class kn extends Nn{constructor(t={}){const e=.5;super({radius:e,latitudeBands:t.latitudeBands??16,longitudeBands:t.longitudeBands??16});const s=this.positions;for(let i=0;i<s.length;i+=3){const t=s[i]/e;let n=s[i+1]/e;const r=s[i+2]/e;n<0&&(n*=.3,t*t+r*r<.9025&&(n=-.1)),n+=.1,n*=e,s[i+1]=n}}}class Bn{static create(t,e){switch(e){case F.Sm5:return Bn.box(t);case F.QNk:return Bn.dome(t)}return Bn.infinite(t)}static infinite(t){return Us.fromGeometry(t,new On(t))}static box(t){return Us.fromGeometry(t,new On({yOffset:.5}))}static dome(t){const e=new kn({latitudeBands:50,longitudeBands:50});return e.normals=void 0,e.uvs=void 0,Us.fromGeometry(t,e)}}class Un{constructor(t,e,s,i,n){this.meshInstance=null,this._depthWrite=!1;const r=new Ln({uniqueName:"SkyMaterial",vertexGLSL:B.W.get(t,x.BzK).get("skyboxVS"),fragmentGLSL:B.W.get(t,x.BzK).get("skyboxPS"),vertexWGSL:B.W.get(t,x.g80).get("skyboxVS"),fragmentWGSL:B.W.get(t,x.g80).get("skyboxPS"),attributes:{aPosition:x.JYe}});r.setDefine("{SKYBOX_DECODE_FNC}",ne.decodeFunc(i.encoding)),n!==F.llp&&r.setDefine("SKYMESH",""),i.cubemap&&r.setDefine("SKY_CUBEMAP",""),r.setParameter("skyboxHighlightMultiplier",e.skyboxHighlightMultiplier),i.cubemap?r.setParameter("texture_cubeMap",i):(r.setParameter("texture_envAtlas",i),r.setParameter("mipLevel",e.skyboxMip)),r.cull=x.CWw,r.depthWrite=this._depthWrite;const a=e.layers.getLayerById(F.CTD);if(a){const e=Bn.create(t,n),i=new pt(e,r,s);this.meshInstance=i,i.cull=!1,i.pick=!1,a.addMeshInstances([i]),this.skyLayer=a}}destroy(){this.meshInstance&&(this.skyLayer&&this.skyLayer.removeMeshInstances([this.meshInstance]),this.meshInstance.destroy(),this.meshInstance=null)}set depthWrite(t){this._depthWrite=t,this.meshInstance&&(this.meshInstance.material.depthWrite=t)}get depthWrite(){return this._depthWrite}}class zn{constructor(t){this._type=F.llp,this._center=new l.e(0,1,0),this.skyMesh=null,this._depthWrite=!1,this.node=new Rt.t("SkyMeshNode"),this.device=t.device,this.scene=t,this.center=new l.e(0,1,0),this.centerArray=new Float32Array(3),this.projectedSkydomeCenterId=this.device.scope.resolve("projectedSkydomeCenter")}applySettings(t){this.type=t.skyType??F.llp,this.node.setLocalPosition(new l.e(t.skyMeshPosition??[0,0,0])),this.node.setLocalEulerAngles(new l.e(t.skyMeshRotation??[0,0,0])),this.node.setLocalScale(new l.e(t.skyMeshScale??[1,1,1])),t.skyCenter&&(this._center=new l.e(t.skyCenter))}set type(t){this._type!==t&&(this._type=t,this.scene.updateShaders=!0,this.updateSkyMesh())}get type(){return this._type}set center(t){this._center.copy(t)}get center(){return this._center}set depthWrite(t){this._depthWrite!==t&&(this._depthWrite=t,this.skyMesh&&(this.skyMesh.depthWrite=t))}get depthWrite(){return this._depthWrite}updateSkyMesh(){const t=this.scene._getSkyboxTex();t&&(this.resetSkyMesh(),this.skyMesh=new Un(this.device,this.scene,this.node,t,this.type),this.skyMesh.depthWrite=this._depthWrite,this.scene.fire("set:skybox",t))}resetSkyMesh(){this.skyMesh?.destroy(),this.skyMesh=null}update(){if(this.type!==F.llp){const{center:t,centerArray:e}=this,s=new l.e;this.node.getWorldTransform().transformPoint(t,s),e[0]=s.x,e[1]=s.y,e[2]=s.z,this.projectedSkydomeCenterId.setValue(e)}}}const Vn=new Rt.t;Vn.worldTransform=o.$.IDENTITY,Vn._dirtyWorld=Vn._dirtyNormal=!1;class Gn{constructor(t,e,s){this.material=e,this.layer=s,this.positions=[],this.colors=[],this.mesh=new Us(t),this.meshInstance=null}addLines(t,e){const s=this.positions,i=t.length;for(let r=0;r<i;r++){const e=t[r];s.push(e.x,e.y,e.z)}const n=this.colors;if(e.length)for(let r=0;r<i;r++){const t=e[r];n.push(t.r,t.g,t.b,t.a)}else for(let r=0;r<i;r++)n.push(e.r,e.g,e.b,e.a)}addLinesArrays(t,e){const s=this.positions;for(let n=0;n<t.length;n+=3)s.push(t[n],t[n+1],t[n+2]);const i=this.colors;if(e.length)for(let n=0;n<e.length;n+=4)i.push(e[n],e[n+1],e[n+2],e[n+3]);else{const s=t.length/3;for(let t=0;t<s;t++)i.push(e.r,e.g,e.b,e.a)}}onPreRender(t,e){this.positions.length>0&&this.material.transparent===e&&(this.mesh.setPositions(this.positions),this.mesh.setColors(this.colors),this.mesh.update(x.EEU,!1),this.meshInstance||(this.meshInstance=new pt(this.mesh,this.material,Vn)),t.push(this.meshInstance))}clear(){this.positions.length=0,this.colors.length=0}}class Hn{constructor(t){this.device=t,this.map=new Map}getBatch(t,e){let s=this.map.get(t);return s||(s=new Gn(this.device,t,e),this.map.set(t,s)),s}onPreRender(t,e){this.map.forEach(s=>{s.onPreRender(t,e)})}clear(){this.map.forEach(t=>t.clear())}}const Wn=[],Xn=new l.e;class $n{constructor(t){this.shaderDescs=new Map,this.device=t,this.quadMesh=null,this.textureShader=null,this.depthTextureShader=null,this.cubeLocalPos=null,this.cubeWorldPos=null,this.batchesMap=new Map,this.allBatches=new Set,this.updatedLayers=new Set,this._materialDepth=null,this._materialNoDepth=null,this.layerMeshInstances=new Map}createMaterial(t){const e=new Ln({uniqueName:"ImmediateLine",vertexGLSL:B.W.get(this.device,x.BzK).get("immediateLineVS"),fragmentGLSL:B.W.get(this.device,x.BzK).get("immediateLinePS"),vertexWGSL:B.W.get(this.device,x.g80).get("immediateLineVS"),fragmentWGSL:B.W.get(this.device,x.g80).get("immediateLinePS"),attributes:{vertex_position:x.JYe,vertex_color:x.F8$}});return e.blendType=F.i96,e.depthTest=t,e.update(),e}get materialDepth(){return this._materialDepth||(this._materialDepth=this.createMaterial(!0)),this._materialDepth}get materialNoDepth(){return this._materialNoDepth||(this._materialNoDepth=this.createMaterial(!1)),this._materialNoDepth}getBatch(t,e){let s=this.batchesMap.get(t);s||(s=new Hn(this.device),this.batchesMap.set(t,s)),this.allBatches.add(s);const i=e?this.materialDepth:this.materialNoDepth;return s.getBatch(i,t)}getShaderDesc(t,e,s){return this.shaderDescs.has(t)||this.shaderDescs.set(t,{uniqueName:`DebugShader:${t}`,vertexGLSL:"\n\t\t\t\t\tattribute vec2 vertex_position;\n\t\t\t\t\tuniform mat4 matrix_model;\n\t\t\t\t\tvarying vec2 uv0;\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\tgl_Position = matrix_model * vec4(vertex_position, 0, 1);\n\t\t\t\t\t\tuv0 = vertex_position.xy + 0.5;\n\t\t\t\t\t}\n\t\t\t\t",vertexWGSL:"\n\t\t\t\t\tattribute vertex_position: vec2f;\n\t\t\t\t\tuniform matrix_model: mat4x4f;\n\t\t\t\t\tvarying uv0: vec2f;\n\t\t\t\t\t@vertex fn vertexMain(input: VertexInput) -> VertexOutput {\n\t\t\t\t\t\tvar output: VertexOutput;\n\t\t\t\t\t\toutput.position = uniform.matrix_model * vec4f(input.vertex_position, 0.0, 1.0);\n\t\t\t\t\t\toutput.uv0 = input.vertex_position.xy + vec2f(0.5);\n\t\t\t\t\t\treturn output;\n\t\t\t\t\t}\n\t\t\t\t",fragmentGLSL:e,fragmentWGSL:s,attributes:{vertex_position:x.JYe}}),this.shaderDescs.get(t)}getTextureShaderDesc(t){const e=ne.decodeFunc(t);return this.getShaderDesc(`textureShader-${t}`,`\n\t\t\t#include "gammaPS"\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tvec3 linearColor = ${e}(texture2D(colorMap, uv0));\n\t\t\t\tgl_FragColor = vec4(gammaCorrectOutput(linearColor), 1);\n\t\t\t}\n\t\t`,`\n\t\t\t#include "gammaPS"\n\t\t\tvarying uv0: vec2f;\n\t\t\tvar colorMap: texture_2d<f32>;\n\t\t\tvar colorMapSampler: sampler;\n\t\t\t@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet sampledTex = textureSample(colorMap, colorMapSampler, input.uv0);\n\t\t\t\tlet linearColor: vec3f = ${e}(sampledTex);\n\t\t\t\toutput.color = vec4f(gammaCorrectOutput(linearColor), 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t`)}getUnfilterableTextureShaderDesc(){return this.getShaderDesc("textureShaderUnfilterable","\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform highp sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tivec2 uv = ivec2(uv0 * textureSize(colorMap, 0));\n\t\t\t\tgl_FragColor = vec4(texelFetch(colorMap, uv, 0).xyz, 1);\n\t\t\t}\n\t\t","\n\t\t\tvarying uv0: vec2f;\n\t\t\tvar colorMap: texture_2d<uff>;\n\t\t\t@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet uv : vec2<i32> = vec2<i32>(input.uv0 * vec2f(textureDimensions(colorMap, 0)));\n\t\t\t\tlet fetchedColor : vec4f = textureLoad(colorMap, uv, 0);\n\t\t\t\toutput.color = vec4f(fetchedColor.xyz, 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t")}getDepthTextureShaderDesc(){return this.getShaderDesc("depthTextureShader",'\n\t\t\t#include "screenDepthPS"\n\t\t\t#include "gammaPS"\n\t\t\tvarying vec2 uv0;\n\t\t\tvoid main() {\n\t\t\t\tfloat depth = getLinearScreenDepth(getImageEffectUV(uv0)) * camera_params.x;\n\t\t\t\tgl_FragColor = vec4(gammaCorrectOutput(vec3(depth)), 1.0);\n\t\t\t}\n\t\t','\n\t\t\t#include "screenDepthPS"\n\t\t\t#include "gammaPS"\n\t\t\tvarying uv0: vec2f;\n\t\t\t@fragment fn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet depth: f32 = getLinearScreenDepth(getImageEffectUV(input.uv0)) * uniform.camera_params.x;\n\t\t\t\toutput.color = vec4f(gammaCorrectOutput(vec3f(depth)), 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t')}getQuadMesh(){return this.quadMesh||(this.quadMesh=new Us(this.device),this.quadMesh.setPositions([-.5,-.5,0,.5,-.5,0,-.5,.5,0,.5,.5,0]),this.quadMesh.update(x.SF$)),this.quadMesh}drawMesh(t,e,s,i,n){if(!i){const n=this.getGraphNode(e);i=new pt(s,t,n)}let r=this.layerMeshInstances.get(n);r||(r=[],this.layerMeshInstances.set(n,r)),r.push(i)}drawWireAlignedBox(t,e,s,i,n,r){if(r){const s=(t,e,s)=>{Xn.set(t,e,s),r.transformPoint(Xn,Xn),Wn.push(Xn.x,Xn.y,Xn.z)};s(t.x,t.y,t.z),s(t.x,e.y,t.z),s(t.x,e.y,t.z),s(e.x,e.y,t.z),s(e.x,e.y,t.z),s(e.x,t.y,t.z),s(e.x,t.y,t.z),s(t.x,t.y,t.z),s(t.x,t.y,e.z),s(t.x,e.y,e.z),s(t.x,e.y,e.z),s(e.x,e.y,e.z),s(e.x,e.y,e.z),s(e.x,t.y,e.z),s(e.x,t.y,e.z),s(t.x,t.y,e.z),s(t.x,t.y,t.z),s(t.x,t.y,e.z),s(t.x,e.y,t.z),s(t.x,e.y,e.z),s(e.x,e.y,t.z),s(e.x,e.y,e.z),s(e.x,t.y,t.z),s(e.x,t.y,e.z)}else Wn.push(t.x,t.y,t.z,t.x,e.y,t.z,t.x,e.y,t.z,e.x,e.y,t.z,e.x,e.y,t.z,e.x,t.y,t.z,e.x,t.y,t.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,e.z,t.x,e.y,e.z,e.x,e.y,e.z,e.x,e.y,e.z,e.x,t.y,e.z,e.x,t.y,e.z,t.x,t.y,e.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,t.z,t.x,e.y,e.z,e.x,e.y,t.z,e.x,e.y,e.z,e.x,t.y,t.z,e.x,t.y,e.z);this.getBatch(n,i).addLinesArrays(Wn,s),Wn.length=0}drawWireSphere(t,e,s,i,n,r){const a=2*Math.PI/i;let o=0;for(let l=0;l<i;l++){const s=Math.sin(o),i=Math.cos(o);o+=a;const n=Math.sin(o),r=Math.cos(o);Wn.push(t.x+e*s,t.y,t.z+e*i),Wn.push(t.x+e*n,t.y,t.z+e*r),Wn.push(t.x+e*s,t.y+e*i,t.z),Wn.push(t.x+e*n,t.y+e*r,t.z),Wn.push(t.x,t.y+e*s,t.z+e*i),Wn.push(t.x,t.y+e*n,t.z+e*r)}this.getBatch(r,n).addLinesArrays(Wn,s),Wn.length=0}getGraphNode(t){const e=new Rt.t("ImmediateDebug");return e.worldTransform=t,e._dirtyWorld=e._dirtyNormal=!1,e}onPreRenderLayer(t,e,s){if(this.batchesMap.forEach((i,n)=>{n===t&&i.onPreRender(e,s)}),!this.updatedLayers.has(t)){this.updatedLayers.add(t);const s=this.layerMeshInstances.get(t);if(s){for(let t=0;t<s.length;t++)e.push(s[t]);s.length=0}}}onPostRender(){this.allBatches.forEach(t=>t.clear()),this.allBatches.clear(),this.updatedLayers.clear()}}class qn{constructor(){this.type=F.qXo,this.color=new p.Q(0,0,0),this.density=0,this.start=1,this.end=1e3}}class jn extends r.J{static{this.EVENT_SETLAYERS="set:layers"}static{this.EVENT_SETSKYBOX="set:skybox"}static{this.EVENT_PRERENDER="prerender"}static{this.EVENT_POSTRENDER="postrender"}static{this.EVENT_PRERENDER_LAYER="prerender:layer"}static{this.EVENT_POSTRENDER_LAYER="postrender:layer"}static{this.EVENT_PRECULL="precull"}static{this.EVENT_POSTCULL="postcull"}constructor(t){super(),this.ambientBake=!1,this.ambientBakeOcclusionBrightness=0,this.ambientBakeOcclusionContrast=0,this.ambientLight=new p.Q(0,0,0),this.ambientLuminance=0,this.exposure=1,this.lightmapSizeMultiplier=1,this.lightmapMaxResolution=2048,this.lightmapMode=F.N9O,this.lightmapFilterEnabled=!1,this.lightmapHDR=!1,this.root=null,this.physicalUnits=!1,this._envAtlas=null,this._skyboxCubeMap=null,this._fogParams=new qn,this.forcePassThroughSpecular=!1,this.device=t,this._gravity=new l.e(0,-9.8,0),this._layers=null,this._prefilteredCubemaps=[],this._internalEnvAtlas=null,this._skyboxIntensity=1,this._skyboxLuminance=0,this._skyboxMip=0,this._skyboxHighlightMultiplier=1,this._skyboxRotationShaderInclude=!1,this._skyboxRotation=new St.k,this._skyboxRotationMat3=new _s.U,this._skyboxRotationMat4=new o.$,this._ambientBakeNumSamples=1,this._ambientBakeSpherePart=.4,this._lightmapFilterRange=10,this._lightmapFilterSmoothness=.2,this._clusteredLightingEnabled=!0,this._lightingParams=new mt(this.device.supportsAreaLights,this.device.maxTextureSize,()=>{this.updateShaders=!0}),this._sky=new zn(this),this._stats={meshInstances:0,lights:0,dynamicLights:0,bakedLights:0,updateShadersTime:0},this.updateShaders=!0,this._shaderVersion=0,this.immediate=new $n(this.device)}get defaultDrawLayer(){return this.layers.getLayerById(F.t0Z)}set ambientBakeNumSamples(t){this._ambientBakeNumSamples=a.D.clamp(Math.floor(t),1,255)}get ambientBakeNumSamples(){return this._ambientBakeNumSamples}set ambientBakeSpherePart(t){this._ambientBakeSpherePart=a.D.clamp(t,.001,1)}get ambientBakeSpherePart(){return this._ambientBakeSpherePart}set clusteredLightingEnabled(t){this.device.isWebGPU&&!t||(this._clusteredLightingEnabled||!t?this._clusteredLightingEnabled=t:console.error("Turning on disabled clustered lighting is not currently supported"))}get clusteredLightingEnabled(){return this._clusteredLightingEnabled}set envAtlas(t){t!==this._envAtlas&&(this._envAtlas=t,t&&(t.addressU=x.vq6,t.addressV=x.vq6,t.minFilter=x.DrA,t.magFilter=x.DrA,t.mipmaps=!1),this._prefilteredCubemaps=[],this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._resetSkyMesh())}get envAtlas(){return this._envAtlas}set layers(t){const e=this._layers;this._layers=t,this.fire("set:layers",e,t)}get layers(){return this._layers}get sky(){return this._sky}get lighting(){return this._lightingParams}get fog(){return this._fogParams}set lightmapFilterRange(t){this._lightmapFilterRange=Math.max(t,.001)}get lightmapFilterRange(){return this._lightmapFilterRange}set lightmapFilterSmoothness(t){this._lightmapFilterSmoothness=Math.max(t,.001)}get lightmapFilterSmoothness(){return this._lightmapFilterSmoothness}set prefilteredCubemaps(t){t=t||[];const e=this._prefilteredCubemaps,s=e.length!==t.length||e.some((e,s)=>e!==t[s]);if(s){const e=6===t.length&&t.every(t=>!!t);e?(this._internalEnvAtlas=we.generatePrefilteredAtlas(t,{target:this._internalEnvAtlas}),this._envAtlas=this._internalEnvAtlas):(this._internalEnvAtlas&&(this._internalEnvAtlas.destroy(),this._internalEnvAtlas=null),this._envAtlas=null),this._prefilteredCubemaps=t.slice(),this._resetSkyMesh()}}get prefilteredCubemaps(){return this._prefilteredCubemaps}set skybox(t){t!==this._skyboxCubeMap&&(this._skyboxCubeMap=t,this._resetSkyMesh())}get skybox(){return this._skyboxCubeMap}set skyboxIntensity(t){t!==this._skyboxIntensity&&(this._skyboxIntensity=t,this._resetSkyMesh())}get skyboxIntensity(){return this._skyboxIntensity}set skyboxLuminance(t){t!==this._skyboxLuminance&&(this._skyboxLuminance=t,this._resetSkyMesh())}get skyboxLuminance(){return this._skyboxLuminance}set skyboxMip(t){t!==this._skyboxMip&&(this._skyboxMip=t,this._resetSkyMesh())}get skyboxMip(){return this._skyboxMip}set skyboxHighlightMultiplier(t){t!==this._skyboxHighlightMultiplier&&(this._skyboxHighlightMultiplier=t,this._resetSkyMesh())}get skyboxHighlightMultiplier(){return this._skyboxHighlightMultiplier}set skyboxRotation(t){if(!this._skyboxRotation.equals(t)){const e=t.equals(St.k.IDENTITY);this._skyboxRotation.copy(t),e?this._skyboxRotationMat3.setIdentity():(this._skyboxRotationMat4.setTRS(l.e.ZERO,t,l.e.ONE),this._skyboxRotationMat3.invertMat4(this._skyboxRotationMat4)),this._skyboxRotationShaderInclude||e||(this._skyboxRotationShaderInclude=!0,this._resetSkyMesh())}}get skyboxRotation(){return this._skyboxRotation}destroy(){this._resetSkyMesh(),this.root=null,this.off()}drawLine(t,e,s=p.Q.WHITE,i=!0,n=this.defaultDrawLayer){this.immediate.getBatch(n,i).addLines([t,e],[s,s])}drawLines(t,e,s=!0,i=this.defaultDrawLayer){this.immediate.getBatch(i,s).addLines(t,e)}drawLineArrays(t,e,s=!0,i=this.defaultDrawLayer){this.immediate.getBatch(i,s).addLinesArrays(t,e)}applySettings(t){const e=t.physics,s=t.render;this._gravity.set(e.gravity[0],e.gravity[1],e.gravity[2]),this.ambientLight.set(s.global_ambient[0],s.global_ambient[1],s.global_ambient[2]),this.ambientLuminance=s.ambientLuminance,this.fog.type=s.fog,this.fog.color.set(s.fog_color[0],s.fog_color[1],s.fog_color[2]),this.fog.start=s.fog_start,this.fog.end=s.fog_end,this.fog.density=s.fog_density,this.lightmapSizeMultiplier=s.lightmapSizeMultiplier,this.lightmapMaxResolution=s.lightmapMaxResolution,this.lightmapMode=s.lightmapMode,this.exposure=s.exposure,this._skyboxIntensity=s.skyboxIntensity??1,this._skyboxLuminance=s.skyboxLuminance??2e4,this._skyboxMip=s.skyboxMip??0,s.skyboxRotation&&(this.skyboxRotation=(new St.k).setFromEulerAngles(s.skyboxRotation[0],s.skyboxRotation[1],s.skyboxRotation[2])),this.sky.applySettings(s),this.clusteredLightingEnabled=s.clusteredLightingEnabled??!1,this.lighting.applySettings(s),["lightmapFilterEnabled","lightmapFilterRange","lightmapFilterSmoothness","ambientBake","ambientBakeNumSamples","ambientBakeSpherePart","ambientBakeOcclusionBrightness","ambientBakeOcclusionContrast"].forEach(t=>{s.hasOwnProperty(t)&&(this[t]=s[t])}),this._resetSkyMesh()}_getSkyboxTex(){const t=this._prefilteredCubemaps;if(this._skyboxMip){return t[[0,1,3,4,5,6][this._skyboxMip]]||this._envAtlas||t[0]||this._skyboxCubeMap}return this._skyboxCubeMap||t[0]||this._envAtlas}_updateSkyMesh(){this.sky.skyMesh||this.sky.updateSkyMesh(),this.sky.update()}_resetSkyMesh(){this.sky.resetSkyMesh(),this.updateShaders=!0}setSkybox(t){t?(this.skybox=t[0]||null,t[1]&&!t[1].cubemap?this.envAtlas=t[1]:this.prefilteredCubemaps=t.slice(1)):(this.skybox=null,this.envAtlas=null)}get lightmapPixelFormat(){return this.lightmapHDR&&this.device.getRenderableHdrFormat()||x.Lxj}}var Yn=s(33595),Kn=s(56460);class Zn{constructor(t=null){this._index={},this._key=t}addItem(t){const e=t.tags._list;for(const s of e)this.add(s,t)}removeItem(t){const e=t.tags._list;for(const s of e)this.remove(s,t)}add(t,e){this._index[t]&&-1!==this._index[t].list.indexOf(e)||(this._index[t]||(this._index[t]={list:[]},this._key&&(this._index[t].keys={})),this._index[t].list.push(e),this._key&&(this._index[t].keys[e[this._key]]=e))}remove(t,e){if(!this._index[t])return;if(this._key&&!this._index[t].keys[e[this._key]])return;const s=this._index[t].list.indexOf(e);-1!==s&&(this._index[t].list.splice(s,1),this._key&&delete this._index[t].keys[e[this._key]],0===this._index[t].list.length&&delete this._index[t])}find(t){const e={},s=[];let i,n,r,a,o;const l=(t,e)=>this._index[t].list.length-this._index[e].list.length;for(let h=0;h<t.length;h++){if(n=t[h],n instanceof Array){if(0===n.length)continue;if(1!==n.length){o=!1;for(let t=0;t<n.length;t++)if(!this._index[n[t]]){o=!0;break}if(o)continue;r=n.slice(0).sort(l),a=r.slice(1),1===a.length&&(a=a[0]);for(let t=0;t<this._index[r[0]].list.length;t++)i=this._index[r[0]].list[t],(this._key?!e[i[this._key]]:-1===s.indexOf(i))&&i.tags.has(a)&&(this._key&&(e[i[this._key]]=!0),s.push(i));continue}n=n[0]}if(n&&"string"==typeof n&&this._index[n])for(let t=0;t<this._index[n].list.length;t++)i=this._index[n].list[t],this._key?e[i[this._key]]||(e[i[this._key]]=!0,s.push(i)):-1===s.indexOf(i)&&s.push(i)}return s}}class Qn extends r.J{static{this.EVENT_LOAD="load"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._assets=new Set,this._idToAsset=new Map,this._urlToAsset=new Map,this._nameToAsset=new Map,this._tags=new Zn("id"),this.prefix=null,this.bundles=null,this._loader=t}list(t={}){const e=Array.from(this._assets);return void 0!==t.preload?e.filter(e=>e.preload===t.preload):e}add(t){this._assets.has(t)||(this._assets.add(t),this._idToAsset.set(t.id,t),t.file?.url&&this._urlToAsset.set(t.file.url,t),this._nameToAsset.has(t.name)||this._nameToAsset.set(t.name,new Set),this._nameToAsset.get(t.name).add(t),t.on("name",this._onNameChange,this),t.registry=this,this._tags.addItem(t),t.tags.on("add",this._onTagAdd,this),t.tags.on("remove",this._onTagRemove,this),this.fire("add",t),this.fire(`add:${t.id}`,t),t.file?.url&&this.fire(`add:url:${t.file.url}`,t),t.preload&&this.load(t))}remove(t){if(!this._assets.has(t))return!1;if(this._assets.delete(t),this._idToAsset.delete(t.id),t.file?.url&&this._urlToAsset.delete(t.file.url),t.off("name",this._onNameChange,this),this._nameToAsset.has(t.name)){const e=this._nameToAsset.get(t.name);e.delete(t),0===e.size&&this._nameToAsset.delete(t.name)}return this._tags.removeItem(t),t.tags.off("add",this._onTagAdd,this),t.tags.off("remove",this._onTagRemove,this),t.fire("remove",t),this.fire("remove",t),this.fire(`remove:${t.id}`,t),t.file?.url&&this.fire(`remove:url:${t.file.url}`,t),!0}get(t){return this._idToAsset.get(Number(t))}getByUrl(t){return this._urlToAsset.get(t)}load(t,e){if((t.loading||t.loaded)&&!e?.force)return;const s=t.file,i=()=>{this.fire("load",t),this.fire(`load:${t.id}`,t),s&&s.url&&this.fire(`load:url:${s.url}`,t),t.fire("load",t)},n=e=>{if(e instanceof Array?t.resources=e:t.resource=e,this._loader.patch(t,this),"bundle"===t.type){const e=t.data.assets;for(let t=0;t<e.length;t++){const s=this._idToAsset.get(e[t]);s&&!s.loaded&&this.load(s,{force:!0})}t.resource.loaded?i():(this.fire("load:start",t),this.fire(`load:start:${t.id}`,t),s&&s.url&&this.fire(`load:start:url:${s.url}`,t),t.fire("load:start",t),t.resource.on("load",i))}else i()},r=(e,s,i)=>{if(t.loaded=!0,t.loading=!1,e)this.fire("error",e,t),this.fire(`error:${t.id}`,e,t),t.fire("error",e,t);else{if("script"===t.type){const e=this._loader.getHandler("script");e._cache[t.id]&&e._cache[t.id].parentNode===document.head&&document.head.removeChild(e._cache[t.id]),e._cache[t.id]=i}n(s)}};if(s||"cubemap"===t.type){this.fire("load:start",t),this.fire(`load:${t.id}:start`,t),t.loading=!0;const s=t.getFileUrl();if("bundle"===t.type){const e=t.data.assets;for(let t=0;t<e.length;t++){const s=this._idToAsset.get(e[t]);s&&(s.loaded||s.resource||s.loading||(s.loading=!0))}}this._loader.load(s,t.type,r,t,e)}else{const e=this._loader.open(t.type,t.data);t.loaded=!0,n(e)}}loadFromUrl(t,e,s){this.loadFromUrlAndFilename(t,null,e,s)}loadFromUrlAndFilename(t,e,s,i){const n=Qs.A.getBasename(e||t),r={filename:e||n,url:t};let a=this.getByUrl(t);if(a){if(a.loaded)return void i(a.loadFromUrlError||null,a)}else a=new Kn.V(n,s,r),this.add(a);const o=t=>{t.once("load",t=>{"material"===s?this._loadTextures(t,(e,s)=>{i(e,t)}):i(null,t)}),t.once("error",e=>{e&&(this.loadFromUrlError=e),i(e,t)}),this.load(t)};a.resource?i(null,a):"model"===s?this._loadModel(a,o):o(a)}_loadModel(t,e){const s=t.getFileUrl(),i=Qs.A.getExtension(s);if(".json"===i||".glb"===i){const n=Qs.A.getDirectory(s),r=Qs.A.getBasename(s),a=Qs.A.join(n,r.replace(i,".mapping.json"));this._loader.load(a,"json",(s,i)=>{s?(t.data={mapping:[]},e(t)):this._loadMaterials(t,i,(s,n)=>{t.data=i,e(t)})})}else e(t)}_loadMaterials(t,e,s){const i=[];let n=0;const r=(t,e)=>{this._loadTextures(e,(t,r)=>{i.push(e),i.length===n&&s(null,i)})};for(let a=0;a<e.mapping.length;a++){const s=e.mapping[a].path;if(s){n++;const e=t.getAbsoluteUrl(s);this.loadFromUrl(e,"material",r)}}0===n&&s(null,i)}_loadTextures(t,e){const s=[];let i=0;const n=t.data;if("path"!==n.mappingFormat)return void e(null,s);const r=(t,n)=>{t&&console.error(t),s.push(n),s.length===i&&e(null,s)},a=Be;for(let o=0;o<a.length;o++){const e=n[a[o]];if(e&&"string"==typeof e){i++;const s=t.getAbsoluteUrl(e);this.loadFromUrl(s,"texture",r)}}0===i&&e(null,s)}_onTagAdd(t,e){this._tags.add(t,e)}_onTagRemove(t,e){this._tags.remove(t,e)}_onNameChange(t,e,s){if(this._nameToAsset.has(s)){const e=this._nameToAsset.get(s);e.delete(t),0===e.size&&this._nameToAsset.delete(s)}this._nameToAsset.has(t.name)||this._nameToAsset.set(t.name,new Set),this._nameToAsset.get(t.name).add(t)}findByTag(...t){return this._tags.find(t)}filter(t){return Array.from(this._assets).filter(e=>t(e))}find(t,e){const s=this._nameToAsset.get(t);if(!s)return null;for(const i of s)if(!e||i.type===e)return i;return null}findAll(t,e){const s=this._nameToAsset.get(t);if(!s)return[];const i=Array.from(s);return e?i.filter(t=>t.type===e):i}}class Jn{constructor(t){this._idToBundle=new Map,this._assetToBundles=new Map,this._urlsToBundles=new Map,this._fileRequests=new Map,this._assets=t,this._assets.bundles=this,this._assets.on("add",this._onAssetAdd,this),this._assets.on("remove",this._onAssetRemove,this)}_onAssetAdd(t){if("bundle"===t.type){this._idToBundle.set(t.id,t),this._assets.on(`load:start:${t.id}`,this._onBundleLoadStart,this),this._assets.on(`load:${t.id}`,this._onBundleLoad,this),this._assets.on(`error:${t.id}`,this._onBundleError,this);const e=t.data.assets;for(let s=0;s<e.length;s++)this._indexAssetInBundle(e[s],t)}else this._assetToBundles.has(t.id)&&this._indexAssetFileUrls(t)}_unbindAssetEvents(t){this._assets.off(`load:start:${t}`,this._onBundleLoadStart,this),this._assets.off(`load:${t}`,this._onBundleLoad,this),this._assets.off(`error:${t}`,this._onBundleError,this)}_indexAssetInBundle(t,e){let s=this._assetToBundles.get(t);s||(s=new Set,this._assetToBundles.set(t,s)),s.add(e);const i=this._assets.get(t);i&&this._indexAssetFileUrls(i)}_indexAssetFileUrls(t){const e=this._getAssetFileUrls(t);if(e)for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(t.id);i&&this._urlsToBundles.set(e[s],i)}}_getAssetFileUrls(t){let e=t.getFileUrl();if(!e)return null;e=e.split("?")[0];const s=[e];if("font"===t.type){const i=t.data.info.maps.length;for(let t=1;t<i;t++)s.push(e.replace(".png",`${t}.png`))}return s}_onAssetRemove(t){if("bundle"===t.type){this._idToBundle.delete(t.id),this._unbindAssetEvents(t.id);const e=t.data.assets;for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(e[s]);if(i&&(i.delete(t),0===i.size)){this._assetToBundles.delete(e[s]);for(const[t,e]of this._urlsToBundles)e===i&&this._urlsToBundles.delete(t)}}this._onBundleError(`Bundle ${t.id} was removed`)}else{if(!this._assetToBundles.get(t.id))return;this._assetToBundles.delete(t.id);const e=this._getAssetFileUrls(t);if(!e)return;for(let t=0;t<e.length;t++)this._urlsToBundles.delete(e[t])}}_onBundleLoadStart(t){t.resource.on("add",(t,e)=>{const s=this._fileRequests.get(t);if(s){for(let t=0;t<s.length;t++)s[t](null,e);this._fileRequests.delete(t)}})}_onBundleLoad(t){if(t.resource){if(this._fileRequests)for(const[e,s]of this._fileRequests){const i=this._urlsToBundles.get(e);if(!i||!i.has(t))continue;const n=decodeURIComponent(e);let r,a;if(t.resource.has(n))a=t.resource.get(n);else{if(!t.resource.loaded)continue;r=`Bundle ${t.id} does not contain URL ${e}`}for(let t=0;t<s.length;t++)s[t](r,r||a);this._fileRequests.delete(e)}}else this._onBundleError(`Bundle ${t.id} failed to load`)}_onBundleError(t){for(const[e,s]of this._fileRequests){if(!this._findLoadedOrLoadingBundleForUrl(e)){for(let e=0;e<s.length;e++)s[e](t);this._fileRequests.delete(e)}}}_findLoadedOrLoadingBundleForUrl(t){const e=this._urlsToBundles.get(t);if(!e)return null;let s=null;for(const i of e){if(i.loaded&&i.resource)return i;i.loading&&(s=i)}return s}listBundlesForAsset(t){const e=this._assetToBundles.get(t.id);return e?Array.from(e):null}list(){return Array.from(this._idToBundle.values())}hasUrl(t){return this._urlsToBundles.has(t)}urlIsLoadedOrLoading(t){return!!this._findLoadedOrLoadingBundleForUrl(t)}loadUrl(t,e){const s=this._findLoadedOrLoadingBundleForUrl(t);if(!s)return void e(`URL ${t} not found in any bundles`);if(s.loaded){const i=decodeURIComponent(t);if(s.resource.has(i))return void e(null,s.resource.get(i));if(s.resource.loaded)return void e(`Bundle ${s.id} does not contain URL ${t}`)}let i=this._fileRequests.get(t);i||(i=[],this._fileRequests.set(t,i)),i.push(e)}destroy(){this._assets.off("add",this._onAssetAdd,this),this._assets.off("remove",this._onAssetRemove,this);for(const t of this._idToBundle.keys())this._unbindAssetEvents(t);this._assets=null,this._idToBundle.clear(),this._idToBundle=null,this._assetToBundles.clear(),this._assetToBundles=null,this._urlsToBundles.clear(),this._urlsToBundles=null,this._fileRequests.clear(),this._fileRequests=null}}class tr extends r.J{constructor(){super(),this.list=[]}add(t){const e=t.id;if(this[e])throw new Error(`ComponentSystem name '${e}' already registered or not allowed`);this[e]=t,this.list.push(t)}remove(t){const e=t.id;if(!this[e])throw new Error(`No ComponentSystem named '${e}' registered`);delete this[e];const s=this.list.indexOf(this[e]);-1!==s&&this.list.splice(s,1)}destroy(){this.off();for(let t=0;t<this.list.length;t++)this.list[t].destroy()}}class er extends r.J{static{this.EVENT_ADD="add"}static{this.EVENT_LOAD="load"}addFile(t,e){this._index.has(t)||(this._index.set(t,e),this.fire("add",t,e))}has(t){return this._index.has(t)}get(t){return this._index.get(t)||null}destroy(){this._index.clear()}set loaded(t){t&&!this._loaded&&(this._loaded=!0,this.fire("load"))}get loaded(){return this._loaded}constructor(...t){super(...t),this._index=new Map,this._loaded=!1}}class sr extends r.J{constructor(t,e=""){super(),this.headerSize=512,this.paddingSize=512,this.bytesRead=0,this.bytesReceived=0,this.headerRead=!1,this.reader=null,this.data=new Uint8Array(0),this.decoder=null,this.prefix="",this.fileName="",this.fileSize=0,this.fileType="",this.ustarFormat="",this.prefix=e||"",this.reader=t.body.getReader(),this.reader.read().then(t=>{this.pump(t.done,t.value)}).catch(t=>{this.fire("error",t)})}pump(t,e){if(t)return this.fire("done"),null;this.bytesReceived+=e.byteLength;const s=new Uint8Array(this.data.length+e.length);for(s.set(this.data),s.set(e,this.data.length),this.data=s;this.readFile(););return this.reader.read().then(t=>{this.pump(t.done,t.value)}).catch(t=>{this.fire("error",t)})}readFile(){if(!this.headerRead&&this.bytesReceived>this.bytesRead+this.headerSize){this.headerRead=!0;const t=new DataView(this.data.buffer,this.bytesRead,this.headerSize);this.decoder??=new TextDecoder("windows-1252");const e=this.decoder.decode(t);if(this.fileName=e.substring(0,100).replace(/\0/g,""),this.fileSize=parseInt(e.substring(124,136),8),this.fileType=e.substring(156,157),this.ustarFormat=e.substring(257,263),-1!==this.ustarFormat.indexOf("ustar")){const t=e.substring(345,500).replace(/\0/g,"");t.length>0&&(this.fileName=t.trim()+this.fileName.trim())}this.bytesRead+=512}if(this.headerRead){if(this.bytesReceived<this.bytesRead+this.fileSize)return!1;if(""===this.fileType||"0"===this.fileType){const t=new DataView(this.data.buffer,this.bytesRead,this.fileSize),e={name:this.prefix+this.fileName,size:this.fileSize,data:t};this.fire("file",e)}this.bytesRead+=this.fileSize,this.headerRead=!1;const t=this.bytesRead%this.paddingSize;return 0!==t&&(this.bytesRead+=this.paddingSize-t),!0}return!1}}class ir{constructor(t,e){this.handlerType="",this._maxRetries=0,this._app=t,this.handlerType=e}set maxRetries(t){this._maxRetries=t}get maxRetries(){return this._maxRetries}load(t,e,s){}open(t,e,s){return e}patch(t,e){}}class nr extends ir{constructor(t){super(t,"bundle"),this._assets=t.assets}_fetchRetries(t,e,s=0){return new Promise((i,n)=>{const r=()=>{fetch(t,e).then(i).catch(t=>{++s<this.maxRetries?r():n(t)})};r()})}load(t,e){"string"==typeof t&&(t={load:t,original:t}),this._fetchRetries(t.load,{mode:"cors"},this.maxRetries).then(t=>{const s=new er;e(null,s);const i=new sr(t,this._assets.prefix);i.on("file",t=>{s.addFile(t.name,t.data)}),i.on("done",()=>{s.loaded=!0}),i.on("error",t=>{e(t)})}).catch(t=>{e(t)})}open(t,e){return e}}class rr{constructor(t){this._handlers={},this._requests={},this._cache={},this._app=t}addHandler(t,e){this._handlers[t]=e,e._loader=this}removeHandler(t){delete this._handlers[t]}getHandler(t){return this._handlers[t]}static makeKey(t,e){return`${t}-${e}`}load(t,e,s,i,n){const r=this._handlers[e];if(!r){return void s(`No resource handler for asset type: '${e}' when loading [${t}]`)}if(!t)return void this._loadNull(r,s,i);const a=rr.makeKey(t,e);if(void 0!==this._cache[a])s(null,this._cache[a]);else if(this._requests[a])this._requests[a].push(s);else{this._requests[a]=[s];const e=this,o=function(t,s){if(t)e._onFailure(a,t);else{if(s.load instanceof DataView){if(r.openBinary){if(!e._requests[a])return;try{const t=r.openBinary(s.load);e._onSuccess(a,t)}catch(t){e._onFailure(a,t)}return}s.load=URL.createObjectURL(new Blob([s.load])),i&&(i.urlObject&&URL.revokeObjectURL(i.urlObject),i.urlObject=s.load)}r.load(s,(t,n,o)=>{if(e._requests[a])if(t)e._onFailure(a,t);else try{e._onSuccess(a,r.open(s.original,n,i),o)}catch(l){e._onFailure(a,l)}},i)}},l=t.split("?")[0];if(!this._app.enableBundles||!this._app.bundles.hasUrl(l)||n&&n.bundlesIgnore)o(null,{load:t,original:i&&i.file.filename||t});else{if(!this._app.bundles.urlIsLoadedOrLoading(l)){const t=this._app.bundles.listBundlesForAsset(i);let e;n&&n.bundlesFilter&&(e=n.bundlesFilter(t)),e||(t?.sort((t,e)=>t.file.size-e.file.size),e=t?.[0]),e&&this._app.assets?.load(e)}this._app.bundles.loadUrl(l,(t,e)=>{o(t,{load:e,original:l})})}}}_loadNull(t,e,s){t.load(null,function(i,n,r){if(i)e(i);else try{e(null,t.open(null,n,s),r)}catch(a){e(a)}},s)}_onSuccess(t,e,s){null!==e?this._cache[t]=e:delete this._cache[t];for(let i=0;i<this._requests[t].length;i++)this._requests[t][i](null,e,s);delete this._requests[t]}_onFailure(t,e){if(console.error(e),this._requests[t]){for(let s=0;s<this._requests[t].length;s++)this._requests[t][s](e);delete this._requests[t]}}open(t,e){const s=this._handlers[t];return s?s.open(null,e):(console.warn(`No resource handler found for: ${t}`),e)}patch(t,e){const s=this._handlers[t.type];s?s.patch&&s.patch(t,e):console.warn(`No resource handler found for: ${t.type}`)}clearCache(t,e){const s=rr.makeKey(t,e);delete this._cache[s]}getFromCache(t,e){const s=rr.makeKey(t,e);if(this._cache[s])return this._cache[s]}enableRetry(t=5){t=Math.max(0,t)||0;for(const e in this._handlers)this._handlers[e].maxRetries=t}disableRetry(){for(const t in this._handlers)this._handlers[t].maxRetries=0}destroy(){this._handlers={},this._requests={},this._cache={}}}var ar=s(65762),or=s(2682);class lr{_validate(t){if(!t.header)throw new Error('pc.I18n#addData: Missing "header" field');if(!t.header.version)throw new Error('pc.I18n#addData: Missing "header.version" field');if(1!==t.header.version)throw new Error('pc.I18n#addData: Invalid "header.version" field');if(!t.data)throw new Error('pc.I18n#addData: Missing "data" field');if(!Array.isArray(t.data))throw new Error('pc.I18n#addData: "data" field must be an array');for(let e=0,s=t.data.length;e<s;e++){const s=t.data[e];if(!s.info)throw new Error(`pc.I18n#addData: missing "data[${e}].info" field`);if(!s.info.locale)throw new Error(`pc.I18n#addData: missing "data[${e}].info.locale" field`);if("string"!=typeof s.info.locale)throw new Error(`pc.I18n#addData: "data[${e}].info.locale" must be a string`);if(!s.messages)throw new Error(`pc.I18n#addData: missing "data[${e}].messages" field`)}}parse(t){return t.data}}class hr extends r.J{static{this.EVENT_CHANGE="change"}constructor(t){super(),this.locale=ar.X,this._translations={},this._availableLangs={},this._app=t,this._assets=[],this._parser=new lr}set assets(t){const e={};for(let i=0,n=t.length;i<n;i++){e[t[i]instanceof Kn.V?t[i].id:t[i]]=!0}let s=this._assets.length;for(;s--;){const t=this._assets[s];if(!e[t]){this._app.assets.off(`add:${t}`,this._onAssetAdd,this);const e=this._app.assets.get(t);e&&this._onAssetRemove(e),this._assets.splice(s,1)}}for(const i in e){const t=parseInt(i,10);if(-1!==this._assets.indexOf(t))continue;this._assets.push(t);const e=this._app.assets.get(t);e?this._onAssetAdd(e):this._app.assets.once(`add:${t}`,this._onAssetAdd,this)}}get assets(){return this._assets}set locale(t){if(this._locale===t)return;let e=(0,or.Xo)(t);if("in"===e&&(e="id",t=(0,or.JD)(t,e),this._locale===t))return;const s=this._locale;this._locale=t,this._lang=e,this._pluralFn=(0,or.dc)(this._lang),this.fire(hr.EVENT_CHANGE,t,s)}get locale(){return this._locale}static findAvailableLocale(t,e){return(0,or.Tw)(t,e)}findAvailableLocale(t){if(this._translations[t])return t;const e=(0,or.Xo)(t);return this._findFallbackLocale(t,e)}getText(t,e){let s,i=t;e||(e=this._locale,s=this._lang);let n=this._translations[e];return n||(s||(s=(0,or.Xo)(e)),e=this._findFallbackLocale(e,s),n=this._translations[e]),n&&n.hasOwnProperty(t)&&(i=n[t],Array.isArray(i)&&(i=i[0]),null==i&&(i=t)),i}getPluralText(t,e,s){let i,n,r=t;s?(i=(0,or.Xo)(s),n=(0,or.dc)(i)):(s=this._locale,i=this._lang,n=this._pluralFn);let a=this._translations[s];if(a||(s=this._findFallbackLocale(s,i),i=(0,or.Xo)(s),n=(0,or.dc)(i),a=this._translations[s]),a&&a[t]&&n){const s=n(e);r=a[t][s],null==r&&(r=t)}return r}addData(t){let e;try{e=this._parser.parse(t)}catch(s){return void console.error(s)}for(let i=0,n=e.length;i<n;i++){const t=e[i],s=t.info.locale,n=t.messages;if(!this._translations[s]){this._translations[s]={};const t=(0,or.Xo)(s);this._availableLangs[t]||(this._availableLangs[t]=s)}Object.assign(this._translations[s],n),this.fire("data:add",s,n)}}removeData(t){let e;try{e=this._parser.parse(t)}catch(s){return void console.error(s)}for(let i=0,n=e.length;i<n;i++){const t=e[i],s=t.info.locale,n=this._translations[s];if(!n)continue;const r=t.messages;for(const e in r)delete n[e];0===Object.keys(n).length&&(delete this._translations[s],delete this._availableLangs[(0,or.Xo)(s)]),this.fire("data:remove",s,r)}}destroy(){this._translations=null,this._availableLangs=null,this._assets=null,this._parser=null,this.off()}_findFallbackLocale(t,e){let s=ar.f[t];return s&&this._translations[s]?s:(s=ar.f[e],s&&this._translations[s]?s:(s=this._availableLangs[e],s&&this._translations[s]?s:ar.X))}_onAssetAdd(t){t.on("load",this._onAssetLoad,this),t.on("change",this._onAssetChange,this),t.on("remove",this._onAssetRemove,this),t.on("unload",this._onAssetUnload,this),t.resource&&this._onAssetLoad(t)}_onAssetLoad(t){this.addData(t.resource)}_onAssetChange(t){t.resource&&this.addData(t.resource)}_onAssetRemove(t){t.off("load",this._onAssetLoad,this),t.off("change",this._onAssetChange,this),t.off("remove",this._onAssetRemove,this),t.off("unload",this._onAssetUnload,this),t.resource&&this.removeData(t.resource),this._app.assets.once(`add:${t.id}`,this._onAssetAdd,this)}_onAssetUnload(t){t.resource&&this.removeData(t.resource)}}class cr extends r.J{constructor(t){super(),this._scripts={},this._list=[],this._scriptSchemas=new Map,this.app=t}destroy(){this.app=null,this.off()}addSchema(t,e){e&&this._scriptSchemas.set(t,e)}getSchema(t){return this._scriptSchemas.get(t)}add(t){const e=t.__name;return this._scripts.hasOwnProperty(e)?(setTimeout(()=>{if(t.prototype.swap){const s=this._scripts[e],i=this._list.indexOf(s);this._list[i]=t,this._scripts[e]=t,this.fire("swap",e,t),this.fire(`swap:${e}`,t)}else console.warn(`script registry already has '${e}' script, define 'swap' method for new script type to enable code hot swapping`)}),!1):(this._scripts[e]=t,this._list.push(t),this.fire("add",e,t),this.fire(`add:${e}`,t),setTimeout(()=>{if(!this._scripts.hasOwnProperty(e))return;if(!this.app||!this.app.systems||!this.app.systems.script)return;const t=this.app.systems.script._components;let s;const i=[],n=[];for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++){const n=t.items[t.loopIndex];if(n._scriptsIndex[e]&&n._scriptsIndex[e].awaiting){n._scriptsData&&n._scriptsData[e]&&(s=n._scriptsData[e].attributes);const t=n.create(e,{preloading:!0,ind:n._scriptsIndex[e].ind,attributes:s});t&&i.push(t);for(const e of n.scripts)n.initializeAttributes(e)}}for(let e=0;e<i.length;e++)i[e].enabled&&(i[e]._initialized=!0,n.push(i[e]),i[e].initialize&&i[e].initialize());for(let e=0;e<n.length;e++)n[e].enabled&&!n[e]._postInitialized&&(n[e]._postInitialized=!0,n[e].postInitialize&&n[e].postInitialize())}),!0)}remove(t){let e=t,s=t;if("string"!=typeof s?s=e.__name:e=this.get(s),this.get(s)!==e)return!1;delete this._scripts[s];const i=this._list.indexOf(e);return this._list.splice(i,1),this.fire("remove",s,e),this.fire(`remove:${s}`,e),!0}get(t){return this._scripts[t]||null}has(t){if("string"==typeof t)return this._scripts.hasOwnProperty(t);if(!t)return!1;const e=t.__name;return this._scripts[e]===t}list(){return this._list}}var dr=s(23852);class ur{constructor(t,e){this.data=null,this._loading=!1,this._onLoadedCallbacks=[],this.name=t,this.url=e}get loaded(){return!!this.data}get loading(){return this._loading}}class fr{constructor(t){this._list=[],this._index={},this._urlIndex={},this._app=t}destroy(){this._app=null}list(){return this._list}add(t,e){if(this._index.hasOwnProperty(t))return!1;const s=new ur(t,e),i=this._list.push(s);return this._index[s.name]=i-1,this._urlIndex[s.url]=i-1,!0}find(t){return this._index.hasOwnProperty(t)?this._list[this._index[t]]:null}findByUrl(t){return this._urlIndex.hasOwnProperty(t)?this._list[this._urlIndex[t]]:null}remove(t){if(this._index.hasOwnProperty(t)){const e=this._index[t];let s=this._list[e];delete this._urlIndex[s.url],delete this._index[t],this._list.splice(e,1);for(let t=0;t<this._list.length;t++)s=this._list[t],this._index[s.name]=t,this._urlIndex[s.url]=t}}_loadSceneData(t,e,s){const i=this._app;let n=t;if("string"==typeof t&&(t=this.findByUrl(n)||this.find(n)||new ur("Untitled",n)),n=t.url,n)if(t.loaded)s(null,t);else{if(i.assets&&i.assets.prefix&&!dr._3.test(n)&&(n=Qs.A.join(i.assets.prefix,n)),t._onLoadedCallbacks.push(s),!t._loading){i.loader.getHandler("hierarchy").load(n,(s,i)=>{t.data=i,t._loading=!1;for(let e=0;e<t._onLoadedCallbacks.length;e++)t._onLoadedCallbacks[e](s,t);e||(t.data=null),t._onLoadedCallbacks.length=0})}t._loading=!0}else s("Cannot find scene to load")}loadSceneData(t,e){this._loadSceneData(t,!0,e)}unloadSceneData(t){"string"==typeof t&&(t=this.findByUrl(t)),t&&(t.data=null)}_loadSceneHierarchy(t,e,s){this._loadSceneData(t,!1,(t,i)=>{if(t)return void(s&&s(t));e&&e(i);const n=this._app;n._preloadScripts(i.data,()=>{const t=n.loader.getHandler("hierarchy");n.systems.script.preloading=!0;const e=t.open(i.url,i.data);n.systems.script.preloading=!1,n.loader.clearCache(i.url,"hierarchy"),n.root.addChild(e),n.systems.fire("initialize",e),n.systems.fire("postInitialize",e),n.systems.fire("postPostInitialize",e),s&&s(null,e)})})}loadSceneHierarchy(t,e){this._loadSceneHierarchy(t,null,e)}loadSceneSettings(t,e){this._loadSceneData(t,!1,(t,s)=>{t?e&&e(t):(this._app.applySceneSettings(s.data.settings),e&&e(null))})}changeScene(t,e){const s=this._app;this._loadSceneHierarchy(t,t=>{const{children:e}=s.root;for(;e.length;)e[0].destroy();s.applySceneSettings(t.data.settings)},e)}loadScene(t,e){const s=this._app,i=s.loader.getHandler("scene");s.assets&&s.assets.prefix&&!dr._3.test(t)&&(t=Qs.A.join(s.assets.prefix,t)),i.load(t,(n,r)=>{if(n)e&&e(n);else{const n=()=>{s.systems.script.preloading=!0;const n=i.open(t,r),a=this.findByUrl(t);a&&!a.loaded&&(a.data=r),s.systems.script.preloading=!1,s.loader.clearCache(t,"scene"),s.loader.patch({resource:n,type:"scene"},s.assets),s.root.addChild(n.root),s.systems.rigidbody&&"undefined"!=typeof Ammo&&s.systems.rigidbody.gravity.set(n._gravity.x,n._gravity.y,n._gravity.z),e&&e(null,n)};s._preloadScripts(r,n)}})}}var pr=s(17402);let mr=!1;const _r={app:null,createLoadingScreen(t){if(mr)return;mr=!0;t((0,pr.D)())}};class gr{constructor(t){this.frame={fps:0,ms:0,dt:0,updateStart:0,updateTime:0,renderStart:0,renderTime:0,physicsStart:0,physicsTime:0,cullTime:0,sortTime:0,skinTime:0,morphTime:0,instancingTime:0,triangles:0,otherPrimitives:0,shaders:0,materials:0,cameras:0,shadowMapUpdates:0,shadowMapTime:0,depthMapTime:0,forwardTime:0,lightClustersTime:0,lightClusters:0,_timeToCountFrames:0,_fpsAccum:0},this.drawCalls={forward:0,depth:0,shadow:0,immediate:0,misc:0,total:0,skinned:0,instanced:0,removedByInstancing:0},this.misc={renderTargetCreationTime:0},this.particles={updatesPerFrame:0,_updatesPerFrame:0,frameTime:0,_frameTime:0},this.shaders=t._shaderStats,this.vram=t._vram,Object.defineProperty(this.vram,"totalUsed",{get:function(){return this.tex+this.vb+this.ib}}),Object.defineProperty(this.vram,"geom",{get:function(){return this.vb+this.ib}})}get scene(){return(0,pr.D)().scene._stats}get lightmapper(){return(0,pr.D)().lightmapper?.stats}get batcher(){const t=(0,pr.D)()._batcher;return t?t._stats:null}}var vr=s(6455),Sr=s(37804),yr="\nuint pack8888(vec4 v) {\n\tuvec4 t = uvec4(v * 255.0) << uvec4(24u, 16u, 8u, 0u);\n\treturn t.x | t.y | t.z | t.w;\n}\nuint pack101010(vec3 v) {\n\tuvec3 t = uvec3(v * 1023.0) << uvec3(20u, 10u, 0u);\n\treturn t.x | t.y | t.z;\n}\nuint pack111110(vec3 v) {\n\tuvec3 t = uvec3(v * vec3(2047.0, 2047.0, 1023.0)) << uvec3(21u, 10u, 0u);\n\treturn t.x | t.y | t.z;\n}\nvec4 unpack8888(uint v) {\n\treturn vec4((uvec4(v) >> uvec4(24u, 16u, 8u, 0u)) & 0xffu) / 255.0;\n}\nvec3 unpack101010(uint v) {\n\treturn vec3((uvec3(v) >> uvec3(20u, 10u, 0u)) & 0x3ffu) / 1023.0;\n}\nvec3 unpack111110(uint v) {\n\treturn vec3((uvec3(v) >> uvec3(21u, 10u, 0u)) & uvec3(0x7ffu, 0x7ffu, 0x3ffu)) / vec3(2047.0, 2047.0, 1023.0);\n}\nvec3 resolveCodebook(vec3 s, vec4 codebook[64]) {\n\tuvec3 idx = uvec3(s * 255.0);\n\tvec3 v = vec3(\n\t\tcodebook[idx.x >> 2u][idx.x & 3u],\n\t\tcodebook[idx.y >> 2u][idx.y & 3u],\n\t\tcodebook[idx.z >> 2u][idx.z & 3u]\n\t);\n\treturn (v - codebook[0].x) / (codebook[63].w - codebook[0].x);\n}\n",xr=s(97275),Tr=s(18242);const wr={alphaTestPS:"\nuniform float alpha_ref;\nvoid alphaTest(float a) {\n\tif (a < alpha_ref) discard;\n}\n",ambientPS:'\n#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\tuniform vec3 ambientSH[9];\n#endif\n#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t#include "envAtlasPS"\n\t#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\t\tuniform sampler2D texture_envAtlas;\n\t#endif\n#endif\nvoid addAmbient(vec3 worldNormal) {\n\t#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\t\tvec3 n = cubeMapRotate(worldNormal);\n\t\tvec3 color =\n\t\t\tambientSH[0] +\n\t\t\tambientSH[1] * n.x +\n\t\t\tambientSH[2] * n.y +\n\t\t\tambientSH[3] * n.z +\n\t\t\tambientSH[4] * n.x * n.z +\n\t\t\tambientSH[5] * n.z * n.y +\n\t\t\tambientSH[6] * n.y * n.x +\n\t\t\tambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n\t\t\tambientSH[8] * (n.x * n.x - n.y * n.y);\n\t\tdDiffuseLight += processEnvironment(max(color, vec3(0.0)));\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t\tvec3 dir = normalize(cubeMapRotate(worldNormal) * vec3(-1.0, 1.0, 1.0));\n\t\tvec2 uv = mapUv(toSphericalUv(dir), vec4(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);\n\t\tvec4 raw = texture2D(texture_envAtlas, uv);\n\t\tvec3 linear = {ambientDecode}(raw);\n\t\tdDiffuseLight += processEnvironment(linear);\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == CONSTANT\n\t\tdDiffuseLight += light_globalAmbient;\n\t#endif\n}\n',anisotropyPS:"\n#ifdef LIT_GGX_SPECULAR\n\tuniform float material_anisotropyIntensity;\n\tuniform vec2 material_anisotropyRotation;\n#endif\nvoid getAnisotropy() {\n\tdAnisotropy = 0.0;\n\tdAnisotropyRotation = vec2(1.0, 0.0);\n#ifdef LIT_GGX_SPECULAR\n\tdAnisotropy = material_anisotropyIntensity;\n\tdAnisotropyRotation = material_anisotropyRotation;\n#endif\n\t#ifdef STD_ANISOTROPY_TEXTURE\n\tvec3 anisotropyTex = texture2DBias({STD_ANISOTROPY_TEXTURE_NAME}, {STD_ANISOTROPY_TEXTURE_UV}, textureBias).rgb;\n\tdAnisotropy *= anisotropyTex.b;\n\tvec2 anisotropyRotationFromTex = anisotropyTex.rg * 2.0 - vec2(1.0);\n\tmat2 rotationMatrix = mat2(dAnisotropyRotation.x, dAnisotropyRotation.y, -dAnisotropyRotation.y, dAnisotropyRotation.x);\n\tdAnisotropyRotation = rotationMatrix * anisotropyRotationFromTex;\n\t#endif\n\t\n\tdAnisotropy = clamp(dAnisotropy, 0.0, 1.0);\n}\n",aoPS:'\n#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\tuniform float material_aoIntensity;\n#endif\n#ifdef STD_AODETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nvoid getAO() {\n\tdAo = 1.0;\n\t#ifdef STD_AO_TEXTURE\n\t\tfloat aoBase = texture2DBias({STD_AO_TEXTURE_NAME}, {STD_AO_TEXTURE_UV}, textureBias).{STD_AO_TEXTURE_CHANNEL};\n\t\t#ifdef STD_AODETAIL_TEXTURE\n\t\t\tfloat aoDetail = texture2DBias({STD_AODETAIL_TEXTURE_NAME}, {STD_AODETAIL_TEXTURE_UV}, textureBias).{STD_AODETAIL_TEXTURE_CHANNEL};\n\t\t\taoBase = detailMode_{STD_AODETAIL_DETAILMODE}(vec3(aoBase), vec3(aoDetail)).r;\n\t\t#endif\n\t\tdAo *= aoBase;\n\t#endif\n\t#ifdef STD_AO_VERTEX\n\t\tdAo *= saturate(vVertexColor.{STD_AO_VERTEX_CHANNEL});\n\t#endif\n\t#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\t\tdAo = mix(1.0, dAo, material_aoIntensity);\n\t#endif\n}\n',aoDiffuseOccPS:"\nvoid occludeDiffuse(float ao) {\n\tdDiffuseLight *= ao;\n}\n",aoSpecOccPS:"\n#if LIT_OCCLUDE_SPECULAR != NONE\n\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\tuniform float material_occludeSpecularIntensity;\n\t#endif\n#endif\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\t#if LIT_OCCLUDE_SPECULAR == AO\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tfloat specOcc = mix(1.0, ao, material_occludeSpecularIntensity);\n\t\t#else\n\t\t\tfloat specOcc = ao;\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR == GLOSSDEPENDENT\n\t\tfloat specPow = exp2(gloss * 11.0);\n\t\tfloat specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01 * specPow) - 1.0 + ao);\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tspecOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\tdSpecularLight *= specOcc;\n\t\tdReflection *= specOcc;\n\t\t#ifdef LIT_SHEEN\n\t\t\tsSpecularLight *= specOcc;\n\t\t\tsReflection *= specOcc;\n\t\t#endif\n\t#endif\n}\n",bakeDirLmEndPS:"\n\tvec4 dirLm = texture2D(texture_dirLightMap, vUv1);\n\tif (bakeDir > 0.5) {\n\t\tif (dAtten > 0.00001) {\n\t\t\tdirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);\n\t\t\tdAtten = saturate(dAtten);\n\t\t\tgl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);\n\t\t\tgl_FragColor.a = dirLm.w + dAtten;\n\t\t\tgl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);\n\t\t} else {\n\t\t\tgl_FragColor = dirLm;\n\t\t}\n\t} else {\n\t\tgl_FragColor.rgb = dirLm.xyz;\n\t\tgl_FragColor.a = max(dirLm.w, dAtten > 0.00001 ? (1.0/255.0) : 0.0);\n\t}\n",bakeLmEndPS:"\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tdDiffuseLight = ((dDiffuseLight - 0.5) * max(ambientBakeOcclusionContrast + 1.0, 0.0)) + 0.5;\n\tdDiffuseLight += vec3(ambientBakeOcclusionBrightness);\n\tdDiffuseLight = saturate(dDiffuseLight);\n\tdDiffuseLight *= dAmbientLight;\n#endif\n#ifdef LIGHTMAP_RGBM\n\tgl_FragColor.rgb = dDiffuseLight;\n\tgl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));\n\tgl_FragColor.rgb /= 8.0;\n\tgl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );\n\tgl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;\n\tgl_FragColor.rgb /= gl_FragColor.a;\n#else\n\tgl_FragColor = vec4(dDiffuseLight, 1.0);\n#endif\n",basePS:"\nuniform vec3 view_position;\nuniform vec3 light_globalAmbient;\nfloat square(float x) {\n\treturn x*x;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n\treturn clamp(x, vec3(0.0), vec3(1.0));\n}\n",baseNineSlicedPS:"\n#define NINESLICED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n",baseNineSlicedTiledPS:"\n#define NINESLICED\n#define NINESLICETILED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n",bayerPS:"\nfloat bayer2(vec2 p) {\n\treturn mod(2.0 * p.y + p.x + 1.0, 4.0);\n}\nfloat bayer4(vec2 p) {\n\tvec2 p1 = mod(p, 2.0);\n\tvec2 p2 = floor(0.5 * mod(p, 4.0));\n\treturn 4.0 * bayer2(p1) + bayer2(p2);\n}\nfloat bayer8(vec2 p) {\n\tvec2 p1 = mod(p, 2.0);\n\tvec2 p2 = floor(0.5 * mod(p, 4.0));\n\tvec2 p4 = floor(0.25 * mod(p, 8.0));\n\treturn 4.0 * (4.0 * bayer2(p1) + bayer2(p2)) + bayer2(p4);\n}\n",blurVSMPS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\n#ifdef GAUSS\n\tuniform float weight[{SAMPLES}];\n#endif\nvoid main(void) {\n\tvec3 moments = vec3(0.0);\n\tvec2 uv = vUv0 - pixelOffset * (float({SAMPLES}) * 0.5);\n\tfor (int i = 0; i < {SAMPLES}; i++) {\n\t\tvec4 c = texture2D(source, uv + pixelOffset * float(i));\n\t\t#ifdef GAUSS\n\t\t\tmoments += c.xyz * weight[i];\n\t\t#else\n\t\t\tmoments += c.xyz;\n\t\t#endif\n\t}\n\t#ifndef GAUSS\n\t\tmoments *= 1.0 / float({SAMPLES});\n\t#endif\n\tgl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);\n}\n",clearCoatPS:"\nuniform float material_clearCoat;\nvoid getClearCoat() {\n\tccSpecularity = material_clearCoat;\n\t#ifdef STD_CLEARCOAT_TEXTURE\n\tccSpecularity *= texture2DBias({STD_CLEARCOAT_TEXTURE_NAME}, {STD_CLEARCOAT_TEXTURE_UV}, textureBias).{STD_CLEARCOAT_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOAT_VERTEX\n\tccSpecularity *= saturate(vVertexColor.{STD_CLEARCOAT_VERTEX_CHANNEL});\n\t#endif\n}\n",clearCoatGlossPS:"\nuniform float material_clearCoatGloss;\nvoid getClearCoatGlossiness() {\n\tccGlossiness = material_clearCoatGloss;\n\t#ifdef STD_CLEARCOATGLOSS_TEXTURE\n\tccGlossiness *= texture2DBias({STD_CLEARCOATGLOSS_TEXTURE_NAME}, {STD_CLEARCOATGLOSS_TEXTURE_UV}, textureBias).{STD_CLEARCOATGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_VERTEX\n\tccGlossiness *= saturate(vVertexColor.{STD_CLEARCOATGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_INVERT\n\tccGlossiness = 1.0 - ccGlossiness;\n\t#endif\n\tccGlossiness += 0.0000001;\n}\n",clearCoatNormalPS:"\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\nuniform float material_clearCoatBumpiness;\n#endif\nvoid getClearCoatNormal() {\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tvec3 normalMap = {STD_CLEARCOATNORMAL_TEXTURE_DECODE}(texture2DBias({STD_CLEARCOATNORMAL_TEXTURE_NAME}, {STD_CLEARCOATNORMAL_TEXTURE_UV}, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_clearCoatBumpiness);\n\tccNormalW = normalize(dTBN * normalMap);\n#else\n\tccNormalW = dVertexNormalW;\n#endif\n}\n",clusteredLightCookiesPS:"\nvec3 _getCookieClustered(TEXTURE_ACCEPT(tex), vec2 uv, float intensity, vec4 cookieChannel) {\n\tvec4 pixel = mix(vec4(1.0), texture2DLod(tex, uv, 0.0), intensity);\n\tbool isRgb = dot(cookieChannel.rgb, vec3(1.0)) == 3.0;\n\treturn isRgb ? pixel.rgb : vec3(dot(pixel, cookieChannel));\n}\nvec3 getCookie2DClustered(TEXTURE_ACCEPT(tex), mat4 transform, vec3 worldPosition, float intensity, vec4 cookieChannel) {\n\tvec4 projPos = transform * vec4(worldPosition, 1.0);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), projPos.xy / projPos.w, intensity, cookieChannel);\n}\nvec3 getCookieCubeClustered(TEXTURE_ACCEPT(tex), vec3 dir, float intensity, vec4 cookieChannel, float shadowTextureResolution, float shadowEdgePixels, vec3 omniAtlasViewport) {\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), uv, intensity, cookieChannel);\n}\n",clusteredLightShadowsPS:"\nvec3 _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\n\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n\tprojPos.xyz /= projPos.w;\n\treturn projPos.xyz;\n}\nvec3 getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams, vec3 normal) {\n\tvec3 wPos = vPositionW + normal * shadowParams.y;\n\treturn _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nvec3 normalOffsetPointShadow(vec4 shadowParams, vec3 lightPos, vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\tfloat distScale = length(lightDir);\n\tvec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\tvec3 dir = wPos - lightPos;\n\treturn dir;\n}\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\nfloat getShadowOmniClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn textureShadow(shadowMap, vec3(uv, shadowZ));\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\nfloat getShadowOmniClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 shadowCoord = vec3(uv, shadowZ);\n\treturn getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\nfloat getShadowOmniClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 shadowCoord = vec3(uv, shadowZ);\n\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\nfloat getShadowSpotClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\nfloat getShadowSpotClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn getShadowSpotPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\nfloat getShadowSpotClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n",clusteredLightUtilsPS:"\nvec2 getCubemapFaceCoordinates(const vec3 dir, out float faceIndex, out vec2 tileOffset)\n{\n\tvec3 vAbs = abs(dir);\n\tfloat ma;\n\tvec2 uv;\n\tif (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n\t\tfaceIndex = dir.z < 0.0 ? 5.0 : 4.0;\n\t\tma = 0.5 / vAbs.z;\n\t\tuv = vec2(dir.z < 0.0 ? -dir.x : dir.x, -dir.y);\n\t\ttileOffset.x = 2.0;\n\t\ttileOffset.y = dir.z < 0.0 ? 1.0 : 0.0;\n\t} else if(vAbs.y >= vAbs.x) {\n\t\tfaceIndex = dir.y < 0.0 ? 3.0 : 2.0;\n\t\tma = 0.5 / vAbs.y;\n\t\tuv = vec2(dir.x, dir.y < 0.0 ? -dir.z : dir.z);\n\t\ttileOffset.x = 1.0;\n\t\ttileOffset.y = dir.y < 0.0 ? 1.0 : 0.0;\n\t} else {\n\t\tfaceIndex = dir.x < 0.0 ? 1.0 : 0.0;\n\t\tma = 0.5 / vAbs.x;\n\t\tuv = vec2(dir.x < 0.0 ? dir.z : -dir.z, -dir.y);\n\t\ttileOffset.x = 0.0;\n\t\ttileOffset.y = dir.x < 0.0 ? 1.0 : 0.0;\n\t}\n\treturn uv * ma + 0.5;\n}\nvec2 getCubemapAtlasCoordinates(const vec3 omniAtlasViewport, float shadowEdgePixels, float shadowTextureResolution, const vec3 dir) {\n\tfloat faceIndex;\n\tvec2 tileOffset;\n\tvec2 uv = getCubemapFaceCoordinates(dir, faceIndex, tileOffset);\n\tfloat atlasFaceSize = omniAtlasViewport.z;\n\tfloat tileSize = shadowTextureResolution * atlasFaceSize;\n\tfloat offset = shadowEdgePixels / tileSize;\n\tuv = uv * vec2(1.0 - offset * 2.0) + vec2(offset * 1.0);\n\tuv *= atlasFaceSize;\n\tuv += tileOffset * atlasFaceSize;\n\tuv += omniAtlasViewport.xy;\n\treturn uv;\n}\n",clusteredLightPS:'\n#include "lightBufferDefinesPS"\n#include "clusteredLightUtilsPS"\n#ifdef CLUSTER_COOKIES\n\t#include "clusteredLightCookiesPS"\n#endif\n#ifdef CLUSTER_SHADOWS\n\t#include "clusteredLightShadowsPS"\n#endif\nuniform highp sampler2D clusterWorldTexture;\nuniform highp sampler2D lightsTexture;\n#ifdef CLUSTER_SHADOWS\n\tuniform sampler2DShadow shadowAtlasTexture;\n#endif\n#ifdef CLUSTER_COOKIES\n\tuniform sampler2D cookieAtlasTexture;\n#endif\nuniform int clusterMaxCells;\nuniform float clusterSkip;\nuniform vec3 clusterCellsCountByBoundsSize;\nuniform vec3 clusterTextureSize;\nuniform vec3 clusterBoundsMin;\nuniform vec3 clusterBoundsDelta;\nuniform vec3 clusterCellsDot;\nuniform vec3 clusterCellsMax;\nuniform vec2 shadowAtlasParams;\nstruct ClusterLightData {\n\tuint flags;\n\tvec3 halfWidth;\n\tbool isSpot;\n\tvec3 halfHeight;\n\tint lightIndex;\n\tvec3 position;\n\tuint shape;\n\tvec3 direction;\n\tbool falloffModeLinear;\n\tvec3 color;\n\tfloat shadowIntensity;\n\tvec3 omniAtlasViewport;\n\tfloat range;\n\tvec4 cookieChannelMask;\n\tfloat biasesData;\n\tfloat shadowBias;\n\tfloat shadowNormalBias;\n\tfloat anglesData;\n\tfloat innerConeAngleCos;\n\tfloat outerConeAngleCos;\n\tfloat cookieIntensity;\n\tbool isDynamic;\n\tbool isLightmapped;\n};\nmat4 lightProjectionMatrix;\nvec4 sampleLightTextureF(const ClusterLightData clusterLightData, int index) {\n\treturn texelFetch(lightsTexture, ivec2(index, clusterLightData.lightIndex), 0);\n}\nvoid decodeClusterLightCore(inout ClusterLightData clusterLightData, float lightIndex) {\n\tclusterLightData.lightIndex = int(lightIndex);\n\tvec4 halfData = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_COLOR_ANGLES_BIAS});\n\tclusterLightData.anglesData = halfData.z;\n\tclusterLightData.biasesData = halfData.w;\n\tvec2 colorRG = unpackHalf2x16(floatBitsToUint(halfData.x));\n\tvec2 colorB_ = unpackHalf2x16(floatBitsToUint(halfData.y));\n\tclusterLightData.color = vec3(colorRG, colorB_.x) * {LIGHT_COLOR_DIVIDER};\n\tvec4 lightPosRange = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_POSITION_RANGE});\n\tclusterLightData.position = lightPosRange.xyz;\n\tclusterLightData.range = lightPosRange.w;\n\tvec4 lightDir_Flags = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_DIRECTION_FLAGS});\n\tclusterLightData.direction = lightDir_Flags.xyz;\n\tclusterLightData.flags = floatBitsToUint(lightDir_Flags.w);\n\tclusterLightData.isSpot = (clusterLightData.flags & (1u << 30u)) != 0u;\n\tclusterLightData.shape = (clusterLightData.flags >> 28u) & 0x3u;\n\tclusterLightData.falloffModeLinear = (clusterLightData.flags & (1u << 27u)) == 0u;\n\tclusterLightData.shadowIntensity = float((clusterLightData.flags >> 0u) & 0xFFu) / 255.0;\n\tclusterLightData.cookieIntensity = float((clusterLightData.flags >> 8u) & 0xFFu) / 255.0;\n\tclusterLightData.isDynamic = (clusterLightData.flags & (1u << 22u)) != 0u;\n\tclusterLightData.isLightmapped = (clusterLightData.flags & (1u << 21u)) != 0u;\n}\nvoid decodeClusterLightSpot(inout ClusterLightData clusterLightData) {\n\tvec2 angles = unpackHalf2x16(floatBitsToUint(clusterLightData.anglesData));\n\tclusterLightData.innerConeAngleCos = angles.x;\n\tclusterLightData.outerConeAngleCos = angles.y;\n}\nvoid decodeClusterLightOmniAtlasViewport(inout ClusterLightData clusterLightData) {\n\tclusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_0}).xyz;\n}\nvoid decodeClusterLightAreaData(inout ClusterLightData clusterLightData) {\n\tclusterLightData.halfWidth = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_AREA_DATA_WIDTH}).xyz;\n\tclusterLightData.halfHeight = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_AREA_DATA_HEIGHT}).xyz;\n}\nvoid decodeClusterLightProjectionMatrixData(inout ClusterLightData clusterLightData) {\n\t\n\tvec4 m0 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_0});\n\tvec4 m1 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_1});\n\tvec4 m2 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_2});\n\tvec4 m3 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_3});\n\tlightProjectionMatrix = mat4(m0, m1, m2, m3);\n}\nvoid decodeClusterLightShadowData(inout ClusterLightData clusterLightData) {\n\t\n\tvec2 biases = unpackHalf2x16(floatBitsToUint(clusterLightData.biasesData));\n\tclusterLightData.shadowBias = biases.x;\n\tclusterLightData.shadowNormalBias = biases.y;\n}\nvoid decodeClusterLightCookieData(inout ClusterLightData clusterLightData) {\n\tuint cookieFlags = (clusterLightData.flags >> 23u) & 0x0Fu;\n\tclusterLightData.cookieChannelMask = vec4(uvec4(cookieFlags) & uvec4(1u, 2u, 4u, 8u));\n\tclusterLightData.cookieChannelMask = step(1.0, clusterLightData.cookieChannelMask);\n}\nvoid evaluateLight(\n\tClusterLightData light, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir,\n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tvec3 cookieAttenuation = vec3(1.0);\n\tfloat diffuseAttenuation = 1.0;\n\tfloat falloffAttenuation = 1.0;\n\tvec3 lightDirW = evalOmniLight(light.position);\n\tvec3 lightDirNormW = normalize(lightDirW);\n\t#ifdef CLUSTER_AREALIGHTS\n\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\tdecodeClusterLightAreaData(light);\n\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\tcalcRectLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\tcalcDiskLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else {\n\t\t\tcalcSphereLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t}\n\t\tfalloffAttenuation = getFalloffWindow(light.range, lightDirW);\n\t} else\n\t#endif\n\t{\n\t\tif (light.falloffModeLinear)\n\t\t\tfalloffAttenuation = getFalloffLinear(light.range, lightDirW);\n\t\telse\n\t\t\tfalloffAttenuation = getFalloffInvSquared(light.range, lightDirW);\n\t}\n\tif (falloffAttenuation > 0.00001) {\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\tdiffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\tdiffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else {\n\t\t\t\tdiffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t}\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\tfalloffAttenuation *= getLightDiffuse(worldNormal, viewDir, lightDirNormW); \n\t\t}\n\t\tif (light.isSpot) {\n\t\t\tdecodeClusterLightSpot(light);\n\t\t\tfalloffAttenuation *= getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, lightDirNormW);\n\t\t}\n\t\t#if defined(CLUSTER_COOKIES) || defined(CLUSTER_SHADOWS)\n\t\tif (falloffAttenuation > 0.00001) {\n\t\t\tif (light.shadowIntensity > 0.0 || light.cookieIntensity > 0.0) {\n\t\t\t\tif (light.isSpot) {\n\t\t\t\t\tdecodeClusterLightProjectionMatrixData(light);\n\t\t\t\t} else {\n\t\t\t\t\tdecodeClusterLightOmniAtlasViewport(light);\n\t\t\t\t}\n\t\t\t\tfloat shadowTextureResolution = shadowAtlasParams.x;\n\t\t\t\tfloat shadowEdgePixels = shadowAtlasParams.y;\n\t\t\t\t#ifdef CLUSTER_COOKIES\n\t\t\t\tif (light.cookieIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightCookieData(light);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tcookieAttenuation = getCookie2DClustered(TEXTURE_PASS(cookieAtlasTexture), lightProjectionMatrix, vPositionW, light.cookieIntensity, light.cookieChannelMask);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcookieAttenuation = getCookieCubeClustered(TEXTURE_PASS(cookieAtlasTexture), lightDirW, light.cookieIntensity, light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef CLUSTER_SHADOWS\n\t\t\t\tif (light.shadowIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightShadowData(light);\n\t\t\t\t\tvec4 shadowParams = vec4(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tvec3 shadowCoord = getShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCSS)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCSS(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvec3 dir = normalOffsetPointShadow(shadowParams, light.position, lightDirW, lightDirNormW, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#endif\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\t{\n\t\t\t\tvec3 areaDiffuse = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tareaDiffuse = mix(areaDiffuse, vec3(0), dLTCSpecFres);\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += areaDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tfloat areaLightSpecular;\n\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\tareaLightSpecular = getRectLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\tareaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else {\n\t\t\t\t\tareaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);\n\t\t\t\t}\n\t\t\t\tdSpecularLight += dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\tfloat areaLightSpecularCC;\n\t\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\t\tareaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\t\tareaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tareaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t}\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\t{\n\t\t\t\tvec3 punctualDiffuse = falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#if defined(CLUSTER_AREALIGHTS)\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tpunctualDiffuse = mix(punctualDiffuse, vec3(0), specularity);\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += punctualDiffuse;\n\t\t\t}\n\t \n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 halfDir = normalize(-lightDirNormW + viewDir);\n\t\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tdSpecularLight += \n\t\t\t\t\t\tgetLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * \n\t\t\t\t\t\tgetFresnel(\n\t\t\t\t\t\t\tdot(viewDir, halfDir), \n\t\t\t\t\t\t\tgloss, \n\t\t\t\t\t\t\tspecularity\n\t\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\t\tiridescence_intensity\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t);\n\t\t\t\t#else\n\t\t\t\t\tdSpecularLight += getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));\n\t\t\t\t\t#else\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation; \n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tsSpecularLight += getLightSpecularSheen(halfDir, worldNormal, viewDir, lightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t}\n\t}\n\tdAtten = falloffAttenuation;\n\tdLightDirNormW = lightDirNormW;\n}\nvoid evaluateClusterLight(\n\tfloat lightIndex, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tClusterLightData clusterLightData;\n\tdecodeClusterLightCore(clusterLightData, lightIndex);\n\t#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS\n\t\tbool acceptLightMask = clusterLightData.isDynamic;\n\t#else\n\t\tbool acceptLightMask = clusterLightData.isLightmapped;\n\t#endif\n\tif (acceptLightMask)\n\t\tevaluateLight(\n\t\t\tclusterLightData, \n\t\t\tworldNormal, \n\t\t\tviewDir, \n\t\t\treflectionDir, \n#if defined(LIT_CLEARCOAT)\n\t\t\tclearcoatReflectionDir, \n#endif\n\t\t\tgloss, \n\t\t\tspecularity, \n\t\t\tgeometricNormal, \n\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel,\n#endif\n\t\t\tclearcoat_worldNormal,\n\t\t\tclearcoat_gloss,\n\t\t\tsheen_gloss,\n\t\t\tiridescence_intensity\n\t\t);\n}\nvoid addClusteredLights(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tif (clusterSkip > 0.5)\n\t\treturn;\n\tvec3 cellCoords = floor((vPositionW - clusterBoundsMin) * clusterCellsCountByBoundsSize);\n\tif (!(any(lessThan(cellCoords, vec3(0.0))) || any(greaterThanEqual(cellCoords, clusterCellsMax)))) {\n\t\tfloat cellIndex = dot(clusterCellsDot, cellCoords);\n\t\tfloat clusterV = floor(cellIndex * clusterTextureSize.y);\n\t\tfloat clusterU = cellIndex - (clusterV * clusterTextureSize.x);\n\t\tfor (int lightCellIndex = 0; lightCellIndex < clusterMaxCells; lightCellIndex++) {\n\t\t\tfloat lightIndex = texelFetch(clusterWorldTexture, ivec2(int(clusterU) + lightCellIndex, clusterV), 0).x;\n\t\t\tif (lightIndex <= 0.0)\n\t\t\t\tbreak;\n\t\t\tevaluateClusterLight(\n\t\t\t\tlightIndex * 255.0, \n\t\t\t\tworldNormal, \n\t\t\t\tviewDir, \n\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\tgloss, \n\t\t\t\tspecularity, \n\t\t\t\tgeometricNormal, \n\t\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\tclearcoat_worldNormal,\n\t\t\t\tclearcoat_gloss,\n\t\t\t\tsheen_gloss,\n\t\t\t\tiridescence_intensity\n\t\t\t); \n\t\t}\n\t}\n}\n',combinePS:"\nvec3 combineColor(vec3 albedo, vec3 sheenSpecularity, float clearcoatSpecularity) {\n\tvec3 ret = vec3(0);\n#ifdef LIT_OLD_AMBIENT\n\tret += (dDiffuseLight - light_globalAmbient) * albedo + material_ambient * light_globalAmbient;\n#else\n\tret += albedo * dDiffuseLight;\n#endif\n#ifdef LIT_SPECULAR\n\tret += dSpecularLight;\n#endif\n#ifdef LIT_REFLECTIONS\n\tret += dReflection.rgb * dReflection.a;\n#endif\n#ifdef LIT_SHEEN\n\tfloat sheenScaling = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;\n\tret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;\n#endif\n#ifdef LIT_CLEARCOAT\n\tfloat clearCoatScaling = 1.0 - ccFresnel * clearcoatSpecularity;\n\tret = ret * clearCoatScaling + (ccSpecularLight + ccReflection) * clearcoatSpecularity;\n#endif\n\treturn ret;\n}\n",cookieBlit2DPS:"\n\tvarying vec2 uv0;\n\tuniform sampler2D blitTexture;\n\tvoid main(void) {\n\t\tgl_FragColor = texture2D(blitTexture, uv0);\n\t}\n",cookieBlitCubePS:"\n\tvarying vec2 uv0;\n\tuniform samplerCube blitTexture;\n\tuniform mat4 invViewProj;\n\tvoid main(void) {\n\t\tvec4 projPos = vec4(uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\tvec4 worldPos = invViewProj * projPos;\n\t\tgl_FragColor = textureCube(blitTexture, worldPos.xyz);\n\t}\n",cookieBlitVS:"\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t\t#ifndef WEBGPU\n\t\t\tuv0.y = 1.0 - uv0.y;\n\t\t#endif\n\t}\n",cookiePS:"\nvec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {\n\treturn mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);\n}\n",cubeMapProjectPS:"\n#if LIT_CUBEMAP_PROJECTION == BOX\n\tuniform vec3 envBoxMin;\n\tuniform vec3 envBoxMax;\n#endif\nvec3 cubeMapProject(vec3 nrdir) {\n\t#if LIT_CUBEMAP_PROJECTION == NONE\n\t\treturn cubeMapRotate(nrdir);\n\t#endif\n\t#if LIT_CUBEMAP_PROJECTION == BOX\n\t\tnrdir = cubeMapRotate(nrdir);\n\t\tvec3 rbmax = (envBoxMax - vPositionW) / nrdir;\n\t\tvec3 rbmin = (envBoxMin - vPositionW) / nrdir;\n\t\tvec3 rbminmax = mix(rbmin, rbmax, vec3(greaterThan(nrdir, vec3(0.0))));\n\t\tfloat fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n\t\tvec3 posonbox = vPositionW + nrdir * fa;\n\t\tvec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;\n\t\treturn normalize(posonbox - envBoxPos);\n\t#endif\n}\n",cubeMapRotatePS:"\n#ifdef CUBEMAP_ROTATION\nuniform mat3 cubeMapRotationMatrix;\n#endif\nvec3 cubeMapRotate(vec3 refDir) {\n#ifdef CUBEMAP_ROTATION\n\treturn refDir * cubeMapRotationMatrix;\n#else\n\treturn refDir;\n#endif\n}\n",debugOutputPS:"\n#ifdef DEBUG_ALBEDO_PASS\ngl_FragColor = vec4(gammaCorrectOutput(dAlbedo), 1.0);\n#endif\n#ifdef DEBUG_UV0_PASS\ngl_FragColor = vec4(litArgs_albedo , 1.0);\n#endif\n#ifdef DEBUG_WORLD_NORMAL_PASS\ngl_FragColor = vec4(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n#endif\n#ifdef DEBUG_OPACITY_PASS\ngl_FragColor = vec4(vec3(litArgs_opacity) , 1.0);\n#endif\n#ifdef DEBUG_SPECULARITY_PASS\ngl_FragColor = vec4(litArgs_specularity, 1.0);\n#endif\n#ifdef DEBUG_GLOSS_PASS\ngl_FragColor = vec4(vec3(litArgs_gloss) , 1.0);\n#endif\n#ifdef DEBUG_METALNESS_PASS\ngl_FragColor = vec4(vec3(litArgs_metalness) , 1.0);\n#endif\n#ifdef DEBUG_AO_PASS\ngl_FragColor = vec4(vec3(litArgs_ao) , 1.0);\n#endif\n#ifdef DEBUG_EMISSION_PASS\ngl_FragColor = vec4(gammaCorrectOutput(litArgs_emission), 1.0);\n#endif\n",debugProcessFrontendPS:"\n#ifdef DEBUG_LIGHTING_PASS\nlitArgs_albedo = vec3(0.5);\n#endif\n#ifdef DEBUG_UV0_PASS\n#ifdef VARYING_VUV0\nlitArgs_albedo = vec3(vUv0, 0);\n#else\nlitArgs_albedo = vec3(0);\n#endif\n#endif\n",detailModesPS:"\n#ifndef _DETAILMODES_INCLUDED_\n#define _DETAILMODES_INCLUDED_\nvec3 detailMode_mul(vec3 c1, vec3 c2) {\n\treturn c1 * c2;\n}\nvec3 detailMode_add(vec3 c1, vec3 c2) {\n\treturn c1 + c2;\n}\nvec3 detailMode_screen(vec3 c1, vec3 c2) {\n\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\n}\nvec3 detailMode_overlay(vec3 c1, vec3 c2) {\n\treturn mix(1.0 - 2.0 * (1.0 - c1)*(1.0 - c2), 2.0 * c1 * c2, step(c1, vec3(0.5)));\n}\nvec3 detailMode_min(vec3 c1, vec3 c2) {\n\treturn min(c1, c2);\n}\nvec3 detailMode_max(vec3 c1, vec3 c2) {\n\treturn max(c1, c2);\n}\n#endif\n",diffusePS:'\nuniform vec3 material_diffuse;\n#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nvoid getAlbedo() {\n\tdAlbedo = material_diffuse.rgb;\n\t#ifdef STD_DIFFUSE_TEXTURE\n\t\tvec3 albedoTexture = {STD_DIFFUSE_TEXTURE_DECODE}(texture2DBias({STD_DIFFUSE_TEXTURE_NAME}, {STD_DIFFUSE_TEXTURE_UV}, textureBias)).{STD_DIFFUSE_TEXTURE_CHANNEL};\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t\t\tvec3 albedoDetail = {STD_DIFFUSEDETAIL_TEXTURE_DECODE}(texture2DBias({STD_DIFFUSEDETAIL_TEXTURE_NAME}, {STD_DIFFUSEDETAIL_TEXTURE_UV}, textureBias)).{STD_DIFFUSEDETAIL_TEXTURE_CHANNEL};\n\t\t\talbedoTexture = detailMode_{STD_DIFFUSEDETAIL_DETAILMODE}(albedoTexture, albedoDetail);\n\t\t#endif\n\t\tdAlbedo *= albedoTexture;\n\t#endif\n\t#ifdef STD_DIFFUSE_VERTEX\n\t\tdAlbedo *= gammaCorrectInput(saturate(vVertexColor.{STD_DIFFUSE_VERTEX_CHANNEL}));\n\t#endif\n}\n',decodePS:"\n#ifndef _DECODE_INCLUDED_\n#define _DECODE_INCLUDED_\nvec3 decodeLinear(vec4 raw) {\n\treturn raw.rgb;\n}\nfloat decodeGamma(float raw) {\n\treturn pow(raw, 2.2);\n}\nvec3 decodeGamma(vec3 raw) {\n\treturn pow(raw, vec3(2.2));\n}\nvec3 decodeGamma(vec4 raw) {\n\treturn pow(raw.xyz, vec3(2.2));\n}\nvec3 decodeRGBM(vec4 raw) {\n\tvec3 color = (8.0 * raw.a) * raw.rgb;\n\treturn color * color;\n}\nvec3 decodeRGBP(vec4 raw) {\n\tvec3 color = raw.rgb * (-raw.a * 7.0 + 8.0);\n\treturn color * color;\n}\nvec3 decodeRGBE(vec4 raw) {\n\tif (raw.a == 0.0) {\n\t\treturn vec3(0.0, 0.0, 0.0);\n\t} else {\n\t\treturn raw.xyz * pow(2.0, raw.w * 255.0 - 128.0);\n\t}\n}\nvec4 passThrough(vec4 raw) {\n\treturn raw;\n}\nvec3 unpackNormalXYZ(vec4 nmap) {\n\treturn nmap.xyz * 2.0 - 1.0;\n}\nvec3 unpackNormalXY(vec4 nmap) {\n\tvec3 normal;\n\tnormal.xy = nmap.wy * 2.0 - 1.0;\n\tnormal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy), 0.0, 1.0));\n\treturn normal;\n}\n#endif\n",emissivePS:"\nuniform vec3 material_emissive;\nuniform float material_emissiveIntensity;\nvoid getEmission() {\n\tdEmission = material_emissive * material_emissiveIntensity;\n\t#ifdef STD_EMISSIVE_TEXTURE\n\tdEmission *= {STD_EMISSIVE_TEXTURE_DECODE}(texture2DBias({STD_EMISSIVE_TEXTURE_NAME}, {STD_EMISSIVE_TEXTURE_UV}, textureBias)).{STD_EMISSIVE_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_EMISSIVE_VERTEX\n\tdEmission *= gammaCorrectInput(saturate(vVertexColor.{STD_EMISSIVE_VERTEX_CHANNEL}));\n\t#endif\n}\n",encodePS:"\nvec4 encodeLinear(vec3 source) {\n\treturn vec4(source, 1.0);\n}\nvec4 encodeGamma(vec3 source) {\n\treturn vec4(pow(source + 0.0000001, vec3(1.0 / 2.2)), 1.0);\n}\nvec4 encodeRGBM(vec3 source) {\n\tvec4 result;\n\tresult.rgb = pow(source.rgb, vec3(0.5));\n\tresult.rgb *= 1.0 / 8.0;\n\tresult.a = saturate( max( max( result.r, result.g ), max( result.b, 1.0 / 255.0 ) ) );\n\tresult.a = ceil(result.a * 255.0) / 255.0;\n\tresult.rgb /= result.a;\n\treturn result;\n}\nvec4 encodeRGBP(vec3 source) {\n\tvec3 gamma = pow(source, vec3(0.5));\n\tfloat maxVal = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));\n\tfloat v = 1.0 - ((maxVal - 1.0) / 7.0);\n\tv = ceil(v * 255.0) / 255.0;\n\treturn vec4(gamma / (-v * 7.0 + 8.0), v);\t\n}\nvec4 encodeRGBE(vec3 source) {\n\tfloat maxVal = max(source.x, max(source.y, source.z));\n\tif (maxVal < 1e-32) {\n\t\treturn vec4(0, 0, 0, 0);\n\t} else {\n\t\tfloat e = ceil(log2(maxVal));\n\t\treturn vec4(source / pow(2.0, e), (e + 128.0) / 255.0);\n\t}\n}\n",endPS:"\n\tgl_FragColor.rgb = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);\n\tgl_FragColor.rgb += litArgs_emission;\n\tgl_FragColor.rgb = addFog(gl_FragColor.rgb);\n\tgl_FragColor.rgb = toneMap(gl_FragColor.rgb);\n\tgl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);\n",envAtlasPS:"\n#ifndef _ENVATLAS_INCLUDED_\n#define _ENVATLAS_INCLUDED_\nconst float atlasSize = 512.0;\nconst float seamSize = 1.0 / atlasSize;\nvec2 mapUv(vec2 uv, vec4 rect) {\n\treturn vec2(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),\n\t\t\t\tmix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));\n}\nvec2 mapRoughnessUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(0, 1.0 - t, t, t * 0.5));\n}\nvec2 mapShinyUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(1.0 - t, 1.0 - t, t, t * 0.5));\n}\n#endif\n",envProcPS:"\n#ifdef LIT_SKYBOX_INTENSITY\n\tuniform float skyboxIntensity;\n#endif\nvec3 processEnvironment(vec3 color) {\n\t#ifdef LIT_SKYBOX_INTENSITY\n\t\treturn color * skyboxIntensity;\n\t#else\n\t\treturn color;\n\t#endif\n}\n",falloffInvSquaredPS:"\nfloat getFalloffWindow(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat invRadius = 1.0 / lightRadius;\n\treturn square(saturate(1.0 - square(sqrDist * square(invRadius))));\n}\nfloat getFalloffInvSquared(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat falloff = 1.0 / (sqrDist + 1.0);\n\tfloat invRadius = 1.0 / lightRadius;\n\tfalloff *= 16.0;\n\tfalloff *= square(saturate(1.0 - square(sqrDist * square(invRadius))));\n\treturn falloff;\n}\n",falloffLinearPS:"\nfloat getFalloffLinear(float lightRadius, vec3 lightDir) {\n\tfloat d = length(lightDir);\n\treturn max(((lightRadius - d) / lightRadius), 0.0);\n}\n",floatAsUintPS:"\n#ifndef FLOAT_AS_UINT\n#define FLOAT_AS_UINT\nvec4 float2uint(float value) {\n\tuint intBits = floatBitsToUint(value);\n\treturn vec4(\n\t\tfloat((intBits >> 24u) & 0xFFu) / 255.0,\n\t\tfloat((intBits >> 16u) & 0xFFu) / 255.0,\n\t\tfloat((intBits >> 8u) & 0xFFu) / 255.0,\n\t\tfloat(intBits & 0xFFu) / 255.0\n\t);\n}\nfloat uint2float(vec4 value) {\n\tuint intBits = \n\t\t(uint(value.r * 255.0) << 24u) |\n\t\t(uint(value.g * 255.0) << 16u) |\n\t\t(uint(value.b * 255.0) << 8u) |\n\t\tuint(value.a * 255.0);\n\treturn uintBitsToFloat(intBits);\n}\nvec4 float2vec4(float value) {\n\t#if defined(CAPS_TEXTURE_FLOAT_RENDERABLE)\n\t\treturn vec4(value, 1.0, 1.0, 1.0);\n\t#else\n\t\treturn float2uint(value);\n\t#endif\n}\n#endif\n",fogPS:"\nfloat dBlendModeFogFactor = 1.0;\n#if (FOG != NONE)\n\tuniform vec3 fog_color;\n\t#if (FOG == LINEAR)\n\t\tuniform float fog_start;\n\t\tuniform float fog_end;\n\t#else\n\t\tuniform float fog_density;\n\t#endif\n#endif\nfloat getFogFactor() {\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tfloat fogFactor = 0.0;\n\t#if (FOG == LINEAR)\n\t\tfogFactor = (fog_end - depth) / (fog_end - fog_start);\n\t#elif (FOG == EXP)\n\t\tfogFactor = exp(-depth * fog_density);\n\t#elif (FOG == EXP2)\n\t\tfogFactor = exp(-depth * depth * fog_density * fog_density);\n\t#endif\n\treturn clamp(fogFactor, 0.0, 1.0);\n}\nvec3 addFog(vec3 color) {\n\t#if (FOG != NONE)\n\t\treturn mix(fog_color * dBlendModeFogFactor, color, getFogFactor());\n\t#endif\n\treturn color;\n}\n",fresnelSchlickPS:"\nvec3 getFresnel(\n\t\tfloat cosTheta, \n\t\tfloat gloss, \n\t\tvec3 specularity\n#if defined(LIT_IRIDESCENCE)\n\t\t, vec3 iridescenceFresnel, \n\t\tfloat iridescenceIntensity\n#endif\n\t) {\n\tfloat fresnel = pow(1.0 - saturate(cosTheta), 5.0);\n\tfloat glossSq = gloss * gloss;\n\tvec3 ret = specularity + (max(vec3(glossSq), specularity) - specularity) * fresnel;\n#if defined(LIT_IRIDESCENCE)\n\treturn mix(ret, iridescenceFresnel, iridescenceIntensity);\n#else\n\treturn ret;\n#endif\t\n}\nfloat getFresnelCC(float cosTheta) {\n\tfloat fresnel = pow(1.0 - saturate(cosTheta), 5.0);\n\treturn 0.04 + (1.0 - 0.04) * fresnel;\n}\n",frontendCodePS:"",frontendDeclPS:"",fullscreenQuadVS:"\nattribute vec2 vertex_position;\nvarying vec2 vUv0;\nvoid main(void)\n{\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = vertex_position.xy * 0.5 + 0.5;\n}\n",gammaPS:'\n#include "decodePS"\n#if (GAMMA == SRGB)\n\tfloat gammaCorrectInput(float color) {\n\t\treturn decodeGamma(color);\n\t}\n\tvec3 gammaCorrectInput(vec3 color) {\n\t\treturn decodeGamma(color);\n\t}\n\tvec4 gammaCorrectInput(vec4 color) {\n\t\treturn vec4(decodeGamma(color.xyz), color.w);\n\t}\n\tvec3 gammaCorrectOutput(vec3 color) {\n\t\treturn pow(color + 0.0000001, vec3(1.0 / 2.2));\n\t}\n#else\n\tfloat gammaCorrectInput(float color) {\n\t\treturn color;\n\t}\n\tvec3 gammaCorrectInput(vec3 color) {\n\t\treturn color;\n\t}\n\tvec4 gammaCorrectInput(vec4 color) {\n\t\treturn color;\n\t}\n\tvec3 gammaCorrectOutput(vec3 color) {\n\t\treturn color;\n\t}\n#endif\n',gles3PS:vr.A,gles3VS:Sr.A,glossPS:"\n#ifdef STD_GLOSS_CONSTANT\nuniform float material_gloss;\n#endif\nvoid getGlossiness() {\n\tdGlossiness = 1.0;\n\t#ifdef STD_GLOSS_CONSTANT\n\tdGlossiness *= material_gloss;\n\t#endif\n\t#ifdef STD_GLOSS_TEXTURE\n\tdGlossiness *= texture2DBias({STD_GLOSS_TEXTURE_NAME}, {STD_GLOSS_TEXTURE_UV}, textureBias).{STD_GLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_GLOSS_VERTEX\n\tdGlossiness *= saturate(vVertexColor.{STD_GLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_GLOSS_INVERT\n\tdGlossiness = 1.0 - dGlossiness;\n\t#endif\n\tdGlossiness += 0.0000001;\n}\n",gsplatCenterVS:"\nuniform mat4 matrix_model;\nuniform mat4 matrix_view;\n#ifndef GSPLAT_CENTER_NOPROJ\n\tuniform mat4 matrix_projection;\n#endif\nbool initCenter(vec3 modelCenter, out SplatCenter center) {\n\tmat4 modelView = matrix_view * matrix_model;\n\tvec4 centerView = modelView * vec4(modelCenter, 1.0);\n\t#ifndef GSPLAT_CENTER_NOPROJ\n\t\tif (centerView.z > 0.0) {\n\t\t\treturn false;\n\t\t}\n\t\tvec4 centerProj = matrix_projection * centerView;\n\t\t#if WEBGPU\n\t\t\tcenterProj.z = clamp(centerProj.z, 0, abs(centerProj.w));\n\t\t#else\n\t\t\tcenterProj.z = clamp(centerProj.z, -abs(centerProj.w), abs(centerProj.w));\n\t\t#endif\n\t\tcenter.proj = centerProj;\n\t\tcenter.projMat00 = matrix_projection[0][0];\n\t#endif\n\tcenter.view = centerView.xyz / centerView.w;\n\tcenter.modelView = modelView;\n\treturn true;\n}\n",gsplatCornerVS:"\nuniform vec2 viewport;\nuniform vec4 camera_params;\nbool initCornerCov(SplatSource source, SplatCenter center, out SplatCorner corner, vec3 covA, vec3 covB) {\n\tmat3 Vrk = mat3(\n\t\tcovA.x, covA.y, covA.z, \n\t\tcovA.y, covB.x, covB.y,\n\t\tcovA.z, covB.y, covB.z\n\t);\n\tfloat focal = viewport.x * center.projMat00;\n\tvec3 v = camera_params.w == 1.0 ? vec3(0.0, 0.0, 1.0) : center.view.xyz;\n\tfloat J1 = focal / v.z;\n\tvec2 J2 = -J1 / v.z * v.xy;\n\tmat3 J = mat3(\n\t\tJ1, 0.0, J2.x, \n\t\t0.0, J1, J2.y, \n\t\t0.0, 0.0, 0.0\n\t);\n\tmat3 W = transpose(mat3(center.modelView));\n\tmat3 T = W * J;\n\tmat3 cov = transpose(T) * Vrk * T;\n\t#if GSPLAT_AA\n\t\tfloat detOrig = cov[0][0] * cov[1][1] - cov[0][1] * cov[0][1];\n\t\tfloat detBlur = (cov[0][0] + 0.3) * (cov[1][1] + 0.3) - cov[0][1] * cov[0][1];\n\t\tcorner.aaFactor = sqrt(max(detOrig / detBlur, 0.0));\n\t#endif\n\tfloat diagonal1 = cov[0][0] + 0.3;\n\tfloat offDiagonal = cov[0][1];\n\tfloat diagonal2 = cov[1][1] + 0.3;\n\tfloat mid = 0.5 * (diagonal1 + diagonal2);\n\tfloat radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tfloat lambda1 = mid + radius;\n\tfloat lambda2 = max(mid - radius, 0.1);\n\tfloat vmin = min(1024.0, min(viewport.x, viewport.y));\n\tfloat l1 = 2.0 * min(sqrt(2.0 * lambda1), vmin);\n\tfloat l2 = 2.0 * min(sqrt(2.0 * lambda2), vmin);\n\tif (l1 < 2.0 && l2 < 2.0) {\n\t\treturn false;\n\t}\n\tvec2 c = center.proj.ww / viewport;\n\tif (any(greaterThan(abs(center.proj.xy) - vec2(max(l1, l2)) * c, center.proj.ww))) {\n\t\treturn false;\n\t}\n\tvec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n\tvec2 v1 = l1 * diagonalVector;\n\tvec2 v2 = l2 * vec2(diagonalVector.y, -diagonalVector.x);\n\tcorner.offset = (source.cornerUV.x * v1 + source.cornerUV.y * v2) * c;\n\tcorner.uv = source.cornerUV;\n\treturn true;\n}\nbool initCorner(SplatSource source, SplatCenter center, out SplatCorner corner) {\n\tvec3 covA, covB;\n\treadCovariance(source, covA, covB);\n\treturn initCornerCov(source, center, corner, covA, covB);\n}\n",gsplatColorVS:"\nuniform mediump sampler2D splatColor;\nvec4 readColor(in SplatSource source) {\n\treturn texelFetch(splatColor, source.uv, 0);\n}\n",gsplatCommonVS:'\n#include "gsplatStructsVS"\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#include "gsplatSourceFormatVS"\n#include "gsplatSourceVS"\n#include "gsplatCenterVS"\n#include "gsplatCornerVS"\n#include "gsplatOutputVS"\nvoid clipCorner(inout SplatCorner corner, float alpha) {\n\tfloat clip = min(1.0, sqrt(-log(1.0 / 255.0 / alpha)) / 2.0);\n\tcorner.offset *= clip;\n\tcorner.uv *= clip;\n}\n',gsplatCompressedDataVS:"\nuniform highp usampler2D packedTexture;\nuniform highp sampler2D chunkTexture;\nvec4 chunkDataA;\nvec4 chunkDataB;\nvec4 chunkDataC;\nvec4 chunkDataD;\nvec4 chunkDataE;\nuvec4 packedData;\nvec3 unpack111011(uint bits) {\n\treturn vec3(\n\t\tfloat(bits >> 21u) / 2047.0,\n\t\tfloat((bits >> 11u) & 0x3ffu) / 1023.0,\n\t\tfloat(bits & 0x7ffu) / 2047.0\n\t);\n}\nvec4 unpack8888(uint bits) {\n\treturn vec4(\n\t\tfloat(bits >> 24u) / 255.0,\n\t\tfloat((bits >> 16u) & 0xffu) / 255.0,\n\t\tfloat((bits >> 8u) & 0xffu) / 255.0,\n\t\tfloat(bits & 0xffu) / 255.0\n\t);\n}\nconst float norm = 1.0 / (sqrt(2.0) * 0.5);\nvec4 unpackRotation(uint bits) {\n\tfloat a = (float((bits >> 20u) & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat b = (float((bits >> 10u) & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat c = (float(bits & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat m = sqrt(1.0 - (a * a + b * b + c * c));\n\tuint mode = bits >> 30u;\n\tif (mode == 0u) return vec4(m, a, b, c);\n\tif (mode == 1u) return vec4(a, m, b, c);\n\tif (mode == 2u) return vec4(a, b, m, c);\n\treturn vec4(a, b, c, m);\n}\nvec3 readCenter(SplatSource source) {\n\tuint w = uint(textureSize(chunkTexture, 0).x) / 5u;\n\tuint chunkId = source.id / 256u;\n\tivec2 chunkUV = ivec2((chunkId % w) * 5u, chunkId / w);\n\tchunkDataA = texelFetch(chunkTexture, chunkUV, 0);\n\tchunkDataB = texelFetch(chunkTexture, chunkUV + ivec2(1, 0), 0);\n\tchunkDataC = texelFetch(chunkTexture, chunkUV + ivec2(2, 0), 0);\n\tchunkDataD = texelFetch(chunkTexture, chunkUV + ivec2(3, 0), 0);\n\tchunkDataE = texelFetch(chunkTexture, chunkUV + ivec2(4, 0), 0);\n\tpackedData = texelFetch(packedTexture, source.uv, 0);\n\treturn mix(chunkDataA.xyz, vec3(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));\n}\nvec4 readColor(in SplatSource source) {\n\tvec4 r = unpack8888(packedData.w);\n\treturn vec4(mix(chunkDataD.xyz, vec3(chunkDataD.w, chunkDataE.xy), r.rgb), r.w);\n}\nvec4 getRotation() {\n\treturn unpackRotation(packedData.y);\n}\nvec3 getScale() {\n\treturn exp(mix(vec3(chunkDataB.zw, chunkDataC.x), chunkDataC.yzw, unpack111011(packedData.z)));\n}\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tmat3 rot = quatToMat3(getRotation());\n\tvec3 scale = getScale();\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n",gsplatCompressedSHVS:"\n#if SH_BANDS > 0\nuniform highp usampler2D shTexture0;\nuniform highp usampler2D shTexture1;\nuniform highp usampler2D shTexture2;\nvec4 unpack8888s(in uint bits) {\n\treturn vec4((uvec4(bits) >> uvec4(0u, 8u, 16u, 24u)) & 0xffu) * (8.0 / 255.0) - 4.0;\n}\nvoid readSHData(in SplatSource source, out vec3 sh[15], out float scale) {\n\tuvec4 shData0 = texelFetch(shTexture0, source.uv, 0);\n\tuvec4 shData1 = texelFetch(shTexture1, source.uv, 0);\n\tuvec4 shData2 = texelFetch(shTexture2, source.uv, 0);\n\tvec4 r0 = unpack8888s(shData0.x);\n\tvec4 r1 = unpack8888s(shData0.y);\n\tvec4 r2 = unpack8888s(shData0.z);\n\tvec4 r3 = unpack8888s(shData0.w);\n\tvec4 g0 = unpack8888s(shData1.x);\n\tvec4 g1 = unpack8888s(shData1.y);\n\tvec4 g2 = unpack8888s(shData1.z);\n\tvec4 g3 = unpack8888s(shData1.w);\n\tvec4 b0 = unpack8888s(shData2.x);\n\tvec4 b1 = unpack8888s(shData2.y);\n\tvec4 b2 = unpack8888s(shData2.z);\n\tvec4 b3 = unpack8888s(shData2.w);\n\tsh[0] =  vec3(r0.x, g0.x, b0.x);\n\tsh[1] =  vec3(r0.y, g0.y, b0.y);\n\tsh[2] =  vec3(r0.z, g0.z, b0.z);\n\tsh[3] =  vec3(r0.w, g0.w, b0.w);\n\tsh[4] =  vec3(r1.x, g1.x, b1.x);\n\tsh[5] =  vec3(r1.y, g1.y, b1.y);\n\tsh[6] =  vec3(r1.z, g1.z, b1.z);\n\tsh[7] =  vec3(r1.w, g1.w, b1.w);\n\tsh[8] =  vec3(r2.x, g2.x, b2.x);\n\tsh[9] =  vec3(r2.y, g2.y, b2.y);\n\tsh[10] = vec3(r2.z, g2.z, b2.z);\n\tsh[11] = vec3(r2.w, g2.w, b2.w);\n\tsh[12] = vec3(r3.x, g3.x, b3.x);\n\tsh[13] = vec3(r3.y, g3.y, b3.y);\n\tsh[14] = vec3(r3.z, g3.z, b3.z);\n\tscale = 1.0;\n}\n#endif\n",gsplatEvalSHVS:"\n\t#if SH_BANDS == 1\n\t\t#define SH_COEFFS 3\n\t#elif SH_BANDS == 2\n\t\t#define SH_COEFFS 8\n\t#elif SH_BANDS == 3\n\t\t#define SH_COEFFS 15\n\t#else\n\t\t#define SH_COEFFS 0\n\t#endif\n\t#if SH_BANDS > 0\n\tconst float SH_C1 = 0.4886025119029199f;\n\t#if SH_BANDS > 1\n\t\tconst float SH_C2_0 = 1.0925484305920792f;\n\t\tconst float SH_C2_1 = -1.0925484305920792f;\n\t\tconst float SH_C2_2 = 0.31539156525252005f;\n\t\tconst float SH_C2_3 = -1.0925484305920792f;\n\t\tconst float SH_C2_4 = 0.5462742152960396f;\n\t#endif\n\t#if SH_BANDS > 2\n\t\tconst float SH_C3_0 = -0.5900435899266435f;\n\t\tconst float SH_C3_1 = 2.890611442640554f;\n\t\tconst float SH_C3_2 = -0.4570457994644658f;\n\t\tconst float SH_C3_3 = 0.3731763325901154f;\n\t\tconst float SH_C3_4 = -0.4570457994644658f;\n\t\tconst float SH_C3_5 = 1.445305721320277f;\n\t\tconst float SH_C3_6 = -0.5900435899266435f;\n\t#endif\n\tvec3 evalSH(in vec3 sh[SH_COEFFS], in vec3 dir) {\n\t\tfloat x = dir.x;\n\t\tfloat y = dir.y;\n\t\tfloat z = dir.z;\n\t\tvec3 result = SH_C1 * (-sh[0] * y + sh[1] * z - sh[2] * x);\n\t\t#if SH_BANDS > 1\n\t\t\tfloat xx = x * x;\n\t\t\tfloat yy = y * y;\n\t\t\tfloat zz = z * z;\n\t\t\tfloat xy = x * y;\n\t\t\tfloat yz = y * z;\n\t\t\tfloat xz = x * z;\n\t\t\tresult +=\n\t\t\t\tsh[3] * (SH_C2_0 * xy) +\n\t\t\t\tsh[4] * (SH_C2_1 * yz) +\n\t\t\t\tsh[5] * (SH_C2_2 * (2.0 * zz - xx - yy)) +\n\t\t\t\tsh[6] * (SH_C2_3 * xz) +\n\t\t\t\tsh[7] * (SH_C2_4 * (xx - yy));\n\t\t#endif\n\t\t#if SH_BANDS > 2\n\t\t\tresult +=\n\t\t\t\tsh[8]  * (SH_C3_0 * y * (3.0 * xx - yy)) +\n\t\t\t\tsh[9]  * (SH_C3_1 * xy * z) +\n\t\t\t\tsh[10] * (SH_C3_2 * y * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[11] * (SH_C3_3 * z * (2.0 * zz - 3.0 * xx - 3.0 * yy)) +\n\t\t\t\tsh[12] * (SH_C3_4 * x * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[13] * (SH_C3_5 * z * (xx - yy)) +\n\t\t\t\tsh[14] * (SH_C3_6 * x * (xx - 3.0 * yy));\n\t\t#endif\n\t\treturn result;\n\t}\n\t#endif\n",gsplatQuatToMat3VS:"\nmat3 quatToMat3(vec4 R) {\n\tvec4 R2 = R + R;\n\tfloat X = R2.x * R.w;\n\tvec4 Y  = R2.y * R;\n\tvec4 Z  = R2.z * R;\n\tfloat W = R2.w * R.w;\n\treturn mat3(\n\t\t1.0 - Z.z - W,\n\t\t\t  Y.z + X,\n\t\t\t  Y.w - Z.x,\n\t\t\t  Y.z - X,\n\t\t1.0 - Y.y - W,\n\t\t\t  Z.w + Y.x,\n\t\t\t  Y.w + Z.x,\n\t\t\t  Z.w - Y.x,\n\t\t1.0 - Y.y - Z.z\n\t);\n}\n",gsplatSogsColorVS:"\nuniform highp sampler2D packedSh0;\nuniform float sh0_mins;\nuniform float sh0_maxs;\nfloat SH_C0 = 0.28209479177387814;\nvec4 readColor(in SplatSource source) {\n\tvec3 clr = mix(vec3(sh0_mins), vec3(sh0_maxs), unpack111110(pack8888(texelFetch(packedSh0, source.uv, 0))));\n\tfloat alpha = float(packedSample.z & 0xffu) / 255.0;\n\treturn vec4(vec3(0.5) + clr.xyz * SH_C0, alpha);\n}\n",gsplatSogsDataVS:'\n#include "gsplatPackingPS"\nuniform highp usampler2D packedTexture;\nuniform vec3 means_mins;\nuniform vec3 means_maxs;\nuniform float scales_mins;\nuniform float scales_maxs;\nuvec4 packedSample;\nvec3 readCenter(SplatSource source) {\n\tpackedSample = texelFetch(packedTexture, source.uv, 0);\n\tvec3 l = unpack8888(packedSample.x).xyz;\n\tvec3 u = unpack8888(packedSample.y).xyz;\n\tvec3 n = (l * 255.0 + u * 255.0 * 256.0) / 65535.0;\n\tvec3 v = mix(means_mins, means_maxs, n);\n\treturn sign(v) * (exp(abs(v)) - 1.0);\n}\nconst float norm = 2.0 / sqrt(2.0);\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tvec3 qdata = unpack8888(packedSample.z).xyz;\n\tvec3 sdata = unpack101010(packedSample.w >> 2u);\n\tuint qmode = packedSample.w & 0x3u;\n\tvec3 abc = (qdata - 0.5) * norm;\n\tfloat d = sqrt(max(0.0, 1.0 - dot(abc, abc)));\n\tvec4 quat = (qmode == 0u) ? vec4(d, abc) :\n\t\t\t\t((qmode == 1u) ? vec4(abc.x, d, abc.yz) :\n\t\t\t\t((qmode == 2u) ? vec4(abc.xy, d, abc.z) : vec4(abc, d)));\n\tmat3 rot = quatToMat3(quat);\n\tvec3 scale = exp(mix(vec3(scales_mins), vec3(scales_maxs), sdata));\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n',gsplatSogsSHVS:"\nuniform highp sampler2D packedShN;\nuniform float shN_mins;\nuniform float shN_maxs;\nvoid readSHData(in SplatSource source, out vec3 sh[SH_COEFFS], out float scale) {\n\tivec2 t = ivec2(packedSample.xy & 255u);\n\tint n = t.x + t.y * 256;\n\tint u = (n % 64) * SH_COEFFS;\n\tint v = n / 64;\n\tfor (int i = 0; i < SH_COEFFS; i++) {\n\t\tsh[i] = mix(vec3(shN_mins), vec3(shN_maxs), unpack111110(pack8888(texelFetch(packedShN, ivec2(u + i, v), 0))));\n\t}\n\tscale = 1.0;\n}\n",gsplatSourceFormatVS:'\n#if defined(GSPLAT_WORKBUFFER_DATA)\n\t#include "gsplatWorkBufferVS"\n#elif GSPLAT_COMPRESSED_DATA == true\n\t#include "gsplatCompressedDataVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatCompressedSHVS"\n\t#endif\n#elif GSPLAT_SOGS_DATA == true\n\t#include "gsplatSogsDataVS"\n\t#include "gsplatSogsColorVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatSogsSHVS"\n\t#endif\n#else\n\t#include "gsplatDataVS"\n\t#include "gsplatColorVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatSHVS"\n\t#endif\n#endif\n',gsplatStructsVS:"\nstruct SplatSource {\n\tuint order;\n\tuint id;\n\tivec2 uv;\n\tvec2 cornerUV;\n};\nstruct SplatCenter {\n\tvec3 view;\n\tvec4 proj;\n\tmat4 modelView;\n\tfloat projMat00;\n};\nstruct SplatCorner {\n\tvec2 offset;\n\tvec2 uv;\n\t#if GSPLAT_AA\n\t\tfloat aaFactor;\n\t#endif\n\tvec2 v;\n\tfloat dlen;\n};\n",gsplatDataVS:"\nuniform highp usampler2D transformA;\nuniform highp sampler2D transformB;\nuint tAw;\nvec3 readCenter(SplatSource source) {\n\tuvec4 tA = texelFetch(transformA, source.uv, 0);\n\ttAw = tA.w;\n\treturn uintBitsToFloat(tA.xyz);\n}\nvec4 unpackRotation(vec3 packed) {\n\treturn vec4(packed.xyz, sqrt(max(0.0, 1.0 - dot(packed, packed))));\n}\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tvec4 tB = texelFetch(transformB, source.uv, 0);\n\tmat3 rot = quatToMat3(unpackRotation(vec3(unpackHalf2x16(tAw), tB.w)).wxyz);\n\tvec3 scale = tB.xyz;\n\t\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n",gsplatOutputVS:'\n#include "tonemappingPS"\n#include "decodePS"\n#include "gammaPS"\nvec3 prepareOutputFromGamma(vec3 gammaColor) {\n\t#if TONEMAP == NONE\n\t\t#if GAMMA == NONE\n\t\t\treturn decodeGamma(gammaColor);\n\t\t#else\n\t\t\treturn gammaColor;\n\t\t#endif\n\t#else\n\t\treturn gammaCorrectOutput(toneMap(decodeGamma(gammaColor)));\n\t#endif\n}\n',gsplatPS:'\n#ifndef DITHER_NONE\n\t#include "bayerPS"\n\t#include "opacityDitherPS"\n\tvarying float id;\n#endif\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\tuniform float alphaClip;\n#endif\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n\t#include "floatAsUintPS"\n#endif\nconst float  EXP_A\t  = 12102203.0;\nconst int\tEXP_BC_RMS = 1064866808;\nfloat fastExp(float x) {\n\tint i = int(EXP_A * x) + EXP_BC_RMS;\n\treturn intBitsToFloat(i);\n}\nvarying mediump vec2 gaussianUV;\nvarying mediump vec4 gaussianColor;\nvoid main(void) {\n\tmediump float A = dot(gaussianUV, gaussianUV);\n\tif (A > 1.0) {\n\t\tdiscard;\n\t}\n\tmediump float alpha = fastExp(-A * 4.0) * gaussianColor.a;\n\t#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\t\tif (alpha < alphaClip) {\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t#ifdef PICK_PASS\n\t\tgl_FragColor = getPickOutput();\n\t#elif SHADOW_PASS\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t#elif PREPASS_PASS\n\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t#else\n\t\tif (alpha < 1.0 / 255.0) {\n\t\t\tdiscard;\n\t\t}\n\t\t#ifndef DITHER_NONE\n\t\t\topacityDither(alpha, id * 0.013);\n\t\t#endif\n\t\tgl_FragColor = vec4(gaussianColor.xyz * alpha, alpha);\n\t#endif\n}\n',gsplatSHVS:"\n#if SH_BANDS > 0\nvec3 unpack111011s(uint bits) {\n\treturn vec3((uvec3(bits) >> uvec3(21u, 11u, 0u)) & uvec3(0x7ffu, 0x3ffu, 0x7ffu)) / vec3(2047.0, 1023.0, 2047.0) * 2.0 - 1.0;\n}\nvoid fetchScale(in uvec4 t, out float scale, out vec3 a, out vec3 b, out vec3 c) {\n\tscale = uintBitsToFloat(t.x);\n\ta = unpack111011s(t.y);\n\tb = unpack111011s(t.z);\n\tc = unpack111011s(t.w);\n}\nvoid fetch(in uvec4 t, out vec3 a, out vec3 b, out vec3 c, out vec3 d) {\n\ta = unpack111011s(t.x);\n\tb = unpack111011s(t.y);\n\tc = unpack111011s(t.z);\n\td = unpack111011s(t.w);\n}\nvoid fetch(in uint t, out vec3 a) {\n\ta = unpack111011s(t);\n}\n#if SH_BANDS == 1\n\tuniform highp usampler2D splatSH_1to3;\n\tvoid readSHData(in SplatSource source, out vec3 sh[3], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t}\n#elif SH_BANDS == 2\n\tuniform highp usampler2D splatSH_1to3;\n\tuniform highp usampler2D splatSH_4to7;\n\tuniform highp usampler2D splatSH_8to11;\n\tvoid readSHData(in SplatSource source, out vec3 sh[8], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t\tfetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);\n\t\tfetch(texelFetch(splatSH_8to11, source.uv, 0).x, sh[7]);\n\t}\n#else\n\tuniform highp usampler2D splatSH_1to3;\n\tuniform highp usampler2D splatSH_4to7;\n\tuniform highp usampler2D splatSH_8to11;\n\tuniform highp usampler2D splatSH_12to15;\n\tvoid readSHData(in SplatSource source, out vec3 sh[15], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t\tfetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);\n\t\tfetch(texelFetch(splatSH_8to11, source.uv, 0), sh[7], sh[8], sh[9], sh[10]);\n\t\tfetch(texelFetch(splatSH_12to15, source.uv, 0), sh[11], sh[12], sh[13], sh[14]);\n\t}\n#endif\n#endif\n",gsplatSourceVS:"\nattribute vec3 vertex_position;\nattribute uint vertex_id_attrib;\nuniform uint numSplats;\nuniform highp usampler2D splatOrder;\nbool initSource(out SplatSource source) {\n\tuint w = uint(textureSize(splatOrder, 0).x);\n\tsource.order = vertex_id_attrib + uint(vertex_position.z);\n\tif (source.order >= numSplats) {\n\t\treturn false;\n\t}\n\tivec2 orderUV = ivec2(source.order % w, source.order / w);\n\tsource.id = texelFetch(splatOrder, orderUV, 0).r;\n\tsource.uv = ivec2(source.id % w, source.id / w);\n\tsource.cornerUV = vertex_position.xy;\n\treturn true;\n}\n",gsplatVS:'\n#include "gsplatCommonVS"\nvarying mediump vec2 gaussianUV;\nvarying mediump vec4 gaussianColor;\n#ifndef DITHER_NONE\n\tvarying float id;\n#endif\nmediump vec4 discardVec = vec4(0.0, 0.0, 2.0, 1.0);\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n#endif\nvoid main(void) {\n\tSplatSource source;\n\tif (!initSource(source)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tvec3 modelCenter = readCenter(source);\n\tSplatCenter center;\n\tif (!initCenter(modelCenter, center)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tSplatCorner corner;\n\tif (!initCorner(source, center, corner)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tvec4 clr = readColor(source);\n\t#if GSPLAT_AA\n\t\tclr.a *= corner.aaFactor;\n\t#endif\n\t#if SH_BANDS > 0\n\t\tvec3 dir = normalize(center.view * mat3(center.modelView));\n\t\tvec3 sh[SH_COEFFS];\n\t\tfloat scale;\n\t\treadSHData(source, sh, scale);\n\t\tclr.xyz += evalSH(sh, dir) * scale;\n\t#endif\n\tclipCorner(corner, clr.w);\n\tgl_Position = center.proj + vec4(corner.offset, 0, 0);\n\tgaussianUV = corner.uv;\n\tgaussianColor = vec4(prepareOutputFromGamma(max(clr.xyz, 0.0)), clr.w);\n\t#ifndef DITHER_NONE\n\t\tid = float(source.id);\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\tvLinearDepth = -center.view.z;\n\t#endif\n}\n',gsplatWorkBufferVS:"\nuniform highp sampler2D center;\nuniform highp sampler2D covA;\nuniform highp sampler2D covB;\nuniform mediump sampler2D splatColor;\nvec3 readCenter(SplatSource source) {\n\treturn texelFetch(center, source.uv, 0).xyz;\n}\nvoid readCovariance(in SplatSource source, out vec3 cov_A, out vec3 cov_B) {\n\tcov_A = texelFetch(covA, source.uv, 0).xyz;\n\tcov_B = texelFetch(covB, source.uv, 0).xyz;\n}\nvec4 readColor(in SplatSource source) {\n\treturn texelFetch(splatColor, source.uv, 0);\n}\n",gsplatPackingPS:yr,quadVS:"\n\tattribute vec2 aPosition;\n\tvarying vec2 uv0;\n\tvoid main(void)\n\t{\n\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\tuv0 = getImageEffectUV((aPosition.xy + 1.0) * 0.5);\n\t}\n",immediateLinePS:'\n\t\t#include "gammaPS"\n\t\tvarying vec4 color;\n\t\tvoid main(void) {\n\t\t\tgl_FragColor = vec4(gammaCorrectOutput(decodeGamma(color.rgb)), color.a);\n\t\t}\n',immediateLineVS:"\n\tattribute vec4 vertex_position;\n\tattribute vec4 vertex_color;\n\tuniform mat4 matrix_model;\n\tuniform mat4 matrix_viewProjection;\n\tvarying vec4 color;\n\tvoid main(void) {\n\t\tcolor = vertex_color;\n\t\tgl_Position = matrix_viewProjection * matrix_model * vertex_position;\n\t}\n",iridescenceDiffractionPS:"\nuniform float material_iridescenceRefractionIndex;\nfloat iridescence_iorToFresnel(float transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);\n}\nvec3 iridescence_iorToFresnel(vec3 transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - vec3(incidentIor)) / (transmittedIor + vec3(incidentIor)), vec3(2.0));\n}\nvec3 iridescence_fresnelToIor(vec3 f0) {\n\tvec3 sqrtF0 = sqrt(f0);\n\treturn (vec3(1.0) + sqrtF0) / (vec3(1.0) - sqrtF0);\n}\nvec3 iridescence_sensitivity(float opd, vec3 shift) {\n\tfloat PI = 3.141592653589793;\n\tfloat phase = 2.0 * PI * opd * 1.0e-9;\n\tconst vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n\tconst vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n\tconst vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\tvec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var);\n\txyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));\n\txyz /= vec3(1.0685e-07);\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t3.2404542, -0.9692660,  0.0556434,\n\t   -1.5371385,  1.8760108, -0.2040259,\n\t   -0.4985314,  0.0415560,  1.0572252\n\t);\n\treturn XYZ_TO_REC709 * xyz;\n}\nfloat iridescence_fresnel(float cosTheta, float f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2;\n\treturn f0 + (1.0 - f0) * x5;\n} \nvec3 iridescence_fresnel(float cosTheta, vec3 f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2; \n\treturn f0 + (vec3(1.0) - f0) * x5;\n}\nvec3 calcIridescence(float outsideIor, float cosTheta, vec3 base_f0, float iridescenceThickness) {\n\tfloat PI = 3.141592653589793;\n\tfloat iridescenceIor = mix(outsideIor, material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));\n\tfloat sinTheta2Sq = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));\n\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\tif (cosTheta2Sq < 0.0) {\n\t\treturn vec3(1.0);\n\t}\n\tfloat cosTheta2 = sqrt(cosTheta2Sq);\n\tfloat r0 = iridescence_iorToFresnel(iridescenceIor, outsideIor);\n\tfloat r12 = iridescence_fresnel(cosTheta, r0);\n\tfloat r21 = r12;\n\tfloat t121 = 1.0 - r12;\n\tfloat phi12 = iridescenceIor < outsideIor ? PI : 0.0;\n\tfloat phi21 = PI - phi12;\n\tvec3 baseIor = iridescence_fresnelToIor(base_f0 + vec3(0.0001));\n\tvec3 r1 = iridescence_iorToFresnel(baseIor, iridescenceIor);\n\tvec3 r23 = iridescence_fresnel(cosTheta2, r1);\n\tvec3 phi23 = vec3(0.0);\n\tif (baseIor[0] < iridescenceIor) phi23[0] = PI;\n\tif (baseIor[1] < iridescenceIor) phi23[1] = PI;\n\tif (baseIor[2] < iridescenceIor) phi23[2] = PI;\n\tfloat opd = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;\n\tvec3 phi = vec3(phi21) + phi23; \n\tvec3 r123Sq = clamp(r12 * r23, 1e-5, 0.9999);\n\tvec3 r123 = sqrt(r123Sq);\n\tvec3 rs = pow(t121, 2.0) * r23 / (1.0 - r123Sq);\n\tvec3 c0 = r12 + rs;\n\tvec3 i = c0;\n\tvec3 cm = rs - t121;\n\tfor (int m = 1; m <= 2; m++) {\n\t\tcm *= r123;\n\t\tvec3 sm = 2.0 * iridescence_sensitivity(float(m) * opd, float(m) * phi);\n\t\ti += cm * sm;\n\t}\n\treturn max(i, vec3(0.0));\n}\nvec3 getIridescence(float cosTheta, vec3 specularity, float iridescenceThickness) {\n\treturn calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);\n}\n",iridescencePS:"\n#ifdef STD_IRIDESCENCE_CONSTANT\nuniform float material_iridescence;\n#endif\nvoid getIridescence() {\n\tfloat iridescence = 1.0;\n\t#ifdef STD_IRIDESCENCE_CONSTANT\n\tiridescence *= material_iridescence;\n\t#endif\n\t#ifdef STD_IRIDESCENCE_TEXTURE\n\tiridescence *= texture2DBias({STD_IRIDESCENCE_TEXTURE_NAME}, {STD_IRIDESCENCE_TEXTURE_UV}, textureBias).{STD_IRIDESCENCE_TEXTURE_CHANNEL};\n\t#endif\n\tdIridescence = iridescence; \n}\n",iridescenceThicknessPS:"\nuniform float material_iridescenceThicknessMax;\n#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\nuniform float material_iridescenceThicknessMin;\n#endif\nvoid getIridescenceThickness() {\n\t#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\t\tfloat blend = texture2DBias({STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}, {STD_IRIDESCENCETHICKNESS_TEXTURE_UV}, textureBias).{STD_IRIDESCENCETHICKNESS_TEXTURE_CHANNEL};\n\t\tfloat iridescenceThickness = mix(material_iridescenceThicknessMin, material_iridescenceThicknessMax, blend);\n\t#else\n\t\tfloat iridescenceThickness = material_iridescenceThicknessMax;\n\t#endif\n\tdIridescenceThickness = iridescenceThickness; \n}\n",iorPS:"\n#ifdef STD_IOR_CONSTANT\nuniform float material_refractionIndex;\n#endif\nvoid getIor() {\n#ifdef STD_IOR_CONSTANT\n\tdIor = material_refractionIndex;\n#else\n\tdIor = 1.0 / 1.5;\n#endif\n}\n",lightDeclarationPS:"\n#if defined(LIGHT{i})\n\tuniform vec3 light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tuniform vec3 light{i}_direction;\n\t#else\n\t\t#define LIT_CODE_LIGHTS_POINT\n\t\tuniform vec3 light{i}_position;\n\t\tuniform float light{i}_radius;\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#define LIT_CODE_LIGHTS_SPOT\n\t\t\tuniform vec3 light{i}_direction;\n\t\t\tuniform float light{i}_innerConeAngle;\n\t\t\tuniform float light{i}_outerConeAngle;\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform vec3 light{i}_position;\n\t\t#endif\n\t\tuniform vec3 light{i}_halfWidth;\n\t\tuniform vec3 light{i}_halfHeight;\n\t#else\n\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t#define LIT_CODE_FALLOFF_LINEAR\n\t\t#endif\n\t\t#if LIGHT{i}FALLOFF == INVERSESQUARED\n\t\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}CASTSHADOW)\n\t\tuniform mat4 light{i}_shadowMatrix;\n\t\tuniform float light{i}_shadowIntensity;\n\t\tuniform vec4 light{i}_shadowParams;\n\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\tuniform float light{i}_shadowSearchArea;\n\t\t\tuniform vec4 light{i}_cameraParams;\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t\tuniform vec4 light{i}_softShadowParams;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform mat4 light{i}_shadowMatrixPalette[4];\n\t\t\tuniform vec4 light{i}_shadowCascadeDistances;\n\t\t\tuniform int light{i}_shadowCascadeCount;\n\t\t\tuniform float light{i}_shadowCascadeBlend;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tuniform samplerCubeShadow light{i}_shadowMap;\n\t\t\t#else\n\t\t\t\tuniform samplerCube light{i}_shadowMap;\n\t\t\t#endif\n\t\t#else\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tuniform sampler2DShadow light{i}_shadowMap;\n\t\t\t#else\n\t\t\t\tuniform sampler2D light{i}_shadowMap;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}COOKIE)\n\t\t#define LIT_CODE_COOKIE\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tuniform samplerCube light{i}_cookie;\n\t\t\tuniform float light{i}_cookieIntensity;\n\t\t\t#if !defined(LIGHT{i}CASTSHADOW)\n\t\t\t\tuniform mat4 light{i}_shadowMatrix;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\tuniform sampler2D light{i}_cookie;\n\t\t\tuniform float light{i}_cookieIntensity;\n\t\t\t#if !defined(LIGHT{i}CASTSHADOW)\n\t\t\t\tuniform mat4 light{i}_shadowMatrix;\n\t\t\t#endif\n\t\t\t#if defined(LIGHT{i}COOKIE_TRANSFORM)\n\t\t\t\tuniform vec4 light{i}_cookieMatrix;\n\t\t\t\tuniform vec2 light{i}_cookieOffset;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n#endif\n",lightDiffuseLambertPS:"\nfloat getLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm) {\n\treturn max(dot(worldNormal, -lightDirNorm), 0.0);\n}\n",lightDirPointPS:"\nvec3 evalOmniLight(vec3 lightPosW) {\n\treturn vPositionW - lightPosW;\n}\n",lightEvaluationPS:"\n#if defined(LIGHT{i})\n\tevaluateLight{i}(\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel\n\t\t#endif\n\t);\n#endif\n",lightFunctionLightPS:"\n#if defined(LIGHT{i})\nvoid evaluateLight{i}(\n\t#if defined(LIT_IRIDESCENCE)\n\t\tvec3 iridescenceFresnel\n\t#endif\n) {\n\tvec3 lightColor = light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL && !defined(LIT_SHADOW_CATCHER)\n\t\tif (all(equal(lightColor, vec3(0.0)))) {\n\t\t\treturn;\n\t\t}\n\t#endif\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tdLightDirNormW = light{i}_direction;\n\t\tdAtten = 1.0;\n\t#else\n\t\t\n\t\tvec3 lightDirW = evalOmniLight(light{i}_position);\n\t\tdLightDirNormW = normalize(lightDirW);\n\t\t#if defined(LIGHT{i}COOKIE)\n\t\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t\t#ifdef LIGHT{i}COOKIE_FALLOFF\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DXform(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity, light{i}_cookieMatrix, light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2D(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DClipXform(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity, light{i}_cookieMatrix, light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DClip(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t\tvec3 cookieAttenuation = getCookieCube(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t#endif\n\t\t\tlightColor *= cookieAttenuation;\n\t\t#endif\n\t\t#if LIGHT{i}SHAPE == PUNCTUAL\n\t\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t\tdAtten = getFalloffLinear(light{i}_radius, lightDirW);\n\t\t\t#else\n\t\t\t\tdAtten = getFalloffInvSquared(light{i}_radius, lightDirW);\n\t\t\t#endif\n\t\t#else\n\t\t\tdAtten = getFalloffWindow(light{i}_radius, lightDirW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if !defined(LIGHT{i}COOKIE) || defined(LIGHT{i}COOKIE_FALLOFF)\n\t\t\t\tdAtten *= getSpotEffect(light{i}_direction, light{i}_innerConeAngle, light{i}_outerConeAngle, dLightDirNormW);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tif (dAtten < 0.00001) {\n\t\treturn;\n\t}\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\tcalcRectLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\tcalcDiskLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\tcalcSphereLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tfloat attenDiffuse = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirNormW);\n\t\t#else\n\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\tfloat attenDiffuse = getRectLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\tfloat attenDiffuse = getDiskLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\tfloat attenDiffuse = getSphereLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tdAtten *= getLightDiffuse(litArgs_worldNormal, vec3(0.0), dLightDirNormW);\n\t#endif\n\t#ifdef LIGHT{i}CASTSHADOW\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tfloat shadow = getShadow{i}(vec3(0.0));\n\t\t#else\n\t\t\tfloat shadow = getShadow{i}(lightDirW);\n\t\t#endif\n\t\tshadow = mix(1.0, shadow, light{i}_shadowIntensity);\n\t\tdAtten *= shadow;\n\t\t#if defined(LIT_SHADOW_CATCHER) && LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tdShadowCatcher *= shadow;\n\t\t#endif\t\t\t\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight += ((attenDiffuse * dAtten) * lightColor) * (1.0 - dLTCSpecFres);\n\t\t#else\n\t\t\tdDiffuseLight += (attenDiffuse * dAtten) * lightColor;\n\t\t#endif\t\t\t\t\t\t\n\t#else\n\t\t#if defined(AREA_LIGHTS) && defined(LIT_SPECULAR)\n\t\t\tdDiffuseLight += (dAtten * lightColor) * (1.0 - litArgs_specularity);\n\t\t#else\n\t\t\tdDiffuseLight += dAtten * lightColor;\n\t\t#endif\n\t#endif\n\t#ifdef LIGHT{i}AFFECT_SPECULARITY\n\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getRectLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getDiskLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getSphereLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getRectLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getDiskLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getSphereLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#else\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL && LIT_FRESNEL_MODEL != NONE\n\t\t\t\t#define LIGHT{i}FRESNEL\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 halfDirW = normalize(-dLightDirNormW + dViewDirW);\n\t\t\t#endif\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tvec3 lightspecularCC = getLightSpecular(halfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\tlightspecularCC *= getFresnelCC(dot(dViewDirW, halfDirW));\n\t\t\t\t#endif\n\t\t\t\tccSpecularLight += lightspecularCC;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tsSpecularLight += getLightSpecularSheen(halfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * lightColor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 lightSpecular = getLightSpecular(halfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tlightSpecular *= getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity, iridescenceFresnel, litArgs_iridescence_intensity);\n\t\t\t\t\t#else\n\t\t\t\t\t\tlightSpecular *= getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity);\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\tlightSpecular *= litArgs_specularity;\n\t\t\t\t#endif\n\t\t\t\t\n\t\t\t\tdSpecularLight += lightSpecular;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n}\n#endif\n",lightFunctionShadowPS:"\n#ifdef LIGHT{i}CASTSHADOW\n\tvec3 getShadowSampleCoord{i}(mat4 shadowTransform, vec4 shadowParams, vec3 worldPosition, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\t\tvec3 surfacePosition = worldPosition;\n\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_POINT\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\tfloat distScale = length(lightDir);\n\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\tlightDir = surfacePosition - lightPos;\n\t\t\t\treturn lightDir;\n\t\t\t#endif\n\t\t#else\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y;\n\t\t\t\t#endif\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\t\t\tfloat distScale = 1.0;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat distScale = abs(dot(vPositionW - lightPos, lightDirNorm));\n\t\t\t\t\t#endif\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvec4 positionInShadowSpace = shadowTransform * vec4(surfacePosition, 1.0);\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\tpositionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t\tpositionInShadowSpace.xyz /= positionInShadowSpace.w;\n\t\t\t\t#else\n\t\t\t\t\tpositionInShadowSpace.xy /= positionInShadowSpace.w;\n\t\t\t\t\tpositionInShadowSpace.z = length(lightDir) * shadowParams.w;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef SHADOW_SAMPLE_Z_BIAS\n\t\t\t#endif\n\t\t\tsurfacePosition = positionInShadowSpace.xyz;\n\t\t#endif\n\t\treturn surfacePosition;\n\t}\n\tfloat getShadow{i}(vec3 lightDirW) {\n\t\t#ifdef LIGHT{i}_SHADOW_CASCADES\n\t\t\tint cascadeIndex = getShadowCascadeIndex(light{i}_shadowCascadeDistances, light{i}_shadowCascadeCount);\n\t\t\t#ifdef LIGHT{i}_SHADOW_CASCADE_BLEND\n\t\t\t\tcascadeIndex = ditherShadowCascadeIndex(cascadeIndex, light{i}_shadowCascadeDistances, light{i}_shadowCascadeCount, light{i}_shadowCascadeBlend);\n\t\t\t#endif\n\t\t\tmat4 shadowMatrix = light{i}_shadowMatrixPalette[cascadeIndex];\n\t\t#else\n\t\t\tmat4 shadowMatrix = light{i}_shadowMatrix;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvec3 shadowCoord = getShadowSampleCoord{i}(shadowMatrix, light{i}_shadowParams, vPositionW, vec3(0.0), lightDirW, dLightDirNormW, dVertexNormalW);\n\t\t#else\n\t\t\tvec3 shadowCoord = getShadowSampleCoord{i}(shadowMatrix, light{i}_shadowParams, vPositionW, light{i}_position, lightDirW, dLightDirNormW, dVertexNormalW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tshadowCoord = fadeShadow(shadowCoord, light{i}_shadowCascadeDistances);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowVSM16(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 5.54);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowVSM32(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 15.0);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t\treturn getShadowPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t\t#else\n\t\t\t\t\treturn getShadowPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, light{i}_softShadowParams, lightDirW);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowPCF5x5(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowSpotVSM16(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 5.54, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowSpotVSM32(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 15.0, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvec2 shadowSearchArea = vec2(light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowSpotPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowSpotPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowSpotPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowSpotPCF5x5(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvec2 shadowSearchArea = vec2(light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowOmniPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowOmniPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowOmniPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, lightDirW);\n\t\t\t#endif\n\t\t#endif\n\t}\n#endif\n",lightingPS:'\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#define LIT_CODE_FALLOFF_LINEAR\n\t#define LIT_CODE_FALLOFF_SQUARED\n\t#define LIT_CODE_LIGHTS_POINT\n\t#define LIT_CODE_LIGHTS_SPOT\n#endif\n#ifdef AREA_LIGHTS\n\tuniform highp sampler2D areaLightsLutTex1;\n\tuniform highp sampler2D areaLightsLutTex2;\n#endif\n#ifdef LIT_LIGHTING\n\t#include "lightDiffuseLambertPS"\n\t#if defined(AREA_LIGHTS) || defined(LIT_CLUSTERED_AREA_LIGHTS)\n\t\t#include "ltcPS"\n\t#endif\n#endif\n#ifdef SHADOW_DIRECTIONAL\n\t#include "shadowCascadesPS"\n#endif\n#if defined(SHADOW_KIND_PCF1)\n\t#include "shadowPCF1PS"\n#endif\n#if defined(SHADOW_KIND_PCF3)\n\t#include "shadowPCF3PS"\n#endif\n#if defined(SHADOW_KIND_PCF5)\n\t#include "shadowPCF5PS"\n#endif\n#if defined(SHADOW_KIND_PCSS)\n\t#include "linearizeDepthPS"\n\t#include "shadowPCSSPS"\n\t#include "shadowSoftPS"\n#endif\n#if defined(SHADOW_KIND_VSM)\n\t#include "shadowEVSMPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_LINEAR\n\t#include "falloffLinearPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_SQUARED\n\t#include "falloffInvSquaredPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_POINT\n\t#include "lightDirPointPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_SPOT\n\t#include "spotPS"\n#endif\n#ifdef LIT_CODE_COOKIE\n\t#include "cookiePS"\n#endif\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#include "clusteredLightPS"\n#endif\n#ifdef LIGHT_COUNT > 0\n\t#include "lightFunctionShadowPS, LIGHT_COUNT"\n\t#include "lightFunctionLightPS, LIGHT_COUNT"\n#endif\n',lightmapAddPS:"\nvoid addLightMap(\n\tvec3 lightmap, \n\tvec3 dir, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 vertexNormal, \n\tmat3 tbn\n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel, \n\tfloat iridescenceIntensity\n#endif\n) {\n\t#if defined(LIT_SPECULAR) && defined(LIT_DIR_LIGHTMAP)\n\t\tif (dot(dir, dir) < 0.0001) {\n\t\t\t\tdDiffuseLight += lightmap;\n\t\t} else {\n\t\t\tfloat vlight = saturate(dot(dir, -vertexNormal));\n\t\t\tfloat flight = saturate(dot(dir, -worldNormal));\n\t\t\tfloat nlight = (flight / max(vlight, 0.01)) * 0.5;\n\t\t\tdDiffuseLight += lightmap * nlight * 2.0;\n\t\t\tvec3 halfDir = normalize(-dir + viewDir);\n\t\t\tvec3 specularLight = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);\n\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\tspecularLight *= \n\t\t\t\t\tgetFresnel(dot(viewDir, halfDir), \n\t\t\t\t\tgloss, \n\t\t\t\t\tspecularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tiridescenceIntensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#endif\n\t\t\tdSpecularLight += specularLight;\n\t\t}\n\t#else\n\t\tdDiffuseLight += lightmap;\n\t#endif\n}\n",lightmapPS:"\n#ifdef STD_LIGHTMAP_DIR\n\tvec3 dLightmapDir;\n\tuniform sampler2D texture_dirLightMap;\n#endif\nvoid getLightMap() {\n\tdLightmap = vec3(1.0);\n\t#ifdef STD_LIGHT_TEXTURE\n\t\tdLightmap *= {STD_LIGHT_TEXTURE_DECODE}(texture2DBias({STD_LIGHT_TEXTURE_NAME}, {STD_LIGHT_TEXTURE_UV}, textureBias)).{STD_LIGHT_TEXTURE_CHANNEL};\n\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\tvec3 dir = texture2DBias(texture_dirLightMap, {STD_LIGHT_TEXTURE_UV}, textureBias).xyz * 2.0 - 1.0;\n\t\t\tfloat dirDot = dot(dir, dir);\n\t\t\tdLightmapDir = (dirDot > 0.001) ? dir / sqrt(dirDot) : vec3(0.0);\n\t\t#endif\n\t#endif\n\t#ifdef STD_LIGHT_VERTEX\n\t\tdLightmap *= saturate(vVertexColor.{STD_LIGHT_VERTEX_CHANNEL});\n\t#endif\n}\n",lightSpecularAnisoGGXPS:"\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 viewDir, vec3 h, vec3 lightDirNorm, mat3 tbn) {\n\tfloat PI = 3.141592653589793;\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\tfloat alphaRoughness = roughness * roughness;\n\tfloat anisotropy = dAnisotropy;\n\tvec2 direction = dAnisotropyRotation;\n\tfloat at = mix(alphaRoughness, 1.0, anisotropy * anisotropy);\n\tfloat ab = clamp(alphaRoughness, 0.001, 1.0);\n\tvec3 anisotropicT = normalize(tbn * vec3(direction, 0.0));\n\tvec3 anisotropicB = normalize(cross(tbn[2], anisotropicT));\n\tfloat NoH = dot(worldNormal, h);\n\tfloat ToH = dot(anisotropicT, h);\n\tfloat BoH = dot(anisotropicB, h);\n\tfloat a2 = at * ab;\n\tvec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n\tfloat v2 = dot(v, v);\n\tfloat w2 = a2 / v2;\n\tfloat D = a2 * w2 * w2 * (1.0 / PI);\n\tfloat ToV = dot(anisotropicT, viewDir);\n\tfloat BoV = dot(anisotropicB, viewDir);\n\tfloat ToL = dot(anisotropicT, -lightDirNorm);\n\tfloat BoL = dot(anisotropicB, -lightDirNorm);\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat NoL = dot(worldNormal, -lightDirNorm);\n\tfloat lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n\tfloat lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n\tfloat G = 0.5 / (lambdaV + lambdaL);\n\treturn D * G;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);\n}\n",lightSpecularBlinnPS:"\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 h) {\n\tfloat nh = max( dot( h, worldNormal ), 0.0 );\n\tfloat specPow = exp2(gloss * 11.0);\n\tspecPow = max(specPow, 0.0001);\n\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, h);\n}\n",lightSheenPS:"\nfloat sheenD(vec3 normal, vec3 h, float roughness) {\n\tconst float PI = 3.141592653589793;\n\tfloat invR = 1.0 / (roughness * roughness);\n\tfloat cos2h = max(dot(normal, h), 0.0);\n\tcos2h *= cos2h;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\n\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\nfloat sheenV(vec3 normal, vec3 viewDir, vec3 light) {\n\tfloat NoV = max(dot(normal, viewDir), 0.000001);\n\tfloat NoL = max(dot(normal, light), 0.000001);\n\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\nfloat getLightSpecularSheen(vec3 h, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float sheenGloss) {\n\tfloat D = sheenD(worldNormal, h, sheenGloss);\n\tfloat V = sheenV(worldNormal, viewDir, -lightDirNorm);\n\treturn D * V;\n}\n",linearizeDepthPS:"\n#ifndef LINEARIZE_DEPTH\n#define LINEARIZE_DEPTH\nfloat linearizeDepthWithParams(float z, vec4 cameraParams) {\n\tif (cameraParams.w == 0.0)\n\t\treturn (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));\n\telse\n\t\treturn cameraParams.z + z * (cameraParams.y - cameraParams.z);\n}\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nfloat linearizeDepth(float z) {\n\treturn linearizeDepthWithParams(z, camera_params);\n}\n#endif\n",litForwardBackendPS:'\nvoid evaluateBackend() {\n\t#ifdef LIT_SSAO\n\t\tlitArgs_ao *= texture2DLod(ssaoTexture, gl_FragCoord.xy * ssaoTextureSizeInv, 0.0).r;\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tgetReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t#ifdef LIT_METALNESS\n\t\t\tfloat f0 = 1.0 / litArgs_ior;\n\t\t\tf0 = (f0 - 1.0) / (f0 + 1.0);\n\t\t\tf0 *= f0;\n\t\t\tlitArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);\n\t\t\tlitArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvec3 iridescenceFresnel = getIridescence(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_ADD_AMBIENT\n\t\taddAmbient(litArgs_worldNormal);\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);\n\t\t#endif\n\t\t#ifdef LIT_SEPARATE_AMBIENT\n\t\t\tvec3 dAmbientLight = dDiffuseLight;\n\t\t\tdDiffuseLight = vec3(0);\n\t\t#endif\n\t#endif\n\t#ifndef LIT_OLD_AMBIENT\n\t\tdDiffuseLight *= material_ambient;\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifndef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_LIGHTMAP\n\t\taddLightMap(\n\t\t\tlitArgs_lightmap, \n\t\t\tlitArgs_lightmapDir, \n\t\t\tlitArgs_worldNormal, \n\t\t\tdViewDirW, \n\t\t\tdReflDirW, \n\t\t\tlitArgs_gloss, \n\t\t\tlitArgs_specularity, \n\t\t\tdVertexNormalW,\n\t\t\tdTBN\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tlitArgs_iridescence_intensity\n\t\t#endif\n\t\t);\n\t#endif\n\t#ifdef LIT_LIGHTING || LIT_REFLECTIONS\n\t\t#ifdef LIT_REFLECTIONS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\taddReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);\n\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t\t\t\tccReflection *= ccFresnel;\n\t\t\t\t#else\n\t\t\t\t\tccFresnel = 0.0;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tccReflection *= litArgs_specularityFactor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\taddReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);\n\t\t\t#endif\n\t\t\taddReflection(dReflDirW, litArgs_gloss);\n\t\t\t#ifdef LIT_FRESNEL_MODEL\n\t\t\t\tdReflection.rgb *= getFresnel(\n\t\t\t\t\tdot(dViewDirW, litArgs_worldNormal), \n\t\t\t\t\tlitArgs_gloss, \n\t\t\t\t\tlitArgs_specularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#else\n\t\t\t\tdReflection.rgb *= litArgs_specularity;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tdReflection.rgb *= litArgs_specularityFactor;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\tdSpecularLight *= litArgs_specularity;\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tcalcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIGHT_COUNT > 0\n\t\t\t#include "lightEvaluationPS, LIGHT_COUNT"\n\t\t#endif\n\t\t#ifdef LIT_CLUSTERED_LIGHTS\n\t\t\taddClusteredLights(litArgs_worldNormal, dViewDirW, dReflDirW,\n\t\t\t\t#if defined(LIT_CLEARCOAT)\n\t\t\t\t\t\tccReflDirW,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_gloss, litArgs_specularity, dVertexNormalW, dTBN, \n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tiridescenceFresnel,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_clearcoat_worldNormal, litArgs_clearcoat_gloss, litArgs_sheen_gloss, litArgs_iridescence_intensity\n\t\t\t);\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tlitArgs_clearcoat_specularity = 1.0;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlitArgs_specularity = vec3(1);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\taddRefraction(\n\t\t\t\tlitArgs_worldNormal, \n\t\t\t\tdViewDirW, \n\t\t\t\tlitArgs_thickness, \n\t\t\t\tlitArgs_gloss, \n\t\t\t\tlitArgs_specularity, \n\t\t\t\tlitArgs_albedo, \n\t\t\t\tlitArgs_transmission,\n\t\t\t\tlitArgs_ior,\n\t\t\t\tlitArgs_dispersion\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel, \n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifdef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\t\toccludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULARITY_FACTOR\n\t\tdSpecularLight *= litArgs_specularityFactor;\n\t#endif\n\t#if !defined(LIT_OPACITY_FADES_SPECULAR)\n\t\t#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == PREMULTIPLIED\n\t\t\tfloat specLum = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tspecLum += dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection * litArgs_clearcoat_specularity, vec3( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#endif\n\t\t\tlitArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);\n\t\t#endif\n\t\tlitArgs_opacity *= material_alphaFade;\n\t#endif\n\t#ifdef LIT_LIGHTMAP_BAKING\n\t\t#ifdef LIT_LIGHTMAP_BAKING_COLOR\n\t\t\t#include "bakeLmEndPS"\n\t\t#endif\n\t\t#ifdef LIT_LIGHTMAP_BAKING_DIR\n\t\t\t#include "bakeDirLmEndPS"\n\t\t#endif\n\t#else\n\t\t#include "endPS"\n\t\t#include "outputAlphaPS"\n\t#endif\n\t#ifdef LIT_MSDF\n\t\tgl_FragColor = applyMsdf(gl_FragColor);\n\t#endif\n\t#include "outputPS"\n\t#include "debugOutputPS"\n\t#ifdef LIT_SHADOW_CATCHER\n\t\tgl_FragColor.rgb = vec3(dShadowCatcher);\n\t#endif\n}\n',litForwardDeclarationPS:'\nvec3 sReflection;\nvec3 dVertexNormalW;\nvec3 dTangentW;\nvec3 dBinormalW;\nvec3 dViewDirW;\nvec3 dReflDirW;\nvec3 ccReflDirW;\nvec3 dLightDirNormW;\nfloat dAtten;\nmat3 dTBN;\nvec4 dReflection;\nvec3 dDiffuseLight;\nvec3 dSpecularLight;\nfloat ccFresnel;\nvec3 ccReflection;\nvec3 ccSpecularLight;\nfloat ccSpecularityNoFres;\nvec3 sSpecularLight;\n#ifdef LIT_DISPERSION\n\tuniform float material_dispersion;\n#endif\n#ifndef LIT_OPACITY_FADES_SPECULAR\n\tuniform float material_alphaFade;\n#endif\n#ifdef LIT_SSAO\n\tuniform sampler2D ssaoTexture;\n\tuniform vec2 ssaoTextureSizeInv;\n#endif\n#ifdef LIT_SHADOW_CATCHER\n\tfloat dShadowCatcher = 1.0;\n#endif\n#if LIGHT_COUNT > 0\n\t#include "lightDeclarationPS, LIGHT_COUNT"\n#endif\n#ifdef LIT_SPECULAR\n\t#if LIT_FRESNEL_MODEL == NONE && !defined(LIT_REFLECTIONS) && !defined(LIT_DIFFUSE_MAP) \n\t\t#define LIT_OLD_AMBIENT\n\t#endif\n#endif\n#ifdef STD_LIGHTMAP_DIR\n\tuniform float bakeDir;\n#endif\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tuniform float ambientBakeOcclusionContrast;\n\tuniform float ambientBakeOcclusionBrightness;\n#endif\n',litForwardMainPS:'\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tdReflection = vec4(0);\n\t#ifdef LIT_CLEARCOAT\n\t\tccSpecularLight = vec3(0);\n\t\tccReflection = vec3(0);\n\t#endif\n\t#if LIT_NONE_SLICE_MODE == SLICED\n\t\t#include "startNineSlicedPS"\n\t#elif LIT_NONE_SLICE_MODE == TILED\n\t\t#include "startNineSlicedTiledPS"\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\tdVertexNormalW = normalize(vNormalW);\n\t\t#ifdef LIT_TANGENTS\n\t\t\t#if defined(LIT_HEIGHTS) || defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS) || defined(LIT_GGX_SPECULAR)\n\t\t\t\tdTangentW = vTangentW;\n\t\t\t\tdBinormalW = vBinormalW;\n\t\t\t#endif\n\t\t#endif\n\t\tgetViewDir();\n\t\t#ifdef LIT_TBN\n\t\t\tgetTBN(dTangentW, dBinormalW, dVertexNormalW);\n\t\t\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t\t\thandleTwoSidedLighting();\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tevaluateFrontend();\n\t#include "debugProcessFrontendPS"\n\tevaluateBackend();\n\t#include "litUserMainEndPS"\n}\n',litForwardPostCodePS:'\n#ifdef LIT_NEEDS_NORMAL\n\t#include "cubeMapRotatePS"\n\t#include "cubeMapProjectPS"\n\t#include "envProcPS"\n#endif\n#ifdef LIT_SPECULAR_OR_REFLECTION\n\t#ifdef LIT_METALNESS\n\t\t#include "metalnessModulatePS"\n\t#endif\n\t#if LIT_FRESNEL_MODEL == SCHLICK\n\t\t#include "fresnelSchlickPS"\n\t#endif\n\t#ifdef LIT_IRIDESCENCE\n\t\t#include "iridescenceDiffractionPS"\n\t#endif\n#endif\n#ifdef LIT_AO\n\t#include "aoDiffuseOccPS"\n\t#include "aoSpecOccPS"\n#endif\n#if LIT_REFLECTION_SOURCE == ENVATLASHQ\n\t#include "envAtlasPS"\n\t#include "reflectionEnvHQPS"\n#elif LIT_REFLECTION_SOURCE == ENVATLAS\n\t#include "envAtlasPS"\n\t#include "reflectionEnvPS"\n#elif LIT_REFLECTION_SOURCE == CUBEMAP\n\t#include "reflectionCubePS"\n#elif LIT_REFLECTION_SOURCE == SPHEREMAP\n\t#include "reflectionSpherePS"\n#endif\n#ifdef LIT_REFLECTIONS\n\t#ifdef LIT_CLEARCOAT\n\t\t#include "reflectionCCPS"\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\t#include "reflectionSheenPS"\n\t#endif\n#endif\n#ifdef LIT_REFRACTION\n\t#if defined(LIT_DYNAMIC_REFRACTION)\n\t\t#include "refractionDynamicPS"\n\t#elif defined(LIT_REFLECTIONS)\n\t\t#include "refractionCubePS"\n\t#endif\n#endif\n#ifdef LIT_SHEEN\n\t#include "lightSheenPS"\n#endif\nuniform vec3 material_ambient;\n#ifdef LIT_SPECULAR\n\t#ifdef LIT_LIGHTING\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "lightSpecularAnisoGGXPS"\n\t\t#else\n\t\t\t#include "lightSpecularBlinnPS"\n\t\t#endif\n\t#endif\n#endif\n#include "combinePS"\n#ifdef LIT_LIGHTMAP\n\t#include "lightmapAddPS"\n#endif\n#ifdef LIT_ADD_AMBIENT\n\t#include "ambientPS"\n#endif\n#ifdef LIT_MSDF\n\t#include "msdfPS"\n#endif\n#ifdef LIT_NEEDS_NORMAL\n\t#include "viewDirPS"\n\t#ifdef LIT_SPECULAR\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "reflDirAnisoPS"\n\t\t#else\n\t\t\t#include "reflDirPS"\n\t\t#endif\n\t#endif\n#endif\n#include "lightingPS"\n',litForwardPreCodePS:'\n#include "basePS"\n#include "sphericalPS"\n#include "decodePS"\n#include "gammaPS"\n#include "tonemappingPS"\n#include "fogPS"\n#if LIT_NONE_SLICE_MODE == SLICED\n\t#include "baseNineSlicedPS"\n#elif LIT_NONE_SLICE_MODE == TILED\n\t#include "baseNineSlicedTiledPS"\n#endif\n#ifdef LIT_TBN\n\t#include "TBNPS"\n\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t#include "twoSidedLightingPS"\n\t#endif\n#endif\n',litMainPS:'\n#include "varyingsPS"\n#include "litUserDeclarationPS"\n#include "frontendDeclPS"\n#if defined(PICK_PASS) || defined(PREPASS_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litOtherMainPS"\n#elif defined(SHADOW_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litShadowMainPS"\n#else\n\t#include "litForwardDeclarationPS"\n\t#include "litForwardPreCodePS"\n\t#include "frontendCodePS"\n\t#include "litForwardPostCodePS"\n\t#include "litForwardBackendPS"\n\t#include "litUserCodePS"\n\t#include "litForwardMainPS"\n#endif\n',litMainVS:'\n#include "varyingsVS"\n#include  "litUserDeclarationVS"\n#ifdef VERTEX_COLOR\n\tattribute vec4 vertex_color;\n#endif\n#ifdef NINESLICED\n\tvarying vec2 vMask;\n\tvarying vec2 vTiledUv;\n\tuniform mediump vec4 innerOffset;\n\tuniform mediump vec2 outerScale;\n\tuniform mediump vec4 atlasRect;\n#endif\nvec3 dPositionW;\nmat4 dModelMatrix;\n#include "transformCoreVS"\n#ifdef UV0\n\tattribute vec2 vertex_texCoord0;\n\t#include "uv0VS"\n#endif\n#ifdef UV1\n\tattribute vec2 vertex_texCoord1;\n\t#include "uv1VS"\n#endif\n#ifdef LINEAR_DEPTH\n\t#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\t\tuniform mat4 matrix_view;\n\t#endif\n#endif\n#include "transformVS"\n#ifdef NORMALS\n\t#include "normalCoreVS"\n\t#include "normalVS"\n#endif\n#ifdef TANGENTS\n\tattribute vec4 vertex_tangent;\n#endif\n#include "uvTransformUniformsPS, UV_TRANSFORMS_COUNT"\n#ifdef MSDF\n\t#include "msdfVS"\n#endif\n#include  "litUserCodeVS"\nvoid main(void) {\n\t#include "litUserMainStartVS"\n\tgl_PointSize = 1.0;\n\tgl_Position = getPosition();\n\tvPositionW = getWorldPosition();\n\t#ifdef NORMALS\n\t\tvNormalW = getNormal();\n\t#endif\n\t#ifdef TANGENTS\n\t\tvTangentW = normalize(dNormalMatrix * vertex_tangent.xyz);\n\t\tvBinormalW = cross(vNormalW, vTangentW) * vertex_tangent.w;\n\t#elif defined(GGX_SPECULAR)\n\t\tvObjectSpaceUpW = normalize(dNormalMatrix * vec3(0, 1, 0));\n\t#endif\n\t#ifdef UV0\n\t\tvec2 uv0 = getUv0();\n\t\t#ifdef UV0_UNMODIFIED\n\t\t\tvUv0 = uv0;\n\t\t#endif\n\t#endif\n\t#ifdef UV1\n\t\tvec2 uv1 = getUv1();\n\t\t#ifdef UV1_UNMODIFIED\n\t\t\tvUv1 = uv1;\n\t\t#endif\n\t#endif\n\t#include "uvTransformVS, UV_TRANSFORMS_COUNT"\n\t#ifdef VERTEX_COLOR\n\t\tvVertexColor = vertex_color;\n\t#endif\n\t#ifdef LINEAR_DEPTH\n\t\tvLinearDepth = -(matrix_view * vec4(vPositionW, 1.0)).z;\n\t#endif\n\t#ifdef MSDF\n\t\tunpackMsdfParams();\n\t#endif\n\t#include "litUserMainEndVS"\n}\n',litOtherMainPS:'\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#ifdef PREPASS_PASS\n\t#include "floatAsUintPS"\n#endif\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tevaluateFrontend();\n\t#ifdef PICK_PASS\n\t\tgl_FragColor = getPickOutput();\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t#endif\n\t#include "litUserMainEndPS"\n}\n',litShaderArgsPS:"\nvec3 litArgs_albedo;\nfloat litArgs_opacity;\nvec3 litArgs_emission;\nvec3 litArgs_worldNormal;\nfloat litArgs_ao;\nvec3 litArgs_lightmap;\nvec3 litArgs_lightmapDir;\nfloat litArgs_metalness;\nvec3 litArgs_specularity;\nfloat litArgs_specularityFactor;\nfloat litArgs_gloss;\nfloat litArgs_sheen_gloss;\nvec3 litArgs_sheen_specularity;\nfloat litArgs_transmission;\nfloat litArgs_thickness;\nfloat litArgs_ior;\nfloat litArgs_dispersion;\nfloat litArgs_iridescence_intensity;\nfloat litArgs_iridescence_thickness;\nvec3 litArgs_clearcoat_worldNormal;\nfloat litArgs_clearcoat_specularity;\nfloat litArgs_clearcoat_gloss;\n",litShaderCorePS:'\n\t#if LIT_NONE_SLICE_MODE == TILED\n\t\tconst float textureBias = -1000.0;\n\t#else\n\t\tuniform float textureBias;\n\t#endif\n\t#include "litShaderArgsPS"\n',litShadowMainPS:'\n#if LIGHT_TYPE != DIRECTIONAL\n\tuniform vec3 view_position;\n\tuniform float light_radius;\n#endif\n#if SHADOW_TYPE == PCSS_32F\n\t#include "linearizeDepthPS"\n#endif\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tevaluateFrontend();\n\t#ifdef PERSPECTIVE_DEPTH\n\t\tfloat depth = gl_FragCoord.z;\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\t#if LIGHT_TYPE != DIRECTIONAL\n\t\t\t\tdepth = linearizeDepthWithParams(depth, camera_params);\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tfloat depth = min(distance(view_position, vPositionW) / light_radius, 0.99999);\n\t\t#define MODIFIED_DEPTH\n\t#endif\n\t#if SHADOW_TYPE == VSM_16F || SHADOW_TYPE == VSM_32F\n\t\t#if SHADOW_TYPE == VSM_32F\n\t\t\tfloat exponent = 15.0;\n\t\t#else\n\t\t\tfloat exponent = 5.54;\n\t\t#endif\n\t\tdepth = 2.0 * depth - 1.0;\n\t\tdepth =  exp(exponent * depth);\n\t\tgl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);\n\t#else\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\tgl_FragColor.r = depth;\n\t\t#else\n\t\t\t#ifdef MODIFIED_DEPTH\n\t\t\t\tgl_FragDepth = depth;\n\t\t\t#endif\n\t\t\tgl_FragColor = vec4(1.0);\n\t\t#endif\n\t#endif\n\t#include "litUserMainEndPS"\n}\n',litUserDeclarationPS:"",litUserDeclarationVS:"",litUserCodePS:"",litUserCodeVS:"",litUserMainStartPS:"",litUserMainStartVS:"",litUserMainEndPS:"",litUserMainEndVS:"",ltcPS:"\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nstruct Coords {\n\tvec3 coord0;\n\tvec3 coord1;\n\tvec3 coord2;\n\tvec3 coord3;\n};\nfloat LTC_EvaluateRect( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in Coords rectCoords) {\n\tvec3 v1 = rectCoords.coord1 - rectCoords.coord0;\n\tvec3 v2 = rectCoords.coord3 - rectCoords.coord0;\n\t\n\tvec3 lightNormal = cross( v1, v2 );\n\tfloat factor = sign(-dot( lightNormal, P - rectCoords.coord0 ));\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 =  factor * cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords.coord0 - P );\n\tcoords[ 1 ] = mat * ( rectCoords.coord1 - P );\n\tcoords[ 2 ] = mat * ( rectCoords.coord2 - P );\n\tcoords[ 3 ] = mat * ( rectCoords.coord3 - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn result;\n}\nCoords dLTCCoords;\nCoords getLTCLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tCoords coords;\n\tcoords.coord0 = lightPos + halfWidth - halfHeight;\n\tcoords.coord1 = lightPos - halfWidth - halfHeight;\n\tcoords.coord2 = lightPos - halfWidth + halfHeight;\n\tcoords.coord3 = lightPos + halfWidth + halfHeight;\n\treturn coords;\n}\nfloat dSphereRadius;\nCoords getSphereLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tdSphereRadius = max(length(halfWidth), length(halfHeight));\n\tvec3 f = reflect(normalize(lightPos - view_position), vNormalW);\n\tvec3 w = normalize(cross(f, halfHeight));\n\tvec3 h = normalize(cross(f, w));\n\treturn getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);\n}\nvec2 dLTCUV;\n#ifdef LIT_CLEARCOAT\n\tvec2 ccLTCUV;\n#endif\nvec2 getLTCLightUV(float gloss, vec3 worldNormal, vec3 viewDir)\n{\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\treturn LTC_Uv( worldNormal, viewDir, roughness );\n}\nvec3 dLTCSpecFres;\n#ifdef LIT_CLEARCOAT\n\tvec3 ccLTCSpecFres;\n#endif\nvec3 getLTCLightSpecFres(vec2 uv, vec3 specularity)\n{\n\tvec4 t2 = texture2DLod(areaLightsLutTex2, uv, 0.0);\n\treturn specularity * t2.x + ( vec3( 1.0 ) - specularity) * t2.y;\n}\nvoid calcLTCLightValues(float gloss, vec3 worldNormal, vec3 viewDir, vec3 specularity, float clearcoatGloss, vec3 clearcoatWorldNormal, float clearcoatSpecularity)\n{\n\tdLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);\n\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity); \n#ifdef LIT_CLEARCOAT\n\tccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);\n\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3(clearcoatSpecularity));\n#endif\n}\nvoid calcRectLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\n}\nvoid calcDiskLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\n}\nvoid calcSphereLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\n}\nvec3 SolveCubic(vec4 Coefficient)\n{\n\tfloat pi = 3.14159;\n\tCoefficient.xyz /= Coefficient.w;\n\tCoefficient.yz /= 3.0;\n\tfloat A = Coefficient.w;\n\tfloat B = Coefficient.z;\n\tfloat C = Coefficient.y;\n\tfloat D = Coefficient.x;\n\tvec3 Delta = vec3(\n\t\t-Coefficient.z * Coefficient.z + Coefficient.y,\n\t\t-Coefficient.y * Coefficient.z + Coefficient.x,\n\t\tdot(vec2(Coefficient.z, -Coefficient.y), Coefficient.xy)\n\t);\n\tfloat Discriminant = dot(vec2(4.0 * Delta.x, -Delta.y), Delta.zy);\n\tvec2 xlc, xsc;\n\t{\n\t\tfloat A_a = 1.0;\n\t\tfloat C_a = Delta.x;\n\t\tfloat D_a = -2.0 * B * Delta.x + Delta.y;\n\t\tfloat Theta = atan(sqrt(Discriminant), -D_a) / 3.0;\n\t\tfloat x_1a = 2.0 * sqrt(-C_a) * cos(Theta);\n\t\tfloat x_3a = 2.0 * sqrt(-C_a) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xl;\n\t\tif ((x_1a + x_3a) > 2.0 * B)\n\t\t\txl = x_1a;\n\t\telse\n\t\t\txl = x_3a;\n\t\txlc = vec2(xl - B, A);\n\t}\n\t{\n\t\tfloat A_d = D;\n\t\tfloat C_d = Delta.z;\n\t\tfloat D_d = -D * Delta.y + 2.0 * C * Delta.z;\n\t\tfloat Theta = atan(D * sqrt(Discriminant), -D_d) / 3.0;\n\t\tfloat x_1d = 2.0 * sqrt(-C_d) * cos(Theta);\n\t\tfloat x_3d = 2.0 * sqrt(-C_d) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xs;\n\t\tif (x_1d + x_3d < 2.0 * C)\n\t\t\txs = x_1d;\n\t\telse\n\t\t\txs = x_3d;\n\t\txsc = vec2(-D, xs + C);\n\t}\n\tfloat E =  xlc.y * xsc.y;\n\tfloat F = -xlc.x * xsc.y - xlc.y * xsc.x;\n\tfloat G =  xlc.x * xsc.x;\n\tvec2 xmc = vec2(C * F - B * G, -B * F + C * E);\n\tvec3 Root = vec3(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\n\tif (Root.x < Root.y && Root.x < Root.z)\n\t\tRoot.xyz = Root.yxz;\n\telse if (Root.z < Root.x && Root.z < Root.y)\n\t\tRoot.xyz = Root.xzy;\n\treturn Root;\n}\nfloat LTC_EvaluateDisk(vec3 N, vec3 V, vec3 P, mat3 Minv, Coords points)\n{\n\tvec3 T1 = normalize(V - N * dot(V, N));\n\tvec3 T2 = cross(N, T1);\n\tmat3 R = transposeMat3( mat3( T1, T2, N ) );\n\tvec3 L_[ 3 ];\n\tL_[ 0 ] = R * ( points.coord0 - P );\n\tL_[ 1 ] = R * ( points.coord1 - P );\n\tL_[ 2 ] = R * ( points.coord2 - P );\n\tvec3 C  = 0.5 * (L_[0] + L_[2]);\n\tvec3 V1 = 0.5 * (L_[1] - L_[2]);\n\tvec3 V2 = 0.5 * (L_[1] - L_[0]);\n\tC  = Minv * C;\n\tV1 = Minv * V1;\n\tV2 = Minv * V2;\n\tfloat a, b;\n\tfloat d11 = dot(V1, V1);\n\tfloat d22 = dot(V2, V2);\n\tfloat d12 = dot(V1, V2);\n\tif (abs(d12) / sqrt(d11 * d22) > 0.0001)\n\t{\n\t\tfloat tr = d11 + d22;\n\t\tfloat det = -d12 * d12 + d11 * d22;\n\t\tdet = sqrt(det);\n\t\tfloat u = 0.5 * sqrt(tr - 2.0 * det);\n\t\tfloat v = 0.5 * sqrt(tr + 2.0 * det);\n\t\tfloat e_max = (u + v) * (u + v);\n\t\tfloat e_min = (u - v) * (u - v);\n\t\tvec3 V1_, V2_;\n\t\tif (d11 > d22)\n\t\t{\n\t\t\tV1_ = d12 * V1 + (e_max - d11) * V2;\n\t\t\tV2_ = d12 * V1 + (e_min - d11) * V2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tV1_ = d12*V2 + (e_max - d22)*V1;\n\t\t\tV2_ = d12*V2 + (e_min - d22)*V1;\n\t\t}\n\t\ta = 1.0 / e_max;\n\t\tb = 1.0 / e_min;\n\t\tV1 = normalize(V1_);\n\t\tV2 = normalize(V2_);\n\t}\n\telse\n\t{\n\t\ta = 1.0 / dot(V1, V1);\n\t\tb = 1.0 / dot(V2, V2);\n\t\tV1 *= sqrt(a);\n\t\tV2 *= sqrt(b);\n\t}\n\tvec3 V3 = normalize(cross(V1, V2));\n\tif (dot(C, V3) < 0.0)\n\t\tV3 *= -1.0;\n\tfloat L  = dot(V3, C);\n\tfloat x0 = dot(V1, C) / L;\n\tfloat y0 = dot(V2, C) / L;\n\tfloat E1 = inversesqrt(a);\n\tfloat E2 = inversesqrt(b);\n\ta *= L * L;\n\tb *= L * L;\n\tfloat c0 = a * b;\n\tfloat c1 = a * b * (1.0 + x0 * x0 + y0 * y0) - a - b;\n\tfloat c2 = 1.0 - a * (1.0 + x0 * x0) - b * (1.0 + y0 * y0);\n\tfloat c3 = 1.0;\n\tvec3 roots = SolveCubic(vec4(c0, c1, c2, c3));\n\tfloat e1 = roots.x;\n\tfloat e2 = roots.y;\n\tfloat e3 = roots.z;\n\tvec3 avgDir = vec3(a * x0 / (a - e2), b * y0 / (b - e2), 1.0);\n\tmat3 rotate = mat3(V1, V2, V3);\n\tavgDir = rotate * avgDir;\n\tavgDir = normalize(avgDir);\n\tfloat L1 = sqrt(-e2 / e3);\n\tfloat L2 = sqrt(-e2 / e1);\n\tfloat formFactor = max(0.0, L1 * L2 * inversesqrt((1.0 + L1 * L1) * (1.0 + L2 * L2)));\n\t\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tvec2 uv = vec2(avgDir.z * 0.5 + 0.5, formFactor);\n\tuv = uv*LUT_SCALE + LUT_BIAS;\n\tfloat scale = texture2DLod(areaLightsLutTex2, uv, 0.0).w;\n\treturn formFactor*scale;\n}\nfloat FixNan(float value) {\n\t#ifdef WEBGPU\n\t\treturn value != value ? 0.0 : value;\n\t#else\n\t\treturn isnan(value) ? 0.0 : value;\n\t#endif\n}\nfloat getRectLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );\n}\nfloat getDiskLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn FixNan(LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords ));\n}\nfloat getSphereLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\tfloat falloff = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);\n\treturn FixNan(getLightDiffuse(worldNormal, viewDir, lightDirNorm) * falloff);\n}\nmat3 getLTCLightInvMat(vec2 uv)\n{\n\tvec4 t1 = texture2DLod(areaLightsLutTex1, uv, 0.0);\n\treturn mat3(\n\t\tvec3( t1.x, 0, t1.y ),\n\t\tvec3(\t0, 1,\t0 ),\n\t\tvec3( t1.z, 0, t1.w )\n\t);\n}\nfloat calcRectLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getRectLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcRectLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat calcDiskLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getDiskLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat getSphereLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\n",metalnessPS:"\n#ifdef STD_METALNESS_CONSTANT\nuniform float material_metalness;\n#endif\nvoid getMetalness() {\n\tfloat metalness = 1.0;\n\t#ifdef STD_METALNESS_CONSTANT\n\tmetalness *= material_metalness;\n\t#endif\n\t#ifdef STD_METALNESS_TEXTURE\n\tmetalness *= texture2DBias({STD_METALNESS_TEXTURE_NAME}, {STD_METALNESS_TEXTURE_UV}, textureBias).{STD_METALNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_METALNESS_VERTEX\n\tmetalness *= saturate(vVertexColor.{STD_METALNESS_VERTEX_CHANNEL});\n\t#endif\n\tdMetalness = metalness;\n}\n",metalnessModulatePS:"\nvec3 getSpecularModulate(in vec3 specularity, in vec3 albedo, in float metalness, in float f0) {\n\tvec3 dielectricF0 = f0 * specularity;\n\treturn mix(dielectricF0, albedo, metalness);\n}\nvec3 getAlbedoModulate(in vec3 albedo, in float metalness) {\n\treturn albedo * (1.0 - metalness);\n}\n",morphPS:"\n\tvarying vec2 uv0;\n\tuniform sampler2DArray morphTexture;\n\tuniform highp float morphFactor[{MORPH_TEXTURE_MAX_COUNT}];\n\tuniform highp uint morphIndex[{MORPH_TEXTURE_MAX_COUNT}];\n\tuniform int count;\n\t#ifdef MORPH_INT\n\t\tuniform vec3 aabbSize;\n\t\tuniform vec3 aabbMin;\n\t#endif\n\tvoid main (void) {\n\t\thighp vec3 color = vec3(0, 0, 0);\n\t\tivec2 pixelCoords = ivec2(uv0 * vec2(textureSize(morphTexture, 0).xy));\n\t\t\n\t\tfor (int i = 0; i < count; i++) {\n\t\t\tuint textureIndex = morphIndex[i];\n\t\t\tvec3 delta = texelFetch(morphTexture, ivec3(pixelCoords, int(textureIndex)), 0).xyz;\n\t\t\tcolor += morphFactor[i] * delta;\n\t\t}\n\t\t#ifdef MORPH_INT\n\t\t\tcolor = (color - aabbMin) / aabbSize * 65535.0;\n\t\t\tgl_FragColor = uvec4(color, 1u);\n\t\t#else\n\t\t\tgl_FragColor = vec4(color, 1.0);\n\t\t#endif\n\t}\n",morphVS:"\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t}\n",msdfPS:"\nuniform sampler2D texture_msdfMap;\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nfloat map (float min, float max, float v) {\n\treturn (v - min) / (max - min);\n}\nuniform float font_sdfIntensity;\nuniform float font_pxrange;\nuniform float font_textureWidth;\n#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\tuniform vec4 outline_color;\n\tuniform float outline_thickness;\n\tuniform vec4 shadow_color;\n\tuniform vec2 shadow_offset;\n#else\n\tvarying vec4 outline_color;\n\tvarying float outline_thickness;\n\tvarying vec4 shadow_color;\n\tvarying vec2 shadow_offset;\n#endif\nvec4 applyMsdf(vec4 color) {\n\tcolor.rgb = gammaCorrectInput(color.rgb);\n\tvec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;\n\tvec2 uvShdw = vUv0 - shadow_offset;\n\tvec3 ssample = texture2D(texture_msdfMap, uvShdw).rgb;\n\tfloat sigDist = median(tsample.r, tsample.g, tsample.b);\n\tfloat sigDistShdw = median(ssample.r, ssample.g, ssample.b);\n\tfloat smoothingMax = 0.2;\n\tvec2 w = fwidth(vUv0);\n\tfloat smoothing = clamp(w.x * font_textureWidth / font_pxrange, 0.0, smoothingMax);\n\tfloat mapMin = 0.05;\n\tfloat mapMax = clamp(1.0 - font_sdfIntensity, mapMin, 1.0);\n\tfloat sigDistInner = map(mapMin, mapMax, sigDist);\n\tfloat sigDistOutline = map(mapMin, mapMax, sigDist + outline_thickness);\n\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thickness);\n\tfloat center = 0.5;\n\tfloat inside = smoothstep(center-smoothing, center+smoothing, sigDistInner);\n\tfloat outline = smoothstep(center-smoothing, center+smoothing, sigDistOutline);\n\tfloat shadow = smoothstep(center-smoothing, center+smoothing, sigDistShdw);\n\tvec4 tcolor = (outline > inside) ? outline * vec4(outline_color.a * outline_color.rgb, outline_color.a) : vec4(0.0);\n\ttcolor = mix(tcolor, color, inside);\n\tvec4 scolor = (shadow > outline) ? shadow * vec4(shadow_color.a * shadow_color.rgb, shadow_color.a) : tcolor;\n\ttcolor = mix(scolor, tcolor, outline);\n\ttcolor.rgb = gammaCorrectOutput(tcolor.rgb);\n\t\n\treturn tcolor;\n}\n",msdfVS:"\nattribute vec3 vertex_outlineParameters;\nattribute vec3 vertex_shadowParameters;\nvarying vec4 outline_color;\nvarying float outline_thickness;\nvarying vec4 shadow_color;\nvarying vec2 shadow_offset;\nvoid unpackMsdfParams() {\n\tvec3 little = mod(vertex_outlineParameters, 256.);\n\tvec3 big = (vertex_outlineParameters - little) / 256.;\n\toutline_color.rb = little.xy / 255.;\n\toutline_color.ga = big.xy / 255.;\n\toutline_thickness = little.z / 255. * 0.2;\n\tlittle = mod(vertex_shadowParameters, 256.);\n\tbig = (vertex_shadowParameters - little) / 256.;\n\tshadow_color.rb = little.xy / 255.;\n\tshadow_color.ga = big.xy / 255.;\n\tshadow_offset = (vec2(little.z, big.z) / 127. - 1.) * 0.005;\n}\n",normalVS:"\nmat3 dNormalMatrix;\nvec3 getNormal() {\n\tdNormalMatrix = getNormalMatrix(dModelMatrix);\n\tvec3 localNormal = getLocalNormal(vertex_normal);\n\treturn normalize(dNormalMatrix * localNormal);\n}\n",normalCoreVS:"\nattribute vec3 vertex_normal;\nuniform mat3 matrix_normal;\n#ifdef MORPHING_NORMAL\n\t#ifdef MORPHING_INT\n\t\tuniform highp usampler2D morphNormalTex;\n\t#else\n\t\tuniform highp sampler2D morphNormalTex;\n\t#endif\n#endif\nvec3 getLocalNormal(vec3 vertexNormal) {\n\tvec3 localNormal = vertex_normal;\n\t#ifdef MORPHING_NORMAL\n\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tvec3 morphNormal = vec3(texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz) / 65535.0 * 2.0 - 1.0;\n\t\t#else\n\t\t\tvec3 morphNormal = texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz;\n\t\t#endif\n\t\tlocalNormal += morphNormal;\n\t#endif\n\treturn localNormal;\n}\n#if defined(SKIN) || defined(BATCH)\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#elif defined(INSTANCING)\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#else\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn matrix_normal;\n\t}\n#endif\n",normalMapPS:"\n#ifdef STD_NORMAL_TEXTURE\n\tuniform float material_bumpiness;\n#endif\n#ifdef STD_NORMALDETAIL_TEXTURE\n\tuniform float material_normalDetailMapBumpiness;\n\tvec3 blendNormals(vec3 n1, vec3 n2) {\n\t\tn1 += vec3(0, 0, 1);\n\t\tn2 *= vec3(-1, -1, 1);\n\t\treturn n1 * dot(n1, n2) / n1.z - n2;\n\t}\n#endif\nvoid getNormal() {\n#ifdef STD_NORMAL_TEXTURE\n\tvec3 normalMap = {STD_NORMAL_TEXTURE_DECODE}(texture2DBias({STD_NORMAL_TEXTURE_NAME}, {STD_NORMAL_TEXTURE_UV}, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness);\n\t#ifdef STD_NORMALDETAIL_TEXTURE\n\t\tvec3 normalDetailMap = {STD_NORMALDETAIL_TEXTURE_DECODE}(texture2DBias({STD_NORMALDETAIL_TEXTURE_NAME}, {STD_NORMALDETAIL_TEXTURE_UV}, textureBias));\n\t\tnormalDetailMap = mix(vec3(0.0, 0.0, 1.0), normalDetailMap, material_normalDetailMapBumpiness);\n\t\tnormalMap = blendNormals(normalMap, normalDetailMap);\n\t#endif\n\tdNormalW = normalize(dTBN * normalMap);\n#else\n\tdNormalW = dVertexNormalW;\n#endif\n}\n",opacityPS:"\nuniform float material_opacity;\nvoid getOpacity() {\n\tdAlpha = material_opacity;\n\t#ifdef STD_OPACITY_TEXTURE\n\tdAlpha *= texture2DBias({STD_OPACITY_TEXTURE_NAME}, {STD_OPACITY_TEXTURE_UV}, textureBias).{STD_OPACITY_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_OPACITY_VERTEX\n\tdAlpha *= clamp(vVertexColor.{STD_OPACITY_VERTEX_CHANNEL}, 0.0, 1.0);\n\t#endif\n}\n",opacityDitherPS:'\n#if STD_OPACITY_DITHER == BAYER8\n\t#include "bayerPS"\n#endif\nuniform vec4 blueNoiseJitter;\n#if STD_OPACITY_DITHER == BLUENOISE\n\tuniform sampler2D blueNoiseTex32;\n#endif\nvoid opacityDither(float alpha, float id) {\n\t#if STD_OPACITY_DITHER == BAYER8\n\t\tfloat noise = bayer8(floor(mod(gl_FragCoord.xy + blueNoiseJitter.xy + id, 8.0))) / 64.0;\n\t#else\n\t\t#if STD_OPACITY_DITHER == BLUENOISE\n\t\t\tvec2 uv = fract(gl_FragCoord.xy / 32.0 + blueNoiseJitter.xy + id);\n\t\t\tfloat noise = texture2DLod(blueNoiseTex32, uv, 0.0).y;\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER == IGNNOISE\n\t\t\tvec3 magic = vec3(0.06711056, 0.00583715, 52.9829189);\n\t\t\tfloat noise = fract(magic.z * fract(dot(gl_FragCoord.xy + blueNoiseJitter.xy + id, magic.xy)));\n\t\t#endif\n\t#endif\n\tnoise = pow(noise, 2.2);\n\tif (alpha < noise)\n\t\tdiscard;\n}\n',outputPS:"\n",outputAlphaPS:"\n#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == ADDITIVEALPHA || defined(LIT_ALPHA_TO_COVERAGE)\n\tgl_FragColor.a = litArgs_opacity;\n#elif LIT_BLEND_TYPE == PREMULTIPLIED\n\tgl_FragColor.rgb *= litArgs_opacity;\n\tgl_FragColor.a = litArgs_opacity;\n#else\n\tgl_FragColor.a = 1.0;\n#endif\n",outputTex2DPS:"\nvarying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n\tgl_FragColor = texture2D(source, vUv0);\n}\n",sheenPS:"\nuniform vec3 material_sheen;\nvoid getSheen() {\n\tvec3 sheenColor = material_sheen;\n\t#ifdef STD_SHEEN_TEXTURE\n\tsheenColor *= {STD_SHEEN_TEXTURE_DECODE}(texture2DBias({STD_SHEEN_TEXTURE_NAME}, {STD_SHEEN_TEXTURE_UV}, textureBias)).{STD_SHEEN_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEEN_VERTEX\n\tsheenColor *= saturate(vVertexColor.{STD_SHEEN_VERTEX_CHANNEL});\n\t#endif\n\tsSpecularity = sheenColor;\n}\n",sheenGlossPS:"\nuniform float material_sheenGloss;\nvoid getSheenGlossiness() {\n\tfloat sheenGlossiness = material_sheenGloss;\n\t#ifdef STD_SHEENGLOSS_TEXTURE\n\tsheenGlossiness *= texture2DBias({STD_SHEENGLOSS_TEXTURE_NAME}, {STD_SHEENGLOSS_TEXTURE_UV}, textureBias).{STD_SHEENGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEENGLOSS_VERTEX\n\tsheenGlossiness *= saturate(vVertexColor.{STD_SHEENGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_SHEENGLOSS_INVERT\n\tsheenGlossiness = 1.0 - sheenGlossiness;\n\t#endif\n\tsGlossiness = sheenGlossiness + 0.0000001;\n}\n",parallaxPS:"\nuniform float material_heightMapFactor;\nvoid getParallax() {\n\tfloat parallaxScale = material_heightMapFactor;\n\tfloat height = texture2DBias({STD_HEIGHT_TEXTURE_NAME}, {STD_HEIGHT_TEXTURE_UV}, textureBias).{STD_HEIGHT_TEXTURE_CHANNEL};\n\theight = height * parallaxScale - parallaxScale * 0.5;\n\tvec3 viewDirT = dViewDirW * dTBN;\n\tviewDirT.z += 0.42;\n\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n",pickPS:"\nuniform uint meshInstanceId;\nvec4 getPickOutput() {\n\tconst vec4 inv = vec4(1.0 / 255.0);\n\tconst uvec4 shifts = uvec4(16, 8, 0, 24);\n\tuvec4 col = (uvec4(meshInstanceId) >> shifts) & uvec4(0xff);\n\treturn vec4(col) * inv;\n}\n",reflDirPS:"\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tdReflDirW = normalize(-reflect(viewDir, worldNormal));\n}\n",reflDirAnisoPS:"\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tfloat roughness = sqrt(1.0 - min(gloss, 1.0));\n\tvec2 direction = dAnisotropyRotation;\n\tvec3 anisotropicT = normalize(tbn * vec3(direction, 0.0));\n\tvec3 anisotropicB = normalize(cross(tbn[2], anisotropicT));\n\tfloat anisotropy = dAnisotropy;\n\tvec3 anisotropicDirection = anisotropicB;\n\tvec3 anisotropicTangent = cross(anisotropicDirection, viewDir);\n\tvec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);\n\tfloat bendFactor = 1.0 - anisotropy * (1.0 - roughness);\n\tfloat bendFactor4 = bendFactor * bendFactor * bendFactor * bendFactor;\n\tvec3 bentNormal = normalize(mix(normalize(anisotropicNormal), normalize(worldNormal), bendFactor4));\n\tdReflDirW = reflect(-viewDir, bentNormal);\n}\n",reflectionCCPS:"\n#ifdef LIT_CLEARCOAT\nvoid addReflectionCC(vec3 reflDir, float gloss) {\n\tccReflection += calcReflection(reflDir, gloss);\n}\n#endif\n",reflectionCubePS:"\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 lookupVec = cubeMapProject(reflDir);\n\tlookupVec.x *= -1.0;\n\treturn {reflectionDecode}(textureCube(texture_cubeMap, lookupVec));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionEnvHQPS:"\n#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\tuniform sampler2D texture_envAtlas;\n#endif\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat flevel = level - ilevel;\n\tvec3 sharp = {reflectionCubemapDecode}(textureCube(texture_cubeMap, dir));\n\tvec3 roughA = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel)));\n\tvec3 roughB = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionEnvPS:"\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\n\tuniform sampler2D texture_envAtlas;\n#endif\nuniform float material_reflectivity;\nfloat shinyMipLevel(vec2 uv) {\n\tvec2 dx = dFdx(uv);\n\tvec2 dy = dFdy(uv);\n\tvec2 uv2 = vec2(fract(uv.x + 0.5), uv.y);\n\tvec2 dx2 = dFdx(uv2);\n\tvec2 dy2 = dFdy(uv2);\n\tfloat maxd = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));\n\treturn clamp(0.5 * log2(maxd) - 1.0 + textureBias, 0.0, 5.0);\n}\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat level2 = shinyMipLevel(uv * atlasSize);\n\tfloat ilevel2 = floor(level2);\n\tvec2 uv0, uv1;\n\tfloat weight;\n\tif (ilevel == 0.0) {\n\t\tuv0 = mapShinyUv(uv, ilevel2);\n\t\tuv1 = mapShinyUv(uv, ilevel2 + 1.0);\n\t\tweight = level2 - ilevel2;\n\t} else {\n\t\tuv0 = uv1 = mapRoughnessUv(uv, ilevel);\n\t\tweight = 0.0;\n\t}\n\tvec3 linearA = {reflectionDecode}(texture2D(texture_envAtlas, uv0));\n\tvec3 linearB = {reflectionDecode}(texture2D(texture_envAtlas, uv1));\n\tvec3 linear0 = mix(linearA, linearB, weight);\n\tvec3 linear1 = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(linear0, linear1, level - ilevel));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionSpherePS:"\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 reflDirV = (mat3(matrix_view) * reflDir);\n\tfloat m = 2.0 * sqrt(dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z + 1.0) * (reflDirV.z + 1.0));\n\tvec2 sphereMapUv = reflDirV.xy / m + 0.5;\n\treturn {reflectionDecode}(texture2D(texture_sphereMap, sphereMapUv));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n",reflectionSheenPS:"\nvoid addReflectionSheen(vec3 worldNormal, vec3 viewDir, float gloss) {\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat alphaG = gloss * gloss;\n\tfloat a = gloss < 0.25 ? -339.2 * alphaG + 161.4 * gloss - 25.9 : -8.48 * alphaG + 14.3 * gloss - 9.95;\n\tfloat b = gloss < 0.25 ? 44.0 * alphaG - 23.7 * gloss + 3.26 : 1.97 * alphaG - 3.27 * gloss + 0.72;\n\tfloat DG = exp( a * NoV + b ) + ( gloss < 0.25 ? 0.0 : 0.1 * ( gloss - 0.25 ) );\n\tsReflection += calcReflection(worldNormal, 0.0) * saturate(DG);\n}\n",refractionCubePS:"\nvec3 refract2(vec3 viewVec, vec3 normal, float IOR) {\n\tfloat vn = dot(viewVec, normal);\n\tfloat k = 1.0 - IOR * IOR * (1.0 - vn * vn);\n\tvec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;\n\treturn refrVec;\n}\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex,\n\tfloat dispersion\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif \n) {\n\tvec4 tmpRefl = dReflection;\n\tvec3 reflectionDir = refract2(-viewDir, worldNormal, refractionIndex);\n\tdReflection = vec4(0);\n\taddReflection(reflectionDir, gloss);\n\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);\n\tdReflection = tmpRefl;\n}\n",refractionDynamicPS:"\nuniform float material_invAttenuationDistance;\nuniform vec3 material_attenuation;\nvec3 evalRefractionColor(vec3 refractionVector, float gloss, float refractionIndex) {\n\tvec4 pointOfRefraction = vec4(vPositionW + refractionVector, 1.0);\n\tvec4 projectionPoint = matrix_viewProjection * pointOfRefraction;\n\tvec2 uv = getGrabScreenPos(projectionPoint);\n\tfloat iorToRoughness = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);\n\tfloat refractionLod = log2(uScreenSize.x) * iorToRoughness;\n\tvec3 refraction = texture2DLod(uSceneColorMap, uv, refractionLod).rgb;\n\treturn refraction;\n}\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex,\n\tfloat dispersion\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif\n) {\n\tvec3 modelScale;\n\tmodelScale.x = length(vec3(matrix_model[0].xyz));\n\tmodelScale.y = length(vec3(matrix_model[1].xyz));\n\tmodelScale.z = length(vec3(matrix_model[2].xyz));\n\tvec3 scale = thickness * modelScale;\n\tvec3 refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * scale;\n\tvec3 refraction = evalRefractionColor(refractionVector, gloss, refractionIndex);\n\t#ifdef LIT_DISPERSION\n\t\tfloat halfSpread = (1.0 / refractionIndex - 1.0) * 0.025 * dispersion;\n\t\tfloat refractionIndexR = refractionIndex - halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexR)) * scale;\n\t\trefraction.r = evalRefractionColor(refractionVector, gloss, refractionIndexR).r;\n\t\tfloat refractionIndexB = refractionIndex + halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexB)) * scale;\n\t\trefraction.b = evalRefractionColor(refractionVector, gloss, refractionIndexB).b;\n\t#endif\n\tvec3 transmittance;\n\tif (material_invAttenuationDistance != 0.0)\n\t{\n\t\tvec3 attenuation = -log(material_attenuation) * material_invAttenuationDistance;\n\t\ttransmittance = exp(-attenuation * length(refractionVector));\n\t}\n\telse\n\t{\n\t\ttransmittance = refraction;\n\t}\n\tvec3 fresnel = vec3(1.0) - \n\t\tgetFresnel(\n\t\t\tdot(viewDir, worldNormal), \n\t\t\tgloss, \n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t);\n\tdDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);\n}\n",reprojectPS:'\nvarying vec2 vUv0;\n#ifdef CUBEMAP_SOURCE\n\tuniform samplerCube sourceCube;\n#else\n\tuniform sampler2D sourceTex;\n#endif\n#ifdef USE_SAMPLES_TEX\n\tuniform sampler2D samplesTex;\n\tuniform vec2 samplesTexInverseSize;\n#endif\nuniform vec3 params;\nfloat targetFace() { return params.x; }\nfloat targetTotalPixels() { return params.y; }\nfloat sourceTotalPixels() { return params.z; }\nfloat PI = 3.141592653589793;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\n#include "decodePS"\n#include "encodePS"\nvec3 modifySeams(vec3 dir, float scale) {\n\tvec3 adir = abs(dir);\n\tfloat M = max(max(adir.x, adir.y), adir.z);\n\treturn dir / M * vec3(\n\t\tadir.x == M ? 1.0 : scale,\n\t\tadir.y == M ? 1.0 : scale,\n\t\tadir.z == M ? 1.0 : scale\n\t);\n}\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec3 fromSpherical(vec2 uv) {\n\treturn vec3(cos(uv.y) * sin(uv.x),\n\t\t\t\tsin(uv.y),\n\t\t\t\tcos(uv.y) * cos(uv.x));\n}\nvec3 getDirectionEquirect() {\n\treturn fromSpherical((vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0) * vec2(PI, PI * 0.5));\n}\nfloat signNotZero(float k){\n\treturn(k >= 0.0) ? 1.0 : -1.0;\n}\nvec2 signNotZero(vec2 v) {\n\treturn vec2(signNotZero(v.x), signNotZero(v.y));\n}\nvec3 octDecode(vec2 o) {\n\tvec3 v = vec3(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);\n\tif (v.y < 0.0) {\n\t\tv.xz = (1.0 - abs(v.zx)) * signNotZero(v.xz);\n\t}\n\treturn normalize(v);\n}\nvec3 getDirectionOctahedral() {\n\treturn octDecode(vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0);\n}\nvec2 octEncode(in vec3 v) {\n\tfloat l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n\tvec2 result = v.xz * (1.0 / l1norm);\n\tif (v.y < 0.0) {\n\t\tresult = (1.0 - abs(result.yx)) * signNotZero(result.xy);\n\t}\n\treturn result;\n}\n#ifdef CUBEMAP_SOURCE\n\tvec4 sampleCubemap(vec3 dir) {\n\t\treturn textureCube(sourceCube, modifySeams(dir, 1.0));\n\t}\n\tvec4 sampleCubemap(vec2 sph) {\n\t\treturn sampleCubemap(fromSpherical(sph));\n\t}\n\tvec4 sampleCubemap(vec3 dir, float mipLevel) {\n\t\treturn textureCubeLod(sourceCube, modifySeams(dir, 1.0), mipLevel);\n\t}\n\tvec4 sampleCubemap(vec2 sph, float mipLevel) {\n\t\treturn sampleCubemap(fromSpherical(sph), mipLevel);\n\t}\n#else\n\tvec4 sampleEquirect(vec2 sph) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleEquirect(vec3 dir) {\n\t\treturn sampleEquirect(toSpherical(dir));\n\t}\n\tvec4 sampleEquirect(vec2 sph, float mipLevel) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleEquirect(vec3 dir, float mipLevel) {\n\t\treturn sampleEquirect(toSpherical(dir), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec3 dir) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleOctahedral(vec2 sph) {\n\t\treturn sampleOctahedral(fromSpherical(sph));\n\t}\n\tvec4 sampleOctahedral(vec3 dir, float mipLevel) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec2 sph, float mipLevel) {\n\t\treturn sampleOctahedral(fromSpherical(sph), mipLevel);\n\t}\n#endif\nvec3 getDirectionCubemap() {\n\tvec2 st = vUv0 * 2.0 - 1.0;\n\tfloat face = targetFace();\n\tvec3 vec;\n\tif (face == 0.0) {\n\t\tvec = vec3(1, -st.y, -st.x);\n\t} else if (face == 1.0) {\n\t\tvec = vec3(-1, -st.y, st.x);\n\t} else if (face == 2.0) {\n\t\tvec = vec3(st.x, 1, st.y);\n\t} else if (face == 3.0) {\n\t\tvec = vec3(st.x, -1, -st.y);\n\t} else if (face == 4.0) {\n\t\tvec = vec3(st.x, -st.y, 1);\n\t} else {\n\t\tvec = vec3(-st.x, -st.y, -1);\n\t}\n\treturn normalize(modifySeams(vec, 1.0));\n}\nmat3 matrixFromVector(vec3 n) {\n\tfloat a = 1.0 / (1.0 + n.z);\n\tfloat b = -n.x * n.y * a;\n\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n\treturn mat3(b1, b2, n);\n}\nmat3 matrixFromVectorSlow(vec3 n) {\n\tvec3 up = (1.0 - abs(n.y) <= 0.0000001) ? vec3(0.0, 0.0, n.y > 0.0 ? 1.0 : -1.0) : vec3(0.0, 1.0, 0.0);\n\tvec3 x = normalize(cross(up, n));\n\tvec3 y = cross(n, x);\n\treturn mat3(x, y, n);\n}\nvec4 reproject() {\n\tif ({NUM_SAMPLES} <= 1) {\n\t\treturn {ENCODE_FUNC}({DECODE_FUNC}({SOURCE_FUNC}({TARGET_FUNC}())));\n\t} else {\n\t\tvec3 t = {TARGET_FUNC}();\n\t\tvec3 tu = dFdx(t);\n\t\tvec3 tv = dFdy(t);\n\t\tvec3 result = vec3(0.0);\n\t\tfor (float u = 0.0; u < {NUM_SAMPLES_SQRT}; ++u) {\n\t\t\tfor (float v = 0.0; v < {NUM_SAMPLES_SQRT}; ++v) {\n\t\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(normalize(t +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttu * (u / {NUM_SAMPLES_SQRT} - 0.5) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv * (v / {NUM_SAMPLES_SQRT} - 0.5))));\n\t\t\t}\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / ({NUM_SAMPLES_SQRT} * {NUM_SAMPLES_SQRT}));\n\t}\n}\nvec4 unpackFloat = vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n#ifdef USE_SAMPLES_TEX\n\tvoid unpackSample(int i, out vec3 L, out float mipLevel) {\n\t\tfloat u = (float(i * 4) + 0.5) * samplesTexInverseSize.x;\n\t\tfloat v = (floor(u) + 0.5) * samplesTexInverseSize.y;\n\t\tvec4 raw;\n\t\traw.x = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.y = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.z = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.w = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat);\n\t\tL.xyz = raw.xyz * 2.0 - 1.0;\n\t\tmipLevel = raw.w * 8.0;\n\t}\n\tvec4 prefilterSamples() {\n\t\tmat3 vecSpace = matrixFromVectorSlow({TARGET_FUNC}());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < {NUM_SAMPLES}; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(vecSpace * L, mipLevel)) * L.z;\n\t\t\ttotalWeight += L.z;\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / totalWeight);\n\t}\n\tvec4 prefilterSamplesUnweighted() {\n\t\tmat3 vecSpace = matrixFromVectorSlow({TARGET_FUNC}());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < {NUM_SAMPLES}; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(vecSpace * L, mipLevel));\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / float({NUM_SAMPLES}));\n\t}\n#endif\nvoid main(void) {\n\tgl_FragColor = {PROCESS_FUNC}();\n}\n',reprojectVS:"\nattribute vec2 vertex_position;\nuniform vec4 uvMod;\nvarying vec2 vUv0;\nvoid main(void) {\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = getImageEffectUV((vertex_position.xy * 0.5 + 0.5) * uvMod.xy + uvMod.zw);\n}\n",screenDepthPS:"\nuniform highp sampler2D uSceneDepthMap;\n#ifndef SCREENSIZE\n\t#define SCREENSIZE\n\tuniform vec4 uScreenSize;\n#endif\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\n#ifndef LINEARIZE_DEPTH\n\t#define LINEARIZE_DEPTH\n\t\n\t#ifndef CAMERAPLANES\n\t\t#define CAMERAPLANES\n\t\tuniform vec4 camera_params;\n\t#endif\n\tfloat linearizeDepth(float z) {\n\t\tif (camera_params.w == 0.0)\n\t\t\treturn (camera_params.z * camera_params.y) / (camera_params.y + z * (camera_params.z - camera_params.y));\n\t\telse\n\t\t\treturn camera_params.z + z * (camera_params.y - camera_params.z);\n\t}\n#endif\nfloat delinearizeDepth(float linearDepth) {\n\tif (camera_params.w == 0.0) {\n\t\treturn (camera_params.y * (camera_params.z - linearDepth)) / (linearDepth * (camera_params.z - camera_params.y));\n\t} else {\n\t\treturn (linearDepth - camera_params.z) / (camera_params.y - camera_params.z);\n\t}\n}\nfloat getLinearScreenDepth(vec2 uv) {\n\t#ifdef SCENE_DEPTHMAP_LINEAR\n\t\t#ifdef SCENE_DEPTHMAP_FLOAT\n\t\t\treturn texture2D(uSceneDepthMap, uv).r;\n\t\t#else\n\t\t\tivec2 textureSize = textureSize(uSceneDepthMap, 0);\n\t\t\tivec2 texel = ivec2(uv * vec2(textureSize));\n\t\t\tvec4 data = texelFetch(uSceneDepthMap, texel, 0);\n\t\t\tuint intBits = \n\t\t\t\t(uint(data.r * 255.0) << 24u) |\n\t\t\t\t(uint(data.g * 255.0) << 16u) |\n\t\t\t\t(uint(data.b * 255.0) << 8u) |\n\t\t\t\tuint(data.a * 255.0);\n\t\t\treturn uintBitsToFloat(intBits);\n\t\t#endif\n\t#else\n\t\treturn linearizeDepth(texture2D(uSceneDepthMap, uv).r);\n\t#endif\n}\n#ifndef VERTEXSHADER\n\tfloat getLinearScreenDepth() {\n\t\tvec2 uv = gl_FragCoord.xy * uScreenSize.zw;\n\t\treturn getLinearScreenDepth(uv);\n\t}\n#endif\nfloat getLinearDepth(vec3 pos) {\n\treturn -(matrix_view * vec4(pos, 1.0)).z;\n}\n",shadowCascadesPS:"\nint getShadowCascadeIndex(vec4 shadowCascadeDistances, int shadowCascadeCount) {\n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tvec4 comparisons = step(shadowCascadeDistances, vec4(depth));\n\tint cascadeIndex = int(dot(comparisons, vec4(1.0)));\n\treturn min(cascadeIndex, shadowCascadeCount - 1);\n}\nint ditherShadowCascadeIndex(int cascadeIndex, vec4 shadowCascadeDistances, int shadowCascadeCount, float blendFactor) {\n \n\tif (cascadeIndex < shadowCascadeCount - 1) {\n\t\tfloat currentRangeEnd = shadowCascadeDistances[cascadeIndex];\n\t\tfloat transitionStart = blendFactor * currentRangeEnd;\n\t\tfloat depth = 1.0 / gl_FragCoord.w;\n\t\tif (depth > transitionStart) {\n\t\t\tfloat transitionFactor = smoothstep(transitionStart, currentRangeEnd, depth);\n\t\t\tfloat dither = fract(sin(dot(gl_FragCoord.xy, vec2(12.9898, 78.233))) * 43758.5453);\n\t\t\tif (dither < transitionFactor) {\n\t\t\t\tcascadeIndex += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn cascadeIndex;\n}\nvec3 fadeShadow(vec3 shadowCoord, vec4 shadowCascadeDistances) {\t\t\t\t  \n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tif (depth > shadowCascadeDistances.w) {\n\t\tshadowCoord.z = -9999999.0;\n\t}\n\treturn shadowCoord;\n}\n",shadowEVSMPS:"\nfloat linstep(float a, float b, float v) {\n\treturn saturate((v - a) / (b - a));\n}\nfloat reduceLightBleeding(float pMax, float amount) {\n\t return linstep(amount, 1.0, pMax);\n}\nfloat chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {\n\tfloat variance = moments.y - (moments.x * moments.x);\n\tvariance = max(variance, minVariance);\n\tfloat d = mean - moments.x;\n\tfloat pMax = variance / (variance + (d * d));\n\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\n\treturn (mean <= moments.x ? 1.0 : pMax);\n}\nfloat calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {\n\tZ = 2.0 * Z - 1.0;\n\tfloat warpedDepth = exp(exponent * Z);\n\tmoments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);\n\tfloat VSMBias = vsmBias;\n\tfloat depthScale = VSMBias * exponent * warpedDepth;\n\tfloat minVariance1 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);\n}\nfloat VSM16(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\tvec3 moments = texture2DLod(tex, texCoords, 0.0).xyz;\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM16(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent) {\n\treturn VSM16(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM16(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM16(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\nfloat VSM32(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\t#ifdef CAPS_TEXTURE_FLOAT_FILTERABLE\n\t\tvec3 moments = texture2DLod(tex, texCoords, 0.0).xyz;\n\t#else\n\t\tfloat pixelSize = 1.0 / resolution;\n\t\ttexCoords -= vec2(pixelSize);\n\t\tvec3 s00 = texture2DLod(tex, texCoords, 0.0).xyz;\n\t\tvec3 s10 = texture2DLod(tex, texCoords + vec2(pixelSize, 0), 0.0).xyz;\n\t\tvec3 s01 = texture2DLod(tex, texCoords + vec2(0, pixelSize), 0.0).xyz;\n\t\tvec3 s11 = texture2DLod(tex, texCoords + vec2(pixelSize), 0.0).xyz;\n\t\tvec2 fr = fract(texCoords * resolution);\n\t\tvec3 h0 = mix(s00, s10, fr.x);\n\t\tvec3 h1 = mix(s01, s11, fr.x);\n\t\tvec3 moments = mix(h0, h1, fr.y);\n\t#endif\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM32(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent) {\n\treturn VSM32(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM32(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\tfloat Z = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM32(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\n",shadowPCF1PS:"\nfloat getShadowPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\nfloat getShadowSpotPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\n#ifndef WEBGPU\nfloat getShadowOmniPCF1x1(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn texture(shadowMap, vec4(lightDir, shadowZ));\n}\n#endif\n",shadowPCF3PS:"\nfloat _getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y); \n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat sum = 0.0;\n\tfloat uw0 = (3.0 - 2.0 * s);\n\tfloat uw1 = (1.0 + 2.0 * s);\n\tfloat u0 = (2.0 - s) / uw0 - 1.0;\n\tfloat u1 = s / uw1 + 1.0;\n\tfloat vw0 = (3.0 - 2.0 * t);\n\tfloat vw1 = (1.0 + 2.0 * t);\n\tfloat v0 = (2.0 - t) / vw0 - 1.0;\n\tfloat v1 = t / vw1 + 1.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum *= 1.0f / 16.0;\n\treturn sum;\n}\nfloat getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n#ifndef WEBGPU\nfloat getShadowOmniPCF3x3(samplerCubeShadow shadowMap, vec4 shadowParams, vec3 dir) {\n\t\n\tfloat shadowZ = length(dir) * shadowParams.w + shadowParams.z;\n\tfloat z = 1.0 / float(textureSize(shadowMap, 0));\n\tvec3 tc = normalize(dir);\n\tmediump vec4 shadows;\n\tshadows.x = texture(shadowMap, vec4(tc + vec3( z, z, z), shadowZ));\n\tshadows.y = texture(shadowMap, vec4(tc + vec3(-z,-z, z), shadowZ));\n\tshadows.z = texture(shadowMap, vec4(tc + vec3(-z, z,-z), shadowZ));\n\tshadows.w = texture(shadowMap, vec4(tc + vec3( z,-z,-z), shadowZ));\n\treturn dot(shadows, vec4(0.25));\n}\nfloat getShadowOmniPCF3x3(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {\n\treturn getShadowOmniPCF3x3(shadowMap, shadowParams, lightDir);\n}\n#endif\n",shadowPCF5PS:"\nfloat _getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y);\n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat uw0 = (4.0 - 3.0 * s);\n\tfloat uw1 = 7.0;\n\tfloat uw2 = (1.0 + 3.0 * s);\n\tfloat u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\tfloat u1 = (3.0 + s) / uw1;\n\tfloat u2 = s / uw2 + 2.0;\n\tfloat vw0 = (4.0 - 3.0 * t);\n\tfloat vw1 = 7.0;\n\tfloat vw2 = (1.0 + 3.0 * t);\n\tfloat v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\tfloat v1 = (3.0 + t) / vw1;\n\tfloat v2 = t / vw2 + 2.0;\n\tfloat sum = 0.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tu2 = u2 * shadowMapSizeInv + base_uv.x;\n\tv2 = v2 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw2 * vw0 * textureShadow(shadowMap, vec3(u2, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum += uw2 * vw1 * textureShadow(shadowMap, vec3(u2, v1, z));\n\tsum += uw0 * vw2 * textureShadow(shadowMap, vec3(u0, v2, z));\n\tsum += uw1 * vw2 * textureShadow(shadowMap, vec3(u1, v2, z));\n\tsum += uw2 * vw2 * textureShadow(shadowMap, vec3(u2, v2, z));\n\tsum *= 1.0f / 144.0;\n\tsum = saturate(sum);\n\treturn sum;\n}\nfloat getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n",shadowPCSSPS:"\n#define PCSS_SAMPLE_COUNT 16\nuniform float pcssDiskSamples[PCSS_SAMPLE_COUNT];\nuniform float pcssSphereSamples[PCSS_SAMPLE_COUNT];\nvec2 vogelDisk(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat sine = sin(theta);\n\tfloat cosine = cos(theta);\n\treturn vec2(r * cosine, r * sine);\n}\nvec3 vogelSphere(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat weight = float(sampleIndex) / count;\n\treturn vec3(cos(theta) * r, weight, sin(theta) * r);\n}\nfloat noise(vec2 screenPos) {\n\tconst float PHI = 1.61803398874989484820459;\n\treturn fract(sin(dot(screenPos * PHI, screenPos)) * screenPos.x);\n}\nfloat viewSpaceDepth(float depth, mat4 invProjection) {\n\tfloat z = depth * 2.0 - 1.0;\n\tvec4 clipSpace = vec4(0.0, 0.0, z, 1.0);\n\tvec4 viewSpace = invProjection * clipSpace;\n\treturn viewSpace.z;\n}\nfloat PCSSBlockerDistance(TEXTURE_ACCEPT(shadowMap), vec2 sampleCoords[PCSS_SAMPLE_COUNT], vec2 shadowCoords, vec2 searchSize, float z, vec4 cameraParams) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec2 offset = sampleCoords[i] * searchSize;\n\t\tvec2 sampleUV = shadowCoords + offset;\n\t\tfloat blocker = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker / blockers;\n\treturn -1.0;\n}\nfloat PCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec2 shadowSearchArea) {\n\tfloat receiverDepth = linearizeDepthWithParams(shadowCoords.z, cameraParams);\n\tvec2 samplePoints[PCSS_SAMPLE_COUNT];\n\tconst float PI = 3.141592653589793;\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat pcssPresample = pcssDiskSamples[i];\n\t\tsamplePoints[i] = vogelDisk(i, float(PCSS_SAMPLE_COUNT), noise, pcssPresample);\n\t}\n\tfloat averageBlocker = PCSSBlockerDistance(TEXTURE_PASS(shadowMap), samplePoints, shadowCoords.xy, shadowSearchArea, receiverDepth, cameraParams);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tfloat depthDifference = (receiverDepth - averageBlocker) / 3.0;\n\t\tvec2 filterRadius = depthDifference * shadowSearchArea;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i ++)\n\t\t{\n\t\t\tvec2 sampleUV = samplePoints[i] * filterRadius;\n\t\t\tsampleUV = shadowCoords.xy + sampleUV;\n\t\t\tfloat depth = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t} \n}\n#ifndef WEBGPU\nfloat PCSSCubeBlockerDistance(samplerCube shadowMap, vec3 lightDirNorm, vec3 samplePoints[PCSS_SAMPLE_COUNT], float z, float shadowSearchArea) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec3 sampleDir = lightDirNorm + samplePoints[i] * shadowSearchArea;\n\t\tsampleDir = normalize(sampleDir);\n\t\tfloat blocker = textureCubeLod(shadowMap, sampleDir, 0.0).r;\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker / blockers;\n\treturn -1.0;\n}\nfloat PCSSCube(samplerCube shadowMap, vec4 shadowParams, vec3 shadowCoords, vec4 cameraParams, float shadowSearchArea, vec3 lightDir) {\n\t\n\tvec3 samplePoints[PCSS_SAMPLE_COUNT];\n\tconst float PI = 3.141592653589793;\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat r = pcssSphereSamples[i];\n\t\tsamplePoints[i] = vogelSphere(i, float(PCSS_SAMPLE_COUNT), noise, r);\n\t}\n\tfloat receiverDepth = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 lightDirNorm = normalize(lightDir);\n\t\n\tfloat averageBlocker = PCSSCubeBlockerDistance(shadowMap, lightDirNorm, samplePoints, receiverDepth, shadowSearchArea);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tfloat filterRadius = ((receiverDepth - averageBlocker) / averageBlocker) * shadowSearchArea;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++)\n\t\t{\n\t\t\tvec3 offset = samplePoints[i] * filterRadius;\n\t\t\tvec3 sampleDir = lightDirNorm + offset;\n\t\t\tsampleDir = normalize(sampleDir);\n\t\t\tfloat depth = textureCubeLod(shadowMap, sampleDir, 0.0).r;\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t}\n}\nfloat getShadowOmniPCSS(samplerCube shadowMap, vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSSCube(shadowMap, shadowParams, shadowCoord, cameraParams, shadowSearchArea.x, lightDir);\n}\n#endif\nfloat getShadowSpotPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSS(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, shadowSearchArea);\n}\n",shadowSoftPS:"\nhighp float fractSinRand(const in vec2 uv) {\n\tconst float PI = 3.141592653589793;\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot(uv.xy, vec2(a, b)), sn = mod(dt, PI);\n\treturn fract(sin(sn) * c);\n}\nstruct VogelDiskData {\n\tfloat invNumSamples;\n\tfloat initialAngle;\n\tfloat currentPointId;\n};\nvoid prepareDiskConstants(out VogelDiskData data, int sampleCount, float randomSeed) {\n\tconst float pi2 = 6.28318530718;\n\tdata.invNumSamples = 1.0 / float(sampleCount);\n\tdata.initialAngle = randomSeed * pi2;\n\tdata.currentPointId = 0.0;\n}\nvec2 generateDiskSample(inout VogelDiskData data) {\n\tconst float GOLDEN_ANGLE = 2.399963;\n\tfloat r = sqrt((data.currentPointId + 0.5) * data.invNumSamples);\n\tfloat theta = data.currentPointId * GOLDEN_ANGLE + data.initialAngle;\n\tvec2 offset = vec2(cos(theta), sin(theta)) * pow(r, 1.33);\n\tdata.currentPointId += 1.0;\n\treturn offset;\n}\nvoid PCSSFindBlocker(TEXTURE_ACCEPT(shadowMap), out float avgBlockerDepth, out int numBlockers,\n\tvec2 shadowCoords, float z, int shadowBlockerSamples, float penumbraSize, float invShadowMapSize, float randomSeed) {\n\tVogelDiskData diskData;\n\tprepareDiskConstants(diskData, shadowBlockerSamples, randomSeed);\n\tfloat searchWidth = penumbraSize * invShadowMapSize;\n\tfloat blockerSum = 0.0;\n\tnumBlockers = 0;\n\tfor( int i = 0; i < shadowBlockerSamples; ++i ) {\n\t\tvec2 diskUV = generateDiskSample(diskData);\n\t\tvec2 sampleUV = shadowCoords + diskUV * searchWidth;\n\t\tfloat shadowMapDepth = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\tif ( shadowMapDepth < z ) {\n\t\t\tblockerSum += shadowMapDepth;\n\t\t\tnumBlockers++;\n\t\t}\n\t}\n\tavgBlockerDepth = blockerSum / float(numBlockers);\n}\nfloat PCSSFilter(TEXTURE_ACCEPT(shadowMap), vec2 uv, float receiverDepth, int shadowSamples, float filterRadius, float randomSeed) {\n\tVogelDiskData diskData;\n\tprepareDiskConstants(diskData, shadowSamples, randomSeed);\n\tfloat sum = 0.0;\n\tfor (int i = 0; i < shadowSamples; i++) {\n\t\tvec2 offsetUV = generateDiskSample(diskData) * filterRadius;\n\t\tfloat depth = texture2DLod(shadowMap, uv + offsetUV, 0.0).r;\n\t\tsum += step(receiverDepth, depth);\n\t}\n\treturn sum / float(shadowSamples);\n}\nfloat getPenumbra(float dblocker, float dreceiver, float penumbraSize, float penumbraFalloff) {\n\tfloat dist = dreceiver - dblocker;\n\tfloat penumbra = 1.0 - pow(1.0 - dist, penumbraFalloff);\n\treturn penumbra * penumbraSize;\n}\nfloat PCSSDirectional(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec4 softShadowParams) {\n\tfloat receiverDepth = shadowCoords.z;\n\tfloat randomSeed = fractSinRand(gl_FragCoord.xy);\n\tint shadowSamples = int(softShadowParams.x);\n\tint shadowBlockerSamples = int(softShadowParams.y);\n\tfloat penumbraSize = softShadowParams.z;\n\tfloat penumbraFalloff = softShadowParams.w;\n\tint shadowMapSize = textureSize(shadowMap, 0).x;\n\tfloat invShadowMapSize = 1.0 / float(shadowMapSize);\n\tinvShadowMapSize *= float(shadowMapSize) / 2048.0;\n\tfloat penumbra;\n\tif (shadowBlockerSamples > 0) {\n\t\tfloat avgBlockerDepth = 0.0;\n\t\tint numBlockers = 0;\n\t\tPCSSFindBlocker(TEXTURE_PASS(shadowMap), avgBlockerDepth, numBlockers, shadowCoords.xy, receiverDepth, shadowBlockerSamples, penumbraSize, invShadowMapSize, randomSeed);\n\t\tif (numBlockers < 1)\n\t\t\treturn 1.0f;\n\t\tpenumbra = getPenumbra(avgBlockerDepth, shadowCoords.z, penumbraSize, penumbraFalloff);\n\t} else {\n\t\tpenumbra = penumbraSize;\n\t}\n\tfloat filterRadius = penumbra * invShadowMapSize;\n\treturn PCSSFilter(TEXTURE_PASS(shadowMap), shadowCoords.xy, receiverDepth, shadowSamples, filterRadius, randomSeed);\n}\nfloat getShadowPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec4 softShadowParams, vec3 lightDir) {\n\treturn PCSSDirectional(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, softShadowParams);\n}\n",skinBatchVS:"\nattribute float vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nmat4 getBoneMatrix(const in float indexFloat) {\n\tint width = textureSize(texture_poseMap, 0).x;\n\tint index = int(indexFloat + 0.5) * 3;\n\tint iy = index / width;\n\tint ix = index % width;\n\tvec4 v1 = texelFetch(texture_poseMap, ivec2(ix + 0, iy), 0);\n\tvec4 v2 = texelFetch(texture_poseMap, ivec2(ix + 1, iy), 0);\n\tvec4 v3 = texelFetch(texture_poseMap, ivec2(ix + 2, iy), 0);\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1\n\t);\n}\n",skinVS:"\nattribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nvoid getBoneMatrix(const in int width, const in int index, out vec4 v1, out vec4 v2, out vec4 v3) {\n\tint v = index / width;\n\tint u = index % width;\n\tv1 = texelFetch(texture_poseMap, ivec2(u + 0, v), 0);\n\tv2 = texelFetch(texture_poseMap, ivec2(u + 1, v), 0);\n\tv3 = texelFetch(texture_poseMap, ivec2(u + 2, v), 0);\n}\nmat4 getSkinMatrix(const in vec4 indicesFloat, const in vec4 weights) {\n\tint width = textureSize(texture_poseMap, 0).x;\n\tivec4 indices = ivec4(indicesFloat + 0.5) * 3;\n\tvec4 a1, a2, a3;\n\tgetBoneMatrix(width, indices.x, a1, a2, a3);\n\tvec4 b1, b2, b3;\n\tgetBoneMatrix(width, indices.y, b1, b2, b3);\n\tvec4 c1, c2, c3;\n\tgetBoneMatrix(width, indices.z, c1, c2, c3);\n\tvec4 d1, d2, d3;\n\tgetBoneMatrix(width, indices.w, d1, d2, d3);\n\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\n\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\n\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\n\tfloat one = dot(weights, vec4(1.0));\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n",skyboxPS:'\n\t#define LIT_SKYBOX_INTENSITY\n\t#include "envProcPS"\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#ifdef PREPASS_PASS\n\t\tvarying float vLinearDepth;\n\t\t#include "floatAsUintPS"\n\t#endif\n\tvarying vec3 vViewDir;\n\tuniform float skyboxHighlightMultiplier;\n\t#ifdef SKY_CUBEMAP\n\t\tuniform samplerCube texture_cubeMap;\n\t\t#ifdef SKYMESH\n\t\t\tvarying vec3 vWorldPos;\n\t\t\tuniform mat3 cubeMapRotationMatrix;\n\t\t\tuniform vec3 projectedSkydomeCenter;\n\t\t#endif\n\t#else\n\t\t#include "sphericalPS"\n\t\t#include "envAtlasPS"\n\t\tuniform sampler2D texture_envAtlas;\n\t\tuniform float mipLevel;\n\t#endif\n\tvoid main(void) {\n\t\t#ifdef PREPASS_PASS\n\t\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t\t#else\n\t\t\t#ifdef SKY_CUBEMAP\n\t\t\t\t#ifdef SKYMESH\n\t\t\t\t\tvec3 envDir = normalize(vWorldPos - projectedSkydomeCenter);\n\t\t\t\t\tvec3 dir = envDir * cubeMapRotationMatrix;\n\t\t\t\t#else\n\t\t\t\t\tvec3 dir = vViewDir;\n\t\t\t\t#endif\n\t\t\t\tdir.x *= -1.0;\n\t\t\t\tvec3 linear = {SKYBOX_DECODE_FNC}(textureCube(texture_cubeMap, dir));\n\t\t\t#else\n\t\t\t\tvec3 dir = vViewDir * vec3(-1.0, 1.0, 1.0);\n\t\t\t\tvec2 uv = toSphericalUv(normalize(dir));\n\t\t\t\tvec3 linear = {SKYBOX_DECODE_FNC}(texture2D(texture_envAtlas, mapRoughnessUv(uv, mipLevel)));\n\t\t\t#endif\n\t\t\tif (any(greaterThanEqual(linear, vec3(64.0)))) {\n\t\t\t\tlinear *= skyboxHighlightMultiplier;\n\t\t\t}\n\t\t\tgl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n\t\t#endif\n\t}\n',skyboxVS:"\nattribute vec4 aPosition;\nuniform mat4 matrix_view;\nuniform mat4 matrix_projectionSkybox;\nuniform mat3 cubeMapRotationMatrix;\nvarying vec3 vViewDir;\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n#endif\n#ifdef SKYMESH\n\tuniform mat4 matrix_model;\n\tvarying vec3 vWorldPos;\n#endif\nvoid main(void) {\n\tmat4 view = matrix_view;\n\t#ifdef SKYMESH\n\t\tvec4 worldPos = matrix_model * aPosition;\n\t\tvWorldPos = worldPos.xyz;\n\t\tgl_Position = matrix_projectionSkybox * (view * worldPos);\n\t\t#ifdef PREPASS_PASS\n\t\t\tvLinearDepth = -(matrix_view * vec4(vWorldPos, 1.0)).z;\n\t\t#endif\n\t#else\n\t\tview[3][0] = view[3][1] = view[3][2] = 0.0;\n\t\tgl_Position = matrix_projectionSkybox * (view * aPosition);\n\t\tvViewDir = aPosition.xyz * cubeMapRotationMatrix;\n\t\t#ifdef PREPASS_PASS\n\t\t\tvLinearDepth = -gl_Position.w;\n\t\t#endif\n\t#endif\n\tgl_Position.z = gl_Position.w - 1.0e-7;\n}\n",specularPS:"\n#ifdef STD_SPECULAR_CONSTANT\nuniform vec3 material_specular;\n#endif\nvoid getSpecularity() {\n\tvec3 specularColor = vec3(1,1,1);\n\t#ifdef STD_SPECULAR_CONSTANT\n\tspecularColor *= material_specular;\n\t#endif\n\t#ifdef STD_SPECULAR_TEXTURE\n\tspecularColor *= {STD_SPECULAR_TEXTURE_DECODE}(texture2DBias({STD_SPECULAR_TEXTURE_NAME}, {STD_SPECULAR_TEXTURE_UV}, textureBias)).{STD_SPECULAR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULAR_VERTEX\n\tspecularColor *= saturate(vVertexColor.{STD_SPECULAR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularity = specularColor;\n}\n",sphericalPS:"\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec2 toSphericalUv(vec3 dir) {\n\tconst float PI = 3.141592653589793;\n\tvec2 uv = toSpherical(dir) / vec2(PI * 2.0, PI) + 0.5;\n\treturn vec2(uv.x, 1.0 - uv.y);\n}\n",specularityFactorPS:"\n#ifdef STD_SPECULARITYFACTOR_CONSTANT\nuniform float material_specularityFactor;\n#endif\nvoid getSpecularityFactor() {\n\tfloat specularityFactor = 1.0;\n\t#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tspecularityFactor *= material_specularityFactor;\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_TEXTURE\n\tspecularityFactor *= texture2DBias({STD_SPECULARITYFACTOR_TEXTURE_NAME}, {STD_SPECULARITYFACTOR_TEXTURE_UV}, textureBias).{STD_SPECULARITYFACTOR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_VERTEX\n\tspecularityFactor *= saturate(vVertexColor.{STD_SPECULARITYFACTOR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularityFactor = specularityFactor;\n}\n",spotPS:"\nfloat getSpotEffect(vec3 lightSpotDir, float lightInnerConeAngle, float lightOuterConeAngle, vec3 lightDirNorm) {\n\tfloat cosAngle = dot(lightDirNorm, lightSpotDir);\n\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}\n",startNineSlicedPS:"\n\tnineSlicedUv = vec2(vUv0.x, 1.0 - vUv0.y);\n",startNineSlicedTiledPS:"\n\tvec2 tileMask = step(vMask, vec2(0.99999));\n\tvec2 tileSize = 0.5 * (innerOffset.xy + innerOffset.zw);\n\tvec2 tileScale = vec2(1.0) / (vec2(1.0) - tileSize);\n\tvec2 clampedUv = mix(innerOffset.xy * 0.5, vec2(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));\n\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\n\tnineSlicedUv = vUv0 * tileMask + clampedUv * (vec2(1.0) - tileMask);\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n\t\n",stdDeclarationPS:'\n\tfloat dAlpha = 1.0;\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#ifdef STD_OPACITY_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_opacityMap;\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\tvec3 dAlbedo;\n\t\tvec3 dNormalW;\n\t\tvec3 dSpecularity = vec3(0.0);\n\t\tfloat dGlossiness = 0.0;\n\t\t#ifdef LIT_REFRACTION\n\t\t\tfloat dTransmission;\n\t\t\tfloat dThickness;\n\t\t#endif\n\t\t#ifdef LIT_SCENE_COLOR\n\t\t\tuniform sampler2D uSceneColorMap;\n\t\t#endif\n\t\t#ifdef LIT_SCREEN_SIZE\n\t\t\tuniform vec4 uScreenSize;\n\t\t#endif\n\t\t#ifdef LIT_TRANSFORMS\n\t\t\tuniform mat4 matrix_viewProjection;\n\t\t\tuniform mat4 matrix_model;\n\t\t#endif\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\tvec2 dUvOffset;\n\t\t\t#ifdef STD_HEIGHT_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_heightMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_diffuseMap;\n\t\t#endif\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_diffuseDetailMap;\n\t\t#endif\n\t\t#ifdef STD_NORMAL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_normalMap;\n\t\t#endif\n\t\t#ifdef STD_NORMALDETAIL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_normalDetailMap;\n\t\t#endif\n\t\t#ifdef STD_THICKNESS_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_thicknessMap;\n\t\t#endif\n\t\t#ifdef STD_REFRACTION_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_refractionMap;\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tfloat dIridescence;\n\t\t\tfloat dIridescenceThickness;\n\t\t\t#ifdef STD_IRIDESCENCE_THICKNESS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_iridescenceThicknessMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_IRIDESCENCE_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_iridescenceMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tfloat ccSpecularity;\n\t\t\tfloat ccGlossiness;\n\t\t\tvec3 ccNormalW;\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\tfloat dAnisotropy;\n\t\t\tvec2 dAnisotropyRotation;\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tvec3 sSpecularity;\n\t\t\t\tfloat sGlossiness;\n\t\t\t\t#ifdef STD_SHEEN_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_sheenMap;\n\t\t\t\t#endif\n\t\t\t\t#ifdef STD_SHEENGLOSS_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_sheenGlossMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\tfloat dMetalness;\n\t\t\t\tfloat dIor;\n\t\t\t\t#ifdef STD_METALNESS_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_metalnessMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tfloat dSpecularityFactor;\n\t\t\t\t#ifdef STD_SPECULARITYFACTOR_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_specularityFactorMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#ifdef STD_SPECULAR_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_specularMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_GLOSS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_glossMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\tfloat dAo;\n\t\t\t#ifdef STD_AO_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_aoMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_AODETAIL_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_aoDetailMap;\n\t\t\t#endif\n\t\t#endif\n\t\tvec3 dEmission;\n\t\t#ifdef STD_EMISSIVE_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_emissiveMap;\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#ifdef STD_CLEARCOAT_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATGLOSS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatGlossMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATNORMAL_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatNormalMap;\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#ifdef STD_ANISOTROPY_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_anisotropyMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\tvec3 dLightmap;\n\t\t\t#ifdef STD_LIGHT_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_lightMap;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#include "litShaderCorePS"\n',stdFrontEndPS:'\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#include "opacityPS"\n\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t#include "alphaTestPS"\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t#include "opacityDitherPS"\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t#include "parallaxPS"\n\t\t#endif\n\t\t#include  "diffusePS"\n\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t#include "normalMapPS"\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\t#include "transmissionPS"\n\t\t\t#include "thicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t#include "iridescencePS"\n\t\t\t#include "iridescenceThicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t#include "sheenPS"\n\t\t\t\t#include "sheenGlossPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t#include "metalnessPS"\n\t\t\t\t#include "iorPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t#include "specularityFactorPS"\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#include "specularPS"\n\t\t\t#else\n\t\t\t\tvoid getSpecularity() { \n\t\t\t\t\tdSpecularity = vec3(1);\n\t\t\t\t}\n\t\t\t#endif\n\t\t\t#include "glossPS"\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\t#include "aoPS"\n\t\t#endif\n\t\t#include "emissivePS"\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#include "clearCoatPS"\n\t\t\t#include "clearCoatGlossPS"\n\t\t\t#include "clearCoatNormalPS"\n\t\t#endif\n\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t#include "anisotropyPS"\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t#include "lightmapPS"\n\t\t#endif\n\t#endif\n\tvoid evaluateFrontend() {\n\t\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t\tgetOpacity();\n\t\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t\talphaTest(dAlpha);\n\t\t\t#endif\n\t\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t\topacityDither(dAlpha, 0.0);\n\t\t\t#endif\n\t\t\tlitArgs_opacity = dAlpha;\n\t\t#endif\n\t\t#ifdef FORWARD_PASS\n\t\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t\tgetParallax();\n\t\t\t#endif\n\t\t\tgetAlbedo();\n\t\t\tlitArgs_albedo = dAlbedo;\n\t\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t\tgetNormal();\n\t\t\t\tlitArgs_worldNormal = dNormalW;\n\t\t\t#endif\n\t\t\t#ifdef LIT_REFRACTION\n\t\t\t\tgetRefraction();\n\t\t\t\tlitArgs_transmission = dTransmission;\n\t\t\t\tgetThickness();\n\t\t\t\tlitArgs_thickness = dThickness;\n\t\t\t\t#ifdef LIT_DISPERSION\n\t\t\t\t\tlitArgs_dispersion = material_dispersion;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t\tgetIridescence();\n\t\t\t\tgetIridescenceThickness();\n\t\t\t\tlitArgs_iridescence_intensity = dIridescence;\n\t\t\t\tlitArgs_iridescence_thickness = dIridescenceThickness;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tgetSheen();\n\t\t\t\t\tlitArgs_sheen_specularity = sSpecularity;\n\t\t\t\t\tgetSheenGlossiness();\n\t\t\t\t\tlitArgs_sheen_gloss = sGlossiness;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t\tgetMetalness();\n\t\t\t\t\tlitArgs_metalness = dMetalness;\n\t\t\t\t\tgetIor();\n\t\t\t\t\tlitArgs_ior = dIor;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t\tgetSpecularityFactor();\n\t\t\t\t\tlitArgs_specularityFactor = dSpecularityFactor;\n\t\t\t\t#endif\n\t\t\t\tgetGlossiness();\n\t\t\t\tgetSpecularity();\n\t\t\t\tlitArgs_specularity = dSpecularity;\n\t\t\t\tlitArgs_gloss = dGlossiness;\n\t\t\t#endif\n\t\t\t#ifdef STD_AO\n\t\t\t\tgetAO();\n\t\t\t\tlitArgs_ao = dAo;\n\t\t\t#endif\n\t\t\tgetEmission();\n\t\t\tlitArgs_emission = dEmission;\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tgetClearCoat();\n\t\t\t\tgetClearCoatGlossiness();\n\t\t\t\tgetClearCoatNormal();\n\t\t\t\tlitArgs_clearcoat_specularity = ccSpecularity;\n\t\t\t\tlitArgs_clearcoat_gloss = ccGlossiness;\n\t\t\t\tlitArgs_clearcoat_worldNormal = ccNormalW;\n\t\t\t#endif\n\t\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t\tgetAnisotropy();\n\t\t\t#endif\n\t\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t\tgetLightMap();\n\t\t\t\tlitArgs_lightmap = dLightmap;\n\t\t\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\t\t\tlitArgs_lightmapDir = dLightmapDir;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t}\n',TBNPS:"\n#ifdef LIT_TANGENTS\n\t#define TBN_TANGENTS\n#else\n\t#if defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS)\n\t\t#define TBN_DERIVATIVES\n\t#endif\n#endif\n#if defined(TBN_DERIVATIVES)\n\tuniform float tbnBasis;\n#endif\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\t#ifdef TBN_TANGENTS\n\t\tdTBN = mat3(normalize(tangent), normalize(binormal), normalize(normal));\n\t#elif defined(TBN_DERIVATIVES)\n\t\tvec2 uv = {lightingUv};\n\t\tvec3 dp1 = dFdx( vPositionW );\n\t\tvec3 dp2 = dFdy( vPositionW );\n\t\tvec2 duv1 = dFdx( uv );\n\t\tvec2 duv2 = dFdy( uv );\n\t\tvec3 dp2perp = cross( dp2, normal );\n\t\tvec3 dp1perp = cross( normal, dp1 );\n\t\tvec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n\t\tvec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n\t\tfloat denom = max( dot(T,T), dot(B,B) );\n\t\tfloat invmax = (denom == 0.0) ? 0.0 : tbnBasis / sqrt( denom );\n\t\tdTBN = mat3(T * invmax, -B * invmax, normal );\n\t#else\n\t\tvec3 B = cross(normal, vObjectSpaceUpW);\n\t\tvec3 T = cross(normal, B);\n\t\tif (dot(B,B)==0.0)\n\t\t{\n\t\t\tfloat major=max(max(normal.x, normal.y), normal.z);\n\t\t\tif (normal.x == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(0,1,0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.y == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(0,0,1));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.z == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(1,0,0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t}\n\t\tdTBN = mat3(normalize(T), normalize(B), normalize(normal));\n\t#endif\n}\n",thicknessPS:"\n#ifdef STD_THICKNESS_CONSTANT\nuniform float material_thickness;\n#endif\nvoid getThickness() {\n\tdThickness = 1.0;\n\t#ifdef STD_THICKNESS_CONSTANT\n\tdThickness *= material_thickness;\n\t#endif\n\t#ifdef STD_THICKNESS_TEXTURE\n\tdThickness *= texture2DBias({STD_THICKNESS_TEXTURE_NAME}, {STD_THICKNESS_TEXTURE_UV}, textureBias).{STD_THICKNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_THICKNESS_VERTEX\n\tdThickness *= saturate(vVertexColor.{STD_THICKNESS_VERTEX_CHANNEL});\n\t#endif\n}\n",tonemappingPS:'\n#if (TONEMAP == NONE)\n\t#include "tonemappingNonePS"\n#elif TONEMAP == FILMIC\n\t#include "tonemappingFilmicPS"\n#elif TONEMAP == LINEAR\n\t#include "tonemappingLinearPS"\n#elif TONEMAP == HEJL\n\t#include "tonemappingHejlPS"\n#elif TONEMAP == ACES\n\t#include "tonemappingAcesPS"\n#elif TONEMAP == ACES2\n\t#include "tonemappingAces2PS"\n#elif TONEMAP == NEUTRAL\n\t#include "tonemappingNeutralPS"\n#endif\n',tonemappingAcesPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tfloat tA = 2.51;\n\tfloat tB = 0.03;\n\tfloat tC = 2.43;\n\tfloat tD = 0.59;\n\tfloat tE = 0.14;\n\tvec3 x = color * exposure;\n\treturn (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\n}\n",tonemappingAces2PS:"\nuniform float exposure;\nconst mat3 ACESInputMat = mat3(\n\t0.59719, 0.35458, 0.04823,\n\t0.07600, 0.90834, 0.01566,\n\t0.02840, 0.13383, 0.83777\n);\nconst mat3 ACESOutputMat = mat3(\n\t 1.60475, -0.53108, -0.07367,\n\t-0.10208,  1.10813, -0.00605,\n\t-0.00327, -0.07276,  1.07602\n);\nvec3 RRTAndODTFit(vec3 v) {\n\tvec3 a = v * (v + 0.0245786) - 0.000090537;\n\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n\treturn a / b;\n}\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure / 0.6;\n\tcolor = color * ACESInputMat;\n\tcolor = RRTAndODTFit(color);\n\tcolor = color * ACESOutputMat;\n\tcolor = clamp(color, 0.0, 1.0);\n\treturn color;\n}\n",tonemappingFilmicPS:"\nconst float A =  0.15;\nconst float B =  0.50;\nconst float C =  0.10;\nconst float D =  0.20;\nconst float E =  0.02;\nconst float F =  0.30;\nconst float W =  11.2;\nuniform float exposure;\nvec3 uncharted2Tonemap(vec3 x) {\n\t return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvec3 toneMap(vec3 color) {\n\tcolor = uncharted2Tonemap(color * exposure);\n\tvec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\n\tcolor = color * whiteScale;\n\treturn color;\n}\n",tonemappingHejlPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure;\n\tconst float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\n\tconst float Scl = 1.25;\n\tvec3 h = max( vec3(0.0), color - vec3(0.004) );\n\treturn (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\n}\n",tonemappingLinearPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\treturn color * exposure;\n}\n",tonemappingNeutralPS:"\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure;\n\tfloat startCompression = 0.8 - 0.04;\n\tfloat desaturation = 0.15;\n\tfloat x = min(color.r, min(color.g, color.b));\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max(color.r, max(color.g, color.b));\n\tif (peak < startCompression) return color;\n\tfloat d = 1. - startCompression;\n\tfloat newPeak = 1. - d * d / (peak + d - startCompression);\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\n\treturn mix(color, newPeak * vec3(1, 1, 1), g);\n}\n",tonemappingNonePS:"\nvec3 toneMap(vec3 color) {\n\treturn color;\n}\n",transformVS:"\n#ifdef PIXELSNAP\nuniform vec4 uScreenSize;\n#endif\n#ifdef SCREENSPACE\nuniform float projectionFlipY;\n#endif\nvec4 evalWorldPosition(vec3 vertexPosition, mat4 modelMatrix) {\n\tvec3 localPos = getLocalPosition(vertexPosition);\n\t#ifdef NINESLICED\n\t\tlocalPos.xz *= outerScale;\n\t\tvec2 positiveUnitOffset = clamp(vertexPosition.xz, vec2(0.0), vec2(1.0));\n\t\tvec2 negativeUnitOffset = clamp(-vertexPosition.xz, vec2(0.0), vec2(1.0));\n\t\tlocalPos.xz += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\t\tvTiledUv = (localPos.xz - outerScale + innerOffset.xy) * -0.5 + 1.0;\n\t\tlocalPos.xz *= -0.5;\n\t\tlocalPos = localPos.xzy;\n\t#endif\n\tvec4 posW = modelMatrix * vec4(localPos, 1.0);\n\t#ifdef SCREENSPACE\n\t\tposW.zw = vec2(0.0, 1.0);\n\t#endif\n\treturn posW;\n}\nvec4 getPosition() {\n\tdModelMatrix = getModelMatrix();\n\tvec4 posW = evalWorldPosition(vertex_position.xyz, dModelMatrix);\n\tdPositionW = posW.xyz;\n\tvec4 screenPos;\n\t#ifdef UV1LAYOUT\n\t\tscreenPos = vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);\n\t\t#ifdef WEBGPU\n\t\t\tscreenPos.y *= -1.0;\n\t\t#endif\n\t#else\n\t\t#ifdef SCREENSPACE\n\t\t\tscreenPos = posW;\n\t\t\tscreenPos.y *= projectionFlipY;\n\t\t#else\n\t\t\tscreenPos = matrix_viewProjection * posW;\n\t\t#endif\n\t\t#ifdef PIXELSNAP\n\t\t\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\n\t\t\tscreenPos.xy *= uScreenSize.xy;\n\t\t\tscreenPos.xy = floor(screenPos.xy);\n\t\t\tscreenPos.xy *= uScreenSize.zw;\n\t\t\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\n\t\t#endif\n\t#endif\n\treturn screenPos;\n}\nvec3 getWorldPosition() {\n\treturn dPositionW;\n}\n",transformCoreVS:'\nattribute vec4 vertex_position;\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n#ifdef MORPHING\n\tuniform vec2 morph_tex_params;\n\tattribute uint morph_vertex_id;\n\tivec2 getTextureMorphCoords() {\n\t\tivec2 textureSize = ivec2(morph_tex_params);\n\t\tint morphGridV = int(morph_vertex_id) / textureSize.x;\n\t\tint morphGridU = int(morph_vertex_id) - (morphGridV * textureSize.x);\n\t\t#ifdef WEBGPU\n\t\t\tmorphGridV = textureSize.y - morphGridV - 1;\n\t\t#endif\n\t\treturn ivec2(morphGridU, morphGridV);\n\t}\n\t#ifdef MORPHING_POSITION\n\t\t#ifdef MORPHING_INT\n\t\t\tuniform vec3 aabbSize;\n\t\t\tuniform vec3 aabbMin;\n\t\t\tuniform usampler2D morphPositionTex;\n\t\t#else\n\t\t\tuniform highp sampler2D morphPositionTex;\n\t\t#endif\n\t#endif\n#endif\n#ifdef defined(BATCH)\n\t#include "skinBatchVS"\n\tmat4 getModelMatrix() {\n\t\treturn getBoneMatrix(vertex_boneIndices);\n\t}\n#elif defined(SKIN)\n\t#include "skinVS"\n\tmat4 getModelMatrix() {\n\t\treturn matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\n\t}\n#elif defined(INSTANCING)\n\t#include "transformInstancingVS"\n#else\n\tmat4 getModelMatrix() {\n\t\treturn matrix_model;\n\t}\n#endif\nvec3 getLocalPosition(vec3 vertexPosition) {\n\tvec3 localPos = vertexPosition;\n\t#ifdef MORPHING_POSITION\n\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tvec3 morphPos = vec3(texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz) / 65535.0 * aabbSize + aabbMin;\n\t\t#else\n\t\t\tvec3 morphPos = texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz;\n\t\t#endif\n\t\tlocalPos += morphPos;\n\t#endif\n\treturn localPos;\n}\n',transformInstancingVS:"\nattribute vec4 instance_line1;\nattribute vec4 instance_line2;\nattribute vec4 instance_line3;\nattribute vec4 instance_line4;\nmat4 getModelMatrix() {\n\treturn matrix_model * mat4(instance_line1, instance_line2, instance_line3, instance_line4);\n}\n",transmissionPS:"\n#ifdef STD_REFRACTION_CONSTANT\nuniform float material_refraction;\n#endif\nvoid getRefraction() {\n\tfloat refraction = 1.0;\n\t#ifdef STD_REFRACTION_CONSTANT\n\trefraction = material_refraction;\n\t#endif\n\t#ifdef STD_REFRACTION_TEXTURE\n\trefraction *= texture2DBias({STD_REFRACTION_TEXTURE_NAME}, {STD_REFRACTION_TEXTURE_UV}, textureBias).{STD_REFRACTION_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_REFRACTION_VERTEX\n\trefraction *= saturate(vVertexColor.{STD_REFRACTION_VERTEX_CHANNEL});\n\t#endif\n\tdTransmission = refraction;\n}\n",twoSidedLightingPS:"\nuniform float twoSidedLightingNegScaleFactor;\nvoid handleTwoSidedLighting() {\n\tdTBN[2] *= gl_FrontFacing ? twoSidedLightingNegScaleFactor : -twoSidedLightingNegScaleFactor;\n}\n",uv0VS:"\n#ifdef NINESLICED\n\tvec2 getUv0() {\n\t\tvec2 uv = vertex_position.xz;\n\t\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\n\t\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\n\t\tuv += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\t\tuv = uv * -0.5 + 0.5;\n\t\tuv = uv * atlasRect.zw + atlasRect.xy;\n\t\tvMask = vertex_texCoord0.xy;\n\t\treturn uv;\n\t}\n#else\n\tvec2 getUv0() {\n\t\treturn vertex_texCoord0;\n\t}\n#endif\n",uv1VS:"\nvec2 getUv1() {\n\treturn vertex_texCoord1;\n}\n",uvTransformVS:"\nvUV{TRANSFORM_UV_{i}}_{TRANSFORM_ID_{i}} = vec2(\n\tdot(vec3(uv{TRANSFORM_UV_{i}}, 1), {TRANSFORM_NAME_{i}}0),\n\tdot(vec3(uv{TRANSFORM_UV_{i}}, 1), {TRANSFORM_NAME_{i}}1)\n);\n",uvTransformUniformsPS:"\n\tuniform vec3 {TRANSFORM_NAME_{i}}0;\n\tuniform vec3 {TRANSFORM_NAME_{i}}1;\n",viewDirPS:"\nvoid getViewDir() {\n\tdViewDirW = normalize(view_position - vPositionW);\n}\n",webgpuPS:xr.A,webgpuVS:Tr.A};var br="\nfn pack8888(v: vec4f) -> u32 {\n\tlet t = vec4u(v * 255.0) << vec4u(24u, 16u, 8u, 0u);\n\treturn t.x | t.y | t.z | t.w;\n}\nfn pack101010(v: vec3f) -> u32 {\n\tlet t = vec3u(v * vec3f(1023.0, 1023.0, 1023.0)) << vec3u(20u, 10u, 0u);\n\treturn t.x | t.y | t.z;\n}\nfn pack111110(v: vec3f) -> u32 {\n\tlet t = vec3u(v * vec3f(2047.0, 2047.0, 1023.0)) << vec3u(21u, 10u, 0u);\n\treturn t.x | t.y | t.z;\n}\nfn unpack8888(v: u32) -> vec4f {\n\treturn vec4f((vec4u(v) >> vec4u(24u, 16u, 8u, 0u)) & vec4u(0xffu)) / 255.0;\n}\nfn unpack101010(v: u32) -> vec3f {\n\treturn vec3f((vec3u(v) >> vec3u(20u, 10u, 0u)) & vec3u(0x3ffu)) / 1023.0;\n}\nfn unpack111110(v: u32) -> vec3f {\n\treturn vec3f((vec3u(v) >> vec3u(21u, 10u, 0u)) & vec3u(0x7ffu, 0x7ffu, 0x3ffu)) / vec3f(2047.0, 2047.0, 1023.0);\n}\nfn resolveCodebook(s: vec3f, codebook: ptr<uniform, array<vec4f, 64>>) -> vec3f {\n\tlet idx = vec3u(s * 255.0);\n\tlet v = vec3f(\n\t\tcodebook[idx.x >> 2u][idx.x & 3u],\n\t\tcodebook[idx.y >> 2u][idx.y & 3u],\n\t\tcodebook[idx.z >> 2u][idx.z & 3u]\n\t);\n\treturn (v - codebook[0].x) / (codebook[63].w - codebook[0].x);\n}\n",Er=s(90393),Ar=s(77062);const Cr={alphaTestPS:"\nuniform alpha_ref: f32;\nfn alphaTest(a: f32) {\n\tif (a < uniform.alpha_ref) {\n\t\tdiscard;\n\t}\n}\n",ambientPS:'\n#if LIT_AMBIENT_SOURCE == AMBIENTSH\n\tuniform ambientSH: array<vec3f, 9>;\n#endif\n#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t#include "envAtlasPS"\n\t#ifndef ENV_ATLAS\n\t\t#define ENV_ATLAS\n\t\tvar texture_envAtlas: texture_2d<f32>;\n\t\tvar texture_envAtlasSampler: sampler;\n\t#endif\n#endif\nfn addAmbient(worldNormal: vec3f) {\n\t#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\t\tlet n: vec3f = cubeMapRotate(worldNormal);\n\t\tlet color: vec3f =\n\t\t\tuniform.ambientSH[0] +\n\t\t\tuniform.ambientSH[1] * n.x +\n\t\t\tuniform.ambientSH[2] * n.y +\n\t\t\tuniform.ambientSH[3] * n.z +\n\t\t\tuniform.ambientSH[4] * n.x * n.z +\n\t\t\tuniform.ambientSH[5] * n.z * n.y +\n\t\t\tuniform.ambientSH[6] * n.y * n.x +\n\t\t\tuniform.ambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n\t\t\tuniform.ambientSH[8] * (n.x * n.x - n.y * n.y);\n\t\tdDiffuseLight += processEnvironment(max(color, vec3f(0.0)));\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t\tlet dir: vec3f = normalize(cubeMapRotate(worldNormal) * vec3f(-1.0, 1.0, 1.0));\n\t\tlet uv: vec2f = mapUv(toSphericalUv(dir), vec4f(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);\n\t\tlet raw: vec4f = textureSample(texture_envAtlas, texture_envAtlasSampler, uv);\n\t\tlet linear: vec3f = {ambientDecode}(raw);\n\t\tdDiffuseLight += processEnvironment(linear);\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == CONSTANT\n\t\tdDiffuseLight += uniform.light_globalAmbient;\n\t#endif\n}\n',anisotropyPS:"\n#ifdef LIT_GGX_SPECULAR\n\tuniform material_anisotropyIntensity: f32;\n\tuniform material_anisotropyRotation: vec2f;\n#endif\nfn getAnisotropy() {\n\tdAnisotropy = 0.0;\n\tdAnisotropyRotation = vec2f(1.0, 0.0);\n#ifdef LIT_GGX_SPECULAR\n\tdAnisotropy = uniform.material_anisotropyIntensity;\n\tdAnisotropyRotation = uniform.material_anisotropyRotation;\n#endif\n#ifdef STD_ANISOTROPY_TEXTURE\n\tlet anisotropyTex: vec3f = textureSampleBias({STD_ANISOTROPY_TEXTURE_NAME}, {STD_ANISOTROPY_TEXTURE_NAME}Sampler, {STD_ANISOTROPY_TEXTURE_UV}, uniform.textureBias).rgb;\n\tdAnisotropy *= anisotropyTex.b;\n\tlet anisotropyRotationFromTex: vec2f = anisotropyTex.rg * 2.0 - vec2f(1.0);\n\tlet rotationMatrix: mat2x2f = mat2x2f(dAnisotropyRotation.x, dAnisotropyRotation.y, -dAnisotropyRotation.y, dAnisotropyRotation.x);\n\tdAnisotropyRotation = rotationMatrix * anisotropyRotationFromTex;\n#endif\n\tdAnisotropy = clamp(dAnisotropy, 0.0, 1.0);\n}\n",aoPS:'\n#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\tuniform material_aoIntensity: f32;\n#endif\n#ifdef STD_AODETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nfn getAO() {\n\tdAo = 1.0;\n\t#ifdef STD_AO_TEXTURE\n\t\tvar aoBase: f32 = textureSampleBias({STD_AO_TEXTURE_NAME}, {STD_AO_TEXTURE_NAME}Sampler, {STD_AO_TEXTURE_UV}, uniform.textureBias).{STD_AO_TEXTURE_CHANNEL};\n\t\t#ifdef STD_AODETAIL_TEXTURE\n\t\t\tvar aoDetail: f32 = textureSampleBias({STD_AODETAIL_TEXTURE_NAME}, {STD_AODETAIL_TEXTURE_NAME}Sampler, {STD_AODETAIL_TEXTURE_UV}, uniform.textureBias).{STD_AODETAIL_TEXTURE_CHANNEL};\n\t\t\taoBase = detailMode_{STD_AODETAIL_DETAILMODE}(vec3f(aoBase), vec3f(aoDetail)).r;\n\t\t#endif\n\t\tdAo = dAo * aoBase;\n\t#endif\n\t#ifdef STD_AO_VERTEX\n\t\tdAo = dAo * saturate(vVertexColor.{STD_AO_VERTEX_CHANNEL});\n\t#endif\n\t#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\t\tdAo = mix(1.0, dAo, uniform.material_aoIntensity);\n\t#endif\n}\n',aoDiffuseOccPS:"\nfn occludeDiffuse(ao: f32) {\n\tdDiffuseLight = dDiffuseLight * ao;\n}\n",aoSpecOccPS:"\n#if LIT_OCCLUDE_SPECULAR != NONE\n\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\tuniform material_occludeSpecularIntensity: f32;\n\t#endif\n#endif\nfn occludeSpecular(gloss: f32, ao: f32, worldNormal: vec3f, viewDir: vec3f) {\n\t#if LIT_OCCLUDE_SPECULAR == AO\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tvar specOcc: f32 = mix(1.0, ao, uniform.material_occludeSpecularIntensity);\n\t\t#else\n\t\t\tvar specOcc: f32 = ao;\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR == GLOSSDEPENDENT\n\t\tvar specPow: f32 = exp2(gloss * 11.0);\n\t\tvar specOcc: f32 = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01 * specPow) - 1.0 + ao);\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tspecOcc = mix(1.0, specOcc, uniform.material_occludeSpecularIntensity);\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\tdSpecularLight = dSpecularLight * specOcc;\n\t\tdReflection = dReflection * specOcc;\n\t\t#ifdef LIT_SHEEN\n\t\t\tsSpecularLight = sSpecularLight * specOcc;\n\t\t\tsReflection = sReflection * specOcc;\n\t\t#endif\n\t#endif\n}\n",bakeDirLmEndPS:"\n\tlet dirLm = textureSample(texture_dirLightMap, texture_dirLightMapSampler, vUv1);\n\tif (uniform.bakeDir > 0.5) {\n\t\tif (dAtten > 0.00001) {\n\t\t\tlet unpacked_dir = dirLm.xyz * 2.0 - vec3f(1.0);\n\t\t\tdAtten = clamp(dAtten, 0.0, 1.0);\n\t\t\tlet combined_dir = dLightDirNormW.xyz * dAtten + unpacked_dir * dirLm.w;\n\t\t\tlet finalRgb = normalize(combined_dir) * 0.5 + vec3f(0.5);\n\t\t\tlet finalA = max(dirLm.w + dAtten, 1.0 / 255.0);\n\t\t\toutput.color = vec4f(finalRgb, finalA);\n\t\t} else {\n\t\t\toutput.color = dirLm;\n\t\t}\n\t} else {\n\t\tlet alpha_min = select(0.0, 1.0 / 255.0, dAtten > 0.00001);\n\t\tlet finalA = max(dirLm.w, alpha_min);\n\t\toutput.color = vec4f(dirLm.rgb, finalA);\n\t}\n",bakeLmEndPS:"\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tdDiffuseLight = ((dDiffuseLight - 0.5) * max(uniform.ambientBakeOcclusionContrast + 1.0, 0.0)) + 0.5;\n\tdDiffuseLight = dDiffuseLight + vec3f(uniform.ambientBakeOcclusionBrightness);\n\tdDiffuseLight = saturate3(dDiffuseLight);\n\tdDiffuseLight = dDiffuseLight * dAmbientLight;\n#endif\n#ifdef LIGHTMAP_RGBM\n\tvar temp_color_rgbm = vec4f(dDiffuseLight, 1.0);\n\ttemp_color_rgbm = vec4f(pow(temp_color_rgbm.rgb, vec3f(0.5)), temp_color_rgbm.a);\n\ttemp_color_rgbm = vec4f(temp_color_rgbm.rgb / 8.0, temp_color_rgbm.a);\n\tlet max_g_b = max(temp_color_rgbm.g, max(temp_color_rgbm.b, 1.0 / 255.0));\n\tlet max_rgb = max(temp_color_rgbm.r, max_g_b);\n\ttemp_color_rgbm.a = clamp(max_rgb, 0.0, 1.0);\n\ttemp_color_rgbm.a = ceil(temp_color_rgbm.a * 255.0) / 255.0;\n\ttemp_color_rgbm = vec4f(temp_color_rgbm.rgb / temp_color_rgbm.a, temp_color_rgbm.a);\n\toutput.color = temp_color_rgbm;\n#else\n\toutput.color = vec4f(dDiffuseLight, 1.0);\n#endif\n",basePS:"\nuniform view_position: vec3f;\nuniform light_globalAmbient: vec3f;\nfn square(x: f32) -> f32 {\n\treturn x*x;\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn saturate3(x: vec3f) -> vec3f {\n\treturn clamp(x, vec3f(0.0), vec3f(1.0));\n}\n",baseNineSlicedPS:"\n#define NINESLICED\nvarying vMask: vec2f;\nvarying vTiledUv: vec2f;\nuniform innerOffset: vec4f;\nuniform outerScale: vec2f;\nuniform atlasRect: vec4f;\nvar<private> nineSlicedUv: vec2f;\n",baseNineSlicedTiledPS:"\n#define NINESLICED\n#define NINESLICETILED\nvarying vMask: vec2f;\nvarying vTiledUv: vec2f;\nuniform innerOffset: vec4f;\nuniform outerScale: vec2f;\nuniform atlasRect: vec4f;\nvar<private> nineSlicedUv: vec2f;\n",bayerPS:"\nfn bayer2(p: vec2f) -> f32 {\n\treturn (2.0 * p.y + p.x + 1.0) % 4.0;\n}\nfn bayer4(p: vec2f) -> f32 {\n\tlet p1: vec2f = p % vec2f(2.0);\n\tlet p2: vec2f = floor(0.5 * (p % vec2f(4.0)));\n\treturn 4.0 * bayer2(p1) + bayer2(p2);\n}\nfn bayer8(p: vec2f) -> f32 {\n\tlet p1: vec2f = p % vec2f(2.0);\n\tlet p2: vec2f = floor(0.5 * (p % vec2f(4.0)));\n\tlet p4: vec2f = floor(0.25 * (p % vec2f(8.0)));\n\treturn 4.0 * (4.0 * bayer2(p1) + bayer2(p2)) + bayer2(p4);\n}\n",blurVSMPS:"\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\n#ifdef GAUSS\n\tuniform weight: array<f32, {SAMPLES}>;\n#endif\nuniform pixelOffset: vec2f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tvar moments: vec3f = vec3f(0.0);\n\tlet uv: vec2f = input.vUv0 - uniform.pixelOffset * (f32({SAMPLES}) * 0.5);\n\tfor (var i: i32 = 0; i < {SAMPLES}; i = i + 1) {\n\t\tlet c: vec4f = textureSample(source, sourceSampler, uv + uniform.pixelOffset * f32(i));\n\t\t#ifdef GAUSS\n\t\t\tmoments = moments + c.xyz * uniform.weight[i].element;\n\t\t#else\n\t\t\tmoments = moments + c.xyz;\n\t\t#endif\n\t}\n\t#ifndef GAUSS\n\t\tmoments = moments * (1.0 / f32({SAMPLES}));\n\t#endif\n\toutput.color = vec4f(moments, 1.0);\n\treturn output;\n}\n",clearCoatPS:"\nuniform material_clearCoat: f32;\nfn getClearCoat() {\n\tccSpecularity = uniform.material_clearCoat;\n\t#ifdef STD_CLEARCOAT_TEXTURE\n\tccSpecularity = ccSpecularity * textureSampleBias({STD_CLEARCOAT_TEXTURE_NAME}, {STD_CLEARCOAT_TEXTURE_NAME}Sampler, {STD_CLEARCOAT_TEXTURE_UV}, uniform.textureBias).{STD_CLEARCOAT_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOAT_VERTEX\n\tccSpecularity = ccSpecularity * saturate(vVertexColor.{STD_CLEARCOAT_VERTEX_CHANNEL});\n\t#endif\n}\n",clearCoatGlossPS:"\n\tuniform material_clearCoatGloss: f32;\nfn getClearCoatGlossiness() {\n\tccGlossiness = uniform.material_clearCoatGloss;\n\t#ifdef STD_CLEARCOATGLOSS_TEXTURE\n\tccGlossiness = ccGlossiness * textureSampleBias({STD_CLEARCOATGLOSS_TEXTURE_NAME}, {STD_CLEARCOATGLOSS_TEXTURE_NAME}Sampler, {STD_CLEARCOATGLOSS_TEXTURE_UV}, uniform.textureBias).{STD_CLEARCOATGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_VERTEX\n\tccGlossiness = ccGlossiness * saturate(vVertexColor.{STD_CLEARCOATGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_INVERT\n\tccGlossiness = 1.0 - ccGlossiness;\n\t#endif\n\tccGlossiness += 0.0000001;\n}\n",clearCoatNormalPS:"\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tuniform material_clearCoatBumpiness: f32;\n#endif\nfn getClearCoatNormal() {\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tvar normalMap: vec3f = {STD_CLEARCOATNORMAL_TEXTURE_DECODE}(textureSampleBias({STD_CLEARCOATNORMAL_TEXTURE_NAME}, {STD_CLEARCOATNORMAL_TEXTURE_NAME}Sampler, {STD_CLEARCOATNORMAL_TEXTURE_UV}, uniform.textureBias));\n\tnormalMap = mix(vec3f(0.0, 0.0, 1.0), normalMap, uniform.material_clearCoatBumpiness);\n\tccNormalW = normalize(dTBN * normalMap);\n#else\n\tccNormalW = dVertexNormalW;\n#endif\n}\n",clusteredLightCookiesPS:"\nfn _getCookieClustered(tex: texture_2d<f32>, texSampler: sampler, uv: vec2f, intensity: f32, cookieChannel: vec4f) -> vec3f {\n\tlet pixel: vec4f = mix(vec4f(1.0), textureSampleLevel(tex, texSampler, uv, 0.0), intensity);\n\tlet isRgb: bool = dot(cookieChannel.rgb, vec3f(1.0)) == 3.0;\n\treturn select(vec3f(dot(pixel, cookieChannel)), pixel.rgb, isRgb);\n}\nfn getCookie2DClustered(tex: texture_2d<f32>, texSampler: sampler, transform: mat4x4f, worldPosition: vec3f, intensity: f32, cookieChannel: vec4f) -> vec3f {\n\tlet projPos: vec4f = transform * vec4f(worldPosition, 1.0);\n\treturn _getCookieClustered(tex, texSampler, projPos.xy / projPos.w, intensity, cookieChannel);\n}\nfn getCookieCubeClustered(tex: texture_2d<f32>, texSampler: sampler, dir: vec3f, intensity: f32, cookieChannel: vec4f, shadowTextureResolution: f32, shadowEdgePixels: f32, omniAtlasViewport: vec3f) -> vec3f {\n\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);\n\treturn _getCookieClustered(tex, texSampler, uv, intensity, cookieChannel);\n}\n",clusteredLightShadowsPS:"\nfn _getShadowCoordPerspZbuffer(shadowMatrix: mat4x4f, shadowParams: vec4f, wPos: vec3f) -> vec3f {\n\tvar projPos = shadowMatrix * vec4f(wPos, 1.0);\n\treturn projPos.xyz / projPos.w;\n}\nfn getShadowCoordPerspZbufferNormalOffset(shadowMatrix: mat4x4f, shadowParams: vec4f, normal: vec3f) -> vec3f {\n\tlet wPos: vec3f = vPositionW + normal * shadowParams.y;\n\treturn _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nfn normalOffsetPointShadow(shadowParams: vec4f, lightPos: vec3f, lightDir: vec3f, lightDirNorm: vec3f, normal: vec3f) -> vec3f {\n\tlet distScale: f32 = length(lightDir);\n\tlet wPos: vec3f = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\tlet dir: vec3f = wPos - lightPos;\n\treturn dir;\n}\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfn getShadowOmniClusteredPCF1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, uv, shadowZ);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfn getShadowOmniClusteredPCF3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tlet shadowCoord: vec3f = vec3f(uv, shadowZ);\n\t\treturn getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfn getShadowOmniClusteredPCF5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tlet shadowCoord: vec3f = vec3f(uv, shadowZ);\n\t\treturn getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfn getShadowSpotClusteredPCF1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n\t}\n#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfn getShadowSpotClusteredPCF3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn getShadowSpotPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfn getShadowSpotClusteredPCF5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n",clusteredLightUtilsPS:"\nstruct FaceCoords {\n\tuv: vec2f,\n\tfaceIndex: f32,\n\ttileOffset: vec2f,\n}\nfn getCubemapFaceCoordinates(dir: vec3f) -> FaceCoords {\n\tvar faceIndex: f32;\n\tvar tileOffset: vec2f;\n\tvar uv: vec2f;\n\tlet vAbs: vec3f = abs(dir);\n\tvar ma: f32;\n\tif (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n\t\tlet is_neg_z = dir.z < 0.0;\n\t\tfaceIndex = select(4.0, 5.0, is_neg_z);\n\t\tma = 0.5 / vAbs.z;\n\t\tuv = vec2f(select(dir.x, -dir.x, is_neg_z), -dir.y);\n\t\ttileOffset = vec2f(2.0, select(0.0, 1.0, is_neg_z));\n\t} else if (vAbs.y >= vAbs.x) {\n\t\tlet is_neg_y = dir.y < 0.0;\n\t\tfaceIndex = select(2.0, 3.0, is_neg_y);\n\t\tma = 0.5 / vAbs.y;\n\t\tuv = vec2f(dir.x, select(dir.z, -dir.z, is_neg_y));\n\t\ttileOffset = vec2f(1.0, select(0.0, 1.0, is_neg_y));\n\t} else {\n\t\tlet is_neg_x = dir.x < 0.0;\n\t\tfaceIndex = select(0.0, 1.0, is_neg_x);\n\t\tma = 0.5 / vAbs.x;\n\t\tuv = vec2f(select(-dir.z, dir.z, is_neg_x), -dir.y);\n\t\ttileOffset = vec2f(0.0, select(0.0, 1.0, is_neg_x));\n\t}\n\tuv = uv * ma + 0.5;\n\treturn FaceCoords(uv, faceIndex, tileOffset);\n}\nfn getCubemapAtlasCoordinates(omniAtlasViewport: vec3f, shadowEdgePixels: f32, shadowTextureResolution: f32, dir: vec3f) -> vec2f {\n\tlet faceData: FaceCoords = getCubemapFaceCoordinates(dir);\n\tvar uv: vec2f = faceData.uv;\n\tlet tileOffset: vec2f = faceData.tileOffset;\n\tlet atlasFaceSize: f32 = omniAtlasViewport.z;\n\tlet tileSize: f32 = shadowTextureResolution * atlasFaceSize;\n\tvar offset: f32 = shadowEdgePixels / tileSize;\n\tuv = uv * (1.0 - offset * 2.0) + offset;\n\tuv = uv * atlasFaceSize;\n\tuv = uv + tileOffset * atlasFaceSize;\n\tuv = uv + omniAtlasViewport.xy;\n\treturn uv;\n}\n",clusteredLightPS:'\n#include "lightBufferDefinesPS"\n#include "clusteredLightUtilsPS"\n#ifdef CLUSTER_COOKIES\n\t#include "clusteredLightCookiesPS"\n#endif\n#ifdef CLUSTER_SHADOWS\n\t#include "clusteredLightShadowsPS"\n#endif\nvar clusterWorldTexture: texture_2d<f32>;\nvar lightsTexture: texture_2d<f32>;\n#ifdef CLUSTER_SHADOWS\n\tvar shadowAtlasTexture: texture_depth_2d;\n\tvar shadowAtlasTextureSampler: sampler_comparison;\n#endif\n#ifdef CLUSTER_COOKIES\n\tvar cookieAtlasTexture: texture_2d<f32>;\n\tvar cookieAtlasTextureSampler: sampler;\n#endif\nuniform clusterMaxCells: i32;\nuniform clusterSkip: f32;\nuniform clusterCellsCountByBoundsSize: vec3f;\nuniform clusterTextureSize: vec3f;\nuniform clusterBoundsMin: vec3f;\nuniform clusterBoundsDelta: vec3f;\nuniform clusterCellsDot: vec3f;\nuniform clusterCellsMax: vec3f;\nuniform shadowAtlasParams: vec2f;\nstruct ClusterLightData {\n\tflags: u32,\n\thalfWidth: vec3f,\n\tisSpot: bool,\n\thalfHeight: vec3f,\n\tlightIndex: i32,\n\tposition: vec3f,\n\tshape: u32,\n\tdirection: vec3f,\n\tfalloffModeLinear: bool,\n\tcolor: vec3f,\n\tshadowIntensity: f32,\n\tomniAtlasViewport: vec3f,\n\trange: f32,\n\tcookieChannelMask: vec4f,\n\tbiasesData: f32,\n\tshadowBias: f32,\n\tshadowNormalBias: f32,\n\tanglesData: f32,\n\tinnerConeAngleCos: f32,\n\touterConeAngleCos: f32,\n\tcookieIntensity: f32,\n\tisDynamic: bool,\n\tisLightmapped: bool\n}\nvar<private> lightProjectionMatrix: mat4x4f;\nfn sampleLightTextureF(lightIndex: i32, index: i32) -> vec4f {\n\treturn textureLoad(lightsTexture, vec2<i32>(index, lightIndex), 0);\n}\nfn decodeClusterLightCore(clusterLightData: ptr<function, ClusterLightData>, lightIndex: f32) {\n\tclusterLightData.lightIndex = i32(lightIndex);\n\tlet halfData: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_COLOR_ANGLES_BIAS});\n\tclusterLightData.anglesData = halfData.z;\n\tclusterLightData.biasesData = halfData.w;\n\tlet colorRG: vec2f = unpack2x16float(bitcast<u32>(halfData.x));\n\tlet colorB_: vec2f = unpack2x16float(bitcast<u32>(halfData.y));\n\tclusterLightData.color = vec3f(colorRG, colorB_.x) * {LIGHT_COLOR_DIVIDER};\n\tlet lightPosRange: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_POSITION_RANGE});\n\tclusterLightData.position = lightPosRange.xyz;\n\tclusterLightData.range = lightPosRange.w;\n\tlet lightDir_Flags: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_DIRECTION_FLAGS});\n\tclusterLightData.direction = lightDir_Flags.xyz;\n\tlet flags_uint: u32 = bitcast<u32>(lightDir_Flags.w);\n\tclusterLightData.flags = flags_uint;\n\tclusterLightData.isSpot = (flags_uint & (1u << 30u)) != 0u;\n\tclusterLightData.shape = (flags_uint >> 28u) & 0x3u;\n\tclusterLightData.falloffModeLinear = (flags_uint & (1u << 27u)) == 0u;\n\tclusterLightData.shadowIntensity = f32((flags_uint >> 0u) & 0xFFu) / 255.0;\n\tclusterLightData.cookieIntensity = f32((flags_uint >> 8u) & 0xFFu) / 255.0;\n\tclusterLightData.isDynamic = (flags_uint & (1u << 22u)) != 0u;\n\tclusterLightData.isLightmapped = (flags_uint & (1u << 21u)) != 0u;\n}\nfn decodeClusterLightSpot(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet angles: vec2f = unpack2x16float(bitcast<u32>(clusterLightData.anglesData));\n\tclusterLightData.innerConeAngleCos = angles.x;\n\tclusterLightData.outerConeAngleCos = angles.y;\n}\nfn decodeClusterLightOmniAtlasViewport(clusterLightData: ptr<function, ClusterLightData>) {\n\tclusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_0}).xyz;\n}\nfn decodeClusterLightAreaData(clusterLightData: ptr<function, ClusterLightData>) {\n\tclusterLightData.halfWidth = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_AREA_DATA_WIDTH}).xyz;\n\tclusterLightData.halfHeight = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_AREA_DATA_HEIGHT}).xyz;\n}\nfn decodeClusterLightProjectionMatrixData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet m0: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_0});\n\tlet m1: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_1});\n\tlet m2: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_2});\n\tlet m3: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_3});\n\tlightProjectionMatrix = mat4x4f(m0, m1, m2, m3);\n}\nfn decodeClusterLightShadowData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet biases: vec2f = unpack2x16float(bitcast<u32>(clusterLightData.biasesData));\n\tclusterLightData.shadowBias = biases.x;\n\tclusterLightData.shadowNormalBias = biases.y;\n}\nfn decodeClusterLightCookieData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet cookieFlags: u32 = (clusterLightData.flags >> 23u) & 0x0Fu;\n\tlet mask_uvec: vec4<u32> = vec4<u32>(cookieFlags) & vec4<u32>(1u, 2u, 4u, 8u);\n\tclusterLightData.cookieChannelMask = step(vec4f(1.0), vec4f(mask_uvec));\n}\nfn evaluateLight(\n\tlight: ptr<function, ClusterLightData>,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tvar cookieAttenuation: vec3f = vec3f(1.0);\n\tvar diffuseAttenuation: f32 = 1.0;\n\tvar falloffAttenuation: f32 = 1.0;\n\tlet lightDirW: vec3f = evalOmniLight(light.position);\n\tlet lightDirNormW: vec3f = normalize(lightDirW);\n\t#ifdef CLUSTER_AREALIGHTS\n\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\tdecodeClusterLightAreaData(light);\n\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\tcalcRectLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\tcalcDiskLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else {\n\t\t\tcalcSphereLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t}\n\t\tfalloffAttenuation = getFalloffWindow(light.range, lightDirW);\n\t} else\n\t#endif\n\t{\n\t\tif (light.falloffModeLinear) {\n\t\t\tfalloffAttenuation = getFalloffLinear(light.range, lightDirW);\n\t\t} else {\n\t\t\tfalloffAttenuation = getFalloffInvSquared(light.range, lightDirW);\n\t\t}\n\t}\n\tif (falloffAttenuation > 0.00001) {\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\tdiffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\tdiffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else {\n\t\t\t\tdiffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t}\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\tfalloffAttenuation = falloffAttenuation * getLightDiffuse(worldNormal, viewDir, lightDirNormW);\n\t\t}\n\t\tif (light.isSpot) {\n\t\t\tdecodeClusterLightSpot(light);\n\t\t\tfalloffAttenuation = falloffAttenuation * getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, lightDirNormW);\n\t\t}\n\t\t#if defined(CLUSTER_COOKIES) || defined(CLUSTER_SHADOWS)\n\t\tif (falloffAttenuation > 0.00001) {\n\t\t\tif (light.shadowIntensity > 0.0 || light.cookieIntensity > 0.0) {\n\t\t\t\tif (light.isSpot) {\n\t\t\t\t\tdecodeClusterLightProjectionMatrixData(light);\n\t\t\t\t} else {\n\t\t\t\t\tdecodeClusterLightOmniAtlasViewport(light);\n\t\t\t\t}\n\t\t\t\tlet shadowTextureResolution: f32 = uniform.shadowAtlasParams.x;\n\t\t\t\tlet shadowEdgePixels: f32 = uniform.shadowAtlasParams.y;\n\t\t\t\t#ifdef CLUSTER_COOKIES\n\t\t\t\tif (light.cookieIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightCookieData(light);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tcookieAttenuation = getCookie2DClustered(cookieAtlasTexture, cookieAtlasTextureSampler, lightProjectionMatrix, vPositionW, light.cookieIntensity, light.cookieChannelMask);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcookieAttenuation = getCookieCubeClustered(cookieAtlasTexture, cookieAtlasTextureSampler, lightDirW, light.cookieIntensity, light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef CLUSTER_SHADOWS\n\t\t\t\tif (light.shadowIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightShadowData(light);\n\t\t\t\t\tlet shadowParams: vec4f = vec4f(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tlet shadowCoord: vec3f = getShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF1(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF3(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF5(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCSS)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCSS(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation = falloffAttenuation * mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet dir: vec3f = normalOffsetPointShadow(shadowParams, light.position, lightDirW, lightDirNormW, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF1(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF3(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF5(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation = falloffAttenuation * mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#endif\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\t{\n\t\t\t\tvar areaDiffuse: vec3f = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tareaDiffuse = mix(areaDiffuse, vec3f(0.0), dLTCSpecFres);\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight = dDiffuseLight + areaDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar areaLightSpecular: f32;\n\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\tareaLightSpecular = getRectLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\tareaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else {\n\t\t\t\t\tareaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);\n\t\t\t\t}\n\t\t\t\tdSpecularLight = dSpecularLight + dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\tvar areaLightSpecularCC: f32;\n\t\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\t\tareaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\t\tareaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tareaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t}\n\t\t\t\t\tccSpecularLight = ccSpecularLight + ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\t{\n\t\t\t\tvar punctualDiffuse: vec3f = falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#if defined(CLUSTER_AREALIGHTS)\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tpunctualDiffuse = mix(punctualDiffuse, vec3f(0.0), specularity);\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight = dDiffuseLight + punctualDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlet halfDir: vec3f = normalize(-lightDirNormW + viewDir);\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tdSpecularLight = dSpecularLight +\n\t\t\t\t\t\tgetLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation *\n\t\t\t\t\t\tgetFresnel(\n\t\t\t\t\t\t\tdot(viewDir, halfDir),\n\t\t\t\t\t\t\tgloss,\n\t\t\t\t\t\t\tspecularity\n\t\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\t\tiridescence_intensity\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t);\n\t\t\t\t#else\n\t\t\t\t\tdSpecularLight = dSpecularLight + getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\t\tccSpecularLight = ccSpecularLight + getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));\n\t\t\t\t\t#else\n\t\t\t\t\t\tccSpecularLight = ccSpecularLight + getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tsSpecularLight = sSpecularLight + getLightSpecularSheen(halfDir, worldNormal, viewDir, lightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t}\n\t}\n\tdAtten = falloffAttenuation;\n\tdLightDirNormW = lightDirNormW;\n}\nfn evaluateClusterLight(\n\tlightIndex: f32,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tvar clusterLightData: ClusterLightData;\n\tdecodeClusterLightCore(&clusterLightData, lightIndex);\n\t#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS\n\t\tlet acceptLightMask: bool = clusterLightData.isDynamic;\n\t#else\n\t\tlet acceptLightMask: bool = clusterLightData.isLightmapped;\n\t#endif\n\tif (acceptLightMask) {\n\t\tevaluateLight(\n\t\t\t&clusterLightData,\n\t\t\tworldNormal,\n\t\t\tviewDir,\n\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\tgloss,\n\t\t\tspecularity,\n\t\t\tgeometricNormal,\n\t\t\ttbn,\n#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel,\n#endif\n\t\t\tclearcoat_worldNormal,\n\t\t\tclearcoat_gloss,\n\t\t\tsheen_gloss,\n\t\t\tiridescence_intensity\n\t\t);\n\t}\n}\nfn addClusteredLights(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tif (uniform.clusterSkip > 0.5) {\n\t\treturn;\n\t}\n\tlet cellCoords: vec3f = floor((vPositionW - uniform.clusterBoundsMin) * uniform.clusterCellsCountByBoundsSize);\n\tif (!(any(cellCoords < vec3f(0.0)) || any(cellCoords >= uniform.clusterCellsMax))) {\n\t\tlet cellIndex: f32 = dot(uniform.clusterCellsDot, cellCoords);\n\t\tlet clusterV: f32 = floor(cellIndex * uniform.clusterTextureSize.y);\n\t\tlet clusterU: f32 = cellIndex - (clusterV * uniform.clusterTextureSize.x);\n\t\tfor (var lightCellIndex: i32 = 0; lightCellIndex < uniform.clusterMaxCells; lightCellIndex = lightCellIndex + 1) {\n\t\t\tlet lightIndexPacked: f32 = textureLoad(clusterWorldTexture, vec2<i32>(i32(clusterU) + lightCellIndex, i32(clusterV)), 0).r;\n\t\t\tif (lightIndexPacked <= 0.0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tevaluateClusterLight(\n\t\t\t\tlightIndexPacked * 255.0,\n\t\t\t\tworldNormal,\n\t\t\t\tviewDir,\n\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\tgloss,\n\t\t\t\tspecularity,\n\t\t\t\tgeometricNormal,\n\t\t\t\ttbn,\n#if defined(LIT_IRIDESCENCE)\n\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\tclearcoat_worldNormal,\n\t\t\t\tclearcoat_gloss,\n\t\t\t\tsheen_gloss,\n\t\t\t\tiridescence_intensity\n\t\t\t);\n\t\t}\n\t}\n}',combinePS:"\nfn combineColor(albedo: vec3f, sheenSpecularity: vec3f, clearcoatSpecularity: f32) -> vec3f {\n\tvar ret: vec3f = vec3f(0.0);\n\t#ifdef LIT_OLD_AMBIENT\n\t\tret = ret + ((dDiffuseLight - uniform.light_globalAmbient) * albedo + uniform.material_ambient * uniform.light_globalAmbient);\n\t#else\n\t\tret = ret + (albedo * dDiffuseLight);\n\t#endif\n\t#ifdef LIT_SPECULAR\n\t\tret = ret + dSpecularLight;\n\t#endif\n\t#ifdef LIT_REFLECTIONS\n\t\tret = ret + (dReflection.rgb * dReflection.a);\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\tlet sheenScaling: f32 = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;\n\t\tret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;\n\t#endif\n\t#ifdef LIT_CLEARCOAT\n\t\tlet clearCoatScaling: f32 = 1.0 - ccFresnel * clearcoatSpecularity;\n\t\tret = ret * clearCoatScaling + (ccSpecularLight + ccReflection) * clearcoatSpecularity;\n\t#endif\n\treturn ret;\n}\n",cookieBlit2DPS:"\n\tvarying uv0: vec2f;\n\tvar blitTexture: texture_2d<f32>;\n\tvar blitTextureSampler : sampler;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\toutput.color = textureSample(blitTexture, blitTextureSampler, input.uv0);\n\t\treturn output;\n\t}\n",cookieBlitCubePS:"\n\tvarying uv0: vec2f;\n\tuniform invViewProj: mat4x4<f32>;\n\tvar blitTexture: texture_cube<f32>;\n\tvar blitTextureSampler : sampler;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar projPos = vec4f(input.uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\tvar worldPos = uniform.invViewProj * projPos;\n\t\toutput.color = textureSample(blitTexture, blitTextureSampler, worldPos.xyz);\n\t\treturn output;\n\t}\n",cookieBlitVS:"\n\tattribute vertex_position: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\t\toutput.uv0 = input.vertex_position * 0.5 + vec2f(0.5, 0.5);\n\t\toutput.uv0.y = 1.0 - output.uv0.y;\n\t\treturn output;\n\t}\n",cubeMapProjectPS:"\n#if LIT_CUBEMAP_PROJECTION == BOX\n\tuniform envBoxMin: vec3f;\n\tuniform envBoxMax: vec3f;\n#endif\nfn cubeMapProject(nrdir: vec3f) -> vec3f {\n\t#if LIT_CUBEMAP_PROJECTION == NONE\n\t\treturn cubeMapRotate(nrdir);\n\t#endif\n\t#if LIT_CUBEMAP_PROJECTION == BOX\n\t\tlet nrdir_rotated: vec3f = cubeMapRotate(nrdir);\n\t\tlet rbmax: vec3f = (uniform.envBoxMax - vPositionW) / nrdir_rotated;\n\t\tlet rbmin: vec3f = (uniform.envBoxMin - vPositionW) / nrdir_rotated;\n\t\tlet rbminmax: vec3f = select(rbmin, rbmax, nrdir_rotated > vec3f(0.0));\n\t\tlet fa: f32 = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n\t\tlet posonbox: vec3f = vPositionW + nrdir_rotated * fa;\n\t\tlet envBoxPos: vec3f = (uniform.envBoxMin + uniform.envBoxMax) * 0.5;\n\t\treturn normalize(posonbox - envBoxPos);\n\t#endif\n}\n",cubeMapRotatePS:"\n#ifdef CUBEMAP_ROTATION\nuniform cubeMapRotationMatrix: mat3x3f;\n#endif\nfn cubeMapRotate(refDir: vec3f) -> vec3f {\n#ifdef CUBEMAP_ROTATION\n\treturn refDir * uniform.cubeMapRotationMatrix;\n#else\n\treturn refDir;\n#endif\n}\n",debugOutputPS:"\n#ifdef DEBUG_ALBEDO_PASS\noutput.color = vec4(gammaCorrectOutput(dAlbedo), 1.0);\n#endif\n#ifdef DEBUG_UV0_PASS\noutput.color = vec4f(litArgs_albedo , 1.0);\n#endif\n#ifdef DEBUG_WORLD_NORMAL_PASS\noutput.color = vec4f(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n#endif\n#ifdef DEBUG_OPACITY_PASS\noutput.color = vec4f(vec3f(litArgs_opacity) , 1.0);\n#endif\n#ifdef DEBUG_SPECULARITY_PASS\noutput.color = vec4f(litArgs_specularity, 1.0);\n#endif\n#ifdef DEBUG_GLOSS_PASS\noutput.color = vec4f(vec3f(litArgs_gloss) , 1.0);\n#endif\n#ifdef DEBUG_METALNESS_PASS\noutput.color = vec4f(vec3f(litArgs_metalness) , 1.0);\n#endif\n#ifdef DEBUG_AO_PASS\noutput.color = vec4f(vec3f(litArgs_ao) , 1.0);\n#endif\n#ifdef DEBUG_EMISSION_PASS\noutput.color = vec4f(gammaCorrectOutput(litArgs_emission), 1.0);\n#endif\n",debugProcessFrontendPS:"\n#ifdef DEBUG_LIGHTING_PASS\n\tlitArgs_albedo = vec3f(0.5);\n#endif\n#ifdef DEBUG_UV0_PASS\n#ifdef VARYING_VUV0\n\tlitArgs_albedo = vec3f(vUv0, 0.0);\n#else\n\tlitArgs_albedo = vec3f(0.0);\n#endif\n#endif\n",detailModesPS:"\n#ifndef _DETAILMODES_INCLUDED_\n#define _DETAILMODES_INCLUDED_\nfn detailMode_mul(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn c1 * c2;\n}\nfn detailMode_add(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn c1 + c2;\n}\nfn detailMode_screen(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\n}\nfn detailMode_overlay(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn mix(1.0 - 2.0 * (1.0 - c1)*(1.0 - c2), 2.0 * c1 * c2, step(c1, vec3f(0.5)));\n}\nfn detailMode_min(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn min(c1, c2);\n}\nfn detailMode_max(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn max(c1, c2);\n}\n#endif\n",diffusePS:'\nuniform material_diffuse: vec3f;\n#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nfn getAlbedo() {\n\tdAlbedo = uniform.material_diffuse.rgb;\n\t#ifdef STD_DIFFUSE_TEXTURE\n\t\tvar albedoTexture: vec3f = {STD_DIFFUSE_TEXTURE_DECODE}(textureSampleBias({STD_DIFFUSE_TEXTURE_NAME}, {STD_DIFFUSE_TEXTURE_NAME}Sampler, {STD_DIFFUSE_TEXTURE_UV}, uniform.textureBias)).{STD_DIFFUSE_TEXTURE_CHANNEL};\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t\t\tvar albedoDetail: vec3f = {STD_DIFFUSEDETAIL_TEXTURE_DECODE}(textureSampleBias({STD_DIFFUSEDETAIL_TEXTURE_NAME}, {STD_DIFFUSEDETAIL_TEXTURE_NAME}Sampler, {STD_DIFFUSEDETAIL_TEXTURE_UV}, uniform.textureBias)).{STD_DIFFUSEDETAIL_TEXTURE_CHANNEL};\n\t\t\talbedoTexture = detailMode_{STD_DIFFUSEDETAIL_DETAILMODE}(albedoTexture, albedoDetail);\n\t\t#endif\n\t\tdAlbedo = dAlbedo * albedoTexture;\n\t#endif\n\t#ifdef STD_DIFFUSE_VERTEX\n\t\tdAlbedo = dAlbedo * gammaCorrectInputVec3(saturate3(vVertexColor.{STD_DIFFUSE_VERTEX_CHANNEL}));\n\t#endif\n}\n',decodePS:"\n#ifndef _DECODE_INCLUDED_\n#define _DECODE_INCLUDED_\nfn decodeLinear(raw: vec4f) -> vec3f {\n\treturn raw.rgb;\n}\nfn decodeGammaFloat(raw: f32) -> f32 {\n\treturn pow(raw, 2.2);\n}\nfn decodeGamma3(raw: vec3f) -> vec3f {\n\treturn pow(raw, vec3f(2.2));\n}\nfn decodeGamma(raw: vec4f) -> vec3f {\n\treturn pow(raw.xyz, vec3f(2.2));\n}\nfn decodeRGBM(raw: vec4f) -> vec3f {\n\tlet color = (8.0 * raw.a) * raw.rgb;\n\treturn color * color;\n}\nfn decodeRGBP(raw: vec4f) -> vec3f {\n\tlet color = raw.rgb * (-raw.a * 7.0 + 8.0);\n\treturn color * color;\n}\nfn decodeRGBE(raw: vec4f) -> vec3f {\n\treturn select(vec3f(0.0), raw.xyz * pow(2.0, raw.w * 255.0 - 128.0), raw.a != 0.0);\n}\nfn passThrough(raw: vec4f) -> vec4f {\n\treturn raw;\n}\nfn unpackNormalXYZ(nmap: vec4f) -> vec3f {\n\treturn nmap.xyz * 2.0 - 1.0;\n}\nfn unpackNormalXY(nmap: vec4f) -> vec3f {\n\tvar xy = nmap.wy * 2.0 - 1.0;\n\treturn vec3f(xy, sqrt(1.0 - clamp(dot(xy, xy), 0.0, 1.0)));\n}\n#endif\n",emissivePS:"\nuniform material_emissive: vec3f;\nuniform material_emissiveIntensity: f32;\nfn getEmission() {\n\tdEmission = uniform.material_emissive * uniform.material_emissiveIntensity;\n\t#ifdef STD_EMISSIVE_TEXTURE\n\tdEmission *= {STD_EMISSIVE_TEXTURE_DECODE}(textureSampleBias({STD_EMISSIVE_TEXTURE_NAME}, {STD_EMISSIVE_TEXTURE_NAME}Sampler, {STD_EMISSIVE_TEXTURE_UV}, uniform.textureBias)).{STD_EMISSIVE_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_EMISSIVE_VERTEX\n\tdEmission = dEmission * gammaCorrectInputVec3(saturate3(vVertexColor.{STD_EMISSIVE_VERTEX_CHANNEL}));\n\t#endif\n}\n",encodePS:"\nfn encodeLinear(source: vec3f) -> vec4f {\n\treturn vec4f(source, 1.0);\n}\nfn encodeGamma(source: vec3f) -> vec4f {\n\treturn vec4f(pow(source + vec3f(0.0000001), vec3f(1.0 / 2.2)), 1.0);\n}\nfn encodeRGBM(source: vec3f) -> vec4f {\n\tvar color: vec3f = pow(source, vec3f(0.5));\n\tcolor *= 1.0 / 8.0;\n\tvar a: f32 = saturate(max(max(color.r, color.g), max(color.b, 1.0 / 255.0)));\n\ta = ceil(a * 255.0) / 255.0;\n\tcolor /= a;\n\treturn vec4f(color, a);\n}\nfn encodeRGBP(source: vec3f) -> vec4f {\n\tvar gamma: vec3f = pow(source, vec3f(0.5));\n\tvar maxVal: f32 = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));\n\tvar v: f32 = 1.0 - ((maxVal - 1.0) / 7.0);\n\tv = ceil(v * 255.0) / 255.0;\n\treturn vec4f(gamma / (-v * 7.0 + 8.0), v);\n}\nfn encodeRGBE(source: vec3f) -> vec4f {\n\tvar maxVal: f32 = max(source.x, max(source.y, source.z));\n\tif (maxVal < 1e-32) {\n\t\treturn vec4f(0.0, 0.0, 0.0, 0.0);\n\t} else {\n\t\tvar e: f32 = ceil(log2(maxVal));\n\t\treturn vec4f(source / pow(2.0, e), (e + 128.0) / 255.0);\n\t}\n}\n",endPS:"\n\tvar finalRgb: vec3f = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);\n\tfinalRgb = finalRgb + litArgs_emission;\n\tfinalRgb = addFog(finalRgb);\n\tfinalRgb = toneMap(finalRgb);\n\tfinalRgb = gammaCorrectOutput(finalRgb);\n\toutput.color = vec4f(finalRgb, output.color.a);\n",envAtlasPS:"\n#ifndef _ENVATLAS_INCLUDED_\n#define _ENVATLAS_INCLUDED_\nconst atlasSize : f32 = 512.0;\nconst seamSize : f32 = 1.0 / atlasSize;\nfn mapUv(uv : vec2f, rect : vec4f) -> vec2f {\n\treturn vec2f(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),\n\t\t\t\t mix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));\n}\nfn mapRoughnessUv(uv : vec2f, level : f32) -> vec2f {\n\tlet t : f32 = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4f(0.0, 1.0 - t, t, t * 0.5));\n}\nfn mapShinyUv(uv : vec2f, level : f32) -> vec2f {\n\tlet t : f32 = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4f(1.0 - t, 1.0 - t, t, t * 0.5));\n}\n#endif\n",envProcPS:"\n#ifdef LIT_SKYBOX_INTENSITY\n\tuniform skyboxIntensity : f32;\n#endif\nfn processEnvironment(color : vec3f) -> vec3f {\n\t#ifdef LIT_SKYBOX_INTENSITY\n\t\treturn color * uniform.skyboxIntensity;\n\t#else\n\t\treturn color;\n\t#endif\n}\n",falloffInvSquaredPS:"\nfn getFalloffWindow(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet sqrDist: f32 = dot(lightDir, lightDir);\n\tlet invRadius: f32 = 1.0 / lightRadius;\n\treturn square(saturate(1.0 - square(sqrDist * square(invRadius))));\n}\nfn getFalloffInvSquared(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet sqrDist: f32 = dot(lightDir, lightDir);\n\tvar falloff: f32 = 1.0 / (sqrDist + 1.0);\n\tlet invRadius: f32 = 1.0 / lightRadius;\n\tfalloff = falloff * 16.0;\n\tfalloff = falloff * square(saturate(1.0 - square(sqrDist * square(invRadius))));\n\treturn falloff;\n}\n",falloffLinearPS:"\nfn getFalloffLinear(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet d: f32 = length(lightDir);\n\treturn max(((lightRadius - d) / lightRadius), 0.0);\n}\n",floatAsUintPS:"\n#ifndef FLOAT_AS_UINT\n#define FLOAT_AS_UINT\nfn float2uint(value: f32) -> vec4f {\n\tlet intBits = bitcast<u32>(value);\n\treturn vec4f(\n\t\tf32((intBits >> 24u) & 0xffu),\n\t\tf32((intBits >> 16u) & 0xffu),\n\t\tf32((intBits >> 8u) & 0xffu),\n\t\tf32(intBits & 0xffu)\n\t) / 255.0;\n}\nfn uint2float(value: vec4f) -> f32 {\n\tlet rgba_u32 = vec4<u32>(value * 255.0);\n\tlet intBits: u32 =\n\t\t(rgba_u32.r << 24u) |\n\t\t(rgba_u32.g << 16u) |\n\t\t(rgba_u32.b << 8u)  |\n\t\t rgba_u32.a;\n\treturn bitcast<f32>(intBits);\n}\nfn float2vec4(value: f32) -> vec4f {\n\t#if defined(CAPS_TEXTURE_FLOAT_RENDERABLE)\n\t\treturn vec4f(value, 1.0, 1.0, 1.0);\n\t#else\n\t\treturn float2uint(value);\n\t#endif\n}\n#endif\n",fogPS:"\nvar<private> dBlendModeFogFactor : f32 = 1.0;\n#if (FOG != NONE)\n\tuniform fog_color : vec3f;\n\t\n\t#if (FOG == LINEAR)\n\t\tuniform fog_start : f32;\n\t\tuniform fog_end : f32;\n\t#else\n\t\tuniform fog_density : f32;\n\t#endif\n#endif\nfn getFogFactor() -> f32 {\n\tlet depth = pcPosition.z / pcPosition.w;\n\tvar fogFactor : f32 = 0.0;\n\t#if (FOG == LINEAR)\n\t\tfogFactor = (uniform.fog_end - depth) / (uniform.fog_end - uniform.fog_start);\n\t#elif (FOG == EXP)\n\t\tfogFactor = exp(-depth * uniform.fog_density);\n\t#elif (FOG == EXP2)\n\t\tfogFactor = exp(-depth * depth * uniform.fog_density * uniform.fog_density);\n\t#endif\n\treturn clamp(fogFactor, 0.0, 1.0);\n}\nfn addFog(color : vec3f) -> vec3f {\n\t#if (FOG != NONE)\n\t\treturn mix(uniform.fog_color * dBlendModeFogFactor, color, getFogFactor());\n\t#else\n\t\treturn color;\n\t#endif\n}\n",fresnelSchlickPS:"\nfn getFresnel(\n\t\tcosTheta: f32,\n\t\tgloss: f32,\n\t\tspecularity: vec3f\n\t#if defined(LIT_IRIDESCENCE)\n\t\t, iridescenceFresnel: vec3f,\n\t\tiridescenceIntensity: f32\n\t#endif\n) -> vec3f {\n\tlet fresnel: f32 = pow(1.0 - saturate(cosTheta), 5.0);\n\tlet glossSq: f32 = gloss * gloss;\n\tlet ret: vec3f = specularity + (max(vec3f(glossSq), specularity) - specularity) * fresnel;\n\t#if defined(LIT_IRIDESCENCE)\n\t\treturn mix(ret, iridescenceFresnel, iridescenceIntensity);\n\t#else\n\t\treturn ret;\n\t#endif\n}\nfn getFresnelCC(cosTheta: f32) -> f32 {\n\tlet fresnel: f32 = pow(1.0 - saturate(cosTheta), 5.0);\n\treturn 0.04 + (1.0 - 0.04) * fresnel;\n}",frontendCodePS:"",frontendDeclPS:"",fullscreenQuadVS:"\nattribute vertex_position: vec2f;\nvarying vUv0: vec2f;\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\toutput.vUv0 = input.vertex_position.xy * 0.5 + vec2f(0.5);\n\treturn output;\n}\n",gammaPS:'\n#include "decodePS"\n#if (GAMMA == SRGB)\n\tfn gammaCorrectInput(color: f32) -> f32 {\n\t\treturn decodeGammaFloat(color);\n\t}\n\tfn gammaCorrectInputVec3(color: vec3f) -> vec3f {\n\t\treturn decodeGamma3(color);\n\t}\n\tfn gammaCorrectInputVec4(color: vec4f) -> vec4f {\n\t\treturn vec4f(decodeGamma3(color.xyz), color.w);\n\t}\n\tfn gammaCorrectOutput(color: vec3f) -> vec3f {\n\t\treturn pow(color + 0.0000001, vec3f(1.0 / 2.2));\n\t}\n#else\n\tfn gammaCorrectInput(color: f32) -> f32 {\n\t\treturn color;\n\t}\n\tfn gammaCorrectInputVec3(color: vec3f) -> vec3f {\n\t\treturn color;\n\t}\n\tfn gammaCorrectInputVec4(color: vec4f) -> vec4f {\n\t\treturn color;\n\t}\n\tfn gammaCorrectOutput(color: vec3f) -> vec3f {\n\t\treturn color;\n\t}\n#endif\n',glossPS:"\n#ifdef STD_GLOSS_CONSTANT\n\tuniform material_gloss: f32;\n#endif\nfn getGlossiness() {\n\tdGlossiness = 1.0;\n\t#ifdef STD_GLOSS_CONSTANT\n\tdGlossiness = dGlossiness * uniform.material_gloss;\n\t#endif\n\t#ifdef STD_GLOSS_TEXTURE\n\tdGlossiness = dGlossiness * textureSampleBias({STD_GLOSS_TEXTURE_NAME}, {STD_GLOSS_TEXTURE_NAME}Sampler, {STD_GLOSS_TEXTURE_UV}, uniform.textureBias).{STD_GLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_GLOSS_VERTEX\n\tdGlossiness = dGlossiness * saturate(vVertexColor.{STD_GLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_GLOSS_INVERT\n\tdGlossiness = 1.0 - dGlossiness;\n\t#endif\n\tdGlossiness = dGlossiness + 0.0000001;\n}\n",gsplatCenterVS:"\nuniform matrix_model: mat4x4f;\nuniform matrix_view: mat4x4f;\n#ifndef GSPLAT_CENTER_NOPROJ\n\tuniform matrix_projection: mat4x4f;\n#endif\nfn initCenter(modelCenter: vec3f, center: ptr<function, SplatCenter>) -> bool {\n\tlet modelView: mat4x4f = uniform.matrix_view * uniform.matrix_model;\n\tlet centerView: vec4f = modelView * vec4f(modelCenter, 1.0);\n\t#ifndef GSPLAT_CENTER_NOPROJ\n\t\tif (centerView.z > 0.0) {\n\t\t\treturn false;\n\t\t}\n\t\tvar centerProj: vec4f = uniform.matrix_projection * centerView;\n\t\tcenterProj.z = clamp(centerProj.z, 0.0, abs(centerProj.w));\n\t\tcenter.proj = centerProj;\n\t\tcenter.projMat00 = uniform.matrix_projection[0][0];\n\t#endif\n\tcenter.view = centerView.xyz / centerView.w;\n\tcenter.modelView = modelView;\n\treturn true;\n}\n",gsplatCornerVS:"\nuniform viewport: vec2f;\nuniform camera_params: vec4f;\nfn initCornerCov(source: ptr<function, SplatSource>, center: ptr<function, SplatCenter>, corner: ptr<function, SplatCorner>, covA: vec3f, covB: vec3f) -> bool {\n\tlet Vrk = mat3x3f(\n\t\tvec3f(covA.x, covA.y, covA.z),\n\t\tvec3f(covA.y, covB.x, covB.y),\n\t\tvec3f(covA.z, covB.y, covB.z)\n\t);\n\tlet focal = uniform.viewport.x * center.projMat00;\n\tlet v = select(center.view.xyz, vec3f(0.0, 0.0, 1.0), uniform.camera_params.w == 1.0);\n\tlet J1 = focal / v.z;\n\tlet J2 = -J1 / v.z * v.xy;\n\tlet J = mat3x3f(\n\t\tvec3f(J1, 0.0, J2.x),\n\t\tvec3f(0.0, J1, J2.y),\n\t\tvec3f(0.0, 0.0, 0.0)\n\t);\n\tlet W = transpose(mat3x3f(center.modelView[0].xyz, center.modelView[1].xyz, center.modelView[2].xyz));\n\tlet T = W * J;\n\tlet cov = transpose(T) * Vrk * T;\n\t#if GSPLAT_AA\n\t\tlet detOrig = cov[0][0] * cov[1][1] - cov[0][1] * cov[1][0];\n\t\tlet detBlur = (cov[0][0] + 0.3) * (cov[1][1] + 0.3) - cov[0][1] * cov[1][0];\n\t\tcorner.aaFactor = sqrt(detOrig / detBlur);\n\t#endif\n\tlet diagonal1 = cov[0][0] + 0.3;\n\tlet offDiagonal = cov[0][1];\n\tlet diagonal2 = cov[1][1] + 0.3;\n\tlet mid = 0.5 * (diagonal1 + diagonal2);\n\tlet radius = length(vec2f((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tlet lambda1 = mid + radius;\n\tlet lambda2 = max(mid - radius, 0.1);\n\tlet vmin = min(1024.0, min(uniform.viewport.x, uniform.viewport.y));\n\tlet l1 = 2.0 * min(sqrt(2.0 * lambda1), vmin);\n\tlet l2 = 2.0 * min(sqrt(2.0 * lambda2), vmin);\n\tif (l1 < 2.0 && l2 < 2.0) {\n\t\treturn false;\n\t}\n\tlet c = center.proj.ww / uniform.viewport;\n\tif (any((abs(center.proj.xy) - vec2f(max(l1, l2)) * c) > center.proj.ww)) {\n\t\treturn false;\n\t}\n\tlet diagonalVector = normalize(vec2f(offDiagonal, lambda1 - diagonal1));\n\tlet v1 = l1 * diagonalVector;\n\tlet v2 = l2 * vec2f(diagonalVector.y, -diagonalVector.x);\n\tcorner.offset = (source.cornerUV.x * v1 + source.cornerUV.y * v2) * c;\n\tcorner.uv = source.cornerUV;\n\treturn true;\n}\nfn initCorner(source: ptr<function, SplatSource>, center: ptr<function, SplatCenter>, corner: ptr<function, SplatCorner>) -> bool {\n\tvar covA: vec3f;\n\tvar covB: vec3f;\n\treadCovariance(source, &covA, &covB);\n\treturn initCornerCov(source, center, corner, covA, covB);\n}\n",gsplatColorVS:"\nvar splatColor: texture_2d<f32>;\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\treturn textureLoad(splatColor, source.uv, 0);\n}\n",gsplatCommonVS:'\n#include "gsplatStructsVS"\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#include "gsplatSourceFormatVS"\n#include "gsplatSourceVS"\n#include "gsplatCenterVS"\n#include "gsplatCornerVS"\n#include "gsplatOutputVS"\nfn clipCorner(corner: ptr<function, SplatCorner>, alpha: f32) {\n\tlet clip: f32 = min(1.0, sqrt(-log(1.0 / (255.0 * alpha))) / 2.0);\n\tcorner.offset = corner.offset * clip;\n\tcorner.uv = corner.uv * clip;\n}\n',gsplatCompressedDataVS:"\nvar packedTexture: texture_2d<u32>;\nvar chunkTexture: texture_2d<f32>;\nvar<private> chunkDataA: vec4f;\nvar<private> chunkDataB: vec4f;\nvar<private> chunkDataC: vec4f;\nvar<private> chunkDataD: vec4f;\nvar<private> chunkDataE: vec4f;\nvar<private> packedData: vec4u;\nfn unpack111011(bits: u32) -> vec3f {\n\treturn (vec3f((vec3<u32>(bits) >> vec3<u32>(21u, 11u, 0u)) & vec3<u32>(0x7ffu, 0x3ffu, 0x7ffu))) / vec3f(2047.0, 1023.0, 2047.0);\n}\nfn unpack8888(bits: u32) -> vec4f {\n\treturn vec4f(\n\t\tf32((bits >> 24u) & 0xffu),\n\t\tf32((bits >> 16u) & 0xffu),\n\t\tf32((bits >> 8u)  & 0xffu),\n\t\tf32(bits\t\t & 0xffu)\n\t) / 255.0;\n}\nconst norm_const: f32 = 1.0 / (sqrt(2.0) * 0.5);\nfn unpackRotation(bits: u32) -> vec4f {\n\tlet a = (f32((bits >> 20u) & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet b = (f32((bits >> 10u) & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet c = (f32(bits & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet m = sqrt(1.0 - (a * a + b * b + c * c));\n\tlet mode = bits >> 30u;\n\tif (mode == 0u) { return vec4f(m, a, b, c); }\n\tif (mode == 1u) { return vec4f(a, m, b, c); }\n\tif (mode == 2u) { return vec4f(a, b, m, c); }\n\treturn vec4f(a, b, c, m);\n}\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tlet tex_size_u = textureDimensions(chunkTexture, 0);\n\tlet w: u32 = tex_size_u.x / 5u;\n\tlet chunkId: u32 = source.id / 256u;\n\tlet chunkUV: vec2<i32> = vec2<i32>(i32((chunkId % w) * 5u), i32(chunkId / w));\n\tchunkDataA = textureLoad(chunkTexture, chunkUV + vec2<i32>(0, 0), 0);\n\tchunkDataB = textureLoad(chunkTexture, chunkUV + vec2<i32>(1, 0), 0);\n\tchunkDataC = textureLoad(chunkTexture, chunkUV + vec2<i32>(2, 0), 0);\n\tchunkDataD = textureLoad(chunkTexture, chunkUV + vec2<i32>(3, 0), 0);\n\tchunkDataE = textureLoad(chunkTexture, chunkUV + vec2<i32>(4, 0), 0);\n\tpackedData = textureLoad(packedTexture, source.uv, 0);\n\treturn mix(chunkDataA.xyz, vec3f(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));\n}\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\tlet r = unpack8888(packedData.w);\n\treturn vec4f(mix(chunkDataD.xyz, vec3f(chunkDataD.w, chunkDataE.xy), r.rgb), r.w);\n}\nfn getRotation() -> vec4f {\n\treturn unpackRotation(packedData.y);\n}\nfn getScale() -> vec3f {\n\treturn exp(mix(vec3f(chunkDataB.zw, chunkDataC.x), chunkDataC.yzw, unpack111011(packedData.z)));\n}\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet rot = quatToMat3(getRotation());\n\tlet scale = getScale();\n\tlet M = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n",gsplatCompressedSHVS:"\n#if SH_BANDS > 0\nvar shTexture0: texture_2d<u32>;\nvar shTexture1: texture_2d<u32>;\nvar shTexture2: texture_2d<u32>;\nfn unpack8888s(bits: u32) -> vec4f {\n\tlet unpacked_u = (vec4<u32>(bits) >> vec4<u32>(0u, 8u, 16u, 24u)) & vec4<u32>(0xffu);\n\treturn vec4f(unpacked_u) * (8.0 / 255.0) - 4.0;\n}\nfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 15>>, scale: ptr<function, f32>) {\n\tlet shData0: vec4<u32> = textureLoad(shTexture0, source.uv, 0);\n\tlet shData1: vec4<u32> = textureLoad(shTexture1, source.uv, 0);\n\tlet shData2: vec4<u32> = textureLoad(shTexture2, source.uv, 0);\n\tlet r0 = unpack8888s(shData0.x);\n\tlet r1 = unpack8888s(shData0.y);\n\tlet r2 = unpack8888s(shData0.z);\n\tlet r3 = unpack8888s(shData0.w);\n\tlet g0 = unpack8888s(shData1.x);\n\tlet g1 = unpack8888s(shData1.y);\n\tlet g2 = unpack8888s(shData1.z);\n\tlet g3 = unpack8888s(shData1.w);\n\tlet b0 = unpack8888s(shData2.x);\n\tlet b1 = unpack8888s(shData2.y);\n\tlet b2 = unpack8888s(shData2.z);\n\tlet b3 = unpack8888s(shData2.w);\n\tsh[0] =  vec3f(r0.x, g0.x, b0.x);\n\tsh[1] =  vec3f(r0.y, g0.y, b0.y);\n\tsh[2] =  vec3f(r0.z, g0.z, b0.z);\n\tsh[3] =  vec3f(r0.w, g0.w, b0.w);\n\tsh[4] =  vec3f(r1.x, g1.x, b1.x);\n\tsh[5] =  vec3f(r1.y, g1.y, b1.y);\n\tsh[6] =  vec3f(r1.z, g1.z, b1.z);\n\tsh[7] =  vec3f(r1.w, g1.w, b1.w);\n\tsh[8] =  vec3f(r2.x, g2.x, b2.x);\n\tsh[9] =  vec3f(r2.y, g2.y, b2.y);\n\tsh[10] = vec3f(r2.z, g2.z, b2.z);\n\tsh[11] = vec3f(r2.w, g2.w, b2.w);\n\tsh[12] = vec3f(r3.x, g3.x, b3.x);\n\tsh[13] = vec3f(r3.y, g3.y, b3.y);\n\tsh[14] = vec3f(r3.z, g3.z, b3.z);\n\t*scale = 1.0;\n}\n#endif\n",gsplatEvalSHVS:"\n\t#if SH_BANDS == 1\n\t\tconst SH_COEFFS: i32 = 3;\n\t#elif SH_BANDS == 2\n\t\tconst SH_COEFFS: i32 = 8;\n\t#elif SH_BANDS == 3\n\t\tconst SH_COEFFS: i32 = 15;\n\t#else\n\t\tconst SH_COEFFS: i32 = 0;\n\t#endif\n\t#if SH_BANDS > 0\n\tconst SH_C1: f32 = 0.4886025119029199;\n\t#if SH_BANDS > 1\n\t\tconst SH_C2_0: f32 = 1.0925484305920792;\n\t\tconst SH_C2_1: f32 = -1.0925484305920792;\n\t\tconst SH_C2_2: f32 = 0.31539156525252005;\n\t\tconst SH_C2_3: f32 = -1.0925484305920792;\n\t\tconst SH_C2_4: f32 = 0.5462742152960396;\n\t#endif\n\t#if SH_BANDS > 2\n\t\tconst SH_C3_0: f32 = -0.5900435899266435;\n\t\tconst SH_C3_1: f32 = 2.890611442640554;\n\t\tconst SH_C3_2: f32 = -0.4570457994644658;\n\t\tconst SH_C3_3: f32 = 0.3731763325901154;\n\t\tconst SH_C3_4: f32 = -0.4570457994644658;\n\t\tconst SH_C3_5: f32 = 1.445305721320277;\n\t\tconst SH_C3_6: f32 = -0.5900435899266435;\n\t#endif\n\tfn evalSH(sh: ptr<function, array<vec3f, SH_COEFFS>>, dir: vec3f) -> vec3f {\n\t\tlet x = dir.x;\n\t\tlet y = dir.y;\n\t\tlet z = dir.z;\n\t\tvar result = SH_C1 * (-sh[0] * y + sh[1] * z - sh[2] * x);\n\t\t#if SH_BANDS > 1\n\t\t\tlet xx = x * x;\n\t\t\tlet yy = y * y;\n\t\t\tlet zz = z * z;\n\t\t\tlet xy = x * y;\n\t\t\tlet yz = y * z;\n\t\t\tlet xz = x * z;\n\t\t\tresult = result + (\n\t\t\t\tsh[3] * (SH_C2_0 * xy) +\n\t\t\t\tsh[4] * (SH_C2_1 * yz) +\n\t\t\t\tsh[5] * (SH_C2_2 * (2.0 * zz - xx - yy)) +\n\t\t\t\tsh[6] * (SH_C2_3 * xz) +\n\t\t\t\tsh[7] * (SH_C2_4 * (xx - yy))\n\t\t\t);\n\t\t#endif\n\t\t#if SH_BANDS > 2\n\t\t\tresult = result + (\n\t\t\t\tsh[8]  * (SH_C3_0 * y * (3.0 * xx - yy)) +\n\t\t\t\tsh[9]  * (SH_C3_1 * xy * z) +\n\t\t\t\tsh[10] * (SH_C3_2 * y * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[11] * (SH_C3_3 * z * (2.0 * zz - 3.0 * xx - 3.0 * yy)) +\n\t\t\t\tsh[12] * (SH_C3_4 * x * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[13] * (SH_C3_5 * z * (xx - yy)) +\n\t\t\t\tsh[14] * (SH_C3_6 * x * (xx - 3.0 * yy))\n\t\t\t);\n\t\t#endif\n\t\treturn result;\n\t}\n\t#endif\n",gsplatSourceFormatVS:'\n#if defined(GSPLAT_WORKBUFFER_DATA)\n\t#include "gsplatWorkBufferVS"\n#elif GSPLAT_COMPRESSED_DATA == true\n\t#include "gsplatCompressedDataVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatCompressedSHVS"\n\t#endif\n#elif GSPLAT_SOGS_DATA\n\t#include "gsplatSogsDataVS"\n\t#include "gsplatSogsColorVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatSogsSHVS"\n\t#endif\n#else\n\t#include "gsplatDataVS"\n\t#include "gsplatColorVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatSHVS"\n\t#endif\n#endif\n',gsplatStructsVS:"\nstruct SplatSource {\n\torder: u32,\n\tid: u32,\n\tuv: vec2<i32>,\n\tcornerUV: vec2f,\n}\nstruct SplatCenter {\n\tview: vec3f,\n\tproj: vec4f,\n\tmodelView: mat4x4f,\n\tprojMat00: f32,\n}\nstruct SplatCorner {\n\toffset: vec2f,\n\tuv: vec2f,\n\t#if GSPLAT_AA\n\t\taaFactor: f32,\n\t#endif\n}\n",gsplatQuatToMat3VS:"\nfn quatToMat3(R: vec4<f32>) -> mat3x3<f32> {\n\tlet R2: vec4<f32> = R + R;\n\tlet X: f32\t   = R2.x * R.w;\n\tlet Y: vec4<f32> = R2.y * R;\n\tlet Z: vec4<f32> = R2.z * R;\n\tlet W: f32\t   = R2.w * R.w;\n\treturn mat3x3<f32>(\n\t\t1.0 - Z.z - W,  Y.z + X,\t  Y.w - Z.x,\n\t\tY.z - X,\t\t1.0 - Y.y - W, Z.w + Y.x,\n\t\tY.w + Z.x,\t  Z.w - Y.x,\t 1.0 - Y.y - Z.z\n\t);\n}\n",gsplatSogsColorVS:"\nvar packedSh0: texture_2d<f32>;\nuniform sh0_mins: f32;\nuniform sh0_maxs: f32;\nconst SH_C0: f32 = 0.28209479177387814;\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\tlet clr = mix(vec3f(uniform.sh0_mins), vec3f(uniform.sh0_maxs), unpack111110(pack8888(textureLoad(packedSh0, source.uv, 0))));\n\tlet alpha = f32(packedSample.z & 0xffu) / 255.0;\n\treturn vec4f(vec3f(0.5) + clr.xyz * SH_C0, alpha);\n}\n",gsplatSogsDataVS:'\n#include "gsplatPackingPS"\nvar packedTexture: texture_2d<u32>;\nuniform means_mins: vec3f;\nuniform means_maxs: vec3f;\nuniform scales_mins: f32;\nuniform scales_maxs: f32;\nvar<private> packedSample: vec4<u32>;\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tpackedSample = textureLoad(packedTexture, source.uv, 0);\n\tlet l = unpack8888(packedSample.x).xyz;\n\tlet u = unpack8888(packedSample.y).xyz;\n\tlet n = (l * 255.0 + u * 255.0 * 256.0) / 65535.0;\n\tlet v = mix(uniform.means_mins, uniform.means_maxs, n);\n\treturn sign(v) * (exp(abs(v)) - 1.0);\n}\nconst norm: f32 = 2.0 / sqrt(2.0);\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet qdata = unpack8888(packedSample.z).xyz;\n\tlet sdata = unpack101010(packedSample.w >> 2u);\n\tlet qmode = packedSample.w & 0x3u;\n\tlet abc = (qdata - 0.5) * norm;\n\tlet d = sqrt(max(0.0, 1.0 - dot(abc, abc)));\n\tvar quat: vec4f;\n\tif (qmode == 0u) {\n\t\tquat = vec4f(d, abc);\n\t} else if (qmode == 1u) {\n\t\tquat = vec4f(abc.x, d, abc.y, abc.z);\n\t} else if (qmode == 2u) {\n\t\tquat = vec4f(abc.x, abc.y, d, abc.z);\n\t} else {\n\t\tquat = vec4f(abc.x, abc.y, abc.z, d);\n\t}\n\tlet rot = quatToMat3(quat);\n\tlet scale = exp(mix(vec3f(uniform.scales_mins), vec3f(uniform.scales_maxs), sdata));\n\tlet M = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n',gsplatSogsSHVS:"\nvar packedShN: texture_2d<f32>;\nuniform shN_mins: f32;\nuniform shN_maxs: f32;\nfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, SH_COEFFS>>, scale: ptr<function, f32>) {\n\tlet t = vec2i(packedSample.xy & vec2u(255u));\n\tlet n = t.x + t.y * 256;\n\tlet u = (n % 64) * SH_COEFFS;\n\tlet v = n / 64;\n\tfor (var i: i32 = 0; i < SH_COEFFS; i = i + 1) {\n\t\tsh[i] = mix(vec3f(uniform.shN_mins), vec3f(uniform.shN_maxs), unpack111110(pack8888(textureLoad(packedShN, vec2i(u + i, v), 0))));\n\t}\n\t*scale = 1.0;\n}\n",gsplatDataVS:"\nvar transformA: texture_2d<u32>;\nvar transformB: texture_2d<f32>;\nvar<private> tAw: u32;\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tlet tA: vec4<u32> = textureLoad(transformA, source.uv, 0);\n\ttAw = tA.w;\n\treturn bitcast<vec3f>(tA.xyz);\n}\nfn unpackRotation(packed: vec3f) -> vec4f {\n\treturn vec4f(packed.xyz, sqrt(max(0.0, 1.0 - dot(packed, packed))));\n}\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet tB: vec4f = textureLoad(transformB, source.uv, 0);\n\tlet rot: mat3x3f = quatToMat3(unpackRotation(vec3f(unpack2x16float(bitcast<u32>(tAw)), tB.w)).wxyz);\n\tlet scale: vec3f = tB.xyz;\n\tlet M = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n",gsplatOutputVS:'\n#include "tonemappingPS"\n#include "decodePS"\n#include "gammaPS"\nfn prepareOutputFromGamma(gammaColor: vec3f) -> vec3f {\n\t#if TONEMAP == NONE\n\t\t#if GAMMA == NONE\n\t\t\treturn decodeGamma3(gammaColor);\n\t\t#else \n\t\t\treturn gammaColor;\n\t\t#endif\n\t#else\n\t\treturn gammaCorrectOutput(toneMap(decodeGamma3(gammaColor)));\n\t#endif\n}\n',gsplatPS:'\n#ifndef DITHER_NONE\n\t#include "bayerPS"\n\t#include "opacityDitherPS"\n\tvarying id: f32;\n#endif\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\tuniform alphaClip: f32;\n#endif\n#ifdef PREPASS_PASS\n\tvarying vLinearDepth: f32;\n\t#include "floatAsUintPS"\n#endif\nconst EXP_A: f32\t  = 12102203.0;\nconst EXP_BC_RMS: i32 = 1064866808;\nfn fastExp(x: f32) -> f32 {\n\tvar i: i32 = i32(EXP_A * x) + EXP_BC_RMS;\n\treturn bitcast<f32>(i);\n}\nvarying gaussianUV: vec2f;\nvarying gaussianColor: vec4f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet A: f32 = dot(gaussianUV, gaussianUV);\n\tif (A > 1.0) {\n\t\tdiscard;\n\t\treturn output;\n\t}\n\tvar alpha: f32 = fastExp(-A * 4.0) * gaussianColor.a;\n\t#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\t\tif (alpha < uniform.alphaClip) {\n\t\t\tdiscard;\n\t\t\treturn output;\n\t\t}\n\t#endif\n\t#ifdef PICK_PASS\n\t\toutput.color = getPickOutput();\n\t#elif SHADOW_PASS\n\t\toutput.color = vec4f(0.0, 0.0, 0.0, 1.0);\n\t#elif PREPASS_PASS\n\t\toutput.color = float2vec4(vLinearDepth);\n\t#else\n\t\tif (alpha < (1.0 / 255.0)) {\n\t\t\tdiscard;\n\t\t\treturn output;\n\t\t}\n\t\t#ifndef DITHER_NONE\n\t\t\topacityDither(&alpha, id * 0.013);\n\t\t#endif\n\t\toutput.color = vec4f(input.gaussianColor.xyz * alpha, alpha);\n\t#endif\n\treturn output;\n}',gsplatSHVS:"\n#if SH_BANDS > 0\nfn unpack111011s(bits: u32) -> vec3f {\n\treturn (vec3f((vec3<u32>(bits) >> vec3<u32>(21u, 11u, 0u)) & vec3<u32>(0x7ffu, 0x3ffu, 0x7ffu)) / vec3f(2047.0, 1023.0, 2047.0)) * 2.0 - 1.0;\n}\nstruct ScaleAndSH {\n\tscale: f32,\n\ta: vec3f,\n\tb: vec3f,\n\tc: vec3f\n};\nfn fetchScale(t_in: vec4<u32>) -> ScaleAndSH {\n\tvar result: ScaleAndSH;\n\tresult.scale = bitcast<f32>(t_in.x);\n\tresult.a = unpack111011s(t_in.y);\n\tresult.b = unpack111011s(t_in.z);\n\tresult.c = unpack111011s(t_in.w);\n\treturn result;\n}\nstruct SH {\n\ta: vec3f,\n\tb: vec3f,\n\tc: vec3f,\n\td: vec3f\n};\nfn fetch4(t_in: vec4<u32>) -> SH {\n\tvar result: SH;\n\tresult.a = unpack111011s(t_in.x);\n\tresult.b = unpack111011s(t_in.y);\n\tresult.c = unpack111011s(t_in.z);\n\tresult.d = unpack111011s(t_in.w);\n\treturn result;\n}\nfn fetch1(t_in: u32) -> vec3f {\n\treturn unpack111011s(t_in);\n}\n#if SH_BANDS == 1\n\tvar splatSH_1to3: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 3>>, scale: ptr<function, f32>) {\n\t\tlet result = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = result.scale;\n\t\tsh[0] = result.a;\n\t\tsh[1] = result.b;\n\t\tsh[2] = result.c;\n\t}\n#elif SH_BANDS == 2\n\tvar splatSH_1to3: texture_2d<u32>;\n\tvar splatSH_4to7: texture_2d<u32>;\n\tvar splatSH_8to11: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 8>>, scale: ptr<function, f32>) {\n\t\tlet first: ScaleAndSH = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = first.scale;\n\t\tsh[0] = first.a;\n\t\tsh[1] = first.b;\n\t\tsh[2] = first.c;\n\t\tlet second: SH = fetch4(textureLoad(splatSH_4to7, source.uv, 0));\n\t\tsh[3] = second.a;\n\t\tsh[4] = second.b;\n\t\tsh[5] = second.c;\n\t\tsh[6] = second.d;\n\t\tsh[7] = fetch1(textureLoad(splatSH_8to11, source.uv, 0).x);\n\t}\n#else\n\tvar splatSH_1to3: texture_2d<u32>;\n\tvar splatSH_4to7: texture_2d<u32>;\n\tvar splatSH_8to11: texture_2d<u32>;\n\tvar splatSH_12to15: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 15>>, scale: ptr<function, f32>) {\n\t\tlet first: ScaleAndSH = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = first.scale;\n\t\tsh[0] = first.a;\n\t\tsh[1] = first.b;\n\t\tsh[2] = first.c;\n\t\tlet second: SH = fetch4(textureLoad(splatSH_4to7, source.uv, 0));\n\t\tsh[3] = second.a;\n\t\tsh[4] = second.b;\n\t\tsh[5] = second.c;\n\t\tsh[6] = second.d;\n\t\tlet third: SH = fetch4(textureLoad(splatSH_8to11, source.uv, 0));\n\t\tsh[7] = third.a;\n\t\tsh[8] = third.b;\n\t\tsh[9] = third.c;\n\t\tsh[10] = third.d;\n\t\tlet fourth: SH = fetch4(textureLoad(splatSH_12to15, source.uv, 0));\n\t\tsh[11] = fourth.a;\n\t\tsh[12] = fourth.b;\n\t\tsh[13] = fourth.c;\n\t\tsh[14] = fourth.d;\n\t}\n#endif\n#endif\n",gsplatSourceVS:"\nattribute vertex_position: vec3f;\nattribute vertex_id_attrib: u32;\nuniform numSplats: u32;\nvar splatOrder: texture_2d<u32>;\nfn initSource(source: ptr<function, SplatSource>) -> bool {\n\tlet w: u32 = textureDimensions(splatOrder, 0).x;\n\tsource.order = vertex_id_attrib + u32(vertex_position.z);\n\tif (source.order >= uniform.numSplats) {\n\t\treturn false;\n\t}\n\tlet orderUV = vec2i(vec2u(source.order % w, source.order / w));\n\tsource.id = textureLoad(splatOrder, orderUV, 0).r;\n\tsource.uv = vec2i(vec2u(source.id % w, source.id / w));\n\tsource.cornerUV = vertex_position.xy;\n\treturn true;\n}\n",gsplatVS:'\n#include "gsplatCommonVS"\nvarying gaussianUV: vec2f;\nvarying gaussianColor: vec4f;\n#ifndef DITHER_NONE\n\tvarying id: f32;\n#endif\nconst discardVec: vec4f = vec4f(0.0, 0.0, 2.0, 1.0);\n#ifdef PREPASS_PASS\n\tvarying vLinearDepth: f32;\n#endif\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tvar source: SplatSource;\n\tif (!initSource(&source)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tlet modelCenter: vec3f = readCenter(&source);\n\tvar center: SplatCenter;\n\tif (!initCenter(modelCenter, &center)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tvar corner: SplatCorner;\n\tif (!initCorner(&source, &center, &corner)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tvar clr: vec4f = readColor(&source);\n\t#if GSPLAT_AA\n\t\tclr.a = clr.a * corner.aaFactor;\n\t#endif\n\t#if SH_BANDS > 0\n\t\tlet modelView3x3 = mat3x3f(center.modelView[0].xyz, center.modelView[1].xyz, center.modelView[2].xyz);\n\t\tlet dir = normalize(center.view * modelView3x3);\n\t\tvar sh: array<vec3f, SH_COEFFS>;\n\t\tvar scale: f32;\n\t\treadSHData(&source, &sh, &scale);\n\t\tclr = vec4f(clr.xyz + evalSH(&sh, dir) * scale, clr.a);\n\t#endif\n\tclipCorner(&corner, clr.w);\n\toutput.position = center.proj + vec4f(corner.offset, 0.0, 0.0);\n\toutput.gaussianUV = corner.uv;\n\toutput.gaussianColor = vec4f(prepareOutputFromGamma(max(clr.xyz, vec3f(0.0))), clr.w);\n\t#ifndef DITHER_NONE\n\t\toutput.id = f32(source.id);\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\toutput.vLinearDepth = -center.view.z;\n\t#endif\n\treturn output;\n}\n',gsplatWorkBufferVS:"\nvar center: texture_2d<f32>;\nvar covA: texture_2d<f32>;\nvar covB: texture_2d<f32>;\nvar splatColor: texture_2d<f32>;\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\treturn textureLoad(center, source.uv, 0).xyz;\n}\nfn readCovariance(source: ptr<function, SplatSource>, cov_A: ptr<function, vec3f>, cov_B: ptr<function, vec3f>) {\n\t*cov_A = textureLoad(covA, source.uv, 0).xyz;\n\t*cov_B = textureLoad(covB, source.uv, 0).xyz;\n}\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\treturn textureLoad(splatColor, source.uv, 0);\n}   \n",gsplatPackingPS:br,quadVS:"\n\tattribute aPosition: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex fn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.aPosition, 0.0, 1.0);\n\t\toutput.uv0 = getImageEffectUV((input.aPosition + 1.0) * 0.5);\n\t\treturn output;\n\t}\n",indirectCoreCS:"\nstruct DrawIndexedIndirectArgs {\n\tindexCount: u32,\n\tinstanceCount: u32,\n\tfirstIndex: u32,\n\tbaseVertex: i32,\n\tfirstInstance: u32\n};\nstruct DrawIndirectArgs {\n\tvertexCount: u32,\n\tinstanceCount: u32,\n\tfirstVertex: u32,\n\tfirstInstance: u32,\n\t_pad: u32\n};\n",immediateLinePS:'\n\t#include "gammaPS"\n\tvarying color: vec4f;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\toutput.color = vec4f(gammaCorrectOutput(decodeGamma3(input.color.rgb)), input.color.a);\n\t\treturn output;\n\t}\n',immediateLineVS:"\n\tattribute vertex_position: vec4f;\n\tattribute vertex_color: vec4f;\n\tuniform matrix_model: mat4x4f;\n\tuniform matrix_viewProjection: mat4x4f;\n\tvarying color: vec4f;\n\t@vertex\n\tfn vertexMain(input : VertexInput) -> VertexOutput {\n\t\tvar output : VertexOutput;\n\t\toutput.color = input.vertex_color;\n\t\toutput.position = uniform.matrix_viewProjection * uniform.matrix_model * input.vertex_position;\n\t\treturn output;\n\t}\n",iridescenceDiffractionPS:"\nuniform material_iridescenceRefractionIndex: f32;\nfn iridescence_iorToFresnelScalar(transmittedIor: f32, incidentIor: f32) -> f32 {\n\treturn pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);\n}\nfn iridescence_iorToFresnelVec3(transmittedIor: vec3f, incidentIor: f32) -> vec3f {\n\treturn pow((transmittedIor - vec3f(incidentIor)) / (transmittedIor + vec3f(incidentIor)), vec3f(2.0));\n}\nfn iridescence_fresnelToIor(f0: vec3f) -> vec3f {\n\tlet sqrtF0: vec3f = sqrt(f0);\n\treturn (vec3f(1.0) + sqrtF0) / (vec3f(1.0) - sqrtF0);\n}\nconst XYZ_TO_REC709: mat3x3f = mat3x3f(\n\tvec3f(3.2404542, -1.5371385, -0.4985314),\n\tvec3f(-0.9692660,  1.8760108,  0.0415560),\n\tvec3f(0.0556434, -0.2040259,  1.0572252)\n);\nfn iridescence_sensitivity(opd: f32, shift: vec3f) -> vec3f {\n\tlet PI: f32 = 3.141592653589793;\n\tlet phase: f32 = 2.0 * PI * opd * 1.0e-9;\n\tconst val: vec3f = vec3f(5.4856e-13, 4.4201e-13, 5.2481e-13);\n\tconst pos: vec3f = vec3f(1.6810e+06, 1.7953e+06, 2.2084e+06);\n\tconst var_: vec3f = vec3f(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\tvar xyz: vec3f = val * sqrt(2.0 * PI * var_) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var_);\n\txyz.x = xyz.x + 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));\n\txyz = xyz / vec3f(1.0685e-07);\n\treturn XYZ_TO_REC709 * xyz;\n}\nfn iridescence_fresnelScalar(cosTheta: f32, f0: f32) -> f32 {\n\tlet x: f32 = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tlet x2: f32 = x * x;\n\tlet x5: f32 = x * x2 * x2;\n\treturn f0 + (1.0 - f0) * x5;\n}\nfn iridescence_fresnelVec3(cosTheta: f32, f0: vec3f) -> vec3f {\n\tlet x: f32 = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tlet x2: f32 = x * x;\n\tlet x5: f32 = x * x2 * x2;\n\treturn f0 + (vec3f(1.0) - f0) * x5;\n}\nfn calcIridescence(outsideIor: f32, cosTheta: f32, base_f0: vec3f, iridescenceThickness: f32) -> vec3f {\n\tlet PI: f32 = 3.141592653589793;\n\tlet iridescenceIor: f32 = mix(outsideIor, uniform.material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));\n\tlet sinTheta2Sq: f32 = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));\n\tlet cosTheta2Sq: f32 = 1.0 - sinTheta2Sq;\n\tif (cosTheta2Sq < 0.0) {\n\t\treturn vec3f(1.0);\n\t}\n\tlet cosTheta2: f32 = sqrt(cosTheta2Sq);\n\tlet r0: f32 = iridescence_iorToFresnelScalar(iridescenceIor, outsideIor);\n\tlet r12: f32 = iridescence_fresnelScalar(cosTheta, r0);\n\tlet r21: f32 = r12;\n\tlet t121: f32 = 1.0 - r12;\n\tlet phi12: f32 = select(0.0, PI, iridescenceIor < outsideIor);\n\tlet phi21: f32 = PI - phi12;\n\tlet baseIor: vec3f = iridescence_fresnelToIor(base_f0 + vec3f(0.0001));\n\tlet r1: vec3f = iridescence_iorToFresnelVec3(baseIor, iridescenceIor);\n\tlet r23: vec3f = iridescence_fresnelVec3(cosTheta2, r1);\n\tlet phi23: vec3f = select(vec3f(0.0), vec3f(PI), baseIor < vec3f(iridescenceIor));\n\tlet opd: f32 = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;\n\tlet phi: vec3f = vec3f(phi21) + phi23;\n\tlet r123Sq: vec3f = clamp(vec3f(r12) * r23, vec3f(1e-5), vec3f(0.9999));\n\tlet r123: vec3f = sqrt(r123Sq);\n\tlet rs: vec3f = pow(vec3f(t121), vec3f(2.0)) * r23 / (vec3f(1.0) - r123Sq);\n\tlet c0: vec3f = vec3f(r12) + rs;\n\tvar i_irid: vec3f = c0;\n\tvar cm: vec3f = rs - vec3f(t121);\n\tcm = cm * r123;\n\tlet sm1: vec3f = 2.0 * iridescence_sensitivity(1.0 * opd, 1.0 * phi);\n\ti_irid = i_irid + cm * sm1;\n\tcm = cm * r123;\n\tlet sm2: vec3f = 2.0 * iridescence_sensitivity(2.0 * opd, 2.0 * phi);\n\ti_irid = i_irid + cm * sm2;\n\treturn max(i_irid, vec3f(0.0));\n}\nfn getIridescenceDiffraction(cosTheta: f32, specularity: vec3f, iridescenceThickness: f32) -> vec3f {\n\treturn calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);\n}\n",iridescencePS:"\n#ifdef STD_IRIDESCENCE_CONSTANT\n\tuniform material_iridescence: f32;\n#endif\nfn getIridescence() {\n\tvar iridescence = 1.0;\n\t#ifdef STD_IRIDESCENCE_CONSTANT\n\tiridescence = iridescence * uniform.material_iridescence;\n\t#endif\n\t#ifdef STD_IRIDESCENCE_TEXTURE\n\tiridescence = iridescence * textureSampleBias({STD_IRIDESCENCE_TEXTURE_NAME}, {STD_IRIDESCENCE_TEXTURE_NAME}Sampler, {STD_IRIDESCENCE_TEXTURE_UV}, uniform.textureBias).{STD_IRIDESCENCE_TEXTURE_CHANNEL};\n\t#endif\n\tdIridescence = iridescence; \n}\n",iridescenceThicknessPS:"\nuniform material_iridescenceThicknessMax: f32;\n#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\tuniform material_iridescenceThicknessMin: f32;\n#endif\nfn getIridescenceThickness() {\n\t#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\t\tvar blend: f32 = textureSampleBias({STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}, {STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}Sampler, {STD_IRIDESCENCETHICKNESS_TEXTURE_UV}, uniform.textureBias).{STD_IRIDESCENCETHICKNESS_TEXTURE_CHANNEL};\n\t\tvar iridescenceThickness: f32 = mix(uniform.material_iridescenceThicknessMin, uniform.material_iridescenceThicknessMax, blend);\n\t#else\n\t\tvar iridescenceThickness: f32 = uniform.material_iridescenceThicknessMax;\n\t#endif\n\tdIridescenceThickness = iridescenceThickness; \n}\n",iorPS:"\n#ifdef STD_IOR_CONSTANT\n\tuniform material_refractionIndex: f32;\n#endif\nfn getIor() {\n#ifdef STD_IOR_CONSTANT\n\tdIor = uniform.material_refractionIndex;\n#else\n\tdIor = 1.0 / 1.5;\n#endif\n}\n",lightDeclarationPS:"\n#if defined(LIGHT{i})\n\tuniform light{i}_color: vec3f;\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tuniform light{i}_direction: vec3f;\n\t#else\n\t\t#define LIT_CODE_LIGHTS_POINT\n\t\tuniform light{i}_position: vec3f;\n\t\tuniform light{i}_radius: f32;\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#define LIT_CODE_LIGHTS_SPOT\n\t\t\tuniform light{i}_direction: vec3f;\n\t\t\tuniform light{i}_innerConeAngle: f32;\n\t\t\tuniform light{i}_outerConeAngle: f32;\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform light{i}_position: vec3f;\n\t\t#endif\n\t\tuniform light{i}_halfWidth: vec3f;\n\t\tuniform light{i}_halfHeight: vec3f;\n\t#else\n\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t#define LIT_CODE_FALLOFF_LINEAR\n\t\t#endif\n\t\t#if LIGHT{i}FALLOFF == INVERSESQUARED\n\t\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}CASTSHADOW)\n\t\tuniform light{i}_shadowMatrix: mat4x4f;\n\t\tuniform light{i}_shadowIntensity: f32;\n\t\tuniform light{i}_shadowParams: vec4f;\n\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\tuniform light{i}_shadowSearchArea: f32;\n\t\t\tuniform light{i}_cameraParams: vec4f;\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t\tuniform light{i}_softShadowParams: vec4f;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform light{i}_shadowMatrixPalette: array<mat4x4f, 4>;\n\t\t\tuniform light{i}_shadowCascadeDistances: vec4f;\n\t\t\tuniform light{i}_shadowCascadeCount: i32;\n\t\t\tuniform light{i}_shadowCascadeBlend: f32;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tNOT SUPPORTED\n\t\t\t\n\t\t#else\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tvar light{i}_shadowMap: texture_depth_2d;\n\t\t\t\tvar light{i}_shadowMapSampler: sampler_comparison;\n\t\t\t#else\n\t\t\t\tvar light{i}_shadowMap: texture_2d<f32>;\n\t\t\t\tvar light{i}_shadowMapSampler: sampler;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}COOKIE)\n\t\t#define LIT_CODE_COOKIE\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tNOT SUPPORTED\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\tNOT SUPPORTED\n\t\t#endif\n\t#endif\n#endif\n",lightDiffuseLambertPS:"\nfn getLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\treturn max(dot(worldNormal, -lightDirNorm), 0.0);\n}\n",lightDirPointPS:"\nfn evalOmniLight(lightPosW: vec3f) -> vec3f {\n\treturn vPositionW - lightPosW;\n}\n",lightEvaluationPS:"\n#if defined(LIGHT{i})\n\tevaluateLight{i}(\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel\n\t\t#endif\n\t);\n#endif\n",lightFunctionLightPS:"\n#if defined(LIGHT{i})\nfn evaluateLight{i}(\n\t#if defined(LIT_IRIDESCENCE)\n\t\tiridescenceFresnel: vec3f\n\t#endif\n) {\n\tvar lightColor: vec3f = uniform.light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL && !defined(LIT_SHADOW_CATCHER)\n\t\tif (all(lightColor == vec3f(0.0, 0.0, 0.0))) {\n\t\t\treturn;\n\t\t}\n\t#endif\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tdLightDirNormW = uniform.light{i}_direction;\n\t\tdAtten = 1.0;\n\t#else\n\t\tvar lightDirW: vec3f = evalOmniLight(uniform.light{i}_position);\n\t\tdLightDirNormW = normalize(lightDirW);\n\t\t#if defined(LIGHT{i}COOKIE)\n\t\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t\t#ifdef LIGHT{i}COOKIE_FALLOFF\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DXform(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity, uniform.light{i}_cookieMatrix, uniform.light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2D(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DClipXform(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity, uniform.light{i}_cookieMatrix, uniform.light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DClip(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t\tvar cookieAttenuation: vec3f = getCookieCube(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t#endif\n\t\t\tlightColor = lightColor * cookieAttenuation;\n\t\t#endif\n\t\t#if LIGHT{i}SHAPE == PUNCTUAL\n\t\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t\tdAtten = getFalloffLinear(uniform.light{i}_radius, lightDirW);\n\t\t\t#else\n\t\t\t\tdAtten = getFalloffInvSquared(uniform.light{i}_radius, lightDirW);\n\t\t\t#endif\n\t\t#else\n\t\t\tdAtten = getFalloffWindow(uniform.light{i}_radius, lightDirW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if !defined(LIGHT{i}COOKIE) || defined(LIGHT{i}COOKIE_FALLOFF)\n\t\t\t\tdAtten = dAtten * getSpotEffect(uniform.light{i}_direction, uniform.light{i}_innerConeAngle, uniform.light{i}_outerConeAngle, dLightDirNormW);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tif (dAtten < 0.00001) {\n\t\treturn;\n\t}\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\tcalcRectLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\tcalcDiskLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\tcalcSphereLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar attenDiffuse: f32 = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirNormW);\n\t\t#else\n\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\tvar attenDiffuse: f32 = getRectLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\tvar attenDiffuse: f32 = getDiskLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\tvar attenDiffuse: f32 = getSphereLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tdAtten = dAtten * getLightDiffuse(litArgs_worldNormal, vec3(0.0), dLightDirNormW);\n\t#endif\n\t#ifdef LIGHT{i}CASTSHADOW\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar shadow: f32 = getShadow{i}(vec3(0.0));\n\t\t#else\n\t\t\tvar shadow: f32 = getShadow{i}(lightDirW);\n\t\t#endif\n\t\tshadow = mix(1.0, shadow, uniform.light{i}_shadowIntensity);\n\t\tdAtten = dAtten * shadow;\n\t\t#if defined(LIT_SHADOW_CATCHER) && LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tdShadowCatcher = dShadowCatcher * shadow;\n\t\t#endif\t\t\t\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight + (((attenDiffuse * dAtten) * lightColor) * (1.0 - dLTCSpecFres));\n\t\t#else\n\t\t\tdDiffuseLight = dDiffuseLight + ((attenDiffuse * dAtten) * lightColor);\n\t\t#endif\t\t\t\t\t\t\n\t#else\n\t\t#if defined(AREA_LIGHTS) && defined(LIT_SPECULAR)\n\t\t\tdDiffuseLight = dDiffuseLight + ((dAtten * lightColor) * (1.0 - litArgs_specularity));\n\t\t#else\n\t\t\tdDiffuseLight = dDiffuseLight + (dAtten * lightColor);\n\t\t#endif\n\t#endif\n\t#ifdef LIGHT{i}AFFECT_SPECULARITY\n\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getRectLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getDiskLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getSphereLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getRectLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getDiskLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getSphereLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#else\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL && LIT_FRESNEL_MODEL != NONE\n\t\t\t\t#define LIGHT{i}FRESNEL\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar halfDirW: vec3f = normalize(-dLightDirNormW + dViewDirW);\n\t\t\t#endif\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tvar lightspecularCC: vec3f = getLightSpecular(halfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\tlightspecularCC = lightspecularCC * getFresnelCC(dot(dViewDirW, halfDirW));\n\t\t\t\t#endif\n\t\t\t\tccSpecularLight = ccSpecularLight + lightspecularCC;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tsSpecularLight = sSpecularLight + (getLightSpecularSheen(halfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * lightColor);\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar lightSpecular: vec3f = getLightSpecular(halfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tlightSpecular = lightSpecular * getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity, iridescenceFresnel, litArgs_iridescence_intensity);\n\t\t\t\t\t#else\n\t\t\t\t\t\tlightSpecular = lightSpecular * getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity);\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\tlightSpecular = lightSpecular * litArgs_specularity;\n\t\t\t\t#endif\n\t\t\t\t\n\t\t\t\tdSpecularLight = dSpecularLight + lightSpecular;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n}\n#endif\n",lightFunctionShadowPS:"\n#ifdef LIGHT{i}CASTSHADOW\n\tfn getShadowSampleCoord{i}(shadowTransform: mat4x4f, shadowParams: vec4f, worldPosition: vec3f, lightPos: vec3f, lightDir: ptr<function, vec3f>, lightDirNorm: vec3f, normal: vec3f) -> vec3f {\n\t\tvar surfacePosition = worldPosition;\n\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_POINT\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\tlet distScale: f32 = length(*lightDir);\n\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t*lightDir = surfacePosition - lightPos;\n\t\t\t\treturn *lightDir;\n\t\t\t#endif\n\t\t#else\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y;\n\t\t\t\t#endif\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\t\t\tvar distScale: f32 = 1.0;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar distScale: f32 = abs(dot(vPositionW - lightPos, lightDirNorm));\n\t\t\t\t\t#endif\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvar positionInShadowSpace: vec4f = shadowTransform * vec4f(surfacePosition, 1.0);\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\tpositionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t\tpositionInShadowSpace.xyz = positionInShadowSpace.xyz / positionInShadowSpace.w;\n\t\t\t\t#else\n\t\t\t\t\tpositionInShadowSpace.xy = positionInShadowSpace.xy / positionInShadowSpace.w;\n\t\t\t\t\tpositionInShadowSpace.z = length(*lightDir) * shadowParams.w;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef SHADOW_SAMPLE_Z_BIAS\n\t\t\t#endif\n\t\t\tsurfacePosition = positionInShadowSpace.xyz;\n\t\t#endif\n\t\treturn surfacePosition;\n\t}\n\tfn getShadow{i}(lightDirW_in: vec3f) -> f32 {\n\t\t#ifdef LIGHT{i}_SHADOW_CASCADES\n\t\t\tvar cascadeIndex: i32 = getShadowCascadeIndex(uniform.light{i}_shadowCascadeDistances, uniform.light{i}_shadowCascadeCount);\n\t\t\t#ifdef LIGHT{i}_SHADOW_CASCADE_BLEND\n\t\t\t\tcascadeIndex = ditherShadowCascadeIndex(cascadeIndex, uniform.light{i}_shadowCascadeDistances, uniform.light{i}_shadowCascadeCount, uniform.light{i}_shadowCascadeBlend);\n\t\t\t#endif\n\t\t\tvar shadowMatrix: mat4x4f = uniform.light{i}_shadowMatrixPalette[cascadeIndex];\n\t\t#else\n\t\t\tvar shadowMatrix: mat4x4f = uniform.light{i}_shadowMatrix;\n\t\t#endif\n\t\tvar lightDirArg = lightDirW_in;\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar shadowCoord: vec3f = getShadowSampleCoord{i}(shadowMatrix, uniform.light{i}_shadowParams, vPositionW, vec3f(0.0), &lightDirArg, dLightDirNormW, dVertexNormalW);\n\t\t#else\n\t\t\t var shadowCoord: vec3f = getShadowSampleCoord{i}(shadowMatrix, uniform.light{i}_shadowParams, vPositionW, uniform.light{i}_position, &lightDirArg, dLightDirNormW, dVertexNormalW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tshadowCoord = fadeShadow(shadowCoord, uniform.light{i}_shadowCascadeDistances);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowVSM16(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 5.54);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowVSM32(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 15.0);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tlet shadowSearchArea = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t\treturn getShadowPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t\t#else\n\t\t\t\t\treturn getShadowPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, uniform.light{i}_softShadowParams, lightDirW_in);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowPCF5x5(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowSpotVSM16(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 5.54, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowSpotVSM32(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 15.0, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(uniform.light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowSpotPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowSpotPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowSpotPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowSpotPCF5x5(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t var shadowSearchArea: vec2f;\n\t\t\t\t #if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(uniform.light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowOmniPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowOmniPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowOmniPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, lightDirW_in);\n\t\t\t#endif\n\t\t#endif\n\t}\n#endif\n",lightingPS:'\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#define LIT_CODE_FALLOFF_LINEAR\n\t#define LIT_CODE_FALLOFF_SQUARED\n\t#define LIT_CODE_LIGHTS_POINT\n\t#define LIT_CODE_LIGHTS_SPOT\n#endif\n#ifdef AREA_LIGHTS\n\tvar areaLightsLutTex1: texture_2d<f32>;\n\tvar areaLightsLutTex1Sampler: sampler;\n\tvar areaLightsLutTex2: texture_2d<f32>;\n\tvar areaLightsLutTex2Sampler: sampler;\n#endif\n#ifdef LIT_LIGHTING\n\t#include "lightDiffuseLambertPS"\n\t#if defined(AREA_LIGHTS) || defined(LIT_CLUSTERED_AREA_LIGHTS)\n\t\t#include "ltcPS"\n\t#endif\n#endif\n#ifdef SHADOW_DIRECTIONAL\n\t#include "shadowCascadesPS"\n#endif\n#if defined(SHADOW_KIND_PCF1)\n\t#include "shadowPCF1PS"\n#endif\n#if defined(SHADOW_KIND_PCF3)\n\t#include "shadowPCF3PS"\n#endif\n#if defined(SHADOW_KIND_PCF5)\n\t#include "shadowPCF5PS"\n#endif\n#if defined(SHADOW_KIND_PCSS)\n\t#include "linearizeDepthPS"\n\t#include "shadowSoftPS"\n#endif\n#if defined(SHADOW_KIND_VSM)\n\t#include "shadowEVSMPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_LINEAR\n\t#include "falloffLinearPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_SQUARED\n\t#include "falloffInvSquaredPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_POINT\n\t#include "lightDirPointPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_SPOT\n\t#include "spotPS"\n#endif\n#ifdef LIT_CODE_COOKIE\n\t#include "cookiePS"\n#endif\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#include "clusteredLightPS"\n#endif\n#ifdef LIGHT_COUNT > 0\n\t#include "lightFunctionShadowPS, LIGHT_COUNT"\n\t#include "lightFunctionLightPS, LIGHT_COUNT"\n#endif\n',lightmapAddPS:"\nfn addLightMap(\n\tlightmap: vec3f,\n\tdir: vec3f,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n\tgloss: f32,\n\tspecularity: vec3f,\n\tvertexNormal: vec3f,\n\ttbn: mat3x3f\n#if defined(LIT_IRIDESCENCE)\n\t, iridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\t#if defined(LIT_SPECULAR) && defined(LIT_DIR_LIGHTMAP)\n\t\tif (dot(dir, dir) < 0.0001) {\n\t\t\t\tdDiffuseLight = dDiffuseLight + lightmap;\n\t\t} else {\n\t\t\tlet vlight: f32 = saturate(dot(dir, -vertexNormal));\n\t\t\tlet flight: f32 = saturate(dot(dir, -worldNormal));\n\t\t\tlet nlight: f32 = (flight / max(vlight, 0.01)) * 0.5;\n\t\t\tdDiffuseLight = dDiffuseLight + lightmap * nlight * 2.0;\n\t\t\tlet halfDir: vec3f = normalize(-dir + viewDir);\n\t\t\tvar specularLight: vec3f = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);\n\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\tspecularLight = specularLight *\n\t\t\t\t\tgetFresnel(dot(viewDir, halfDir),\n\t\t\t\t\tgloss,\n\t\t\t\t\tspecularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tiridescenceIntensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#endif\n\t\t\tdSpecularLight = dSpecularLight + specularLight;\n\t\t}\n\t#else\n\t\tdDiffuseLight = dDiffuseLight + lightmap;\n\t#endif\n}\n",lightmapPS:"\n#ifdef STD_LIGHTMAP_DIR\n\tvar<private> dLightmapDir: vec3f;\n\tvar texture_dirLightMap: texture_2d<f32>;\n\tvar texture_dirLightMapSampler: sampler;\n#endif\nfn getLightMap() {\n\tdLightmap = vec3f(1.0);\n\t#ifdef STD_LIGHT_TEXTURE\n\t\tdLightmap = dLightmap * {STD_LIGHT_TEXTURE_DECODE}(textureSampleBias({STD_LIGHT_TEXTURE_NAME}, {STD_LIGHT_TEXTURE_NAME}Sampler, {STD_LIGHT_TEXTURE_UV}, uniform.textureBias)).{STD_LIGHT_TEXTURE_CHANNEL};\n\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\tvar dir: vec3f = textureSampleBias(texture_dirLightMap, texture_dirLightMapSampler, {STD_LIGHT_TEXTURE_UV}, uniform.textureBias).xyz * 2.0 - 1.0;\n\t\t\tvar dirDot = dot(dir, dir);\n\t\t\tdLightmapDir = select(vec3(0.0), dir / sqrt(dirDot), dirDot > 0.001);\n\t\t#endif\n\t#endif\n\t#ifdef STD_LIGHT_VERTEX\n\t\tdLightmap = dLightmap * saturate(vVertexColor.{STD_LIGHT_VERTEX_CHANNEL});\n\t#endif\n}\n",lightSpecularAnisoGGXPS:"\nfn calcLightSpecular(gloss: f32, worldNormal: vec3f, viewDir: vec3f, h: vec3f, lightDirNorm: vec3f, tbn: mat3x3f) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet roughness: f32 = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\tlet alphaRoughness: f32 = roughness * roughness;\n\tlet anisotropy: f32 = dAnisotropy;\n\tlet direction: vec2f = dAnisotropyRotation;\n\tlet at: f32 = mix(alphaRoughness, 1.0, anisotropy * anisotropy);\n\tlet ab: f32 = clamp(alphaRoughness, 0.001, 1.0);\n\tlet anisotropicT: vec3f = normalize(tbn * vec3f(direction, 0.0));\n\tlet anisotropicB: vec3f = normalize(cross(tbn[2], anisotropicT));\n\tlet NoH: f32 = dot(worldNormal, h);\n\tlet ToH: f32 = dot(anisotropicT, h);\n\tlet BoH: f32 = dot(anisotropicB, h);\n\tlet a2: f32 = at * ab;\n\tlet v: vec3f = vec3f(ab * ToH, at * BoH, a2 * NoH);\n\tlet v2: f32 = dot(v, v);\n\tlet w2: f32 = a2 / v2;\n\tlet D: f32 = a2 * w2 * w2 * (1.0 / PI);\n\tlet ToV: f32 = dot(anisotropicT, viewDir);\n\tlet BoV: f32 = dot(anisotropicB, viewDir);\n\tlet ToL: f32 = dot(anisotropicT, -lightDirNorm);\n\tlet BoL: f32 = dot(anisotropicB, -lightDirNorm);\n\tlet NoV: f32 = dot(worldNormal, viewDir);\n\tlet NoL: f32 = dot(worldNormal, -lightDirNorm);\n\tlet lambdaV: f32 = NoL * length(vec3f(at * ToV, ab * BoV, NoV));\n\tlet lambdaL: f32 = NoV * length(vec3f(at * ToL, ab * BoL, NoL));\n\tlet G: f32 = 0.5 / (lambdaV + lambdaL);\n\treturn D * G;\n}\nfn getLightSpecular(h: vec3f, reflDir: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, gloss: f32, tbn: mat3x3f) -> f32 {\n\treturn calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);\n}\n",lightSpecularBlinnPS:"\nfn calcLightSpecular(gloss: f32, worldNormal: vec3f, h: vec3f) -> f32 {\n\tlet nh: f32 = max( dot( h, worldNormal ), 0.0 );\n\tvar specPow: f32 = exp2(gloss * 11.0);\n\tspecPow = max(specPow, 0.0001);\n\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\nfn getLightSpecular(h: vec3f, reflDir: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, gloss: f32, tbn: mat3x3f) -> f32 {\n\treturn calcLightSpecular(gloss, worldNormal, h);\n}\n",lightSheenPS:"\nfn sheenD(normal: vec3f, h: vec3f, roughness: f32) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet invR: f32 = 1.0 / (roughness * roughness);\n\tvar cos2h: f32 = max(dot(normal, h), 0.0);\n\tcos2h = cos2h * cos2h;\n\tlet sin2h: f32 = max(1.0 - cos2h, 0.0078125);\n\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\nfn sheenV(normal: vec3f, viewDir: vec3f, light: vec3f) -> f32 {\n\tlet NoV: f32 = max(dot(normal, viewDir), 0.000001);\n\tlet NoL: f32 = max(dot(normal, light), 0.000001);\n\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\nfn getLightSpecularSheen(h: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, sheenGloss: f32) -> f32 {\n\tlet D: f32 = sheenD(worldNormal, h, sheenGloss);\n\tlet V: f32 = sheenV(worldNormal, viewDir, -lightDirNorm);\n\treturn D * V;\n}",linearizeDepthPS:"\n#ifndef LINEARIZE_DEPTH\n#define LINEARIZE_DEPTH\nfn linearizeDepthWithParams(z: f32, cameraParams: vec4f) -> f32 {\n\tif (cameraParams.w == 0.0) {\n\t\treturn (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));\n\t} else {\n\t\treturn cameraParams.z + z * (cameraParams.y - cameraParams.z);\n\t}\n}\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nfn linearizeDepth(z: f32) -> f32 {\n\treturn linearizeDepthWithParams(z, uniform.camera_params);\n}\n#endif\n",litForwardBackendPS:'\nfn evaluateBackend() -> FragmentOutput {\n\tvar output: FragmentOutput;\n\t#ifdef LIT_SSAO\n\t\tlitArgs_ao = litArgs_ao * textureSampleLevel(ssaoTexture, ssaoTextureSampler, pcPosition.xy * uniform.ssaoTextureSizeInv, 0.0).r;\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tgetReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t#ifdef LIT_METALNESS\n\t\t\tvar f0: f32 = 1.0 / litArgs_ior;\n\t\t\tf0 = (f0 - 1.0) / (f0 + 1.0);\n\t\t\tf0 = f0 * f0;\n\t\t\tlitArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);\n\t\t\tlitArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvar iridescenceFresnel: vec3f = getIridescenceDiffraction(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_ADD_AMBIENT\n\t\taddAmbient(litArgs_worldNormal);\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);\n\t\t#endif\n\t\t#ifdef LIT_SEPARATE_AMBIENT\n\t\t\tvar dAmbientLight: vec3f = dDiffuseLight;\n\t\t\tdDiffuseLight = vec3(0.0);\n\t\t#endif\n\t#endif\n\t#ifndef LIT_OLD_AMBIENT\n\t\tdDiffuseLight = dDiffuseLight * uniform.material_ambient;\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifndef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_LIGHTMAP\n\t\taddLightMap(\n\t\t\tlitArgs_lightmap, \n\t\t\tlitArgs_lightmapDir, \n\t\t\tlitArgs_worldNormal, \n\t\t\tdViewDirW, \n\t\t\tdReflDirW, \n\t\t\tlitArgs_gloss, \n\t\t\tlitArgs_specularity, \n\t\t\tdVertexNormalW,\n\t\t\tdTBN\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tlitArgs_iridescence_intensity\n\t\t#endif\n\t\t);\n\t#endif\n\t#ifdef LIT_LIGHTING || LIT_REFLECTIONS\n\t\t#ifdef LIT_REFLECTIONS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\taddReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);\n\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t\t\t\tccReflection = ccReflection * ccFresnel;\n\t\t\t\t#else\n\t\t\t\t\tccFresnel = 0.0;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tccReflection = ccReflection * litArgs_specularityFactor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\taddReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);\n\t\t\t#endif\n\t\t\taddReflection(dReflDirW, litArgs_gloss);\n\t\t\t#ifdef LIT_FRESNEL_MODEL\n\t\t\t\tdReflection = vec4f(\n\t\t\t\t\tdReflection.rgb * getFresnel(\n\t\t\t\t\t\tdot(dViewDirW, litArgs_worldNormal),\n\t\t\t\t\t\tlitArgs_gloss,\n\t\t\t\t\t\tlitArgs_specularity\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t\t#endif\n\t\t\t\t\t\t),\n\t\t\t\t\tdReflection.a\n\t\t\t\t);\n\t\t\t#else\n\t\t\t\tdReflection = vec4f(dReflection.rgb * litArgs_specularity, dReflection.a);\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tdReflection = vec4f(dReflection.rgb * litArgs_specularityFactor, dReflection.a);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\tdSpecularLight = dSpecularLight * litArgs_specularity;\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tcalcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIGHT_COUNT > 0\n\t\t\t#include "lightEvaluationPS, LIGHT_COUNT"\n\t\t#endif\n\t\t#ifdef LIT_CLUSTERED_LIGHTS\n\t\t\taddClusteredLights(litArgs_worldNormal, dViewDirW, dReflDirW,\n\t\t\t\t#if defined(LIT_CLEARCOAT)\n\t\t\t\t\t\tccReflDirW,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_gloss, litArgs_specularity, dVertexNormalW, dTBN, \n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tiridescenceFresnel,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_clearcoat_worldNormal, litArgs_clearcoat_gloss, litArgs_sheen_gloss, litArgs_iridescence_intensity\n\t\t\t);\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tlitArgs_clearcoat_specularity = 1.0;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlitArgs_specularity = vec3(1.0);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\taddRefraction(\n\t\t\t\tlitArgs_worldNormal, \n\t\t\t\tdViewDirW, \n\t\t\t\tlitArgs_thickness, \n\t\t\t\tlitArgs_gloss, \n\t\t\t\tlitArgs_specularity, \n\t\t\t\tlitArgs_albedo, \n\t\t\t\tlitArgs_transmission,\n\t\t\t\tlitArgs_ior,\n\t\t\t\tlitArgs_dispersion\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel, \n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifdef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\t\toccludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULARITY_FACTOR\n\t\tdSpecularLight = dSpecularLight * litArgs_specularityFactor;\n\t#endif\n\t#if !defined(LIT_OPACITY_FADES_SPECULAR)\n\t\t#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == PREMULTIPLIED\n\t\t\tvar specLum: f32 = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3f( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tspecLum = specLum + dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection * litArgs_clearcoat_specularity, vec3f( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#endif\n\t\t\tlitArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);\n\t\t#endif\n\t\tlitArgs_opacity = litArgs_opacity * uniform.material_alphaFade;\n\t#endif\n\t#ifdef LIT_LIGHTMAP_BAKING\n\t\t#ifdef LIT_LIGHTMAP_BAKING_COLOR\n\t\t\t#include "bakeLmEndPS"\n\t\t#endif\n\t\t#ifdef LIT_LIGHTMAP_BAKING_DIR\n\t\t\t#include "bakeDirLmEndPS"\n\t\t#endif\n\t#else\n\t\t#include "endPS"\n\t\t#include "outputAlphaPS"\n\t#endif\n\t#ifdef LIT_MSDF\n\t\toutput.color = applyMsdf(output.color);\n\t#endif\n\t#include "outputPS"\n\t#include "debugOutputPS"\n\t#ifdef LIT_SHADOW_CATCHER\n\t\toutput.color = vec4f(vec3f(dShadowCatcher), output.color.a);\n\t#endif\n\treturn output;\n}\n',litForwardDeclarationPS:'\nvar<private> sReflection: vec3f;\nvar<private> dVertexNormalW: vec3f;\nvar<private> dTangentW: vec3f;\nvar<private> dBinormalW: vec3f;\nvar<private> dViewDirW: vec3f;\nvar<private> dReflDirW: vec3f;\nvar<private> ccReflDirW: vec3f;\nvar<private> dLightDirNormW: vec3f;\nvar<private> dAtten: f32;\nvar<private> dTBN: mat3x3f;\nvar<private> dReflection: vec4f;\nvar<private> dDiffuseLight: vec3f;\nvar<private> dSpecularLight: vec3f;\nvar<private> ccFresnel: f32;\nvar<private> ccReflection: vec3f;\nvar<private> ccSpecularLight: vec3f;\nvar<private> ccSpecularityNoFres: f32;\nvar<private> sSpecularLight: vec3f;\n#ifdef LIT_DISPERSION\n\tuniform material_dispersion: f32;\n#endif\n#ifndef LIT_OPACITY_FADES_SPECULAR\n\tuniform material_alphaFade: f32;\n#endif\n#ifdef LIT_SSAO\n\tvar ssaoTexture : texture_2d<f32>;\n\tvar ssaoTextureSampler : sampler;\n\tuniform ssaoTextureSizeInv: vec2f;\n#endif\n#ifdef LIT_SHADOW_CATCHER\n\tvar<private> dShadowCatcher: f32 = 1.0;\n#endif\n#if LIGHT_COUNT > 0\n\t#include "lightDeclarationPS, LIGHT_COUNT"\n#endif\n#ifdef LIT_SPECULAR\n\t#if LIT_FRESNEL_MODEL == NONE && !defined(LIT_REFLECTIONS) && !defined(LIT_DIFFUSE_MAP) \n\t\t#define LIT_OLD_AMBIENT\n\t#endif\n#endif\n#ifdef STD_LIGHTMAP_DIR\n\tuniform bakeDir: f32;\n#endif\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tuniform ambientBakeOcclusionContrast: f32;\n\tuniform ambientBakeOcclusionBrightness: f32;\n#endif\n',litForwardMainPS:'\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tdReflection = vec4f(0.0);\n\t#ifdef LIT_CLEARCOAT\n\t\tccSpecularLight = vec3f(0.0);\n\t\tccReflection = vec3f(0.0);\n\t#endif\n\t#if LIT_NONE_SLICE_MODE == SLICED\n\t\t#include "startNineSlicedPS"\n\t#elif LIT_NONE_SLICE_MODE == TILED\n\t\t#include "startNineSlicedTiledPS"\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\tdVertexNormalW = normalize(vNormalW);\n\t\t#ifdef LIT_TANGENTS\n\t\t\t#if defined(LIT_HEIGHTS) || defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS) || defined(LIT_GGX_SPECULAR)\n\t\t\t\tdTangentW = vTangentW;\n\t\t\t\tdBinormalW = vBinormalW;\n\t\t\t#endif\n\t\t#endif\n\t\tgetViewDir();\n\t\t#ifdef LIT_TBN\n\t\t\tgetTBN(dTangentW, dBinormalW, dVertexNormalW);\n\t\t\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t\t\thandleTwoSidedLighting();\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tevaluateFrontend();\n\t#include "debugProcessFrontendPS"\n\tvar output: FragmentOutput = evaluateBackend();\n\t#include "litUserMainEndPS"\n\treturn output;\n}\n',litForwardPostCodePS:'\n#ifdef LIT_NEEDS_NORMAL\n\t#include "cubeMapRotatePS"\n\t#include "cubeMapProjectPS"\n\t#include "envProcPS"\n#endif\n#ifdef LIT_SPECULAR_OR_REFLECTION\n\t#ifdef LIT_METALNESS\n\t\t#include "metalnessModulatePS"\n\t#endif\n\t#if LIT_FRESNEL_MODEL == SCHLICK\n\t\t#include "fresnelSchlickPS"\n\t#endif\n\t#ifdef LIT_IRIDESCENCE\n\t\t#include "iridescenceDiffractionPS"\n\t#endif\n#endif\n#ifdef LIT_AO\n\t#include "aoDiffuseOccPS"\n\t#include "aoSpecOccPS"\n#endif\n#if LIT_REFLECTION_SOURCE == ENVATLASHQ\n\t#include "envAtlasPS"\n\t#include "reflectionEnvHQPS"\n#elif LIT_REFLECTION_SOURCE == ENVATLAS\n\t#include "envAtlasPS"\n\t#include "reflectionEnvPS"\n#elif LIT_REFLECTION_SOURCE == CUBEMAP\n\t#include "reflectionCubePS"\n#elif LIT_REFLECTION_SOURCE == SPHEREMAP\n\t#include "reflectionSpherePS"\n#endif\n#ifdef LIT_REFLECTIONS\n\t#ifdef LIT_CLEARCOAT\n\t\t#include "reflectionCCPS"\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\t#include "reflectionSheenPS"\n\t#endif\n#endif\n#ifdef LIT_REFRACTION\n\t#if defined(LIT_DYNAMIC_REFRACTION)\n\t\t#include "refractionDynamicPS"\n\t#elif defined(LIT_REFLECTIONS)\n\t\t#include "refractionCubePS"\n\t#endif\n#endif\n#ifdef LIT_SHEEN\n\t#include "lightSheenPS"\n#endif\nuniform material_ambient: vec3f;\n#ifdef LIT_SPECULAR\n\t#ifdef LIT_LIGHTING\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "lightSpecularAnisoGGXPS"\n\t\t#else\n\t\t\t#include "lightSpecularBlinnPS"\n\t\t#endif\n\t#endif\n#endif\n#include "combinePS"\n#ifdef LIT_LIGHTMAP\n\t#include "lightmapAddPS"\n#endif\n#ifdef LIT_ADD_AMBIENT\n\t#include "ambientPS"\n#endif\n#ifdef LIT_MSDF\n\t#include "msdfPS"\n#endif\n#ifdef LIT_NEEDS_NORMAL\n\t#include "viewDirPS"\n\t#ifdef LIT_SPECULAR\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "reflDirAnisoPS"\n\t\t#else\n\t\t\t#include "reflDirPS"\n\t\t#endif\n\t#endif\n#endif\n#include "lightingPS"\n',litForwardPreCodePS:'\n#include "basePS"\n#include "sphericalPS"\n#include "decodePS"\n#include "gammaPS"\n#include "tonemappingPS"\n#include "fogPS"\n#if LIT_NONE_SLICE_MODE == SLICED\n\t#include "baseNineSlicedPS"\n#elif LIT_NONE_SLICE_MODE == TILED\n\t#include "baseNineSlicedTiledPS"\n#endif\n#ifdef LIT_TBN\n\t#include "TBNPS"\n\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t#include "twoSidedLightingPS"\n\t#endif\n#endif\n',litMainPS:'\n#include "varyingsPS"\n#include "litUserDeclarationPS"\n#include "frontendDeclPS"\n#if defined(PICK_PASS) || defined(PREPASS_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litOtherMainPS"\n#elif defined(SHADOW_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litShadowMainPS"\n#else\n\t#include "litForwardDeclarationPS"\n\t#include "litForwardPreCodePS"\n\t#include "frontendCodePS"\n\t#include "litForwardPostCodePS"\n\t#include "litForwardBackendPS"\n\t#include "litUserCodePS"\n\t#include "litForwardMainPS"\n#endif\n',litMainVS:'\n#include "varyingsVS"\n#include  "litUserDeclarationVS"\n#ifdef VERTEX_COLOR\n\tattribute vertex_color: vec4f;\n#endif\n#ifdef NINESLICED\n\tvarying vMask: vec2f;\n\tvarying vTiledUv: vec2f;\n\tvar<private> dMaskGlobal: vec2f;\n\tvar<private> dTiledUvGlobal: vec2f;\n\tuniform innerOffset: vec4f;\n\tuniform outerScale: vec2f;\n\tuniform atlasRect: vec4f;\n#endif\nvar<private> dPositionW: vec3f;\nvar<private> dModelMatrix: mat4x4f;\n#include "transformCoreVS"\n#ifdef UV0\n\tattribute vertex_texCoord0: vec2f;\n\t#include "uv0VS"\n#endif\n#ifdef UV1\n\tattribute vertex_texCoord1: vec2f;\n\t#include "uv1VS"\n#endif\n#ifdef LINEAR_DEPTH\n\t#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\t\tuniform matrix_view: mat4x4f;\n\t#endif\n#endif\n#include "transformVS"\n#ifdef NORMALS\n\t#include "normalCoreVS"\n\t#include "normalVS"\n#endif\n#ifdef TANGENTS\n\tattribute vertex_tangent: vec4f;\n#endif\n#include "uvTransformUniformsPS, UV_TRANSFORMS_COUNT"\n#ifdef MSDF\n\t#include "msdfVS"\n#endif\n#include  "litUserCodeVS"\n@vertex\nfn vertexMain(input : VertexInput) -> VertexOutput {\n\t#include "litUserMainStartVS"\n\tvar output : VertexOutput;\n\toutput.position = getPosition();\n\toutput.vPositionW = getWorldPosition();\n\t#ifdef NORMALS\n\t\toutput.vNormalW = getNormal();\n\t#endif\n\t#ifdef TANGENTS\n\t\toutput.vTangentW = normalize(dNormalMatrix * vertex_tangent.xyz);\n\t\toutput.vBinormalW = cross(output.vNormalW, output.vTangentW) * vertex_tangent.w;\n\t#elif defined(GGX_SPECULAR)\n\t\toutput.vObjectSpaceUpW = normalize(dNormalMatrix * vec3f(0.0, 1.0, 0.0));\n\t#endif\n\t#ifdef UV0\n\t\tvar uv0: vec2f = getUv0();\n\t\t#ifdef UV0_UNMODIFIED\n\t\t\toutput.vUv0 = uv0;\n\t\t#endif\n\t#endif\n\t#ifdef UV1\n\t\tvar uv1: vec2f = getUv1();\n\t\t#ifdef UV1_UNMODIFIED\n\t\t\toutput.vUv1 = uv1;\n\t\t#endif\n\t#endif\n\t#include "uvTransformVS, UV_TRANSFORMS_COUNT"\n\t#ifdef VERTEX_COLOR\n\t\toutput.vVertexColor = vertex_color;\n\t#endif\n\t#ifdef LINEAR_DEPTH\n\t\toutput.vLinearDepth = -(uniform.matrix_view * vec4f(output.vPositionW, 1.0)).z;\n\t#endif\n\t#ifdef MSDF\n\t\tunpackMsdfParams();\n\t\toutput.outline_color = dOutlineColor;\n\t\toutput.outline_thickness = dOutlineThickness;\n\t\toutput.shadow_color = dShadowColor;\n\t\toutput.shadow_offset = dShadowOffset;\n\t#endif\n\t#ifdef NINESLICED\n\t\toutput.vMask = dMaskGlobal;\n\t\toutput.vTiledUv = dTiledUvGlobal;\n\t#endif\n\t#include "litUserMainEndVS"\n\treturn output;\n}\n',litOtherMainPS:'\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#ifdef PREPASS_PASS\n\t#include "floatAsUintPS"\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tvar output: FragmentOutput;\n\t\n\tevaluateFrontend();\n\t#ifdef PICK_PASS\n\t\toutput.color = getPickOutput();\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\toutput.color = float2vec4(vLinearDepth);\n\t#endif\n\t#include "litUserMainEndPS"\n\treturn output;\n}\n',litShaderArgsPS:"\nvar<private> litArgs_albedo: vec3f;\nvar<private> litArgs_opacity: f32;\nvar<private> litArgs_emission: vec3f;\nvar<private> litArgs_worldNormal: vec3f;\nvar<private> litArgs_ao: f32;\nvar<private> litArgs_lightmap: vec3f;\nvar<private> litArgs_lightmapDir: vec3f;\nvar<private> litArgs_metalness: f32;\nvar<private> litArgs_specularity: vec3f;\nvar<private> litArgs_specularityFactor: f32;\nvar<private> litArgs_gloss: f32;\nvar<private> litArgs_sheen_gloss: f32;\nvar<private> litArgs_sheen_specularity: vec3f;\nvar<private> litArgs_transmission: f32;\nvar<private> litArgs_thickness: f32;\nvar<private> litArgs_ior: f32;\nvar<private> litArgs_dispersion: f32;\nvar<private> litArgs_iridescence_intensity: f32;\nvar<private> litArgs_iridescence_thickness: f32;\nvar<private> litArgs_clearcoat_worldNormal: vec3f;\nvar<private> litArgs_clearcoat_specularity: f32;\nvar<private> litArgs_clearcoat_gloss: f32;\n",litShaderCorePS:'\n\t#if LIT_NONE_SLICE_MODE == TILED\n\t\tvar<private> textureBias: f32 = -1000.0;\n\t#else\n\t\tuniform textureBias: f32;\n\t#endif\n\t#include "litShaderArgsPS"\n',litShadowMainPS:'\n#if LIGHT_TYPE != DIRECTIONAL\n\tuniform view_position: vec3f;\n\tuniform light_radius: f32;\n#endif\n#if SHADOW_TYPE == PCSS_32F\n\t#include "linearizeDepthPS"\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tvar output: FragmentOutput;\n\tevaluateFrontend();\n\t#ifdef PERSPECTIVE_DEPTH\n\t\tvar depth: f32 = input.position.z;\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\t#if LIGHT_TYPE != DIRECTIONAL\n\t\t\t\tdepth = linearizeDepthWithParams(depth, camera_params);\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tvar depth: f32 = min(distance(uniform.view_position, input.vPositionW) / uniform.light_radius, 0.99999);\n\t\t#define MODIFIED_DEPTH\n\t#endif\n\t#if SHADOW_TYPE == VSM_16F || SHADOW_TYPE == VSM_32F\n\t\t#if SHADOW_TYPE == VSM_32F\n\t\t\tvar exponent: f32 = 15.0;\n\t\t#else\n\t\t\tvar exponent: f32 = 5.54;\n\t\t#endif\n\t\tvar depth_vsm = 2.0 * depth - 1.0;\n\t\tdepth_vsm = exp(exponent * depth_vsm);\n\t\toutput.color = vec4f(depth_vsm, depth_vsm * depth_vsm, 1.0, 1.0);\n\t#else\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\toutput.color = vec4f(depth, 0.0, 0.0, 1.0);\n\t\t#else\n\t\t\t#ifdef MODIFIED_DEPTH\n\t\t\t\toutput.fragDepth = depth;\n\t\t\t#endif\n\t\t\toutput.color = vec4f(1.0);\n\t\t#endif\n\t#endif\n\t#include "litUserMainEndPS"\n\t\n\treturn output;\n}\n',litUserDeclarationPS:"",litUserDeclarationVS:"",litUserCodePS:"",litUserCodeVS:"",litUserMainStartPS:"",litUserMainStartVS:"",litUserMainEndPS:"",litUserMainEndVS:"",ltcPS:"\nfn LTC_Uv(N: vec3f, V: vec3f, roughness: f32) -> vec2f {\n\tconst LUT_SIZE: f32 = 64.0;\n\tconst LUT_SCALE: f32 = (LUT_SIZE - 1.0) / LUT_SIZE;\n\tconst LUT_BIAS: f32 = 0.5 / LUT_SIZE;\n\tlet dotNV: f32 = saturate(dot( N, V ));\n\tlet uv: vec2f = vec2f( roughness, sqrt( 1.0 - dotNV ) );\n\treturn uv * LUT_SCALE + LUT_BIAS;\n}\nfn LTC_ClippedSphereFormFactor( f: vec3f ) -> f32 {\n\tlet l: f32 = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nfn LTC_EdgeVectorFormFactor( v1: vec3f, v2: vec3f ) -> vec3f {\n\tlet x: f32 = dot( v1, v2 );\n\tlet y: f32 = abs( x );\n\tlet a: f32 = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tlet b: f32 = 3.4175940 + ( 4.1616724 + y ) * y;\n\tlet v: f32 = a / b;\n\tlet inv_sqrt_term = inverseSqrt( max( 1.0 - x * x, 1e-7f ) );\n\tlet theta_sintheta: f32 = select( (0.5 * inv_sqrt_term - v), v, x > 0.0 );\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nstruct Coords {\n\tcoord0: vec3f,\n\tcoord1: vec3f,\n\tcoord2: vec3f,\n\tcoord3: vec3f,\n}\nfn LTC_EvaluateRect( N: vec3f, V: vec3f, P: vec3f, mInv: mat3x3f, rectCoords: Coords) -> f32 {\n\tlet v1: vec3f = rectCoords.coord1 - rectCoords.coord0;\n\tlet v2: vec3f = rectCoords.coord3 - rectCoords.coord0;\n\tlet lightNormal: vec3f = cross( v1, v2 );\n\tlet factor: f32 = sign(-dot( lightNormal, P - rectCoords.coord0 ));\n\tlet T1: vec3f = normalize( V - N * dot( V, N ) );\n\tlet T2: vec3f = factor * cross( N, T1 );\n\tlet mat: mat3x3f = mInv * transpose( mat3x3f( T1, T2, N ) );\n\tvar coords: array<vec3f, 4>;\n\tcoords[0] = mat * ( rectCoords.coord0 - P );\n\tcoords[1] = mat * ( rectCoords.coord1 - P );\n\tcoords[2] = mat * ( rectCoords.coord2 - P );\n\tcoords[3] = mat * ( rectCoords.coord3 - P );\n\tcoords[0] = normalize( coords[0] );\n\tcoords[1] = normalize( coords[1] );\n\tcoords[2] = normalize( coords[2] );\n\tcoords[3] = normalize( coords[3] );\n\tvar vectorFormFactor: vec3f = vec3f( 0.0 );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[0], coords[1] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[1], coords[2] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[2], coords[3] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[3], coords[0] );\n\tlet result: f32 = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn result;\n}\nvar<private> dLTCCoords: Coords;\nfn getLTCLightCoords(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) -> Coords {\n\tvar coords: Coords;\n\tcoords.coord0 = lightPos + halfWidth - halfHeight;\n\tcoords.coord1 = lightPos - halfWidth - halfHeight;\n\tcoords.coord2 = lightPos - halfWidth + halfHeight;\n\tcoords.coord3 = lightPos + halfWidth + halfHeight;\n\treturn coords;\n}\nvar<private> dSphereRadius: f32;\nfn getSphereLightCoords(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) -> Coords {\n\tdSphereRadius = max(length(halfWidth), length(halfHeight));\n\tlet f: vec3f = reflect(normalize(lightPos - uniform.view_position), vNormalW);\n\tlet w: vec3f = normalize(cross(f, halfHeight));\n\tlet h: vec3f = normalize(cross(f, w));\n\treturn getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);\n}\nvar<private> dLTCUV: vec2f;\n#ifdef LIT_CLEARCOAT\n\tvar<private> ccLTCUV: vec2f;\n#endif\nfn getLTCLightUV(gloss: f32, worldNormal: vec3f, viewDir: vec3f) -> vec2f {\n\tlet roughness: f32 = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\treturn LTC_Uv( worldNormal, viewDir, roughness );\n}\nvar<private> dLTCSpecFres: vec3f;\n#ifdef LIT_CLEARCOAT\n\tvar<private> ccLTCSpecFres: vec3f;\n#endif\nfn getLTCLightSpecFres(uv: vec2f, specularity: vec3f) -> vec3f {\n\tlet t2: vec4f = textureSampleLevel(areaLightsLutTex2, areaLightsLutTex2Sampler, uv, 0.0);\n\treturn specularity * t2.x + ( vec3f( 1.0 ) - specularity) * t2.y;\n}\nfn calcLTCLightValues(gloss: f32, worldNormal: vec3f, viewDir: vec3f, specularity: vec3f, clearcoatGloss: f32, clearcoatWorldNormal: vec3f, clearcoatSpecularity: f32) {\n\tdLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);\n\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity);\n\t#ifdef LIT_CLEARCOAT\n\t\tccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);\n\t\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3f(clearcoatSpecularity));\n\t#endif\n}\nfn calcRectLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\n}\nfn calcDiskLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\n}\nfn calcSphereLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\n}\nfn SolveCubic(Coefficient_in: vec4f) -> vec3f {\n\tlet pi: f32 = 3.14159;\n\tvar Coefficient = Coefficient_in;\n\tCoefficient = vec4f(Coefficient.xyz / Coefficient.w, Coefficient.w);\n\tlet new_yz: vec2f = Coefficient.yz / 3.0;\n\tCoefficient = vec4f(Coefficient.x, new_yz.x, new_yz.y, Coefficient.w);\n\t\n\tlet A: f32 = Coefficient.w;\n\tlet B: f32 = Coefficient.z;\n\tlet C: f32 = Coefficient.y;\n\tlet D: f32 = Coefficient.x;\n\tlet Delta: vec3f = vec3f(\n\t\t-Coefficient.z * Coefficient.z + Coefficient.y,\n\t\t-Coefficient.y * Coefficient.z + Coefficient.x,\n\t\tdot(vec2f(Coefficient.z, -Coefficient.y), Coefficient.xy)\n\t);\n\tlet Discriminant: f32 = dot(vec2f(4.0 * Delta.x, -Delta.y), Delta.zy);\n\tvar xlc: vec2f;\n\tvar xsc: vec2f;\n\t{\n\t\tlet A_a: f32 = 1.0;\n\t\tlet C_a: f32 = Delta.x;\n\t\tlet D_a: f32 = -2.0 * B * Delta.x + Delta.y;\n\t\tlet Theta: f32 = atan2(sqrt(Discriminant), -D_a) / 3.0;\n\t\tlet sqrt_neg_Ca = sqrt(-C_a);\n\t\tlet x_1a: f32 = 2.0 * sqrt_neg_Ca * cos(Theta);\n\t\tlet x_3a: f32 = 2.0 * sqrt_neg_Ca * cos(Theta + (2.0 / 3.0) * pi);\n\t\tlet xl: f32 = select(x_3a, x_1a, (x_1a + x_3a) > 2.0 * B);\n\t\txlc = vec2f(xl - B, A);\n\t}\n\t{\n\t\tlet A_d: f32 = D;\n\t\tlet C_d: f32 = Delta.z;\n\t\tlet D_d: f32 = -D * Delta.y + 2.0 * C * Delta.z;\n\t\tlet Theta: f32 = atan2(D * sqrt(Discriminant), -D_d) / 3.0;\n\t\tlet sqrt_neg_Cd = sqrt(-C_d);\n\t\tlet x_1d: f32 = 2.0 * sqrt_neg_Cd * cos(Theta);\n\t\tlet x_3d: f32 = 2.0 * sqrt_neg_Cd * cos(Theta + (2.0 / 3.0) * pi);\n\t\tlet xs: f32 = select(x_3d, x_1d, x_1d + x_3d < 2.0 * C);\n\t\txsc = vec2f(-D, xs + C);\n\t}\n\tlet E: f32 =  xlc.y * xsc.y;\n\tlet F: f32 = -xlc.x * xsc.y - xlc.y * xsc.x;\n\tlet G: f32 =  xlc.x * xsc.x;\n\tlet xmc: vec2f = vec2f(C * F - B * G, -B * F + C * E);\n\tvar Root: vec3f = vec3f(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\n\tif (Root.x < Root.y && Root.x < Root.z) {\n\t\tRoot = Root.yxz;\n\t} else if (Root.z < Root.x && Root.z < Root.y) {\n\t\tRoot = Root.xzy;\n\t}\n\treturn Root;\n}\nfn LTC_EvaluateDisk(N: vec3f, V: vec3f, P: vec3f, Minv: mat3x3f, points: Coords) -> f32 {\n\tlet T1: vec3f = normalize(V - N * dot(V, N));\n\tlet T2: vec3f = cross(N, T1);\n\tlet R: mat3x3f = transpose( mat3x3f( T1, T2, N ) );\n\tvar L_: array<vec3f, 3>;\n\tL_[0] = R * ( points.coord0 - P );\n\tL_[1] = R * ( points.coord1 - P );\n\tL_[2] = R * ( points.coord2 - P );\n\tlet C: vec3f  = 0.5 * (L_[0] + L_[2]);\n\tvar V1: vec3f = 0.5 * (L_[1] - L_[2]);\n\tvar V2: vec3f = 0.5 * (L_[1] - L_[0]);\n\tlet C_Minv: vec3f  = Minv * C;\n\tlet V1_Minv: vec3f = Minv * V1;\n\tlet V2_Minv: vec3f = Minv * V2;\n\tvar a: f32;\n\tvar b: f32;\n\tlet d11: f32 = dot(V1_Minv, V1_Minv);\n\tlet d22: f32 = dot(V2_Minv, V2_Minv);\n\tlet d12: f32 = dot(V1_Minv, V2_Minv);\n\tif (abs(d12) / sqrt(d11 * d22) > 0.0001) {\n\t\tlet tr: f32 = d11 + d22;\n\t\tlet det_inner: f32 = -d12 * d12 + d11 * d22;\n\t\tlet det: f32 = sqrt(det_inner);\n\t\tlet u: f32 = 0.5 * sqrt(tr - 2.0 * det);\n\t\tlet v: f32 = 0.5 * sqrt(tr + 2.0 * det);\n\t\tlet e_max: f32 = (u + v) * (u + v);\n\t\tlet e_min: f32 = (u - v) * (u - v);\n\t\tvar V1_: vec3f;\n\t\tvar V2_: vec3f;\n\t\tif (d11 > d22) {\n\t\t\tV1_ = d12 * V1_Minv + (e_max - d11) * V2_Minv;\n\t\t\tV2_ = d12 * V1_Minv + (e_min - d11) * V2_Minv;\n\t\t} else {\n\t\t\tV1_ = d12*V2_Minv + (e_max - d22)*V1_Minv;\n\t\t\tV2_ = d12*V2_Minv + (e_min - d22)*V1_Minv;\n\t\t}\n\t\ta = 1.0 / e_max;\n\t\tb = 1.0 / e_min;\n\t\tV1 = normalize(V1_);\n\t\tV2 = normalize(V2_);\n\t} else {\n\t\ta = 1.0 / dot(V1_Minv, V1_Minv);\n\t\tb = 1.0 / dot(V2_Minv, V2_Minv);\n\t\tV1 = V1_Minv * sqrt(a);\n\t\tV2 = V2_Minv * sqrt(b);\n\t}\n\tvar V3: vec3f = normalize(cross(V1, V2));\n\tif (dot(C_Minv, V3) < 0.0) {\n\t\tV3 = V3 * -1.0;\n\t}\n\tlet L: f32  = dot(V3, C_Minv);\n\tlet x0: f32 = dot(V1, C_Minv) / L;\n\tlet y0: f32 = dot(V2, C_Minv) / L;\n\tlet E1: f32 = inverseSqrt(a);\n\tlet E2: f32 = inverseSqrt(b);\n\tlet a_scaled = a * L * L;\n\tlet b_scaled = b * L * L;\n\tlet c0: f32 = a_scaled * b_scaled;\n\tlet c1: f32 = a_scaled * b_scaled * (1.0 + x0 * x0 + y0 * y0) - a_scaled - b_scaled;\n\tlet c2: f32 = 1.0 - a_scaled * (1.0 + x0 * x0) - b_scaled * (1.0 + y0 * y0);\n\tlet c3: f32 = 1.0;\n\tlet roots: vec3f = SolveCubic(vec4f(c0, c1, c2, c3));\n\tlet e1: f32 = roots.x;\n\tlet e2: f32 = roots.y;\n\tlet e3: f32 = roots.z;\n\tvar avgDir: vec3f = vec3f(a_scaled * x0 / (a_scaled - e2), b_scaled * y0 / (b_scaled - e2), 1.0);\n\tlet rotate: mat3x3f = mat3x3f(V1, V2, V3);\n\tavgDir = rotate * avgDir;\n\tavgDir = normalize(avgDir);\n\tlet L1: f32 = sqrt(-e2 / e3);\n\tlet L2: f32 = sqrt(-e2 / e1);\n\tlet formFactor: f32 = max(0.0, L1 * L2 * inverseSqrt((1.0 + L1 * L1) * (1.0 + L2 * L2)));\n\tconst LUT_SIZE_disk: f32 = 64.0;\n\tconst LUT_SCALE_disk: f32 = ( LUT_SIZE_disk - 1.0 ) / LUT_SIZE_disk;\n\tconst LUT_BIAS_disk: f32 = 0.5 / LUT_SIZE_disk;\n\tvar uv: vec2f = vec2f(avgDir.z * 0.5 + 0.5, formFactor);\n\tuv = uv * LUT_SCALE_disk + LUT_BIAS_disk;\n\tlet scale: f32 = textureSampleLevel(areaLightsLutTex2, areaLightsLutTex2Sampler, uv, 0.0).w;\n\treturn formFactor * scale;\n}\nfn FixNan(value: f32) -> f32 {\n\treturn select(value, 0.0, value != value);\n}\nfn getRectLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet identityMat = mat3x3f(vec3f(1.0, 0.0, 0.0), vec3f(0.0, 1.0, 0.0), vec3f(0.0, 0.0, 1.0));\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, identityMat, dLTCCoords );\n}\nfn getDiskLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet identityMat = mat3x3f(vec3f(1.0, 0.0, 0.0), vec3f(0.0, 1.0, 0.0), vec3f(0.0, 0.0, 1.0));\n\treturn FixNan(LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, identityMat, dLTCCoords ));\n}\nfn getSphereLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet falloff: f32 = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);\n\treturn FixNan(getLightDiffuse(worldNormal, viewDir, lightDirNorm) * falloff);\n}\nfn getLTCLightInvMat(uv: vec2f) -> mat3x3f {\n\tlet t1: vec4f = textureSampleLevel(areaLightsLutTex1, areaLightsLutTex1Sampler, uv, 0.0);\n\treturn mat3x3f(\n\t\tvec3f( t1.x, 0.0, t1.y ),\n\t\tvec3f( 0.0, 1.0, 0.0 ),\n\t\tvec3f( t1.z, 0.0, t1.w )\n\t);\n}\nfn calcRectLightSpecular(worldNormal: vec3f, viewDir: vec3f, uv: vec2f) -> f32 {\n\tlet mInv: mat3x3f = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfn getRectLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcRectLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfn calcDiskLightSpecular(worldNormal: vec3f, viewDir: vec3f, uv: vec2f) -> f32 {\n\tlet mInv: mat3x3f = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfn getDiskLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfn getSphereLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\n",metalnessPS:"\n#ifdef STD_METALNESS_CONSTANT\nuniform material_metalness: f32;\n#endif\nfn getMetalness() {\n\tvar metalness: f32 = 1.0;\n\t#ifdef STD_METALNESS_CONSTANT\n\t\tmetalness = metalness * uniform.material_metalness;\n\t#endif\n\t#ifdef STD_METALNESS_TEXTURE\n\t\tmetalness = metalness * textureSampleBias({STD_METALNESS_TEXTURE_NAME}, {STD_METALNESS_TEXTURE_NAME}Sampler, {STD_METALNESS_TEXTURE_UV}, uniform.textureBias).{STD_METALNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_METALNESS_VERTEX\n\tmetalness = metalness * saturate(vVertexColor.{STD_METALNESS_VERTEX_CHANNEL});\n\t#endif\n\tdMetalness = metalness;\n}\n",metalnessModulatePS:"\nfn getSpecularModulate(specularity: vec3f, albedo: vec3f, metalness: f32, f0: f32) -> vec3f {\n\tlet dielectricF0: vec3f = f0 * specularity;\n\treturn mix(dielectricF0, albedo, metalness);\n}\nfn getAlbedoModulate(albedo: vec3f, metalness: f32) -> vec3f {\n\treturn albedo * (1.0 - metalness);\n}\n",morphPS:"\n\tvarying uv0: vec2f;\n\tvar morphTexture: texture_2d_array<f32>;\n\tuniform morphFactor: array<f32, {MORPH_TEXTURE_MAX_COUNT}>;\n\tuniform morphIndex: array<u32, {MORPH_TEXTURE_MAX_COUNT}>;\n\tuniform count: u32;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar color = vec3f(0, 0, 0);\n\t\tlet textureDims = textureDimensions(morphTexture);\n\t\tlet pixelCoords = vec2i(input.uv0 * vec2f(textureDims));\n\t\t\n\t\tfor (var i: u32 = 0; i < uniform.count; i = i + 1) {\n\t\t\tvar textureIndex: u32 = uniform.morphIndex[i].element;\n\t\t\tvar delta = textureLoad(morphTexture, pixelCoords, textureIndex, 0).xyz;\n\t\t\tcolor += uniform.morphFactor[i].element * delta;\n\t\t}\n\t\tvar output: FragmentOutput;\n\t\toutput.color = vec4f(color, 1.0);\n\t\treturn output;\n\t}\n",morphVS:"\n\tattribute vertex_position: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\t\toutput.uv0 = input.vertex_position * 0.5 + vec2f(0.5, 0.5);\n\t\treturn output;\n\t}\n",msdfPS:"\nvar texture_msdfMap: texture_2d<f32>;\nvar texture_msdfMapSampler: sampler;\nfn median(r: f32, g: f32, b: f32) -> f32 {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nfn map(min: f32, max: f32, v: f32) -> f32 {\n\treturn (v - min) / (max - min);\n}\nuniform font_sdfIntensity: f32;\nuniform font_pxrange: f32;\nuniform font_textureWidth: f32;\n#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\tuniform outline_color: vec4f;\n\tuniform outline_thickness: f32;\n\tuniform shadow_color: vec4f;\n\tuniform shadow_offset: vec2f;\n#else\n\tvarying outline_color: vec4f;\n\tvarying outline_thickness: f32;\n\tvarying shadow_color: vec4f;\n\tvarying shadow_offset: vec2f;\n#endif\nfn applyMsdf(color_in: vec4f) -> vec4f {\n\t#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\t\tvar outline_colorValue = uniform.outline_color;\n\t\tvar outline_thicknessValue = uniform.outline_thickness;\n\t\tvar shadow_colorValue = uniform.shadow_color;\n\t\tvar shadow_offsetValue = uniform.shadow_offset;\n\t#else\n\t\tvar outline_colorValue = outline_color;\n\t\tvar outline_thicknessValue = outline_thickness;\n\t\tvar shadow_colorValue = shadow_color;\n\t\tvar shadow_offsetValue = shadow_offset;\n\t#endif\n\tvar color = vec4f(gammaCorrectInputVec3(color_in.rgb), color_in.a);\n\tlet tsample: vec3f = textureSample(texture_msdfMap, texture_msdfMapSampler, vUv0).rgb;\n\tlet uvShdw: vec2f = vUv0 - shadow_offsetValue;\n\tlet ssample: vec3f = textureSample(texture_msdfMap, texture_msdfMapSampler, uvShdw).rgb;\n\tlet sigDist: f32 = median(tsample.r, tsample.g, tsample.b);\n\tvar sigDistShdw: f32 = median(ssample.r, ssample.g, ssample.b);\n\tlet smoothingMax: f32 = 0.2;\n\tlet w: vec2f = abs(dpdx(vUv0)) + abs(dpdy(vUv0));\n\tlet smoothing: f32 = clamp(w.x * uniform.font_textureWidth / uniform.font_pxrange, 0.0, smoothingMax);\n\tlet mapMin: f32 = 0.05;\n\tlet mapMax: f32 = clamp(1.0 - uniform.font_sdfIntensity, mapMin, 1.0);\n\tlet sigDistInner: f32 = map(mapMin, mapMax, sigDist);\n\tlet sigDistOutline: f32 = map(mapMin, mapMax, sigDist + outline_thicknessValue);\n\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thicknessValue);\n\tlet center: f32 = 0.5;\n\tlet inside: f32 = smoothstep(center - smoothing, center + smoothing, sigDistInner);\n\tlet outline: f32 = smoothstep(center - smoothing, center + smoothing, sigDistOutline);\n\tlet shadow: f32 = smoothstep(center - smoothing, center + smoothing, sigDistShdw);\n\tlet tcolor_outline: vec4f = outline * vec4f(outline_colorValue.a * outline_colorValue.rgb, outline_colorValue.a);\n\tvar tcolor: vec4f = select(vec4f(0.0), tcolor_outline, outline > inside);\n\ttcolor = mix(tcolor, color, inside);\n\tlet scolor_shadow: vec4f = shadow * vec4f(shadow_colorValue.a * shadow_colorValue.rgb, shadow_colorValue.a);\n\tlet scolor: vec4f = select(tcolor, scolor_shadow, shadow > outline);\n\ttcolor = mix(scolor, tcolor, outline);\n\ttcolor = vec4f(gammaCorrectOutput(tcolor.rgb), tcolor.a);\n\treturn tcolor;\n}\n",msdfVS:"\nattribute vertex_outlineParameters: vec3f;\nattribute vertex_shadowParameters: vec3f;\nvarying outline_color: vec4f;\nvarying outline_thickness: f32;\nvarying shadow_color: vec4f;\nvarying shadow_offset: vec2f;\nvar<private> dOutlineColor: vec4f;\nvar<private> dOutlineThickness: f32;\nvar<private> dShadowColor: vec4f;\nvar<private> dShadowOffset: vec2f;\nfn unpackMsdfParams() {\n\tlet little: vec3f = vertex_outlineParameters % vec3f(256.0);\n\tlet big: vec3f = (vertex_outlineParameters - little) / 256.0;\n\tdOutlineColor = vec4f(little.x, big.x, little.y, big.y) / 255.0;\n\tdOutlineThickness = little.z / 255.0 * 0.2;\n\tlet little_shadow = vertex_shadowParameters % vec3f(256.0);\n\tlet big_shadow = (vertex_shadowParameters - little_shadow) / 256.0;\n\tdShadowColor = vec4f(little_shadow.x, big_shadow.x, little_shadow.y, big_shadow.y) / 255.0;\n\tdShadowOffset = (vec2f(little_shadow.z, big_shadow.z) / 127.0 - 1.0) * 0.005;\n}\n",normalVS:"\nvar<private> dNormalMatrix: mat3x3f;\nfn getNormal() -> vec3f {\n\tdNormalMatrix = getNormalMatrix(dModelMatrix);\n\tlet localNormal: vec3f = getLocalNormal(vertex_normal);\n\treturn normalize(dNormalMatrix * localNormal);\n}",normalCoreVS:"\nattribute vertex_normal: vec3f;\nuniform matrix_normal: mat3x3f;\n#ifdef MORPHING_NORMAL\n\t#ifdef MORPHING_INT\n\t\tvar morphNormalTex: texture_2d<u32>;\n\t\tvar morphNormalTexSampler: sampler;\n\t#else\n\t\tvar morphNormalTex: texture_2d<f32>;\n\t\tvar morphNormalTexSampler: sampler;\n\t#endif\n#endif\nfn getLocalNormal(vertexNormal: vec3f) -> vec3f {\n\tvar localNormal: vec3f = vertexNormal;\n\t#ifdef MORPHING_NORMAL\n\t\tlet morphUV: vec2i = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tlet morphNormalInt: vec4u = textureLoad(morphNormalTex, morphUV, 0);\n\t\t\tlet morphNormalF: vec3f = vec3f(morphNormalInt.xyz) / 65535.0 * 2.0 - 1.0;\n\t\t\tlocalNormal = localNormal + morphNormalF;\n\t\t#else\n\t\t\tlet morphNormal: vec3f = textureLoad(morphNormalTex, morphUV, 0).xyz;\n\t\t\tlocalNormal = localNormal + morphNormal;\n\t\t#endif\n\t#endif\n\treturn localNormal;\n}\n#if defined(SKIN) || defined(BATCH)\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn mat3x3f(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#elif defined(INSTANCING)\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn mat3x3f(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#else\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn uniform.matrix_normal;\n\t}\n#endif\n",normalMapPS:"\n#ifdef STD_NORMAL_TEXTURE\n\tuniform material_bumpiness: f32;\n#endif\n#ifdef STD_NORMALDETAIL_TEXTURE\n\tuniform material_normalDetailMapBumpiness: f32;\n\tfn blendNormals(inN1: vec3f, inN2: vec3f) -> vec3f {\n\t\tlet n1: vec3f = inN1 + vec3f(0.0, 0.0, 1.0);\n\t\tlet n2: vec3f = inN2 * vec3f(-1.0, -1.0, 1.0);\n\t\treturn n1 * dot(n1, n2) / n1.z - n2;\n\t}\n#endif\nfn getNormal() {\n#ifdef STD_NORMAL_TEXTURE\n\tvar normalMap: vec3f = {STD_NORMAL_TEXTURE_DECODE}(textureSampleBias({STD_NORMAL_TEXTURE_NAME}, {STD_NORMAL_TEXTURE_NAME}Sampler, {STD_NORMAL_TEXTURE_UV}, uniform.textureBias));\n\tnormalMap = mix(vec3f(0.0, 0.0, 1.0), normalMap, uniform.material_bumpiness);\n\t#ifdef STD_NORMALDETAIL_TEXTURE\n\t\tvar normalDetailMap: vec3f = {STD_NORMALDETAIL_TEXTURE_DECODE}(textureSampleBias({STD_NORMALDETAIL_TEXTURE_NAME}, {STD_NORMALDETAIL_TEXTURE_NAME}Sampler, {STD_NORMALDETAIL_TEXTURE_UV}, uniform.textureBias));\n\t\tnormalDetailMap = mix(vec3f(0.0, 0.0, 1.0), normalDetailMap, uniform.material_normalDetailMapBumpiness);\n\t\tnormalMap = blendNormals(normalMap, normalDetailMap);\n\t#endif\n\tdNormalW = normalize(dTBN * normalMap);\n#else\n\tdNormalW = dVertexNormalW;\n#endif\n}\n",opacityPS:"\nuniform material_opacity: f32;\nfn getOpacity() {\n\tdAlpha = uniform.material_opacity;\n\t#ifdef STD_OPACITY_TEXTURE\n\tdAlpha = dAlpha * textureSampleBias({STD_OPACITY_TEXTURE_NAME}, {STD_OPACITY_TEXTURE_NAME}Sampler, {STD_OPACITY_TEXTURE_UV}, uniform.textureBias).{STD_OPACITY_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_OPACITY_VERTEX\n\tdAlpha = dAlpha * clamp(vVertexColor.{STD_OPACITY_VERTEX_CHANNEL}, 0.0, 1.0);\n\t#endif\n}\n",opacityDitherPS:'\n#if STD_OPACITY_DITHER == BAYER8\n\t#include "bayerPS"\n#endif\nuniform blueNoiseJitter: vec4f;\n#if STD_OPACITY_DITHER == BLUENOISE\n\tvar blueNoiseTex32 : texture_2d<f32>;\n\tvar blueNoiseTex32Sampler : sampler;\n#endif\nfn opacityDither(alpha: f32, id: f32) {\n\t#if STD_OPACITY_DITHER == BAYER8\n\t\tvar noise: f32 = bayer8(floor((pcPosition.xy + uniform.blueNoiseJitter.xy + id) % vec2f(8.0))) / 64.0;\n\t#else\n\t\t#if STD_OPACITY_DITHER == BLUENOISE\n\t\t\tvar uv = fract(pcPosition.xy / 32.0 + uniform.blueNoiseJitter.xy + id);\n\t\t\tvar noise: f32 = textureSampleLevel(blueNoiseTex32, blueNoiseTex32Sampler, uv, 0.0).y;\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER == IGNNOISE\n\t\t\tvar magic = vec3f(0.06711056, 0.00583715, 52.9829189);\n\t\t\tvar noise: f32 = fract(magic.z * fract(dot(pcPosition.xy + uniform.blueNoiseJitter.xy + id, magic.xy)));\n\t\t#endif\n\t#endif\n\tnoise = pow(noise, 2.2);\n\tif (alpha < noise) {\n\t\tdiscard;\n\t}\n}\n',outputPS:"\n",outputAlphaPS:"\n#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == ADDITIVEALPHA || defined(LIT_ALPHA_TO_COVERAGE)\n\toutput.color = vec4f(output.color.rgb, litArgs_opacity);\n#elif LIT_BLEND_TYPE == PREMULTIPLIED\n\toutput.color = vec4f(output.color.rgb * litArgs_opacity, litArgs_opacity);\n#else\n\toutput.color = vec4f(output.color.rgb, 1.0);\n#endif\n",outputTex2DPS:"\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\n@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\toutput.color = textureSample(source, sourceSampler, input.vUv0);\n\treturn output;\n}\n",sheenPS:"\nuniform material_sheen: vec3f;\nfn getSheen() {\n\tvar sheenColor = uniform.material_sheen;\n\t#ifdef STD_SHEEN_TEXTURE\n\tsheenColor = sheenColor * {STD_SHEEN_TEXTURE_DECODE}(textureSampleBias({STD_SHEEN_TEXTURE_NAME}, {STD_SHEEN_TEXTURE_NAME}Sampler, {STD_SHEEN_TEXTURE_UV}, uniform.textureBias)).{STD_SHEEN_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEEN_VERTEX\n\tsheenColor = sheenColor * saturate3(vVertexColor.{STD_SHEEN_VERTEX_CHANNEL});\n\t#endif\n\tsSpecularity = sheenColor;\n}\n",sheenGlossPS:"\nuniform material_sheenGloss: f32;\nfn getSheenGlossiness() {\n\tvar sheenGlossiness = uniform.material_sheenGloss;\n\t#ifdef STD_SHEENGLOSS_TEXTURE\n\tsheenGlossiness = sheenGlossiness * textureSampleBias({STD_SHEENGLOSS_TEXTURE_NAME}, {STD_SHEENGLOSS_TEXTURE_NAME}Sampler, {STD_SHEENGLOSS_TEXTURE_UV}, uniform.textureBias).{STD_SHEENGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEENGLOSS_VERTEX\n\tsheenGlossiness = sheenGlossiness * saturate(vVertexColor.{STD_SHEENGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_SHEENGLOSS_INVERT\n\tsheenGlossiness = 1.0 - sheenGlossiness;\n\t#endif\n\tsGlossiness = sheenGlossiness + 0.0000001;\n}\n",parallaxPS:"\nuniform material_heightMapFactor: f32;\nfn getParallax() {\n\tvar parallaxScale = uniform.material_heightMapFactor;\n\tvar height: f32 = textureSampleBias({STD_HEIGHT_TEXTURE_NAME}, {STD_HEIGHT_TEXTURE_NAME}Sampler, {STD_HEIGHT_TEXTURE_UV}, uniform.textureBias).{STD_HEIGHT_TEXTURE_CHANNEL};\n\theight = height * parallaxScale - parallaxScale * 0.5;\n\tvar viewDirT: vec3f = dViewDirW * dTBN;\n\tviewDirT.z = viewDirT.z + 0.42;\n\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n",pickPS:"\nuniform meshInstanceId: u32;\nfn getPickOutput() -> vec4f {\n\tlet inv: vec4f = vec4f(1.0 / 255.0);\n\tlet shifts: vec4u = vec4u(16u, 8u, 0u, 24u);\n\tlet col: vec4u = (vec4u(uniform.meshInstanceId) >> shifts) & vec4u(0xffu);\n\treturn vec4f(col) * inv;\n}",reflDirPS:"\nfn getReflDir(worldNormal: vec3f, viewDir: vec3f, gloss: f32, tbn: mat3x3f) {\n\tdReflDirW = normalize(-reflect(viewDir, worldNormal));\n}\n",reflDirAnisoPS:"\nfn getReflDir(worldNormal: vec3f, viewDir: vec3f, gloss: f32, tbn: mat3x3f) {\n\tlet roughness: f32 = sqrt(1.0 - min(gloss, 1.0));\n\tlet direction: vec2f = dAnisotropyRotation;\n\tlet anisotropicT: vec3f = normalize(tbn * vec3f(direction, 0.0));\n\tlet anisotropicB: vec3f = normalize(cross(tbn[2], anisotropicT));\n\tlet anisotropy: f32 = dAnisotropy;\n\tlet anisotropicDirection: vec3f = anisotropicB;\n\tlet anisotropicTangent: vec3f = cross(anisotropicDirection, viewDir);\n\tlet anisotropicNormal: vec3f = cross(anisotropicTangent, anisotropicDirection);\n\tlet bendFactor: f32 = 1.0 - anisotropy * (1.0 - roughness);\n\tlet bendFactor4: f32 = bendFactor * bendFactor * bendFactor * bendFactor;\n\tlet bentNormal: vec3f = normalize(mix(normalize(anisotropicNormal), normalize(worldNormal), bendFactor4));\n\tdReflDirW = reflect(-viewDir, bentNormal);\n}",reflectionCCPS:"\n#ifdef LIT_CLEARCOAT\nfn addReflectionCC(reflDir: vec3f, gloss: f32) {\n\tccReflection = ccReflection + calcReflection(reflDir, gloss);\n}\n#endif\n",reflectionCubePS:"\nvar texture_cubeMap: texture_cube<f32>;\nvar texture_cubeMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tvar lookupVec: vec3f = cubeMapProject(reflDir);\n\tlookupVec.x = lookupVec.x * -1.0;\n\treturn {reflectionDecode}(textureSample(texture_cubeMap, texture_cubeMapSampler, lookupVec));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n",reflectionEnvHQPS:"\n#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\tvar texture_envAtlas: texture_2d<f32>;\n\tvar texture_envAtlasSampler: sampler;\n#endif\nvar texture_cubeMap: texture_cube<f32>;\nvar texture_cubeMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet dir: vec3f = cubeMapProject(reflDir) * vec3f(-1.0, 1.0, 1.0);\n\tlet uv: vec2f = toSphericalUv(dir);\n\tlet level: f32 = saturate(1.0 - gloss) * 5.0;\n\tlet ilevel: f32 = floor(level);\n\tlet flevel: f32 = level - ilevel;\n\tlet sharp: vec3f = {reflectionCubemapDecode}(textureSample(texture_cubeMap, texture_cubeMapSampler, dir));\n\tlet roughA: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel)));\n\tlet roughB: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n",reflectionEnvPS:"\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\n\tvar texture_envAtlas: texture_2d<f32>;\n\tvar texture_envAtlasSampler: sampler;\n#endif\nuniform material_reflectivity: f32;\nfn shinyMipLevel(uv: vec2f) -> f32 {\n\tlet dx: vec2f = dpdx(uv);\n\tlet dy: vec2f = dpdy(uv);\n\tlet uv2: vec2f = vec2f(fract(uv.x + 0.5), uv.y);\n\tlet dx2: vec2f = dpdx(uv2);\n\tlet dy2: vec2f = dpdy(uv2);\n\tlet maxd: f32 = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));\n\treturn clamp(0.5 * log2(maxd) - 1.0 + uniform.textureBias, 0.0, 5.0);\n}\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet dir: vec3f = cubeMapProject(reflDir) * vec3f(-1.0, 1.0, 1.0);\n\tlet uv: vec2f = toSphericalUv(dir);\n\tlet level: f32 = saturate(1.0 - gloss) * 5.0;\n\tlet ilevel: f32 = floor(level);\n\tlet level2: f32 = shinyMipLevel(uv * atlasSize);\n\tlet ilevel2: f32 = floor(level2);\n\tvar uv0: vec2f;\n\tvar uv1: vec2f;\n\tvar weight: f32;\n\tif (ilevel == 0.0) {\n\t\tuv0 = mapShinyUv(uv, ilevel2);\n\t\tuv1 = mapShinyUv(uv, ilevel2 + 1.0);\n\t\tweight = level2 - ilevel2;\n\t} else {\n\t\tuv0 = mapRoughnessUv(uv, ilevel);\n\t\tuv1 = uv0;\n\t\tweight = 0.0;\n\t}\n\tlet linearA: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, uv0));\n\tlet linearB: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, uv1));\n\tlet linear0: vec3f = mix(linearA, linearB, weight);\n\tlet linear1: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(linear0, linear1, level - ilevel));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n",reflectionSpherePS:"\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nvar texture_sphereMap: texture_2d<f32>;\nvar texture_sphereMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet viewRotationMatrix = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet reflDirV: vec3f = viewRotationMatrix * reflDir;\n\tlet m: f32 = 2.0 * sqrt(dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z + 1.0) * (reflDirV.z + 1.0));\n\tlet sphereMapUv: vec2f = reflDirV.xy / m + 0.5;\n\treturn {reflectionDecode}(textureSample(texture_sphereMap, texture_sphereMapSampler, sphereMapUv));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n",reflectionSheenPS:"\nfn addReflectionSheen(worldNormal: vec3f, viewDir: vec3f, gloss: f32) {\n\tlet NoV: f32 = dot(worldNormal, viewDir);\n\tlet alphaG: f32 = gloss * gloss;\n\tlet a: f32 = select(\n\t\t-8.48 * alphaG + 14.3 * gloss - 9.95,\n\t\t-339.2 * alphaG + 161.4 * gloss - 25.9,\n\t\tgloss < 0.25\n\t);\n\tlet b: f32 = select(\n\t\t1.97 * alphaG - 3.27 * gloss + 0.72,\n\t\t44.0 * alphaG - 23.7 * gloss + 3.26,\n\t\tgloss < 0.25\n\t);\n\tlet dg_add: f32 = select(\n\t\t0.1 * ( gloss - 0.25 ),\n\t\t0.0,\n\t\tgloss < 0.25\n\t);\n\tlet dg: f32 = exp( a * NoV + b ) + dg_add;\n\tsReflection = sReflection + (calcReflection(worldNormal, 0.0) * saturate(dg));\n}",refractionCubePS:"\nfn refract2(viewVec: vec3f, normal: vec3f, IOR: f32) -> vec3f {\n\tlet vn: f32 = dot(viewVec, normal);\n\tlet k: f32 = 1.0 - IOR * IOR * (1.0 - vn * vn);\n\tlet refrVec: vec3f = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;\n\treturn refrVec;\n}\nfn addRefraction(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\tthickness: f32,\n\tgloss: f32,\n\tspecularity: vec3f,\n\talbedo: vec3f,\n\ttransmission: f32,\n\trefractionIndex: f32,\n\tdispersion: f32\n#if defined(LIT_IRIDESCENCE)\n\t, iridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\tlet tmpRefl: vec4f = dReflection;\n\tlet reflectionDir: vec3f = refract2(-viewDir, worldNormal, refractionIndex);\n\tdReflection = vec4f(0.0);\n\taddReflection(reflectionDir, gloss);\n\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);\n\tdReflection = tmpRefl;\n}\n",refractionDynamicPS:"\nuniform material_invAttenuationDistance: f32;\nuniform material_attenuation: vec3f;\nfn evalRefractionColor(refractionVector: vec3f, gloss: f32, refractionIndex: f32) -> vec3f {\n\tlet pointOfRefraction: vec4f = vec4f(vPositionW + refractionVector, 1.0);\n\tlet projectionPoint: vec4f = uniform.matrix_viewProjection * pointOfRefraction;\n\tlet uv: vec2f = getGrabScreenPos(projectionPoint);\n\tlet iorToRoughness: f32 = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);\n\tlet refractionLod: f32 = log2(uniform.uScreenSize.x) * iorToRoughness;\n\tlet refraction: vec3f = textureSampleLevel(uSceneColorMap, uSceneColorMapSampler, uv, refractionLod).rgb;\n\treturn refraction;\n}\nfn addRefraction(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\tthickness: f32,\n\tgloss: f32,\n\tspecularity: vec3f,\n\talbedo: vec3f,\n\ttransmission: f32,\n\trefractionIndex: f32,\n\tdispersion: f32,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\tvar modelScale: vec3f;\n\tmodelScale.x = length(uniform.matrix_model[0].xyz);\n\tmodelScale.y = length(uniform.matrix_model[1].xyz);\n\tmodelScale.z = length(uniform.matrix_model[2].xyz);\n\tlet scale: vec3f = thickness * modelScale;\n\tvar refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * scale;\n\tvar refraction = evalRefractionColor(refractionVector, gloss, refractionIndex);\n\t#ifdef LIT_DISPERSION\n\t\tlet halfSpread: f32 = (1.0 / refractionIndex - 1.0) * 0.025 * dispersion;\n\t\tlet refractionIndexR: f32 = refractionIndex - halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexR)) * scale;\n\t\trefraction.r = evalRefractionColor(refractionVector, gloss, refractionIndexR).r;\n\t\tlet refractionIndexB: f32 = refractionIndex + halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexB)) * scale;\n\t\trefraction.b = evalRefractionColor(refractionVector, gloss, refractionIndexB).b;\n\t#endif\n\tvar transmittance: vec3f;\n\tif (uniform.material_invAttenuationDistance != 0.0)\n\t{\n\t\tlet attenuation: vec3f = -log(uniform.material_attenuation) * uniform.material_invAttenuationDistance;\n\t\ttransmittance = exp(-attenuation * length(refractionVector));\n\t}\n\telse\n\t{\n\t\ttransmittance = refraction;\n\t}\n\tlet fresnel: vec3f = vec3f(1.0) -\n\t\tgetFresnel(\n\t\t\tdot(viewDir, worldNormal),\n\t\t\tgloss,\n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t);\n\tdDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);\n}\n",reprojectPS:'\nvarying vUv0: vec2f;\n#ifdef CUBEMAP_SOURCE\n\tvar sourceCube: texture_cube<f32>;\n\tvar sourceCubeSampler : sampler;\n#else\n\tvar sourceTex: texture_2d<f32>;\n\tvar sourceTexSampler : sampler;\n#endif\n#ifdef USE_SAMPLES_TEX\n\tvar samplesTex: texture_2d<f32>;\n\tvar samplesTexSampler : sampler;\n\tuniform samplesTexInverseSize: vec2f;\n#endif\nuniform params: vec3f;\nfn targetFace() -> f32 { return uniform.params.x; }\nfn targetTotalPixels() -> f32 { return uniform.params.y; }\nfn sourceTotalPixels() -> f32 { return uniform.params.z; }\nconst PI: f32 = 3.141592653589793;\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\n#include "decodePS"\n#include "encodePS"\nfn modifySeams(dir: vec3f, scale: f32) -> vec3f {\n\tlet adir = abs(dir);\n\tlet M = max(max(adir.x, adir.y), adir.z);\n\treturn dir / M * vec3f(\n\t\tselect(scale, 1.0, adir.x == M),\n\t\tselect(scale, 1.0, adir.y == M),\n\t\tselect(scale, 1.0, adir.z == M)\n\t);\n}\nfn toSpherical(dir: vec3f) -> vec2f {\n\tlet nonZeroXZ = any(dir.xz != vec2f(0.0, 0.0));\n\treturn vec2f(select(0.0, atan2(dir.x, dir.z), nonZeroXZ), asin(dir.y));\n}\nfn fromSpherical(uv: vec2f) -> vec3f {\n\treturn vec3f(cos(uv.y) * sin(uv.x),\n\t\t\t\tsin(uv.y),\n\t\t\t\tcos(uv.y) * cos(uv.x));\n}\nfn getDirectionEquirect(uv: vec2f) -> vec3f {\n\treturn fromSpherical((vec2f(uv.x, 1.0 - uv.y) * 2.0 - 1.0) * vec2f(PI, PI * 0.5));\n}\nfn signNotZero(k: f32) -> f32 {\n\treturn select(-1.0, 1.0, k >= 0.0);\n}\nfn signNotZeroVec2(v: vec2f) -> vec2f {\n\treturn vec2f(signNotZero(v.x), signNotZero(v.y));\n}\nfn octDecode(o: vec2f) -> vec3f {\n\tvar v = vec3f(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);\n\tif (v.y < 0.0) {\n\t\tvar temp: vec2f = (1.0 - abs(v.zx)) * signNotZeroVec2(v.xz);\n\t\tv = vec3f(temp.x, v.y, temp.y);\n\t}\n\treturn normalize(v);\n}\nfn getDirectionOctahedral(uv: vec2f) -> vec3f {\n\treturn octDecode(vec2f(uv.x, 1.0 - uv.y) * 2.0 - 1.0);\n}\nfn octEncode(v: vec3f) -> vec2f {\n\tlet l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n\tvar result = v.xz * (1.0 / l1norm);\n\tif (v.y < 0.0) {\n\t\tresult = (1.0 - abs(result.yx)) * signNotZeroVec2(result.xy);\n\t}\n\treturn result;\n}\n#ifdef CUBEMAP_SOURCE\n\tfn sampleCubemapDir(dir: vec3f) -> vec4f {\n\t\treturn textureSample(sourceCube, sourceCubeSampler, modifySeams(dir, 1.0));\n\t}\n\tfn sampleCubemapSph(sph: vec2f) -> vec4f {\n\t\treturn sampleCubemapDir(fromSpherical(sph));\n\t}\n\tfn sampleCubemapDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\treturn textureSampleLevel(sourceCube, sourceCubeSampler, modifySeams(dir, 1.0), mipLevel);\n\t}\n\tfn sampleCubemapSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\treturn sampleCubemapDirLod(fromSpherical(sph), mipLevel);\n\t}\n#else\n\tfn sampleEquirectSph(sph: vec2f) -> vec4f {\n\t\tlet uv = sph / vec2f(PI * 2.0, PI) + 0.5;\n\t\treturn textureSample(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y));\n\t}\n\tfn sampleEquirectDir(dir: vec3f) -> vec4f {\n\t\treturn sampleEquirectSph(toSpherical(dir));\n\t}\n\tfn sampleEquirectSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\tlet uv = sph / vec2f(PI * 2.0, PI) + 0.5;\n\t\treturn textureSampleLevel(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tfn sampleEquirectDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\treturn sampleEquirectSphLod(toSpherical(dir), mipLevel);\n\t}\n\tfn sampleOctahedralDir(dir: vec3f) -> vec4f {\n\t\tlet uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn textureSample(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y));\n\t}\n\tfn sampleOctahedralSph(sph: vec2f) -> vec4f {\n\t\treturn sampleOctahedralDir(fromSpherical(sph));\n\t}\n\tfn sampleOctahedralDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\tlet uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn textureSampleLevel(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tfn sampleOctahedralSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\treturn sampleOctahedralDirLod(fromSpherical(sph), mipLevel);\n\t}\n#endif\nfn getDirectionCubemap(uv: vec2f) -> vec3f {\n\tlet st = uv * 2.0 - 1.0;\n\tlet face = targetFace();\n\tvar vec: vec3f;\n\tif (face == 0.0) {\n\t\tvec = vec3f(1, -st.y, -st.x);\n\t} else if (face == 1.0) {\n\t\tvec = vec3f(-1, -st.y, st.x);\n\t} else if (face == 2.0) {\n\t\tvec = vec3f(st.x, 1, st.y);\n\t} else if (face == 3.0) {\n\t\tvec = vec3f(st.x, -1, -st.y);\n\t} else if (face == 4.0) {\n\t\tvec = vec3f(st.x, -st.y, 1);\n\t} else {\n\t\tvec = vec3f(-st.x, -st.y, -1);\n\t}\n\treturn normalize(modifySeams(vec, 1.0));\n}\nfn matrixFromVector(n: vec3f) -> mat3x3f {\n\tlet a = 1.0 / (1.0 + n.z);\n\tlet b = -n.x * n.y * a;\n\tlet b1 = vec3f(1.0 - n.x * n.x * a, b, -n.x);\n\tlet b2 = vec3f(b, 1.0 - n.y * n.y * a, -n.y);\n\treturn mat3x3f(b1, b2, n);\n}\nfn matrixFromVectorSlow(n: vec3f) -> mat3x3f {\n\tlet up = select(vec3f(0.0, 0.0, select(-1.0, 1.0, n.y > 0.0)), vec3f(0.0, 1.0, 0.0), abs(n.y) > 0.0000001);\n\tlet x = normalize(cross(up, n));\n\tlet y = cross(n, x);\n\treturn mat3x3f(x, y, n);\n}\nfn reproject(uv: vec2f) -> vec4f {\n\tif ({NUM_SAMPLES} <= 1) {\n\t\treturn {ENCODE_FUNC}({DECODE_FUNC}({SOURCE_FUNC}Dir({TARGET_FUNC}(uv))));\n\t} else {\n\t\tlet t = {TARGET_FUNC}(uv);\n\t\tlet tu = dpdx(t);\n\t\tlet tv = dpdy(t);\n\t\tvar result = vec3f(0.0);\n\t\tfor (var u = 0.0; u < {NUM_SAMPLES_SQRT}; u += 1.0) {\n\t\t\tfor (var v = 0.0; v < {NUM_SAMPLES_SQRT}; v += 1.0) {\n\t\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}Dir(normalize(t +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttu * (u / {NUM_SAMPLES_SQRT} - 0.5) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv * (v / {NUM_SAMPLES_SQRT} - 0.5))));\n\t\t\t}\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / ({NUM_SAMPLES_SQRT} * {NUM_SAMPLES_SQRT}));\n\t}\n}\nconst unpackFloat: vec4f = vec4f(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n#ifdef USE_SAMPLES_TEX\n\tfn unpackSample(i: i32, L: ptr<function, vec3f>, mipLevel: ptr<function, f32>) {\n\t\tvar u = (f32(i * 4) + 0.5) * uniform.samplesTexInverseSize.x;\n\t\tvar v = (floor(u) + 0.5) * uniform.samplesTexInverseSize.y;\n\t\tvar raw: vec4f;\n\t\traw.x = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.y = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.z = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.w = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat);\n\t\t*L = raw.xyz * 2.0 - 1.0;\n\t\t*mipLevel = raw.w * 8.0;\n\t}\n\tfn prefilterSamples(uv: vec2f) -> vec4f {\n\t\tlet vecSpace = matrixFromVectorSlow({TARGET_FUNC}(uv));\n\t\tvar L: vec3f;\n\t\tvar mipLevel: f32;\n\t\tvar result = vec3f(0.0);\n\t\tvar totalWeight = 0.0;\n\t\tfor (var i = 0; i < {NUM_SAMPLES}; i += 1) {\n\t\t\tunpackSample(i, &L, &mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}DirLod(vecSpace * L, mipLevel)) * L.z;\n\t\t\ttotalWeight += L.z;\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / totalWeight);\n\t}\n\tfn prefilterSamplesUnweighted(uv: vec2f) -> vec4f {\n\t\tlet vecSpace = matrixFromVectorSlow({TARGET_FUNC}(uv));\n\t\tvar L: vec3f;\n\t\tvar mipLevel: f32;\n\t\tvar result = vec3f(0.0);\n\t\tfor (var i = 0; i < {NUM_SAMPLES}; i += 1) {\n\t\t\tunpackSample(i, &L, &mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}DirLod(vecSpace * L, mipLevel));\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / f32({NUM_SAMPLES}));\n\t}\n#endif\n@fragment\nfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\toutput.color = {PROCESS_FUNC}(input.vUv0);\n\treturn output;\n}\n',reprojectVS:"\nattribute vertex_position: vec2f;\nuniform uvMod: vec4f;\nvarying vUv0: vec2f;\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\toutput.vUv0 = getImageEffectUV((input.vertex_position * 0.5 + vec2f(0.5, 0.5)) * uniform.uvMod.xy + uniform.uvMod.zw);\n\treturn output;\n}\n",screenDepthPS:"\nvar uSceneDepthMap: texture_2d<f32>;\nvar uSceneDepthMapSampler: sampler;\n#ifndef SCREENSIZE\n\t#define SCREENSIZE\n\tuniform uScreenSize: vec4f;\n#endif\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\n#ifndef LINEARIZE_DEPTH\n\t#define LINEARIZE_DEPTH\n\t#ifndef CAMERAPLANES\n\t\t#define CAMERAPLANES\n\t\tuniform camera_params: vec4f;\n\t#endif\n\tfn linearizeDepth(z: f32) -> f32 {\n\t\tif (uniform.camera_params.w == 0.0) {\n\t\t\treturn (uniform.camera_params.z * uniform.camera_params.y) / (uniform.camera_params.y + z * (uniform.camera_params.z - uniform.camera_params.y));\n\t\t} else {\n\t\t\treturn uniform.camera_params.z + z * (uniform.camera_params.y - uniform.camera_params.z);\n\t\t}\n\t}\n#endif\nfn delinearizeDepth(linearDepth: f32) -> f32 {\n\tif (uniform.camera_params.w == 0.0) {\n\t\treturn (uniform.camera_params.y * (uniform.camera_params.z - linearDepth)) / (linearDepth * (uniform.camera_params.z - uniform.camera_params.y));\n\t} else {\n\t\treturn (linearDepth - uniform.camera_params.z) / (uniform.camera_params.y - uniform.camera_params.z);\n\t}\n}\nfn getLinearScreenDepth(uv: vec2f) -> f32 {\n\t#ifdef SCENE_DEPTHMAP_LINEAR\n\t\t#ifdef SCENE_DEPTHMAP_FLOAT\n\t\t\treturn textureSample(uSceneDepthMap, uSceneDepthMapSampler, uv).r;\n\t\t#else\n\t\t\tlet textureSize = textureDimensions(uSceneDepthMap, 0);\n\t\t\tlet texel: vec2i = vec2i(uv * vec2f(textureSize));\n\t\t\tlet data: vec4f = textureLoad(uSceneDepthMap, texel, 0);\n\t\t\tlet data_u32: vec4u = vec4u(data * 255.0);\n\t\t\tlet intBits: u32 = (data_u32.r << 24u) | (data_u32.g << 16u) | (data_u32.b << 8u) | data_u32.a;\n\t\t\treturn bitcast<f32>(intBits);\n\t\t#endif\n\t#else\n\t\treturn linearizeDepth(textureSample(uSceneDepthMap, uSceneDepthMapSampler, uv).r);\n\t#endif\n}\n#ifndef VERTEXSHADER\n\tfn getLinearScreenDepthFrag() -> f32 {\n\t\tlet uv: vec2f = pcPosition.xy * uniform.uScreenSize.zw;\n\t\treturn getLinearScreenDepth(uv);\n\t}\n#endif\nfn getLinearDepth(pos: vec3f) -> f32 {\n\treturn -(uniform.matrix_view * vec4f(pos, 1.0)).z;\n}\n",shadowCascadesPS:"\nfn getShadowCascadeIndex(shadowCascadeDistances: vec4f, shadowCascadeCount: i32) -> i32 {\n\tlet depth: f32 = 1.0 / pcPosition.w;\n\tlet comparisons: vec4f = step(shadowCascadeDistances, vec4f(depth));\n\tlet cascadeIndex: i32 = i32(dot(comparisons, vec4f(1.0)));\n\treturn min(cascadeIndex, shadowCascadeCount - 1);\n}\nfn ditherShadowCascadeIndex(cascadeIndex_in: i32, shadowCascadeDistances: vec4f, shadowCascadeCount: i32, blendFactor: f32) -> i32 {\n\tvar cascadeIndex: i32 = cascadeIndex_in;\n\tif (cascadeIndex < shadowCascadeCount - 1) {\n\t\tlet currentRangeEnd: f32 = shadowCascadeDistances[cascadeIndex];\n\t\tlet transitionStart: f32 = blendFactor * currentRangeEnd;\n\t\tlet depth: f32 = 1.0 / pcPosition.w;\n\t\tif (depth > transitionStart) {\n\t\t\tlet transitionFactor: f32 = smoothstep(transitionStart, currentRangeEnd, depth);\n\t\t\tlet dither: f32 = fract(sin(dot(pcPosition.xy, vec2f(12.9898, 78.233))) * 43758.5453);\n\t\t\tif (dither < transitionFactor) {\n\t\t\t\tcascadeIndex = cascadeIndex + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn cascadeIndex;\n}\nfn fadeShadow(shadowCoord_in: vec3f, shadowCascadeDistances: vec4f) -> vec3f {\n\tvar shadowCoord: vec3f = shadowCoord_in;\n\tlet depth: f32 = 1.0 / pcPosition.w;\n\tif (depth > shadowCascadeDistances.w) {\n\t\tshadowCoord.z = -9999999.0;\n\t}\n\treturn shadowCoord;\n}\n",shadowEVSMPS:"\nfn linstep(a: f32, b: f32, v: f32) -> f32 {\n\treturn clamp((v - a) / (b - a), 0.0, 1.0);\n}\nfn reduceLightBleeding(pMax: f32, amount: f32) -> f32 {\n\t return linstep(amount, 1.0, pMax);\n}\nfn chebyshevUpperBound(moments: vec2f, mean: f32, minVariance: f32, lightBleedingReduction: f32) -> f32 {\n\tvar variance: f32 = moments.y - (moments.x * moments.x);\n\tvariance = max(variance, minVariance);\n\tlet d: f32 = mean - moments.x;\n\tvar pMax: f32 = variance / (variance + (d * d));\n\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\n\treturn select(pMax, 1.0, mean <= moments.x);\n}\nfn calculateEVSM(moments_in: vec3f, Z_in: f32, vsmBias: f32, exponent: f32) -> f32 {\n\tlet Z: f32 = 2.0 * Z_in - 1.0;\n\tlet warpedDepth: f32 = exp(exponent * Z);\n\tlet moments: vec2f = moments_in.xy + vec2f(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments_in.z);\n\tlet VSMBias: f32 = vsmBias;\n\tlet depthScale: f32 = VSMBias * exponent * warpedDepth;\n\tlet minVariance1: f32 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments, warpedDepth, minVariance1, 0.1);\n}\nfn VSM16(tex: texture_2d<f32>, texSampler: sampler, texCoords: vec2f, resolution: f32, Z: f32, vsmBias: f32, exponent: f32) -> f32 {\n\tlet moments: vec3f = textureSampleLevel(tex, texSampler, texCoords, 0.0).xyz;\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfn getShadowVSM16(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32) -> f32 {\n\treturn VSM16(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfn getShadowSpotVSM16(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32, lightDir: vec3f) -> f32 {\n\tlet Z: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM16(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\nfn VSM32(tex: texture_2d<f32>, texSampler: sampler, texCoords_in: vec2f, resolution: f32, Z: f32, vsmBias: f32, exponent: f32) -> f32 {\n\t#ifdef CAPS_TEXTURE_FLOAT_FILTERABLE\n\t\tvar moments: vec3f = textureSampleLevel(tex, texSampler, texCoords_in, 0.0).xyz;\n\t#else\n\t\tvar pixelSize : f32 = 1.0 / resolution;\n\t\tlet texCoords: vec2f = texCoords_in - vec2f(pixelSize);\n\t\tlet s00: vec3f = textureSampleLevel(tex, texSampler, texCoords, 0.0).xyz;\n\t\tlet s10: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(pixelSize, 0.0), 0.0).xyz;\n\t\tlet s01: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(0.0, pixelSize), 0.0).xyz;\n\t\tlet s11: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(pixelSize), 0.0).xyz;\n\t\tlet fr: vec2f = fract(texCoords * resolution);\n\t\tlet h0: vec3f = mix(s00, s10, fr.x);\n\t\tlet h1: vec3f = mix(s01, s11, fr.x);\n\t\tvar moments: vec3f = mix(h0, h1, fr.y);\n\t#endif\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfn getShadowVSM32(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32) -> f32 {\n\treturn VSM32(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfn getShadowSpotVSM32(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32, lightDir: vec3f) -> f32 {\n\tlet Z: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM32(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\n",shadowPCF1PS:"\nfn getShadowPCF1x1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n}\nfn getShadowSpotPCF1x1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n}\n",shadowPCF3PS:"\nfn _getShadowPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec3f) -> f32 {\n\tlet z: f32 = shadowCoord.z;\n\tlet uv: vec2f = shadowCoord.xy * shadowParams.x;\n\tlet shadowMapSizeInv: f32 = 1.0 / shadowParams.x;\n\tlet base_uv_temp: vec2f = floor(uv + 0.5);\n\tlet s: f32 = (uv.x + 0.5 - base_uv_temp.x);\n\tlet t: f32 = (uv.y + 0.5 - base_uv_temp.y);\n\tlet base_uv: vec2f = (base_uv_temp - vec2f(0.5)) * shadowMapSizeInv;\n\tvar sum: f32 = 0.0;\n\tlet uw0: f32 = (3.0 - 2.0 * s);\n\tlet uw1: f32 = (1.0 + 2.0 * s);\n\tlet u0_offset: f32 = (2.0 - s) / uw0 - 1.0;\n\tlet u1_offset: f32 = s / uw1 + 1.0;\n\tlet vw0: f32 = (3.0 - 2.0 * t);\n\tlet vw1: f32 = (1.0 + 2.0 * t);\n\tlet v0_offset: f32 = (2.0 - t) / vw0 - 1.0;\n\tlet v1_offset: f32 = t / vw1 + 1.0;\n\tlet u0: f32 = u0_offset * shadowMapSizeInv + base_uv.x;\n\tlet v0: f32 = v0_offset * shadowMapSizeInv + base_uv.y;\n\tlet u1: f32 = u1_offset * shadowMapSizeInv + base_uv.x;\n\tlet v1: f32 = v1_offset * shadowMapSizeInv + base_uv.y;\n\tsum = sum + uw0 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v0), z);\n\tsum = sum + uw1 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v0), z);\n\tsum = sum + uw0 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v1), z);\n\tsum = sum + uw1 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v1), z);\n\tsum = sum * (1.0 / 16.0);\n\treturn sum;\n}\nfn getShadowPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\nfn getShadowSpotPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\n",shadowPCF5PS:"\nfn _getShadowPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec3f) -> f32 {\n\tlet z: f32 = shadowCoord.z;\n\tlet uv: vec2f = shadowCoord.xy * shadowParams.x;\n\tlet shadowMapSizeInv: f32 = 1.0 / shadowParams.x;\n\tlet base_uv_temp: vec2f = floor(uv + 0.5);\n\tlet s: f32 = (uv.x + 0.5 - base_uv_temp.x);\n\tlet t: f32 = (uv.y + 0.5 - base_uv_temp.y);\n\tlet base_uv: vec2f = (base_uv_temp - vec2f(0.5)) * shadowMapSizeInv;\n\tlet uw0: f32 = (4.0 - 3.0 * s);\n\tlet uw1: f32 = 7.0;\n\tlet uw2: f32 = (1.0 + 3.0 * s);\n\tlet u0_offset: f32 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\tlet u1_offset: f32 = (3.0 + s) / uw1;\n\tlet u2_offset: f32 = s / uw2 + 2.0;\n\tlet vw0: f32 = (4.0 - 3.0 * t);\n\tlet vw1: f32 = 7.0;\n\tlet vw2: f32 = (1.0 + 3.0 * t);\n\tlet v0_offset: f32 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\tlet v1_offset: f32 = (3.0 + t) / vw1;\n\tlet v2_offset: f32 = t / vw2 + 2.0;\n\tvar sum: f32 = 0.0;\n\tlet u0: f32 = u0_offset * shadowMapSizeInv + base_uv.x;\n\tlet v0: f32 = v0_offset * shadowMapSizeInv + base_uv.y;\n\tlet u1: f32 = u1_offset * shadowMapSizeInv + base_uv.x;\n\tlet v1: f32 = v1_offset * shadowMapSizeInv + base_uv.y;\n\tlet u2: f32 = u2_offset * shadowMapSizeInv + base_uv.x;\n\tlet v2: f32 = v2_offset * shadowMapSizeInv + base_uv.y;\n\tsum = sum + uw0 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v0), z);\n\tsum = sum + uw1 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v0), z);\n\tsum = sum + uw2 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v0), z);\n\tsum = sum + uw0 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v1), z);\n\tsum = sum + uw1 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v1), z);\n\tsum = sum + uw2 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v1), z);\n\tsum = sum + uw0 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v2), z);\n\tsum = sum + uw1 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v2), z);\n\tsum = sum + uw2 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v2), z);\n\tsum = sum * (1.0 / 144.0);\n\tsum = saturate(sum);\n\treturn sum;\n}\nfn getShadowPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\nfn getShadowSpotPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\n",shadowSoftPS:"\nfn fractSinRand(uv: vec2f) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet a: f32 = 12.9898; let b: f32 = 78.233; let c: f32 = 43758.5453;\n\tlet dt: f32 = dot(uv.xy, vec2f(a, b));\n\tlet sn: f32 = dt % PI;\n\treturn fract(sin(sn) * c);\n}\nstruct VogelDiskData {\n\tinvNumSamples: f32,\n\tinitialAngle: f32,\n\tcurrentPointId: f32,\n}\nfn prepareDiskConstants(data: ptr<function, VogelDiskData>, sampleCount: i32, randomSeed: f32) {\n\tlet pi2: f32 = 6.28318530718;\n\tdata.invNumSamples = 1.0 / f32(sampleCount);\n\tdata.initialAngle = randomSeed * pi2;\n\tdata.currentPointId = 0.0;\n}\nfn generateDiskSample(data: ptr<function, VogelDiskData>) -> vec2f {\n\tlet GOLDEN_ANGLE: f32 = 2.399963;\n\tlet r: f32 = sqrt((data.currentPointId + 0.5) * data.invNumSamples);\n\tlet theta: f32 = data.currentPointId * GOLDEN_ANGLE + data.initialAngle;\n\tlet offset: vec2f = vec2f(cos(theta), sin(theta)) * pow(r, 1.33);\n\tdata.currentPointId = data.currentPointId + 1.0;\n\treturn offset;\n}\nfn PCSSFindBlocker(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, avgBlockerDepth: ptr<function, f32>, numBlockers: ptr<function, i32>,\n\tshadowCoords: vec2f, z: f32, shadowBlockerSamples: i32, penumbraSize: f32, invShadowMapSize: f32, randomSeed: f32) {\n\tvar diskData: VogelDiskData;\n\tprepareDiskConstants(&diskData, shadowBlockerSamples, randomSeed);\n\tlet searchWidth: f32 = penumbraSize * invShadowMapSize;\n\tvar blockerSum: f32 = 0.0;\n\tvar numBlockers_local: i32 = 0;\n\tfor( var i: i32 = 0; i < shadowBlockerSamples; i = i + 1 ) {\n\t\tlet diskUV: vec2f = generateDiskSample(&diskData);\n\t\tlet sampleUV: vec2f = shadowCoords + diskUV * searchWidth;\n\t\tlet shadowMapDepth: f32 = textureSampleLevel(shadowMap, shadowMapSampler, sampleUV, 0.0).r;\n\t\tif ( shadowMapDepth < z ) {\n\t\t\tblockerSum = blockerSum + shadowMapDepth;\n\t\t\tnumBlockers_local = numBlockers_local + 1;\n\t\t}\n\t}\n\t*avgBlockerDepth = blockerSum / f32(numBlockers_local);\n\t*numBlockers = numBlockers_local;\n}\nfn PCSSFilter(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, uv: vec2f, receiverDepth: f32, shadowSamples: i32, filterRadius: f32, randomSeed: f32) -> f32 {\n\tvar diskData: VogelDiskData;\n\tprepareDiskConstants(&diskData, shadowSamples, randomSeed);\n\tvar sum: f32 = 0.0;\n\tfor (var i: i32 = 0; i < shadowSamples; i = i + 1) {\n\t\tlet offsetUV: vec2f = generateDiskSample(&diskData) * filterRadius;\n\t\tlet depth: f32 = textureSampleLevel(shadowMap, shadowMapSampler, uv + offsetUV, 0.0).r;\n\t\tsum = sum + step(receiverDepth, depth);\n\t}\n\treturn sum / f32(shadowSamples);\n}\nfn getPenumbra(dblocker: f32, dreceiver: f32, penumbraSize: f32, penumbraFalloff: f32) -> f32 {\n\tlet dist: f32 = dreceiver - dblocker;\n\tlet penumbra: f32 = 1.0 - pow(1.0 - dist, penumbraFalloff);\n\treturn penumbra * penumbraSize;\n}\nfn PCSSDirectional(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoords: vec3f, cameraParams: vec4f, softShadowParams: vec4f) -> f32 {\n\tlet receiverDepth: f32 = shadowCoords.z;\n\tlet randomSeed: f32 = fractSinRand(pcPosition.xy);\n\tlet shadowSamples: i32 = i32(softShadowParams.x);\n\tlet shadowBlockerSamples: i32 = i32(softShadowParams.y);\n\tlet penumbraSize: f32 = softShadowParams.z;\n\tlet penumbraFalloff: f32 = softShadowParams.w;\n\tlet shadowMapSize: i32 = i32(textureDimensions(shadowMap, 0).x);\n\tvar invShadowMapSize: f32 = 1.0 / f32(shadowMapSize);\n\tinvShadowMapSize = invShadowMapSize * (f32(shadowMapSize) / 2048.0);\n\tvar penumbra: f32;\n\tif (shadowBlockerSamples > 0) {\n\t\tvar avgBlockerDepth: f32 = 0.0;\n\t\tvar numBlockers: i32 = 0;\n\t\tPCSSFindBlocker(shadowMap, shadowMapSampler, &avgBlockerDepth, &numBlockers, shadowCoords.xy, receiverDepth, shadowBlockerSamples, penumbraSize, invShadowMapSize, randomSeed);\n\t\tif (numBlockers < 1) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tpenumbra = getPenumbra(avgBlockerDepth, shadowCoords.z, penumbraSize, penumbraFalloff);\n\t} else {\n\t\tpenumbra = penumbraSize;\n\t}\n\tlet filterRadius: f32 = penumbra * invShadowMapSize;\n\treturn PCSSFilter(shadowMap, shadowMapSampler, shadowCoords.xy, receiverDepth, shadowSamples, filterRadius, randomSeed);\n}\nfn getShadowPCSS(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, cameraParams: vec4f, softShadowParams: vec4f, lightDir: vec3f) -> f32 {\n\treturn PCSSDirectional(shadowMap, shadowMapSampler, shadowCoord, cameraParams, softShadowParams);\n}\n",skinBatchVS:"\nattribute vertex_boneIndices: f32;\nvar texture_poseMap: texture_2d<f32>;\nfn getBoneMatrix(indexFloat: f32) -> mat4x4f {\n\tlet width = i32(textureDimensions(texture_poseMap).x);\n\tlet index: i32 = i32(indexFloat + 0.5) * 3;\n\tlet iy: i32 = index / width;\n\tlet ix: i32 = index % width;\n\tlet v1: vec4f = textureLoad(texture_poseMap, vec2i(ix + 0, iy), 0);\n\tlet v2: vec4f = textureLoad(texture_poseMap, vec2i(ix + 1, iy), 0);\n\tlet v3: vec4f = textureLoad(texture_poseMap, vec2i(ix + 2, iy), 0);\n\treturn mat4x4f(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1.0\n\t);\n}\n",skinVS:"\nattribute vertex_boneWeights: vec4f;\nattribute vertex_boneIndices: vec4f;\nvar texture_poseMap: texture_2d<f32>;\nstruct BoneMatrix {\n\tv1: vec4f,\n\tv2: vec4f,\n\tv3: vec4f,\n}\nfn getBoneMatrix(width: i32, index: i32) -> BoneMatrix {\n\tlet v = index / width;\n\tlet u = index % width;\n\tvar result: BoneMatrix;\n\tresult.v1 = textureLoad(texture_poseMap, vec2i(u + 0, v), 0);\n\tresult.v2 = textureLoad(texture_poseMap, vec2i(u + 1, v), 0);\n\tresult.v3 = textureLoad(texture_poseMap, vec2i(u + 2, v), 0);\n\treturn result;\n}\nfn getSkinMatrix(indicesFloat: vec4f, weights: vec4f) -> mat4x4f {\n\tlet width = i32(textureDimensions(texture_poseMap).x);\n\tvar indices = vec4i(indicesFloat + 0.5) * 3;\n\tlet boneA = getBoneMatrix(width, indices.x);\n\tlet boneB = getBoneMatrix(width, indices.y);\n\tlet boneC = getBoneMatrix(width, indices.z);\n\tlet boneD = getBoneMatrix(width, indices.w);\n\tlet v1 = boneA.v1 * weights.x + boneB.v1 * weights.y + boneC.v1 * weights.z + boneD.v1 * weights.w;\n\tlet v2 = boneA.v2 * weights.x + boneB.v2 * weights.y + boneC.v2 * weights.z + boneD.v2 * weights.w;\n\tlet v3 = boneA.v3 * weights.x + boneB.v3 * weights.y + boneC.v3 * weights.z + boneD.v3 * weights.w;\n\tlet one = dot(weights, vec4f(1.0, 1.0, 1.0, 1.0));\n\treturn mat4x4f(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n",skyboxPS:'\n\t#define LIT_SKYBOX_INTENSITY\n\t#include "envProcPS"\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#ifdef PREPASS_PASS\n\t\tvarying vLinearDepth: f32;\n\t\t#include "floatAsUintPS"\n\t#endif\n\tvarying vViewDir : vec3f;\n\tuniform skyboxHighlightMultiplier : f32;\n\t#ifdef SKY_CUBEMAP\n\t\tvar texture_cubeMap : texture_cube<f32>;\n\t\tvar texture_cubeMap_sampler : sampler;\n\t\t#ifdef SKYMESH\n\t\t\tvarying vWorldPos : vec3f;\n\t\t\tuniform cubeMapRotationMatrix : mat3x3f;\n\t\t\tuniform projectedSkydomeCenter : vec3f;\n\t\t#endif\n\t#else\n\t\t#include "sphericalPS"\n\t\t#include "envAtlasPS"\n\t\tvar texture_envAtlas : texture_2d<f32>;\n\t\tvar texture_envAtlas_sampler : sampler;\n\t\tuniform mipLevel : f32;\n\t#endif\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\t#ifdef PREPASS_PASS\n\t\t\toutput.color = float2vec4(vLinearDepth);\n\t\t#else\n\t\t\tvar linear : vec3f;\n\t\t\tvar dir : vec3f;\n\t\t\t#ifdef SKY_CUBEMAP\n\t\t\t\t#ifdef SKYMESH\n\t\t\t\t\tvar envDir : vec3f = normalize(input.vWorldPos - uniform.projectedSkydomeCenter);\n\t\t\t\t\tdir = envDir * uniform.cubeMapRotationMatrix;\n\t\t\t\t#else\n\t\t\t\t\tdir = input.vViewDir;\n\t\t\t\t#endif\n\t\t\t\tdir.x *= -1.0;\n\t\t\t\tlinear = {SKYBOX_DECODE_FNC}(textureSample(texture_cubeMap, texture_cubeMap_sampler, dir));\n\t\t\t#else\n\t\t\t\tdir = input.vViewDir * vec3f(-1.0, 1.0, 1.0);\n\t\t\t\tlet uv : vec2f = toSphericalUv(normalize(dir));\n\t\t\t\tlinear = {SKYBOX_DECODE_FNC}(textureSample(texture_envAtlas, texture_envAtlas_sampler, mapRoughnessUv(uv, uniform.mipLevel)));\n\t\t\t#endif\n\t\t\tif (any(linear >= vec3f(64.0))) {\n\t\t\t\tlinear *= uniform.skyboxHighlightMultiplier;\n\t\t\t}\n\t\t\t\n\t\t\toutput.color = vec4f(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n\t\t#endif\n\t\treturn output;\n\t}\n',skyboxVS:"\n\tattribute aPosition : vec4f;\n\tuniform matrix_view : mat4x4f;\n\tuniform matrix_projectionSkybox : mat4x4f;\n\tuniform cubeMapRotationMatrix : mat3x3f;\n\tvarying vViewDir : vec3f;\n\t#ifdef PREPASS_PASS\n\t\tvarying vLinearDepth: f32;\n\t#endif\n\t#ifdef SKYMESH\n\t\tuniform matrix_model : mat4x4f;\n\t\tvarying vWorldPos : vec3f;\n\t#endif\n\t@vertex\n\tfn vertexMain(input : VertexInput) -> VertexOutput {\n\t\tvar output : VertexOutput;\n\t\tvar view : mat4x4f = uniform.matrix_view;\n\t\t#ifdef SKYMESH\n\t\t\tvar worldPos : vec4f = uniform.matrix_model * input.aPosition;\n\t\t\toutput.vWorldPos = worldPos.xyz;\n\t\t\toutput.position = uniform.matrix_projectionSkybox * (view * worldPos);\n\t\t\t#ifdef PREPASS_PASS\n\t\t\t\toutput.vLinearDepth = -(uniform.matrix_view * vec4f(worldPos.xyz, 1.0)).z;\n\t\t\t#endif\n\t\t#else\n\t\t\tview[3][0] = 0.0;\n\t\t\tview[3][1] = 0.0;\n\t\t\tview[3][2] = 0.0;\n\t\t\toutput.position = uniform.matrix_projectionSkybox * (view * input.aPosition);\n\t\t\toutput.vViewDir = input.aPosition.xyz * uniform.cubeMapRotationMatrix;\n\t\t\t#ifdef PREPASS_PASS\n\t\t\t\toutput.vLinearDepth = -pcPosition.w;\n\t\t\t#endif\n\t\t#endif\n\t\toutput.position.z = output.position.w - 1.0e-7;\n\t\treturn output;\n\t}\n",specularPS:"\n#ifdef STD_SPECULAR_CONSTANT\n\tuniform material_specular: vec3f;\n#endif\nfn getSpecularity() {\n\tvar specularColor = vec3f(1.0, 1.0, 1.0);\n\t#ifdef STD_SPECULAR_CONSTANT\n\tspecularColor = specularColor * uniform.material_specular;\n\t#endif\n\t#ifdef STD_SPECULAR_TEXTURE\n\tspecularColor = specularColor * {STD_SPECULAR_TEXTURE_DECODE}(textureSampleBias({STD_SPECULAR_TEXTURE_NAME}, {STD_SPECULAR_TEXTURE_NAME}Sampler, {STD_SPECULAR_TEXTURE_UV}, uniform.textureBias)).{STD_SPECULAR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULAR_VERTEX\n\tspecularColor = specularColor * saturate3(vVertexColor.{STD_SPECULAR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularity = specularColor;\n}\n",sphericalPS:"\nfn toSpherical(dir: vec3f) -> vec2f {\n\tlet angle_xz = select(0.0, atan2(dir.x, dir.z), any(dir.xz != vec2f(0.0)));\n\treturn vec2f(angle_xz, asin(dir.y));\n}\nfn toSphericalUv(dir : vec3f) -> vec2f {\n\tconst PI : f32 = 3.141592653589793;\n\tlet uv : vec2f = toSpherical(dir) / vec2f(PI * 2.0, PI) + vec2f(0.5, 0.5);\n\treturn vec2f(uv.x, 1.0 - uv.y);\n}\n",specularityFactorPS:"\n#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tuniform material_specularityFactor: f32;\n#endif\nfn getSpecularityFactor() {\n\tvar specularityFactor = 1.0;\n\t#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tspecularityFactor = specularityFactor * uniform.material_specularityFactor;\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_TEXTURE\n\tspecularityFactor = specularityFactor * textureSampleBias({STD_SPECULARITYFACTOR_TEXTURE_NAME}, {STD_SPECULARITYFACTOR_TEXTURE_NAME}Sampler, {STD_SPECULARITYFACTOR_TEXTURE_UV}, uniform.textureBias).{STD_SPECULARITYFACTOR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_VERTEX\n\tspecularityFactor = specularityFactor * saturate(vVertexColor.{STD_SPECULARITYFACTOR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularityFactor = specularityFactor;\n}\n",spotPS:"\nfn getSpotEffect(lightSpotDir: vec3f, lightInnerConeAngle: f32, lightOuterConeAngle: f32, lightDirNorm: vec3f) -> f32 {\n\tlet cosAngle: f32 = dot(lightDirNorm, lightSpotDir);\n\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}",startNineSlicedPS:"\n\tnineSlicedUv = vec2f(vUv0.x, 1.0 - vUv0.y);\n",startNineSlicedTiledPS:"\n\tlet tileMask: vec2f = step(vMask, vec2f(0.99999));\n\tlet tileSize: vec2f = 0.5 * (innerOffset.xy + innerOffset.zw);\n\tlet tileScale: vec2f = vec2f(1.0) / (vec2f(1.0) - tileSize);\n\tvar clampedUv: vec2f = mix(innerOffset.xy * 0.5, vec2f(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));\n\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\n\tvar nineSlicedUv: vec2f = vUv0 * tileMask + clampedUv * (vec2f(1.0) - tileMask);\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n",stdDeclarationPS:'\n\tvar<private> dAlpha: f32 = 1.0;\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#ifdef STD_OPACITY_TEXTURE_ALLOCATE\n\t\t\tvar texture_opacityMap : texture_2d<f32>;\n\t\t\tvar texture_opacityMapSampler : sampler;\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\tvar<private> dAlbedo: vec3f;\n\t\tvar<private> dNormalW: vec3f;\n\t\tvar<private> dSpecularity: vec3f = vec3f(0.0, 0.0, 0.0);\n\t\tvar<private> dGlossiness: f32 = 0.0;\n\t\t#ifdef LIT_REFRACTION\n\t\t\tvar<private> dTransmission: f32;\n\t\t\tvar<private> dThickness: f32;\n\t\t#endif\n\t\t#ifdef LIT_SCENE_COLOR\n\t\t\tvar uSceneColorMap : texture_2d<f32>;\n\t\t\tvar uSceneColorMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_SCREEN_SIZE\n\t\t\tuniform uScreenSize: vec4f;\n\t\t#endif\n\t\t#ifdef LIT_TRANSFORMS\n\t\t\tvar<private> matrix_viewProjection: mat4x4f;\n\t\t\tvar<private> matrix_model: mat4x4f;\n\t\t#endif\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\tvar<private> dUvOffset: vec2f;\n\t\t\t#ifdef STD_HEIGHT_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_heightMap : texture_2d<f32>;\n\t\t\t\tvar texture_heightMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\tvar texture_diffuseMap : texture_2d<f32>;\n\t\t\tvar texture_diffuseMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE_ALLOCATE\n\t\t\tvar texture_diffuseDetailMap : texture_2d<f32>;\n\t\t\tvar texture_diffuseDetailMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_NORMAL_TEXTURE_ALLOCATE\n\t\t\tvar texture_normalMap : texture_2d<f32>;\n\t\t\tvar texture_normalMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_NORMALDETAIL_TEXTURE_ALLOCATE\n\t\t\tvar texture_normalDetailMap : texture_2d<f32>;\n\t\t\tvar texture_normalDetailMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_THICKNESS_TEXTURE_ALLOCATE\n\t\t\tvar texture_thicknessMap : texture_2d<f32>;\n\t\t\tvar texture_thicknessMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_REFRACTION_TEXTURE_ALLOCATE\n\t\t\tvar texture_refractionMap : texture_2d<f32>;\n\t\t\tvar texture_refractionMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvar<private> dIridescence: f32;\n\t\t\tvar<private> dIridescenceThickness: f32;\n\t\t\t#ifdef STD_IRIDESCENCE_THICKNESS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_iridescenceThicknessMap : texture_2d<f32>;\n\t\t\t\tvar texture_iridescenceThicknessMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_IRIDESCENCE_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_iridescenceMap : texture_2d<f32>;\n\t\t\t\tvar texture_iridescenceMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tvar<private> ccSpecularity: f32;\n\t\t\tvar<private> ccGlossiness: f32;\n\t\t\tvar<private> ccNormalW: vec3f;\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\tvar<private> dAnisotropy: f32;\n\t\t\tvar<private> dAnisotropyRotation: vec2f;\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tvar<private> sSpecularity: vec3f;\n\t\t\t\tvar<private> sGlossiness: f32;\n\t\t\t\t#ifdef STD_SHEEN_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_sheenMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_sheenMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t\t#ifdef STD_SHEENGLOSS_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_sheenGlossMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_sheenGlossMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\tvar<private> dMetalness: f32;\n\t\t\t\tvar<private> dIor: f32;\n\t\t\t\t#ifdef STD_METALNESS_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_metalnessMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_metalnessMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tvar<private> dSpecularityFactor: f32;\n\t\t\t\t#ifdef STD_SPECULARITYFACTOR_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_specularityFactorMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_specularityFactorMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#ifdef STD_SPECULAR_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_specularMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_specularMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_GLOSS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_glossMap : texture_2d<f32>;\n\t\t\t\tvar texture_glossMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\tvar <private> dAo: f32;\n\t\t\t#ifdef STD_AO_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_aoMap : texture_2d<f32>;\n\t\t\t\tvar texture_aoMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_AODETAIL_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_aoDetailMap : texture_2d<f32>;\n\t\t\t\tvar texture_aoDetailMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\tvar <private> dEmission: vec3f;\n\t\t#ifdef STD_EMISSIVE_TEXTURE_ALLOCATE\n\t\t\tvar texture_emissiveMap : texture_2d<f32>;\n\t\t\tvar texture_emissiveMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#ifdef STD_CLEARCOAT_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATGLOSS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatGlossMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatGlossMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATNORMAL_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatNormalMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatNormalMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#ifdef STD_ANISOTROPY_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_anisotropyMap : texture_2d<f32>;\n\t\t\t\tvar texture_anisotropyMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\tvar<private> dLightmap: vec3f;\n\t\t\t#ifdef STD_LIGHT_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_lightMap : texture_2d<f32>;\n\t\t\t\tvar texture_lightMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#include "litShaderCorePS"\n',stdFrontEndPS:'\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#include "opacityPS"\n\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t#include "alphaTestPS"\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t#include "opacityDitherPS"\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t#include "parallaxPS"\n\t\t#endif\n\t\t#include  "diffusePS"\n\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t#include "normalMapPS"\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\t#include "transmissionPS"\n\t\t\t#include "thicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t#include "iridescencePS"\n\t\t\t#include "iridescenceThicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t#include "sheenPS"\n\t\t\t\t#include "sheenGlossPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t#include "metalnessPS"\n\t\t\t\t#include "iorPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t#include "specularityFactorPS"\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#include "specularPS"\n\t\t\t#else\n\t\t\t\tfn getSpecularity() { \n\t\t\t\t\tdSpecularity = vec3f(1.0, 1.0, 1.0);\n\t\t\t\t}\n\t\t\t#endif\n\t\t\t#include "glossPS"\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\t#include "aoPS"\n\t\t#endif\n\t\t#include "emissivePS"\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#include "clearCoatPS"\n\t\t\t#include "clearCoatGlossPS"\n\t\t\t#include "clearCoatNormalPS"\n\t\t#endif\n\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t#include "anisotropyPS"\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t#include "lightmapPS"\n\t\t#endif\n\t#endif\n\tfn evaluateFrontend() {\n\t\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t\tgetOpacity();\n\t\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t\talphaTest(dAlpha);\n\t\t\t#endif\n\t\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t\topacityDither(dAlpha, 0.0);\n\t\t\t#endif\n\t\t\tlitArgs_opacity = dAlpha;\n\t\t#endif\n\t\t#ifdef FORWARD_PASS\n\t\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t\tgetParallax();\n\t\t\t#endif\n\t\t\tgetAlbedo();\n\t\t\tlitArgs_albedo = dAlbedo;\n\t\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t\tgetNormal();\n\t\t\t\tlitArgs_worldNormal = dNormalW;\n\t\t\t#endif\n\t\t\t#ifdef LIT_REFRACTION\n\t\t\t\tgetRefraction();\n\t\t\t\tlitArgs_transmission = dTransmission;\n\t\t\t\tgetThickness();\n\t\t\t\tlitArgs_thickness = dThickness;\n\t\t\t\t#ifdef LIT_DISPERSION\n\t\t\t\t\tlitArgs_dispersion = uniform.material_dispersion;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t\tgetIridescence();\n\t\t\t\tgetIridescenceThickness();\n\t\t\t\tlitArgs_iridescence_intensity = dIridescence;\n\t\t\t\tlitArgs_iridescence_thickness = dIridescenceThickness;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tgetSheen();\n\t\t\t\t\tlitArgs_sheen_specularity = sSpecularity;\n\t\t\t\t\tgetSheenGlossiness();\n\t\t\t\t\tlitArgs_sheen_gloss = sGlossiness;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t\tgetMetalness();\n\t\t\t\t\tlitArgs_metalness = dMetalness;\n\t\t\t\t\tgetIor();\n\t\t\t\t\tlitArgs_ior = dIor;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t\tgetSpecularityFactor();\n\t\t\t\t\tlitArgs_specularityFactor = dSpecularityFactor;\n\t\t\t\t#endif\n\t\t\t\tgetGlossiness();\n\t\t\t\tgetSpecularity();\n\t\t\t\tlitArgs_specularity = dSpecularity;\n\t\t\t\tlitArgs_gloss = dGlossiness;\n\t\t\t#endif\n\t\t\t#ifdef STD_AO\n\t\t\t\tgetAO();\n\t\t\t\tlitArgs_ao = dAo;\n\t\t\t#endif\n\t\t\tgetEmission();\n\t\t\tlitArgs_emission = dEmission;\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tgetClearCoat();\n\t\t\t\tgetClearCoatGlossiness();\n\t\t\t\tgetClearCoatNormal();\n\t\t\t\tlitArgs_clearcoat_specularity = ccSpecularity;\n\t\t\t\tlitArgs_clearcoat_gloss = ccGlossiness;\n\t\t\t\tlitArgs_clearcoat_worldNormal = ccNormalW;\n\t\t\t#endif\n\t\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t\tgetAnisotropy();\n\t\t\t#endif\n\t\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t\tgetLightMap();\n\t\t\t\tlitArgs_lightmap = dLightmap;\n\t\t\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\t\t\tlitArgs_lightmapDir = dLightmapDir;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t}\n',TBNPS:"\n#ifdef LIT_TANGENTS\n\t#define TBN_TANGENTS\n#else\n\t#if defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS)\n\t\t#define TBN_DERIVATIVES\n\t#endif\n#endif\n#if defined(TBN_DERIVATIVES)\n\tuniform tbnBasis: f32;\n#endif\nfn getTBN(tangent: vec3f, binormal: vec3f, normal: vec3f) {\n\t#ifdef TBN_TANGENTS\n\t\tdTBN = mat3x3f(normalize(tangent), normalize(binormal), normalize(normal));\n\t#elif defined(TBN_DERIVATIVES)\n\t\tlet uv: vec2f = {lightingUv};\n\t\tlet dp1: vec3f = dpdx( vPositionW );\n\t\tlet dp2: vec3f = dpdy( vPositionW );\n\t\tlet duv1: vec2f = dpdx( uv );\n\t\tlet duv2: vec2f = dpdy( uv );\n\t\tlet dp2perp: vec3f = cross( dp2, normal );\n\t\tlet dp1perp: vec3f = cross( normal, dp1 );\n\t\tlet T: vec3f = dp2perp * duv1.x + dp1perp * duv2.x;\n\t\tlet B: vec3f = dp2perp * duv1.y + dp1perp * duv2.y;\n\t\tlet denom: f32 = max( dot(T, T), dot(B, B) );\n\t\tlet invmax: f32 = select(uniform.tbnBasis / sqrt( denom ), 0.0, denom == 0.0);\n\t\tdTBN = mat3x3f(T * invmax, -B * invmax, normal );\n\t#else\n\t\tvar B: vec3f = cross(normal, vObjectSpaceUpW);\n\t\tvar T: vec3f = cross(normal, B);\n\t\tif (dot(B,B) == 0.0)\n\t\t{\n\t\t\tlet major: f32 = max(max(normal.x, normal.y), normal.z);\n\t\t\tif (normal.x == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(0.0, 1.0, 0.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.y == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(0.0, 0.0, 1.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(1.0, 0.0, 0.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t}\n\t\tdTBN = mat3x3f(normalize(T), normalize(B), normalize(normal));\n\t#endif\n}",thicknessPS:"\n#ifdef STD_THICKNESS_CONSTANT\nuniform material_thickness: f32;\n#endif\nfn getThickness() {\n\tdThickness = 1.0;\n\t#ifdef STD_THICKNESS_CONSTANT\n\tdThickness = dThickness * uniform.material_thickness;\n\t#endif\n\t#ifdef STD_THICKNESS_TEXTURE\n\tdThickness = dThickness * textureSampleBias({STD_THICKNESS_TEXTURE_NAME}, {STD_THICKNESS_TEXTURE_NAME}Sampler, {STD_THICKNESS_TEXTURE_UV}, uniform.textureBias).{STD_THICKNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_THICKNESS_VERTEX\n\tdThickness = dThickness * saturate(vVertexColor.{STD_THICKNESS_VERTEX_CHANNEL});\n\t#endif\n}\n",tonemappingPS:'\n#if (TONEMAP == NONE)\n\t#include "tonemappingNonePS"\n#elif TONEMAP == FILMIC\n\t#include "tonemappingFilmicPS"\n#elif TONEMAP == LINEAR\n\t#include "tonemappingLinearPS"\n#elif TONEMAP == HEJL\n\t#include "tonemappingHejlPS"\n#elif TONEMAP == ACES\n\t#include "tonemappingAcesPS"\n#elif TONEMAP == ACES2\n\t#include "tonemappingAces2PS"\n#elif TONEMAP == NEUTRAL\n\t#include "tonemappingNeutralPS"\n#endif\n',tonemappingAcesPS:"\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\tlet tA: f32 = 2.51;\n\tlet tB: f32 = 0.03;\n\tlet tC: f32 = 2.43;\n\tlet tD: f32 = 0.59;\n\tlet tE: f32 = 0.14;\n\tlet x: vec3f = color * uniform.exposure;\n\treturn (x * (tA * x + tB)) / (x * (tC * x + tD) + tE);\n}\n",tonemappingAces2PS:"\nuniform exposure: f32;\nconst ACESInputMat: mat3x3f = mat3x3f(\n\tvec3f(0.59719, 0.35458, 0.04823),\n\tvec3f(0.07600, 0.90834, 0.01566),\n\tvec3f(0.02840, 0.13383, 0.83777)\n);\nconst ACESOutputMat: mat3x3f = mat3x3f(\n\tvec3f( 1.60475, -0.53108, -0.07367),\n\tvec3f(-0.10208,  1.10813, -0.00605),\n\tvec3f(-0.00327, -0.07276,  1.07602)\n);\nfn RRTAndODTFit(v: vec3f) -> vec3f {\n\tlet a: vec3f = v * (v + vec3f(0.0245786)) - vec3f(0.000090537);\n\tlet b: vec3f = v * (vec3f(0.983729) * v + vec3f(0.4329510)) + vec3f(0.238081);\n\treturn a / b;\n}\nfn toneMap(color: vec3f) -> vec3f {\n\tvar c: vec3f = color * (uniform.exposure / 0.6);\n\tc = c * ACESInputMat;\n\tc = RRTAndODTFit(c);\n\tc = c * ACESOutputMat;\n\treturn clamp(c, vec3f(0.0), vec3f(1.0));\n}\n",tonemappingFilmicPS:"\nconst A: f32 = 0.15;\nconst B: f32 = 0.50;\nconst C: f32 = 0.10;\nconst D: f32 = 0.20;\nconst E: f32 = 0.02;\nconst F: f32 = 0.30;\nconst W: f32 = 11.2;\nuniform exposure: f32;\nfn uncharted2Tonemap(x: vec3f) -> vec3f {\n\treturn ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - vec3f(E / F);\n}\nfn toneMap(color: vec3f) -> vec3f {\n\tvar c: vec3f = uncharted2Tonemap(color * uniform.exposure);\n\tlet whiteScale: vec3f = vec3f(1.0) / uncharted2Tonemap(vec3f(W, W, W));\n\tc *= whiteScale;\n\treturn c;\n}\n",tonemappingHejlPS:"\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\tlet A: f32 = 0.22;\n\tlet B: f32 = 0.3;\n\tlet C: f32 = 0.1;\n\tlet D: f32 = 0.2;\n\tlet E: f32 = 0.01;\n\tlet F: f32 = 0.3;\n\tlet Scl: f32 = 1.25;\n\tlet adjusted_color = color * uniform.exposure;\n\tlet h = max(vec3f(0.0), adjusted_color - vec3f(0.004));\n\treturn (h * ((Scl * A) * h + Scl * vec3f(C * B)) + Scl * vec3f(D * E)) /\n\t\t   (h * (A * h + vec3f(B)) + vec3f(D * F)) -\n\t\t   Scl * vec3f(E / F);\n}\n",tonemappingLinearPS:"\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\treturn color * uniform.exposure;\n}\n",tonemappingNeutralPS:"\nuniform exposure: f32;\nfn toneMap(col: vec3f) -> vec3f {\n\tvar color = col * uniform.exposure;\n\tlet startCompression = 0.8 - 0.04;\n\tlet desaturation = 0.15;\n\tlet x = min(color.r, min(color.g, color.b));\n\tlet offset = select(0.04, x - 6.25 * x * x, x < 0.08);\n\tcolor -= vec3f(offset);\n\tlet peak = max(color.r, max(color.g, color.b));\n\tif (peak < startCompression) {\n\t\treturn color;\n\t}\n\tlet d = 1.0 - startCompression;\n\tlet newPeak = 1.0 - d * d / (peak + d - startCompression);\n\tcolor *= newPeak / peak;\n\tlet g = 1.0 - 1.0 / (desaturation * (peak - newPeak) + 1.0);\n\treturn mix(color, vec3f(newPeak), vec3f(g));\n}\n",tonemappingNonePS:"\nfn toneMap(color: vec3f) -> vec3f {\n\treturn color;\n}\n",transformVS:"\n#ifdef PIXELSNAP\n\tuniform uScreenSize: vec4f;\n#endif\n#ifdef SCREENSPACE\n\tuniform projectionFlipY: f32;\n#endif\nfn evalWorldPosition(vertexPosition: vec3f, modelMatrix: mat4x4f) -> vec4f {\n\tvar localPos: vec3f = getLocalPosition(vertexPosition);\n\t#ifdef NINESLICED\n\t\tvar localPosXZ: vec2f = localPos.xz;\n\t\tlocalPosXZ = localPosXZ * uniform.outerScale;\n\t\tlet positiveUnitOffset: vec2f = clamp(vertexPosition.xz, vec2f(0.0), vec2f(1.0));\n\t\tlet negativeUnitOffset: vec2f = clamp(-vertexPosition.xz, vec2f(0.0), vec2f(1.0));\n\t\tlocalPosXZ = localPosXZ + (-positiveUnitOffset * uniform.innerOffset.xy + negativeUnitOffset * uniform.innerOffset.zw) * vertex_texCoord0.xy;\n\t\tdTiledUvGlobal = (localPosXZ - uniform.outerScale + uniform.innerOffset.xy) * -0.5 + 1.0;\n\t\tlocalPosXZ = localPosXZ * -0.5;\n\t\tlocalPos = vec3f(localPosXZ.x, localPosXZ.y, localPos.y);\n\t#endif\n\tvar posW: vec4f = modelMatrix * vec4f(localPos, 1.0);\n\t#ifdef SCREENSPACE\n\t\tposW = vec4f(posW.xy, 0.0, 1.0);\n\t#endif\n\treturn posW;\n}\nfn getPosition() -> vec4f {\n\tdModelMatrix = getModelMatrix();\n\tlet posW: vec4f = evalWorldPosition(vertex_position.xyz, dModelMatrix);\n\tdPositionW = posW.xyz;\n\tvar screenPos: vec4f;\n\t#ifdef UV1LAYOUT\n\t\tscreenPos = vec4f(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1.0);\n\t\tscreenPos.y *= -1.0;\n\t#else\n\t\t#ifdef SCREENSPACE\n\t\t\tscreenPos = posW;\n\t\t\tscreenPos.y *= uniform.projectionFlipY;\n\t\t#else\n\t\t\tscreenPos = uniform.matrix_viewProjection * posW;\n\t\t#endif\n\t\t#ifdef PIXELSNAP\n\t\t\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\n\t\t\tscreenPos.xy *= uniforms.uScreenSize.xy;\n\t\t\tscreenPos.xy = floor(screenPos.xy);\n\t\t\tscreenPos.xy *= uniforms.uScreenSize.zw;\n\t\t\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\n\t\t#endif\n\t#endif\n\treturn screenPos;\n}\nfn getWorldPosition() -> vec3f {\n\treturn dPositionW;\n}\n",transformCoreVS:'\n\tattribute vertex_position: vec4f;\n\tuniform matrix_viewProjection: mat4x4f;\n\tuniform matrix_model: mat4x4f;\n\t\n\t#ifdef MORPHING\n\t\tuniform morph_tex_params: vec2f;\n\t\tattribute morph_vertex_id: u32;\n\t\tfn getTextureMorphCoords() -> vec2i {\n\t\t\tvar textureSize: vec2i = vec2i(uniform.morph_tex_params);\n\t\t\tvar morphGridV: i32 = i32(morph_vertex_id) / textureSize.x;\n\t\t\tvar morphGridU: i32 = i32(morph_vertex_id) - (morphGridV * textureSize.x);\n\t\t\tmorphGridV = textureSize.y - morphGridV - 1;\n\t\t\treturn vec2i(morphGridU, morphGridV);\n\t\t}\n\t\t#ifdef MORPHING_POSITION\n\t\t\t#ifdef MORPHING_INT\n\t\t\t\tuniform aabbSize: vec3f;\n\t\t\t\tuniform aabbMin: vec3f;\n\t\t\t\tvar morphPositionTex: texture_2d<u32>;\n\t\t\t#else\n\t\t\t\tvar morphPositionTex: texture_2d<f32>;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#ifdef defined(BATCH)\n\t\t#include "skinBatchVS"\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn getBoneMatrix(vertex_boneIndices);\n\t\t}\n\t#elif defined(SKIN)\n\t\t#include "skinVS"\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn uniform.matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\n\t\t}\n\t#elif defined(INSTANCING)\n\t\t#include "transformInstancingVS"\n\t#else\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn uniform.matrix_model;\n\t\t}\n\t#endif\n\tfn getLocalPosition(vertexPosition: vec3f) -> vec3f {\n\t\tvar localPos: vec3f = vertexPosition;\n\t\t#ifdef MORPHING_POSITION\n\t\t\tvar morphUV: vec2i = getTextureMorphCoords();\n\t\t\t#ifdef MORPHING_INT\n\t\t\t\tvar morphPos: vec3f = vec3f(textureLoad(morphPositionTex, morphUV, 0).xyz) / 65535.0 * uniform.aabbSize + uniform.aabbMin;\n\t\t\t#else\n\t\t\t\tvar morphPos: vec3f = textureLoad(morphPositionTex, morphUV, 0).xyz;\n\t\t\t#endif\n\t\t\tlocalPos += morphPos;\n\t\t#endif\n\t\treturn localPos;\n\t}\n',transformInstancingVS:"\nattribute instance_line1: vec4f;\nattribute instance_line2: vec4f;\nattribute instance_line3: vec4f;\nattribute instance_line4: vec4f;\nfn getModelMatrix() -> mat4x4f {\n\treturn uniform.matrix_model * mat4x4f(instance_line1, instance_line2, instance_line3, instance_line4);\n}\n",transmissionPS:"\n#ifdef STD_REFRACTION_CONSTANT\n\tuniform material_refraction: f32;\n#endif\nfn getRefraction() {\n\tvar refraction: f32 = 1.0;\n\t#ifdef STD_REFRACTION_CONSTANT\n\trefraction = uniform.material_refraction;\n\t#endif\n\t#ifdef STD_REFRACTION_TEXTURE\n\trefraction = refraction * textureSampleBias({STD_REFRACTION_TEXTURE_NAME}, {STD_REFRACTION_TEXTURE_NAME}Sampler, {STD_REFRACTION_TEXTURE_UV}, uniform.textureBias).{STD_REFRACTION_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_REFRACTION_VERTEX\n\trefraction = refraction * saturate(vVertexColor.{STD_REFRACTION_VERTEX_CHANNEL});\n\t#endif\n\tdTransmission = refraction;\n}\n",twoSidedLightingPS:"\nuniform twoSidedLightingNegScaleFactor: f32;\nfn handleTwoSidedLighting() {\n\tdTBN[2] = dTBN[2] * select(-uniform.twoSidedLightingNegScaleFactor, uniform.twoSidedLightingNegScaleFactor, pcFrontFacing);\n}\n",uv0VS:"\n#ifdef NINESLICED\n\tfn getUv0() -> vec2f {\n\t\tvar uv = vertex_position.xz;\n\t\tlet positiveUnitOffset = clamp(vertex_position.xz, vec2f(0.0, 0.0), vec2f(1.0, 1.0));\n\t\tlet negativeUnitOffset = clamp(-vertex_position.xz, vec2f(0.0, 0.0), vec2f(1.0, 1.0));\n\t\tuv = uv + ((-positiveUnitOffset * uniform.innerOffset.xy) + (negativeUnitOffset * uniform.innerOffset.zw)) * vertex_texCoord0.xy;\n\t\tuv = uv * -0.5 + vec2f(0.5, 0.5);\n\t\tuv = uv * uniform.atlasRect.zw + uniform.atlasRect.xy;\n\t\tdMaskGlobal = vertex_texCoord0.xy;\n\t\treturn uv;\n\t}\n#else\n\tfn getUv0() -> vec2f {\n\t\treturn vertex_texCoord0;\n\t}\n#endif\n",uv1VS:"\nfn getUv1() -> vec2f {\n\treturn vertex_texCoord1;\n}\n",uvTransformVS:"\noutput.vUV{TRANSFORM_UV_{i}}_{TRANSFORM_ID_{i}} = vec2f(\n\tdot(vec3f(uv{TRANSFORM_UV_{i}}, 1), uniform.{TRANSFORM_NAME_{i}}0),\n\tdot(vec3f(uv{TRANSFORM_UV_{i}}, 1), uniform.{TRANSFORM_NAME_{i}}1)\n);\n",uvTransformUniformsPS:"\n\tuniform {TRANSFORM_NAME_{i}}0: vec3f;\n\tuniform {TRANSFORM_NAME_{i}}1: vec3f;\n",viewDirPS:"\nfn getViewDir() {\n\tdViewDirW = normalize(uniform.view_position - vPositionW);\n}\n",webgpuPS:Er.A,webgpuVS:Ar.A};let Pr=null;class Dr extends r.J{constructor(t){super(),this._batcher=null,this._destroyRequested=!1,this._inFrameUpdate=!1,this._librariesLoaded=!1,this._fillMode=Yn.Wx,this._resolutionMode=Yn.GL,this._allowResize=!0,this._skyboxAsset=null,this._entityIndex={},this._inTools=!1,this._scriptPrefix="",this._time=0,this.enableBundles="undefined"!=typeof TextDecoder,this.timeScale=1,this.maxDeltaTime=.1,this.frame=0,this.frameGraph=new xn,this.scriptsOrder=[],this.autoRender=!0,this.renderNextFrame=!1,this.lightmapper=null,this.loader=new rr(this),this.scenes=new fr(this),this.scripts=new cr(this),this.systems=new tr,this.i18n=new hr(this),this.keyboard=null,this.mouse=null,this.touch=null,this.gamepads=null,this.elementInput=null,this.xr=null,Dr._applications[t.id]=this,(0,pr.V)(this),Pr=this,this.root=new as.w,this.root._enabledInHierarchy=!0}init(t){const{assetPrefix:e,batchManager:s,componentSystems:i,elementInput:n,gamepads:r,graphicsDevice:a,keyboard:o,lightmapper:l,mouse:h,resourceHandlers:c,scriptsOrder:d,scriptPrefix:u,soundManager:f,touch:p,xr:m}=t;this.graphicsDevice=a,B.W.get(a,x.BzK).add(wr),B.W.get(a,x.g80).add(Cr),this._initDefaultMaterial(),this._initProgramLibrary(),this.stats=new gr(a),this._soundManager=f,this.scene=new jn(a),this._registerSceneImmediate(this.scene),this.assets=new Qn(this.loader),e&&(this.assets.prefix=e),this.bundles=new Jn(this.assets),this.scriptsOrder=d||[],this.defaultLayerWorld=new En.W({name:"World",id:F.uEK}),this.defaultLayerDepth=new En.W({name:"Depth",id:F.$9T,enabled:!1,opaqueSortMode:F.lUT}),this.defaultLayerSkybox=new En.W({name:"Skybox",id:F.CTD,opaqueSortMode:F.lUT}),this.defaultLayerUi=new En.W({name:"UI",id:F.Qed,transparentSortMode:F.BEJ}),this.defaultLayerImmediate=new En.W({name:"Immediate",id:F.t0Z,opaqueSortMode:F.lUT});const _=new Pn("default");_.pushOpaque(this.defaultLayerWorld),_.pushOpaque(this.defaultLayerDepth),_.pushOpaque(this.defaultLayerSkybox),_.pushTransparent(this.defaultLayerWorld),_.pushOpaque(this.defaultLayerImmediate),_.pushTransparent(this.defaultLayerImmediate),_.pushTransparent(this.defaultLayerUi),this.scene.layers=_,bn.createPlaceholder(a),this.renderer=new yn(a,this.scene),l&&(this.lightmapper=new l(a,this.root,this.scene,this.renderer,this.assets),this.once("prerender",this._firstBake,this)),s&&(this._batcher=new s(a,this.root,this.scene),this.once("prerender",this._firstBatch,this)),this.keyboard=o||null,this.mouse=h||null,this.touch=p||null,this.gamepads=r||null,n&&(this.elementInput=n,this.elementInput.app=this),this.xr=m?new m(this):null,this.elementInput&&this.elementInput.attachSelectEvents(),this._scriptPrefix=u||"",this.enableBundles&&this.loader.addHandler("bundle",new nr(this)),c.forEach(t=>{const e=new t(this);this.loader.addHandler(e.handlerType,e)}),i.forEach(t=>{this.systems.add(new t(this))}),this._visibilityChangeHandler=this.onVisibilityChange.bind(this),"undefined"!=typeof document&&(void 0!==document.hidden?(this._hiddenAttr="hidden",document.addEventListener("visibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.mozHidden?(this._hiddenAttr="mozHidden",document.addEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.msHidden?(this._hiddenAttr="msHidden",document.addEventListener("msvisibilitychange",this._visibilityChangeHandler,!1)):void 0!==document.webkitHidden&&(this._hiddenAttr="webkitHidden",document.addEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1))),this.tick=Lr(this)}static{this._applications={}}static getApplication(t){return t?Dr._applications[t]:(0,pr.D)()}_initDefaultMaterial(){const t=new Xe;t.name="Default Material",(0,st.z)(this.graphicsDevice,t)}_initProgramLibrary(){const t=new ei(this.graphicsDevice,new Xe);!function(t,e){L.get(t,()=>e)}(this.graphicsDevice,t)}get soundManager(){return this._soundManager}get batcher(){return this._batcher}get fillMode(){return this._fillMode}get resolutionMode(){return this._resolutionMode}configure(t,e){Js.L.get(t,(t,s)=>{if(t)return void e(t);const i=s.application_properties,n=s.scenes,r=s.assets;this._parseApplicationProperties(i,t=>{this._parseScenes(n),this._parseAssets(r),e(t||null)})})}preload(t){this.fire("preload:start");const e=this.assets.list({preload:!0});if(0===e.length)return this.fire("preload:end"),void t();let s=0;const i=()=>{s++,this.fire("preload:progress",s/e.length),s===e.length&&(this.fire("preload:end"),t())};e.forEach(t=>{t.loaded?i():(t.once("load",i),t.once("error",i),this.assets.load(t))})}_preloadScripts(t,e){e()}_parseApplicationProperties(t,e){if("number"==typeof t.maxAssetRetries&&t.maxAssetRetries>0&&this.loader.enableRetry(t.maxAssetRetries),t.useDevicePixelRatio||(t.useDevicePixelRatio=t.use_device_pixel_ratio),t.resolutionMode||(t.resolutionMode=t.resolution_mode),t.fillMode||(t.fillMode=t.fill_mode),this._width=t.width,this._height=t.height,t.useDevicePixelRatio&&(this.graphicsDevice.maxPixelRatio=window.devicePixelRatio),this.setCanvasResolution(t.resolutionMode,this._width,this._height),this.setCanvasFillMode(t.fillMode,this._width,this._height),t.layers&&t.layerOrder){const e=new Pn("application"),s={};for(const i in t.layers){const e=t.layers[i];e.id=parseInt(i,10),e.enabled=e.id!==F.$9T,s[i]=new En.W(e)}for(let i=0,n=t.layerOrder.length;i<n;i++){const n=t.layerOrder[i],r=s[n.layer];r&&(n.transparent?e.pushTransparent(r):e.pushOpaque(r),e.subLayerEnabled[i]=n.enabled)}this.scene.layers=e}if(t.batchGroups){const e=this.batcher;if(e)for(let s=0,i=t.batchGroups.length;s<i;s++){const i=t.batchGroups[s];e.addGroup(i.name,i.dynamic,i.maxAabbSize,i.id,i.layers)}}t.i18nAssets&&(this.i18n.assets=t.i18nAssets),this._loadLibraries(t.libraries,e)}_loadLibraries(t,e){const s=t.length;let i=s;const n=/^https?:\/\//;if(s){const r=(t,s)=>{i--,t?e(t):0===i&&(this.onLibrariesLoaded(),e(null))};for(let e=0;e<s;++e){let s=t[e];!n.test(s.toLowerCase())&&this._scriptPrefix&&(s=Qs.A.join(this._scriptPrefix,s)),this.loader.load(s,"script",r)}}else this.onLibrariesLoaded(),e(null)}_parseScenes(t){if(t)for(let e=0;e<t.length;e++)this.scenes.add(t[e].name,t[e].url)}_parseAssets(t){const e=[],s={},i={};for(let n=0;n<this.scriptsOrder.length;n++){const i=this.scriptsOrder[n];t[i]&&(s[i]=!0,e.push(t[i]))}if(this.enableBundles)for(const n in t)"bundle"===t[n].type&&(i[n]=!0,e.push(t[n]));for(const n in t)s[n]||i[n]||e.push(t[n]);for(let n=0;n<e.length;n++){const t=e[n],s=new Kn.V(t.name,t.type,t.file,t.data);if(s.id=parseInt(t.id,10),s.preload=!!t.preload&&t.preload,s.loaded="script"===t.type&&t.data&&t.data.loadingType>0,s.tags.add(t.tags),t.i18n)for(const e in t.i18n)s.addLocalizedAssetId(e,t.i18n[e]);this.assets.add(s)}}start(){this.frame=0,this.fire("start",{timestamp:(0,f.t)(),target:this}),this._librariesLoaded||this.onLibrariesLoaded(),this.systems.fire("initialize",this.root),this.fire("initialize"),this.systems.fire("postInitialize",this.root),this.systems.fire("postPostInitialize",this.root),this.fire("postinitialize"),this.tick()}inputUpdate(t){this.controller&&this.controller.update(t),this.mouse&&this.mouse.update(),this.keyboard&&this.keyboard.update(),this.gamepads&&this.gamepads.update()}update(t){this.frame++,this.graphicsDevice.update(),this.systems.fire(this._inTools?"toolsUpdate":"update",t),this.systems.fire("animationUpdate",t),this.systems.fire("postUpdate",t),this.fire("update",t),this.inputUpdate(t)}render(){this.updateCanvasSize(),this.graphicsDevice.frameStart(),this.fire("prerender"),this.root.syncHierarchy(),this._batcher&&this._batcher.updateAll(),this.renderComposition(this.scene.layers),this.fire("postrender"),this.graphicsDevice.frameEnd()}renderComposition(t){this.renderer.update(t),this.renderer.buildFrameGraph(this.frameGraph,t),this.frameGraph.render(this.graphicsDevice)}_fillFrameStatsBasic(t,e,s){const i=this.stats.frame;i.dt=e,i.ms=s,t>i._timeToCountFrames?(i.fps=i._fpsAccum,i._fpsAccum=0,i._timeToCountFrames=t+1e3):i._fpsAccum++,this.stats.drawCalls.total=this.graphicsDevice._drawCallsPerFrame,this.graphicsDevice._drawCallsPerFrame=0}_fillFrameStats(){let t=this.stats.frame;t.cameras=this.renderer._camerasRendered,t.materials=this.renderer._materialSwitches,t.shaders=this.graphicsDevice._shaderSwitchesPerFrame,t.shadowMapUpdates=this.renderer._shadowMapUpdates,t.shadowMapTime=this.renderer._shadowMapTime,t.depthMapTime=this.renderer._depthMapTime,t.forwardTime=this.renderer._forwardTime;const e=this.graphicsDevice._primsPerFrame;t.triangles=e[x.Qpk]/3+Math.max(e[x.SF$]-2,0)+Math.max(e[x.zl$]-2,0),t.cullTime=this.renderer._cullTime,t.sortTime=this.renderer._sortTime,t.skinTime=this.renderer._skinTime,t.morphTime=this.renderer._morphTime,t.lightClusters=this.renderer._lightClusters,t.lightClustersTime=this.renderer._lightClustersTime,t.otherPrimitives=0;for(let s=0;s<e.length;s++)s<x.Qpk&&(t.otherPrimitives+=e[s]),e[s]=0;this.renderer._camerasRendered=0,this.renderer._materialSwitches=0,this.renderer._shadowMapUpdates=0,this.graphicsDevice._shaderSwitchesPerFrame=0,this.renderer._cullTime=0,this.renderer._layerCompositionUpdateTime=0,this.renderer._lightClustersTime=0,this.renderer._sortTime=0,this.renderer._skinTime=0,this.renderer._morphTime=0,this.renderer._shadowMapTime=0,this.renderer._depthMapTime=0,this.renderer._forwardTime=0,t=this.stats.drawCalls,t.forward=this.renderer._forwardDrawCalls,t.culled=this.renderer._numDrawCallsCulled,t.depth=0,t.shadow=this.renderer._shadowDrawCalls,t.skinned=this.renderer._skinDrawCalls,t.immediate=0,t.instanced=0,t.removedByInstancing=0,t.misc=t.total-(t.forward+t.shadow),this.renderer._depthDrawCalls=0,this.renderer._shadowDrawCalls=0,this.renderer._forwardDrawCalls=0,this.renderer._numDrawCallsCulled=0,this.renderer._skinDrawCalls=0,this.renderer._immediateRendered=0,this.renderer._instancedDrawCalls=0,this.stats.misc.renderTargetCreationTime=this.graphicsDevice.renderTargetCreationTime,t=this.stats.particles,t.updatesPerFrame=t._updatesPerFrame,t.frameTime=t._frameTime,t._updatesPerFrame=0,t._frameTime=0}setCanvasFillMode(t,e,s){this._fillMode=t,this.resizeCanvas(e,s)}setCanvasResolution(t,e,s){this._resolutionMode=t,t===Yn.hD&&void 0===e&&(e=this.graphicsDevice.canvas.clientWidth,s=this.graphicsDevice.canvas.clientHeight),this.graphicsDevice.resizeCanvas(e,s)}isHidden(){return document[this._hiddenAttr]}onVisibilityChange(){this.isHidden()?this._soundManager&&this._soundManager.suspend():this._soundManager&&this._soundManager.resume()}resizeCanvas(t,e){if(!this._allowResize)return;if(this.xr&&this.xr.session)return;const s=window.innerWidth,i=window.innerHeight;if(this._fillMode===Yn.Wx){const n=this.graphicsDevice.canvas.width/this.graphicsDevice.canvas.height;n>s/i?e=(t=s)/n:t=(e=i)*n}else this._fillMode===Yn.kY&&(t=s,e=i);return this.graphicsDevice.canvas.style.width=`${t}px`,this.graphicsDevice.canvas.style.height=`${e}px`,this.updateCanvasSize(),{width:t,height:e}}updateCanvasSize(){if(this._allowResize&&!this.xr?.active&&this._resolutionMode===Yn.hD){const t=this.graphicsDevice.canvas;this.graphicsDevice.resizeCanvas(t.clientWidth,t.clientHeight)}}onLibrariesLoaded(){this._librariesLoaded=!0,this.systems.rigidbody&&this.systems.rigidbody.onLibraryLoaded()}applySceneSettings(t){let e;if(this.systems.rigidbody&&"undefined"!=typeof Ammo){const[e,s,i]=t.physics.gravity;this.systems.rigidbody.gravity.set(e,s,i)}this.scene.applySettings(t),t.render.hasOwnProperty("skybox")&&(t.render.skybox?(e=this.assets.get(t.render.skybox),e?this.setSkybox(e):this.assets.once(`add:${t.render.skybox}`,this.setSkybox,this)):this.setSkybox(null))}setAreaLightLuts(t,e){t&&e&&bn.set(this.graphicsDevice,t,e)}setSkybox(t){if(t!==this._skyboxAsset){const e=()=>{this.setSkybox(null)},s=()=>{this.scene.setSkybox(this._skyboxAsset?this._skyboxAsset.resources:null)};this._skyboxAsset&&(this.assets.off(`load:${this._skyboxAsset.id}`,s,this),this.assets.off(`remove:${this._skyboxAsset.id}`,e,this),this._skyboxAsset.off("change",s,this)),this._skyboxAsset=t,this._skyboxAsset&&(this.assets.on(`load:${this._skyboxAsset.id}`,s,this),this.assets.once(`remove:${this._skyboxAsset.id}`,e,this),this._skyboxAsset.on("change",s,this),0!==this.scene.skyboxMip||this._skyboxAsset.loadFaces||(this._skyboxAsset.loadFaces=!0),this.assets.load(this._skyboxAsset)),s()}}_firstBake(){this.lightmapper?.bake(null,this.scene.lightmapMode)}_firstBatch(){this.batcher?.generate()}_processTimestamp(t){return t}drawLine(t,e,s,i,n){this.scene.drawLine(t,e,s,i,n)}drawLines(t,e,s=!0,i=this.scene.defaultDrawLayer){this.scene.drawLines(t,e,s,i)}drawLineArrays(t,e,s=!0,i=this.scene.defaultDrawLayer){this.scene.drawLineArrays(t,e,s,i)}drawWireSphere(t,e,s=p.Q.WHITE,i=20,n=!0,r=this.scene.defaultDrawLayer){this.scene.immediate.drawWireSphere(t,e,s,i,n,r)}drawWireAlignedBox(t,e,s=p.Q.WHITE,i=!0,n=this.scene.defaultDrawLayer,r){this.scene.immediate.drawWireAlignedBox(t,e,s,i,n,r)}drawMeshInstance(t,e=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(null,null,null,t,e)}drawMesh(t,e,s,i=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(e,s,t,null,i)}drawQuad(t,e,s=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(e,t,this.scene.immediate.getQuadMesh(),null,s)}drawTexture(t,e,s,i,n,r,a=this.scene.defaultDrawLayer,h=!0){if(!1===h&&!this.graphicsDevice.isWebGPU)return;const c=new o.$;c.setTRS(new l.e(t,e,0),St.k.IDENTITY,new l.e(s,-i,0)),r||((r=new Ln).cull=x.pLF,r.setParameter("colorMap",n),r.shaderDesc=h?this.scene.immediate.getTextureShaderDesc(n.encoding):this.scene.immediate.getUnfilterableTextureShaderDesc(),r.update()),this.drawQuad(c,r,a)}drawDepthTexture(t,e,s,i,n=this.scene.defaultDrawLayer){const r=new Ln;r.cull=x.pLF,r.shaderDesc=this.scene.immediate.getDepthTextureShaderDesc(),r.update(),this.drawTexture(t,e,s,i,null,r,n)}destroy(){if(this._inFrameUpdate)return void(this._destroyRequested=!0);const t=this.graphicsDevice.canvas.id;this.fire("destroy",this),this.off("librariesloaded"),"undefined"!=typeof document&&(document.removeEventListener("visibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("mozvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("msvisibilitychange",this._visibilityChangeHandler,!1),document.removeEventListener("webkitvisibilitychange",this._visibilityChangeHandler,!1)),this._visibilityChangeHandler=null,this.root.destroy(),this.root=null,this.mouse&&(this.mouse.off(),this.mouse.detach(),this.mouse=null),this.keyboard&&(this.keyboard.off(),this.keyboard.detach(),this.keyboard=null),this.touch&&(this.touch.off(),this.touch.detach(),this.touch=null),this.elementInput&&(this.elementInput.detach(),this.elementInput=null),this.gamepads&&(this.gamepads.destroy(),this.gamepads=null),this.controller&&(this.controller=null),this.systems.destroy(),this.scene.layers&&this.scene.layers.destroy();const e=this.assets.list();for(let i=0;i<e.length;i++)e[i].unload(),e[i].off();this.assets.off(),this.bundles.destroy(),this.bundles=null,this.i18n.destroy(),this.i18n=null;const s=this.loader.getHandler("script");s?.clearCache(),this.loader.destroy(),this.loader=null,this.scene.destroy(),this.scene=null,this.systems=null,this.context=null,this.scripts.destroy(),this.scripts=null,this.scenes.destroy(),this.scenes=null,this.lightmapper?.destroy(),this.lightmapper=null,this._batcher&&(this._batcher.destroy(),this._batcher=null),this._entityIndex={},this.defaultLayerDepth.onDisable=null,this.defaultLayerDepth.onEnable=null,this.defaultLayerDepth=null,this.defaultLayerWorld=null,this.xr?.end(),this.xr?.destroy(),this.renderer.destroy(),this.renderer=null,this.graphicsDevice.destroy(),this.graphicsDevice=null,this.tick=null,this.off(),this._soundManager?.destroy(),this._soundManager=null,_r.app=null,Dr._applications[t]=null,(0,pr.D)()===this&&(0,pr.V)(null),Dr.cancelTick(this)}static cancelTick(t){t.frameRequestId&&(window.cancelAnimationFrame(t.frameRequestId),t.frameRequestId=void 0)}getEntityFromIndex(t){return this._entityIndex[t]}_registerSceneImmediate(t){this.on("postrender",t.immediate.onPostRender,t.immediate)}}const Lr=function(t){const e=t;return function(t,s){if(!e.graphicsDevice)return;e.frameRequestId&&(e.xr?.session?.cancelAnimationFrame(e.frameRequestId),cancelAnimationFrame(e.frameRequestId),e.frameRequestId=null),e._inFrameUpdate=!0,(0,pr.V)(e),Pr=e;const n=e._processTimestamp(t)||(0,f.t)(),r=n-(e._time||n);let o=r/1e3;if(o=a.D.clamp(o,0,e.maxDeltaTime),o*=e.timeScale,e._time=n,e.xr?.session?e.frameRequestId=e.xr.session.requestAnimationFrame(e.tick):e.frameRequestId=i.i.browser||i.i.worker?requestAnimationFrame(e.tick):null,e.graphicsDevice.contextLost)return;e._fillFrameStatsBasic(n,o,r),e.fire("frameupdate",r);let l=!1;s?(l=!e.xr?.update(s),e.graphicsDevice.defaultFramebuffer=s.session.renderState.baseLayer.framebuffer):e.graphicsDevice.defaultFramebuffer=null,l||(e.update(o),e.fire("framerender"),(e.autoRender||e.renderNextFrame)&&(e.render(),e.renderNextFrame=!1),e.fire("frameend")),e._inFrameUpdate=!1,e._destroyRequested&&e.destroy()}};class Mr{constructor(){this.componentSystems=[],this.resourceHandlers=[]}}class Ir extends r.J{static{this.order=0}constructor(t,e){super(),this.system=t,this.entity=e,this.system.schema&&!this._accessorsBuilt&&this.buildAccessors(this.system.schema),this.on("set",function(t,e,s){this.fire(`set_${t}`,t,e,s)}),this.on("set_enabled",this.onSetEnabled,this)}static _buildAccessors(t,e){e.forEach(e=>{const s="object"==typeof e?e.name:e;Object.defineProperty(t,s,{get:function(){return this.data[s]},set:function(t){const e=this.data,i=e[s];e[s]=t,this.fire("set",s,i,t)},configurable:!0})}),t._accessorsBuilt=!0}buildAccessors(t){Ir._buildAccessors(this,t)}onSetEnabled(t,e,s){e!==s&&this.entity.enabled&&(s?this.onEnable():this.onDisable())}onEnable(){}onDisable(){}onPostStateChange(){}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){}get enabled(){return!0}}class Rr extends r.J{constructor(t){super(),this.app=t,this.store={},this.schema=[]}addComponent(t,e={}){const s=new this.ComponentType(this,t),i=new this.DataType;return this.store[t.getGuid()]={entity:t,data:i},t[this.id]=s,t.c[this.id]=s,this.initializeComponentData(s,e,[]),this.fire("add",t,s),s}removeComponent(t){const e=this.id,s=this.store[t.getGuid()],i=t.c[e];i.fire("beforeremove"),this.fire("beforeremove",t,i),delete this.store[t.getGuid()],t[e]=void 0,delete t.c[e],this.fire("remove",t,s.data)}cloneComponent(t,e){const s=this.store[t.getGuid()];return this.addComponent(e,s.data)}initializeComponentData(t,e={},s){for(let i=0,n=s.length;i<n;i++){const n=s[i];let r,a;"object"==typeof n?(r=n.name,a=n.type):(r=n,a=void 0);let o=e[r];void 0!==o?(void 0!==a&&(o=Fr(o,a)),t[r]=o):t[r]=t.data[r]}t.enabled&&t.entity.enabled&&t.onEnable()}getPropertiesOfType(t){const e=[];return(this.schema||[]).forEach(s=>{s&&"object"==typeof s&&s.type===t&&e.push(s)}),e}destroy(){this.off()}}function Fr(t,e){if(!t)return t;switch(e){case"rgb":return t instanceof p.Q?t.clone():new p.Q(t[0],t[1],t[2]);case"rgba":return t instanceof p.Q?t.clone():new p.Q(t[0],t[1],t[2],t[3]);case"vec2":return t instanceof Jt.Z?t.clone():new Jt.Z(t[0],t[1]);case"vec3":return t instanceof l.e?t.clone():new l.e(t[0],t[1],t[2]);case"vec4":return t instanceof w.Z?t.clone():new w.Z(t[0],t[1],t[2],t[3]);case"boolean":case"number":case"string":case"entity":return t;default:throw new Error(`Could not convert unhandled type: ${e}`)}}class Or{constructor(){this._left=1/0,this._right=-1/0,this._len=0,this._recip=0,this._p0=0,this._p1=0,this._t=0,this._hermite={valid:!1,p0:0,m0:0,p1:0,m1:0}}update(t,e){if(t<this._left||t>=this._right){const s=e.length;if(s)if(t<e[0])this._left=-1/0,this._right=e[0],this._len=0,this._recip=0,this._p0=this._p1=0;else if(t>=e[s-1])this._left=e[s-1],this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=s-1;else{const s=this._findKey(t,e);this._left=e[s],this._right=e[s+1],this._len=this._right-this._left;const i=1/this._len;this._recip=isFinite(i)?i:0,this._p0=s,this._p1=s+1}else this._left=-1/0,this._right=1/0,this._len=0,this._recip=0,this._p0=this._p1=0}this._t=0===this._recip?0:(t-this._left)*this._recip,this._hermite.valid=!1}_findKey(t,e){let s=0;for(;t>=e[s+1];)s++;return s}eval(t,e,s){const i=s._data,n=s._components,r=this._p0*n;if(0===e)for(let a=0;a<n;++a)t[a]=i[r+a];else{const s=this._t,o=this._p1*n;switch(e){case 1:for(let e=0;e<n;++e)t[e]=a.D.lerp(i[r+e],i[o+e],s);break;case 2:{const e=this._hermite;if(!e.valid){const t=s*s,i=s+s,n=1-s,r=n*n;e.valid=!0,e.p0=(1+i)*r,e.m0=s*r,e.p1=t*(3-i),e.m1=t*(s-1)}const r=(3*this._p0+1)*n,a=(3*this._p0+2)*n,o=(3*this._p1+1)*n,l=(3*this._p1+0)*n;for(let s=0;s<n;++s)t[s]=e.p0*i[r+s]+e.m0*i[a+s]*this._len+e.p1*i[o+s]+e.m1*i[l+s]*this._len;break}}}}}class Nr{constructor(t){this._name=`${t.name}Snapshot`,this._time=-1,this._cache=[],this._results=[];for(let i=0;i<t._inputs.length;++i)this._cache[i]=new Or;const e=t._curves,s=t._outputs;for(let i=0;i<e.length;++i){const t=s[e[i]._output],n=[];for(let e=0;e<t._components;++e)n[e]=0;this._results[i]=n}}}class kr{static{this.eventFrame={start:0,end:0,residual:0}}constructor(t,e,s,i,n,r){this._name=t.name,this._track=t,this._snapshot=new Nr(t),this._playing=i,this._time=e,this._speed=s,this._loop=n,this._blendWeight=1,this._blendOrder=0,this._eventHandler=r,this.alignCursorToCurrentTime()}set name(t){this._name=t}get name(){return this._name}set track(t){this._track=t,this._snapshot=new Nr(t)}get track(){return this._track}get snapshot(){return this._snapshot}set time(t){this._time=t,this.alignCursorToCurrentTime()}get time(){return this._time}set speed(t){const e=Math.sign(t)!==Math.sign(this._speed);this._speed=t,e&&this.alignCursorToCurrentTime()}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}set blendWeight(t){this._blendWeight=t}get blendWeight(){return this._blendWeight}set blendOrder(t){this._blendOrder=t}get blendOrder(){return this._blendOrder}set eventCursor(t){this._eventCursor=t}get eventCursor(){return this._eventCursor}get eventCursorEnd(){return this.isReverse?0:this._track.events.length-1}get nextEvent(){return this._track.events[this._eventCursor]}get isReverse(){return this._speed<0}nextEventAheadOfTime(t){return!!this.nextEvent&&(this.isReverse?this.nextEvent.time<=t:this.nextEvent.time>=t)}nextEventBehindTime(t){return!!this.nextEvent&&(t===this.track.duration?this.isReverse?this.nextEvent.time>=t:this.nextEvent.time<=t:this.isReverse?this.nextEvent.time>t:this.nextEvent.time<t)}resetEventCursor(){this._eventCursor=this.isReverse?this._track.events.length-1:0}moveEventCursor(){this._eventCursor+=this.isReverse?-1:1,this._eventCursor>=this.track.events.length?this._eventCursor=0:this._eventCursor<0&&(this._eventCursor=this.track.events.length-1)}clipFrameTime(t){const e=kr.eventFrame;e.start=0,e.end=t,e.residual=0,this.isReverse?t<0&&(e.start=this.track.duration,e.end=0,e.residual=t+this.track.duration):t>this.track.duration&&(e.start=0,e.end=this.track.duration,e.residual=t-this.track.duration)}alignCursorToCurrentTime(){for(this.resetEventCursor();this.nextEventBehindTime(this._time)&&this._eventCursor!==this.eventCursorEnd;)this.moveEventCursor()}fireNextEvent(){this._eventHandler.fire(this.nextEvent.name,{track:this.track,...this.nextEvent}),this.moveEventCursor()}fireNextEventInFrame(t,e){return!(!this.nextEventAheadOfTime(t)||!this.nextEventBehindTime(e))&&(this.fireNextEvent(),!0)}activeEventsForFrame(t,e){const s=kr.eventFrame;this.clipFrameTime(e);const i=this.eventCursor;for(;this.fireNextEventInFrame(t,s.end)&&i!==this.eventCursor;);this.loop&&Math.abs(s.residual)>0&&this.activeEventsForFrame(s.start,s.residual)}progressForTime(t){return t*this._speed/this._track.duration}_update(t){if(this._playing){let e=this._time;const s=this._track.duration,i=this._speed,n=this._loop;this._track.events.length>0&&s>0&&this.activeEventsForFrame(e,e+i*t),e+=i*t,i>=0?e>s&&(n?e=e%s||0:(e=this._track.duration,this.pause())):e<0&&(n?e=s+(e%s||0):(e=0,this.pause())),this._time=e}this._time!==this._snapshot._time&&this._track.eval(this._time,this._snapshot)}play(){this._playing=!0,this._time=0}stop(){this._playing=!1,this._time=0}pause(){this._playing=!1}resume(){this._playing=!0}reset(){this._time=0}}const Br="NONE",Ur="INTEGER",zr="FLOAT",Vr="BOOLEAN",Gr="TRIGGER",Hr="START",Wr="END",Xr="ANY",$r=[Hr,Wr,Xr],qr="OVERWRITE";class jr{static dot(t,e){const s=t.length;let i=0;for(let n=0;n<s;++n)i+=t[n]*e[n];return i}static normalize(t){let e=jr.dot(t,t);if(e>0){e=1/Math.sqrt(e);const s=t.length;for(let i=0;i<s;++i)t[i]*=e}}static set(t,e,s){const i=t.length;if("quaternion"===s){let s=jr.dot(e,e);s>0&&(s=1/Math.sqrt(s));for(let n=0;n<i;++n)t[n]=e[n]*s}else for(let n=0;n<i;++n)t[n]=e[n]}static blendVec(t,e,s,i){const n=i?1:1-s,r=t.length;for(let a=0;a<r;++a)t[a]=t[a]*n+e[a]*s}static blendQuat(t,e,s,i){const n=t.length,r=i?1:1-s;jr.dot(t,e)<0&&(s=-s);for(let a=0;a<n;++a)t[a]=t[a]*r+e[a]*s;i||jr.normalize(t)}static blend(t,e,s,i,n){"quaternion"===i?jr.blendQuat(t,e,s,n):jr.blendVec(t,e,s,n)}static stableSort(t,e){const s=t.length;for(let i=0;i<s-1;++i)for(let n=i+1;n<s;++n)if(e(t[n],t[i])){const e=t[i];t[i]=t[n],t[n]=e}}}class Yr{static{this.TYPE_QUAT="quaternion"}static{this.TYPE_VEC3="vector3"}static{this.q1=new St.k}static{this.q2=new St.k}static{this.q3=new St.k}static{this.quatArr=[0,0,0,1]}static{this.vecArr=[0,0,0]}static{this.IDENTITY_QUAT_ARR=[0,0,0,1]}constructor(t,e){this._component=t,this.mask=new Int8Array(t.layers.length),this.weights=new Float32Array(t.layers.length),this.totalWeight=0,this.counter=0,this.layerCounter=0,this.valueType=e,this.dirty=!0,this.value=e===Yr.TYPE_QUAT?[0,0,0,1]:[0,0,0],this.baseValue=null,this.setter=null}get _normalizeWeights(){return this._component.normalizeWeights}getWeight(t){return this.dirty&&this.updateWeights(),this._normalizeWeights&&0===this.totalWeight||!this.mask[t]?0:this._normalizeWeights?this.weights[t]/this.totalWeight:a.D.clamp(this.weights[t],0,1)}_layerBlendType(t){return this._component.layers[t].blendType}setMask(t,e){this.mask[t]=e,this._normalizeWeights&&(this._component.layers[t].blendType===qr&&(this.mask=this.mask.fill(0,0,t)),this.dirty=!0)}updateWeights(){this.totalWeight=0;for(let t=0;t<this.weights.length;t++)this.weights[t]=this._component.layers[t].weight,this.totalWeight+=this.mask[t]*this.weights[t];this.dirty=!1}updateValue(t,e){if(0===this.counter&&(jr.set(this.value,Yr.IDENTITY_QUAT_ARR,this.valueType),this._normalizeWeights||jr.blend(this.value,this.baseValue,1,this.valueType)),this.mask[t]&&0!==this.getWeight(t)){if("ADDITIVE"!==this._layerBlendType(t)||this._normalizeWeights)jr.blend(this.value,e,this.getWeight(t),this.valueType);else if(this.valueType===Yr.TYPE_QUAT){const s=Yr.q1.set(this.value[0],this.value[1],this.value[2],this.value[3]),i=Yr.q2.set(this.baseValue[0],this.baseValue[1],this.baseValue[2],this.baseValue[3]),n=Yr.q3.set(e[0],e[1],e[2],e[3]),r=i.invert().mul(n);r.slerp(St.k.IDENTITY,r,this.getWeight(t)),s.mul(r),Yr.quatArr[0]=s.x,Yr.quatArr[1]=s.y,Yr.quatArr[2]=s.z,Yr.quatArr[3]=s.w,jr.set(this.value,Yr.quatArr,this.valueType)}else Yr.vecArr[0]=e[0]-this.baseValue[0],Yr.vecArr[1]=e[1]-this.baseValue[1],Yr.vecArr[2]=e[2]-this.baseValue[2],jr.blend(this.value,Yr.vecArr,this.getWeight(t),this.valueType,!0);this.setter&&this.setter(this.value)}}unbind(){this.setter&&this.setter(this.baseValue)}}class Kr{constructor(t){this._binder=t,this._clips=[],this._inputs=[],this._outputs=[],this._targets={}}get clips(){return this._clips}addClip(t){const e=this._targets,s=this._binder,i=t.track.curves,n=t.snapshot,r=[],a=[];for(let o=0;o<i.length;++o){const t=i[o].paths;for(let i=0;i<t.length;++i){const l=t[i],h=s.resolve(l);let c=e[h&&h.targetPath||null];if(!c&&h){c={target:h,value:[],curves:0,blendCounter:0};for(let t=0;t<c.target.components;++t)c.value.push(0);if(e[h.targetPath]=c,s.animComponent){if(!s.animComponent.targets[h.targetPath]){let t;t="localRotation"===h.targetPath.substring(h.targetPath.length-13)?Yr.TYPE_QUAT:Yr.TYPE_VEC3,s.animComponent.targets[h.targetPath]=new Yr(s.animComponent,t)}s.animComponent.targets[h.targetPath].layerCounter++,s.animComponent.targets[h.targetPath].setMask(s.layerIndex,1)}}c&&(c.curves++,r.push(n._results[o]),a.push(c))}}this._clips.push(t),this._inputs.push(r),this._outputs.push(a)}removeClip(t){const e=this._targets,s=this._binder,i=this._clips,n=i[t].track.curves;for(let r=0;r<n.length;++r){const t=n[r].paths;for(let i=0;i<t.length;++i){const n=t[i],r=this._binder.resolve(n);r&&(r.curves--,0===r.curves&&(s.unresolve(n),delete e[r.targetPath],s.animComponent&&s.animComponent.targets[r.targetPath].layerCounter--))}}i.splice(t,1),this._inputs.splice(t,1),this._outputs.splice(t,1)}removeClips(){for(;this._clips.length>0;)this.removeClip(0)}updateClipTrack(t,e){this._clips.forEach(s=>{s.name.includes(t)&&(s.track=e)}),this.rebind()}findClip(t){const e=this._clips;for(let s=0;s<e.length;++s){const i=e[s];if(i.name===t)return i}return null}rebind(){this._binder.rebind(),this._targets={};const t=[...this.clips];this.removeClips(),t.forEach(t=>{this.addClip(t)})}assignMask(t){return this._binder.assignMask(t)}update(t,e=!0){const s=this._clips,i=s.map((t,e)=>e);jr.stableSort(i,(t,e)=>s[t].blendOrder<s[e].blendOrder);for(let a=0;a<i.length;++a){const n=i[a],r=s[n],o=this._inputs[n],l=this._outputs[n],h=r.blendWeight;if(h>0&&r._update(t),!e)break;let c,d,u;if(h>=1)for(let t=0;t<o.length;++t)c=o[t],d=l[t],u=d.value,jr.set(u,c,d.target.type),d.blendCounter++;else if(h>0)for(let t=0;t<o.length;++t)c=o[t],d=l[t],u=d.value,0===d.blendCounter?jr.set(u,c,d.target.type):jr.blend(u,c,h,d.target.type),d.blendCounter++}const n=this._targets,r=this._binder;for(const a in n)if(n.hasOwnProperty(a)){const t=n[a];if(r.animComponent&&t.target.isTransform){const e=r.animComponent.targets[a];e.counter===e.layerCounter&&(e.counter=0),e.path||(e.path=a,e.baseValue=t.target.get(),e.setter=t.target.set),e.updateValue(r.layerIndex,t.value),e.counter++}else t.target.set(t.value);t.blendCounter=0}this._binder.update(t)}}class Zr{constructor(t){this._events=[...t],this._events.sort((t,e)=>t.time-e.time)}get events(){return this._events}}class Qr{static{this.EMPTY=Object.freeze(new Qr("empty",Number.MAX_VALUE,[],[],[]))}constructor(t,e,s,i,n,r=new Zr([])){this._name=t,this._duration=e,this._inputs=s,this._outputs=i,this._curves=n,this._animEvents=r}get name(){return this._name}get duration(){return this._duration}get inputs(){return this._inputs}get outputs(){return this._outputs}get curves(){return this._curves}set events(t){this._animEvents=t}get events(){return this._animEvents.events}eval(t,e){e._time=t;const s=this._inputs,i=this._outputs,n=this._curves,r=e._cache,a=e._results;for(let o=0;o<s.length;++o)r[o].update(t,s[o]._data);for(let o=0;o<n.length;++o){const t=n[o],e=i[t._output],s=a[o];r[t._input].eval(s,t._interpolation,e)}}}class Jr{static joinPath(t,e){e=e||".";return t.map(function(t){return t.replace(/\\/g,"\\\\").replace(new RegExp(`\\${e}`,"g"),`\\${e}`)}).join(e)}static splitPath(t,e){e=e||".";const s=[];let i="",n=0;for(;n<t.length;){let r=t[n++];"\\"===r&&n<t.length?(r=t[n++],i+="\\"===r||r===e?r:`\\${r}`):r===e?(s.push(i),i=""):i+=r}return i.length>0&&s.push(i),s}static encode(t,e,s){return`${Array.isArray(t)?t.join("/"):t}/${e}/${Array.isArray(s)?s.join("/"):s}`}resolve(t){return null}unresolve(t){}update(t){}}class ta{constructor(t,e,s,i){t.set?(this._set=t.set,this._get=t.get):this._set=t,this._type=e,this._components=s,this._targetPath=i,this._isTransform="localRotation"===this._targetPath.substring(this._targetPath.length-13)||"localPosition"===this._targetPath.substring(this._targetPath.length-13)||"localScale"===this._targetPath.substring(this._targetPath.length-10)}get set(){return this._set}get get(){return this._get}get type(){return this._type}get components(){return this._components}get targetPath(){return this._targetPath}get isTransform(){return this._isTransform}}class ea{constructor(t){if(this._isPathInMask=(t,e)=>{const s=this._mask[t];return!!s&&!!(s.children||e&&!1!==s.value)},this.graph=t,!t)return;this._mask=null;const e={},s=function(t){e[t.name]=t;for(let e=0;e<t.children.length;++e)s(t.children[e])};s(t),this.nodes=e,this.targetCache={};const i=function(t){let e,s=t;for(;s&&!(s instanceof as.w);)s=s.parent;return s&&(s.render?e=s.render.meshInstances:s.model&&(e=s.model.meshInstances)),e};this.nodeCounts={},this.activeNodes=[],this.handlers={localPosition:function(t){const e=t.localPosition;return ea.createAnimTarget(function(t){e.set(...t)},"vector",3,t,"localPosition")},localRotation:function(t){const e=t.localRotation;return ea.createAnimTarget(function(t){e.set(...t)},"quaternion",4,t,"localRotation")},localScale:function(t){const e=t.localScale;return ea.createAnimTarget(function(t){e.set(...t)},"vector",3,t,"localScale")},weight:function(t,e){e=0===e.indexOf("name.")?e.replace("name.",""):Number(e);const s=i(t);let n;if(s)for(let i=0;i<s.length;++i)if(s[i].node.name===t.name&&s[i].morphInstance){const t=s[i].morphInstance,r=s=>{t.setWeight(e,s[0])};n||(n=[]),n.push(r)}if(n){const s=t=>{for(let e=0;e<n.length;++e)n[e](t)};return ea.createAnimTarget(s,"number",1,t,`weight.${e}`)}return null},materialTexture:(t,e)=>{const s=i(t);if(s){let i;for(let e=0;e<s.length;++e)if(s[e].node.name===t.name){i=s[e];break}if(i){const s=t=>{const s=this.animComponent.system.app.assets.get(t[0]);s&&s.resource&&"texture"===s.type&&(i.material[e]=s.resource,i.material.update())};return ea.createAnimTarget(s,"vector",1,t,"materialTexture","material")}}return null}}}_isPathActive(t){if(!this._mask)return!0;const e=[t.entityPath[0],this.graph.name];for(let s=0;s<e.length;++s){let i=e[s];if(this._isPathInMask(i,1===t.entityPath.length))return!0;for(let e=1;e<t.entityPath.length;e++)if(i+=`/${t.entityPath[e]}`,this._isPathInMask(i,e===t.entityPath.length-1))return!0}return!1}findNode(t){if(!this._isPathActive(t))return null;let e;return this.graph&&(e=this.graph.findByPath(t.entityPath),e||(e=this.graph.findByPath(t.entityPath.slice(1)))),e||(e=this.nodes[t.entityPath[t.entityPath.length-1]||""]),e}static createAnimTarget(t,e,s,i,n,r){const a=Jr.encode(i.path,r||"entity",n);return new ta(t,e,s,a)}resolve(t){const e=Jr.encode(t.entityPath,t.component,t.propertyPath);let s=this.targetCache[e];if(s)return s;const i=this.findNode(t);if(!i)return null;const n=this.handlers[t.propertyPath];return n?(s=n(i),s?(this.targetCache[e]=s,this.nodeCounts[i.path]?this.nodeCounts[i.path]++:(this.activeNodes.push(i),this.nodeCounts[i.path]=1),s):null):null}unresolve(t){if("graph"!==t.component)return;const e=this.nodes[t.entityPath[t.entityPath.length-1]||""];if(this.nodeCounts[e.path]--,0===this.nodeCounts[e.path]){const t=this.activeNodes,s=t.indexOf(e.node),i=t.length;s<i-1&&(t[s]=t[i-1]),t.pop()}}update(t){const e=this.activeNodes;for(let s=0;s<e.length;++s)e[s]._dirtifyLocal()}assignMask(t){return t!==this._mask&&(this._mask=t,!0)}}class sa{constructor(){this._written=!1,this._name="",this._keyFrames=[],this._quat=new St.k,this._pos=new l.e,this._scale=new l.e,this._targetNode=null}getTarget(){return this._targetNode}setTarget(t){this._targetNode=t}}class ia{constructor(t){this.looping=!0,this._animation=null,this._time=0,this._interpolatedKeys=[],this._interpolatedKeyDict={},this._currKeyIndices={},this.graph=null;const e=t=>{const s=new sa;s._name=t.name,this._interpolatedKeys.push(s),this._interpolatedKeyDict[t.name]=s,this._currKeyIndices[t.name]=0;for(let i=0;i<t._children.length;i++)e(t._children[i])};e(t)}set animation(t){this._animation=t,this.currentTime=0}get animation(){return this._animation}set currentTime(t){this._time=t;const e=this._interpolatedKeys.length;for(let s=0;s<e;s++){const t=this._interpolatedKeys[s]._name;this._currKeyIndices[t]=0}this.addTime(0),this.updateGraph()}get currentTime(){return this._time}get numNodes(){return this._interpolatedKeys.length}addTime(t){if(null!==this._animation){const e=this._animation._nodes,s=this._animation.duration;if(this._time===s&&!this.looping)return;if(this._time+=t,this._time>s){this._time=this.looping?0:s;for(let t=0;t<e.length;t++){const s=e[t]._name;this._currKeyIndices[s]=0}}else if(this._time<0){this._time=this.looping?s:0;for(let t=0;t<e.length;t++){const s=e[t],i=s._name;this._currKeyIndices[i]=s._keys.length-2}}const i=t>=0?1:-1;for(let t=0;t<e.length;t++){const s=e[t],n=s._name,r=s._keys,a=this._interpolatedKeyDict[n];if(void 0===a)continue;let o=!1;if(1!==r.length)for(let t=this._currKeyIndices[n];t<r.length-1&&t>=0;t+=i){const e=r[t],s=r[t+1];if(e.time<=this._time&&s.time>=this._time){const i=(this._time-e.time)/(s.time-e.time);a._pos.lerp(e.position,s.position,i),a._quat.slerp(e.rotation,s.rotation,i),a._scale.lerp(e.scale,s.scale,i),a._written=!0,this._currKeyIndices[n]=t,o=!0;break}}(1===r.length||!o&&0===this._time&&this.looping)&&(a._pos.copy(r[0].position),a._quat.copy(r[0].rotation),a._scale.copy(r[0].scale),a._written=!0)}}}blend(t,e,s){const i=this._interpolatedKeys.length;for(let n=0;n<i;n++){const i=t._interpolatedKeys[n],r=e._interpolatedKeys[n],a=this._interpolatedKeys[n];i._written&&r._written?(a._quat.slerp(i._quat,e._interpolatedKeys[n]._quat,s),a._pos.lerp(i._pos,e._interpolatedKeys[n]._pos,s),a._scale.lerp(i._scale,r._scale,s),a._written=!0):i._written?(a._quat.copy(i._quat),a._pos.copy(i._pos),a._scale.copy(i._scale),a._written=!0):r._written&&(a._quat.copy(r._quat),a._pos.copy(r._pos),a._scale.copy(r._scale),a._written=!0)}}setGraph(t){if(this.graph=t,t)for(let e=0;e<this._interpolatedKeys.length;e++){const s=this._interpolatedKeys[e],i=t.findByName(s._name);this._interpolatedKeys[e].setTarget(i)}else for(let e=0;e<this._interpolatedKeys.length;e++)this._interpolatedKeys[e].setTarget(null)}updateGraph(){if(this.graph)for(let t=0;t<this._interpolatedKeys.length;t++){const e=this._interpolatedKeys[t];if(e._written){const t=e.getTarget();t.localPosition.copy(e._pos),t.localRotation.copy(e._quat),t.localScale.copy(e._scale),t._dirtyLocal||t._dirtifyLocal(),e._written=!1}}}}class na extends Ir{set animations(t){this._animations=t,this.onSetAnimations()}get animations(){return this._animations}set assets(t){const e=this._assets;if(e&&e.length)for(let i=0;i<e.length;i++)if(e[i]){const t=this.system.app.assets.get(e[i]);if(t){t.off("change",this.onAssetChanged,this),t.off("remove",this.onAssetRemoved,this);const e=this.animationsIndex[t.id];this.currAnim===e&&this._stopCurrentAnimation(),delete this.animations[e],delete this.animationsIndex[t.id]}}this._assets=t;const s=t.map(t=>t instanceof Kn.V?t.id:t);this.loadAnimationAssets(s)}get assets(){return this._assets}set currentTime(t){if(this.skeleton&&(this.skeleton.currentTime=t,this.skeleton.addTime(0),this.skeleton.updateGraph()),this.animEvaluator){const e=this.animEvaluator.clips;for(let s=0;s<e.length;++s)e[s].time=t}}get currentTime(){if(this.skeleton)return this.skeleton._time;if(this.animEvaluator){const t=this.animEvaluator.clips;if(t.length>0)return t[t.length-1].time}return 0}get duration(){return this.currAnim?this.animations[this.currAnim].duration:0}set loop(t){if(this._loop=t,this.skeleton&&(this.skeleton.looping=t),this.animEvaluator)for(let e=0;e<this.animEvaluator.clips.length;++e)this.animEvaluator.clips[e].loop=t}get loop(){return this._loop}play(t,e=0){if(this.enabled&&this.entity.enabled&&this.animations[t]){if(this.prevAnim=this.currAnim,this.currAnim=t,this.model){this.skeleton||this.animEvaluator||this._createAnimationController();const t=this.animations[this.prevAnim],s=this.animations[this.currAnim];if(this.blending=e>0&&!!this.prevAnim,this.blending&&(this.blend=0,this.blendSpeed=1/e),this.skeleton&&(this.blending?(this.fromSkel.animation=t,this.fromSkel.addTime(this.skeleton._time),this.toSkel.animation=s):this.skeleton.animation=s),this.animEvaluator){const t=this.animEvaluator;if(this.blending)for(;t.clips.length>1;)t.removeClip(0);else this.animEvaluator.removeClips();const e=new kr(this.animations[this.currAnim],0,1,!0,this.loop);e.name=this.currAnim,e.blendWeight=this.blending?0:1,e.reset(),this.animEvaluator.addClip(e)}}this.playing=!0}}getAnimation(t){return this.animations[t]}setModel(t){t!==this.model&&(this._resetAnimationController(),this.model=t,this.animations&&this.currAnim&&this.animations[this.currAnim]&&this.play(this.currAnim))}onSetAnimations(){const t=this.entity.model;if(t){const e=t.model;e&&e!==this.model&&this.setModel(e)}if(!this.currAnim&&this.activate&&this.enabled&&this.entity.enabled){const t=Object.keys(this._animations);t.length>0&&this.play(t[0])}}_resetAnimationController(){this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null}_createAnimationController(){const t=this.model,e=this.animations;let s=!1,i=!1;for(const r in e)if(e.hasOwnProperty(r)){e[r].constructor===Qr?i=!0:s=!0}const n=t.getGraph();s?(this.fromSkel=new ia(n),this.toSkel=new ia(n),this.skeleton=new ia(n),this.skeleton.looping=this.loop,this.skeleton.setGraph(n)):i&&(this.animEvaluator=new Kr(new ea(this.entity)))}loadAnimationAssets(t){if(!t||!t.length)return;const e=this.system.app.assets,s=t=>{if(t.resources.length>1)for(let e=0;e<t.resources.length;e++)this.animations[t.resources[e].name]=t.resources[e],this.animationsIndex[t.id]=t.resources[e].name;else this.animations[t.name]=t.resource,this.animationsIndex[t.id]=t.name;this.animations=this.animations},i=t=>{t.off("change",this.onAssetChanged,this),t.on("change",this.onAssetChanged,this),t.off("remove",this.onAssetRemoved,this),t.on("remove",this.onAssetRemoved,this),t.resource?s(t):(t.once("load",s,this),this.enabled&&this.entity.enabled&&e.load(t))};for(let n=0,r=t.length;n<r;n++){const s=e.get(t[n]);s?i(s):e.on(`add:${t[n]}`,i)}}onAssetChanged(t,e,s,i){if("resource"===e||"resources"===e)if("resources"===e&&s&&0===s.length&&(s=null),s){let e=!1;if(s.length>1){if(i&&i.length>1)for(let t=0;t<i.length;t++)delete this.animations[i[t].name];else delete this.animations[t.name];e=!1;for(let t=0;t<s.length;t++)this.animations[s[t].name]=s[t],e||this.currAnim!==s[t].name||this.playing&&this.enabled&&this.entity.enabled&&(e=!0,this.play(s[t].name));e||(this._stopCurrentAnimation(),this.onSetAnimations())}else{if(i&&i.length>1)for(let t=0;t<i.length;t++)delete this.animations[i[t].name];this.animations[t.name]=s[0]||s,e=!1,this.currAnim===t.name&&this.playing&&this.enabled&&this.entity.enabled&&(e=!0,this.play(t.name)),e||(this._stopCurrentAnimation(),this.onSetAnimations())}this.animationsIndex[t.id]=t.name}else{if(i.length>1)for(let t=0;t<i.length;t++)delete this.animations[i[t].name],this.currAnim===i[t].name&&this._stopCurrentAnimation();else delete this.animations[t.name],this.currAnim===t.name&&this._stopCurrentAnimation();delete this.animationsIndex[t.id]}}onAssetRemoved(t){if(t.off("remove",this.onAssetRemoved,this),this.animations){if(t.resources.length>1)for(let e=0;e<t.resources.length;e++)delete this.animations[t.resources[e].name],this.currAnim===t.resources[e].name&&this._stopCurrentAnimation();else delete this.animations[t.name],this.currAnim===t.name&&this._stopCurrentAnimation();delete this.animationsIndex[t.id]}}_stopCurrentAnimation(){if(this.currAnim=null,this.playing=!1,this.skeleton&&(this.skeleton.currentTime=0,this.skeleton.animation=null),this.animEvaluator){for(let t=0;t<this.animEvaluator.clips.length;++t)this.animEvaluator.clips[t].stop();this.animEvaluator.update(0),this.animEvaluator.removeClips()}}onEnable(){super.onEnable();const t=this.assets,e=this.system.app.assets;if(t)for(let s=0,i=t.length;s<i;s++){let i=t[s];i instanceof Kn.V||(i=e.get(i)),i&&!i.resource&&e.load(i)}if(this.activate&&!this.currAnim){const t=Object.keys(this.animations);t.length>0&&this.play(t[0])}}onBeforeRemove(){for(let t=0;t<this.assets.length;t++){let e=this.assets[t];"number"==typeof e&&(e=this.system.app.assets.get(e)),e&&(e.off("change",this.onAssetChanged,this),e.off("remove",this.onAssetRemoved,this))}this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animEvaluator=null}update(t){if(this.blending&&(this.blend+=t*this.blendSpeed,this.blend>=1&&(this.blend=1)),this.playing){const e=this.skeleton;if(null!==e&&null!==this.model){if(this.blending)e.blend(this.fromSkel,this.toSkel,this.blend);else{const s=t*this.speed;e.addTime(s),(this.speed>0&&e._time===e.animation.duration&&!this.loop||this.speed<0&&0===e._time&&!this.loop)&&(this.playing=!1)}this.blending&&1===this.blend&&(e.animation=this.toSkel.animation),e.updateGraph()}}const e=this.animEvaluator;if(e){for(let t=0;t<e.clips.length;++t){const s=e.clips[t];s.speed=this.speed,this.playing?s.resume():s.pause()}this.blending&&e.clips.length>1&&(e.clips[1].blendWeight=this.blend),e.update(t)}this.blending&&1===this.blend&&(this.blending=!1)}constructor(...t){super(...t),this._animations={},this._assets=[],this._loop=!0,this.animEvaluator=null,this.model=null,this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animationsIndex={},this.prevAnim=null,this.currAnim=null,this.blend=0,this.blending=!1,this.blendSpeed=0,this.activate=!0,this.speed=1}}class ra{constructor(){this.enabled=!0}}const aa=["enabled"];class oa extends Rr{constructor(t){super(t),this.id="animation",this.ComponentType=na,this.DataType=ra,this.schema=aa,this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["activate","enabled","loop","speed","assets"];for(const i of s)e.hasOwnProperty(i)&&(t[i]=e[i]);super.initializeComponentData(t,e,aa)}cloneComponent(t,e){this.addComponent(e,{}),e.animation.assets=t.animation.assets.slice(),e.animation.speed=t.animation.speed,e.animation.loop=t.animation.loop,e.animation.activate=t.animation.activate,e.animation.enabled=t.animation.enabled;const s={},i=t.animation.animations;for(const a in i)i.hasOwnProperty(a)&&(s[a]=i[a]);e.animation.animations=s;const n={},r=t.animation.animationsIndex;for(const a in r)r.hasOwnProperty(a)&&(n[a]=r[a]);return e.animation.animationsIndex=n,e.animation}onBeforeRemove(t,e){e.onBeforeRemove()}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s];i.data.enabled&&i.entity.enabled&&i.entity.animation.update(t)}}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}Ir._buildAccessors(na.prototype,aa);class la{constructor(t,e,s,i,n=1){this._state=t,this._parent=e,this._name=s,Array.isArray(i)?(this._point=new Jt.Z(i[0],i[1]),this._pointLength=this._point.length()):(this._point=i,this._pointLength=i),this._speed=n,this._weightedSpeed=1,this._weight=1,this._animTrack=null}get parent(){return this._parent}get name(){return this._name}get path(){return this._parent?`${this._parent.path}.${this._name}`:this._name}get point(){return this._point}get pointLength(){return this._pointLength}set weight(t){this._weight=t}get weight(){return this._parent?this._parent.weight*this._weight:this._weight}get normalizedWeight(){const t=this._state.totalWeight;return 0===t?0:this.weight/t}get speed(){return this._weightedSpeed*this._speed}get absoluteSpeed(){return Math.abs(this._speed)}set weightedSpeed(t){this._weightedSpeed=t}get weightedSpeed(){return this._weightedSpeed}set animTrack(t){this._animTrack=t}get animTrack(){return this._animTrack}}class ha extends la{constructor(t,e,s,i,n,r,a,o,l){super(t,e,s,i),this._parameters=n,this._parameterValues=new Array(n.length),this._children=[],this._findParameter=l,this._syncAnimations=!1!==a,this._pointCache={};for(let h=0;h<r.length;h++){const e=r[h];e.children?this._children.push(o(e.type,t,this,e.name,1,e.parameter?[e.parameter]:e.parameters,e.children,e.syncAnimations,o,l)):this._children.push(new la(t,this,e.name,e.point,e.speed))}}get weight(){return this.calculateWeights(),this._parent?this._parent.weight*this._weight:this._weight}get syncAnimations(){return this._syncAnimations}getChild(t){for(let e=0;e<this._children.length;e++)if(this._children[e].name===t)return this._children[e];return null}updateParameterValues(){let t=!0;for(let e=0;e<this._parameterValues.length;e++){const s=this._findParameter(this._parameters[e]).value;this._parameterValues[e]!==s&&(this._parameterValues[e]=s,t=!1)}return t}getNodeWeightedDuration(t){return this._children[t].animTrack.duration/this._children[t].speedMultiplier*this._children[t].weight}getNodeCount(){let t=0;for(let e=0;e<this._children.length;e++){this._children[e].constructor===ha?t+=this._children[e].getNodeCount():t++}return t}}class ca extends ha{constructor(t,e,s,i,n,r,a,o,l){r.sort((t,e)=>t.point-e.point),super(t,e,s,i,n,r,a,o,l)}calculateWeights(){if(this.updateParameterValues())return;let t=0;this._children[0].weight=0;for(let e=0;e<this._children.length;e++){const s=this._children[e];if(e!==this._children.length-1){const t=this._children[e+1];if(s.point===t.point)s.weight=.5,t.weight=.5;else if(a.D.between(this._parameterValues[0],s.point,t.point,!0)){const e=Math.abs(s.point-t.point),i=(e-Math.abs(s.point-this._parameterValues[0]))/e;s.weight=i,t.weight=1-i}else t.weight=0}this._syncAnimations&&(t+=s.animTrack.duration/s.absoluteSpeed*s.weight)}if(this._syncAnimations)for(let e=0;e<this._children.length;e++){const s=this._children[e];s.weightedSpeed=s.animTrack.duration/s.absoluteSpeed/t}}}class da extends ha{static{this._p=new Jt.Z}static{this._pip=new Jt.Z}pointDistanceCache(t,e){const s=`${t}${e}`;return this._pointCache[s]||(this._pointCache[s]=this._children[e].point.clone().sub(this._children[t].point)),this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;da._p.set(...this._parameterValues),t=0,e=0;for(let s=0;s<this._children.length;s++){const i=this._children[s],n=i.point;da._pip.set(da._p.x,da._p.y).sub(n);let r=Number.MAX_VALUE;for(let t=0;t<this._children.length;t++){if(s===t)continue;const e=this.pointDistanceCache(s,t),i=a.D.clamp(1-da._pip.dot(e)/e.lengthSq(),0,1);i<r&&(r=i)}i.weight=r,t+=r,this._syncAnimations&&(e+=i.animTrack.duration/i.absoluteSpeed*i.weight)}for(let s=0;s<this._children.length;s++){const i=this._children[s];i.weight=i._weight/t,this._syncAnimations&&(i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e)}}}class ua extends ha{static{this._p=new Jt.Z}static{this._pip=new Jt.Z}pointCache(t,e){const s=`${t}${e}`;return this._pointCache[s]||(this._pointCache[s]=new Jt.Z((this._children[e].pointLength-this._children[t].pointLength)/((this._children[e].pointLength+this._children[t].pointLength)/2),2*Jt.Z.angleRad(this._children[t].point,this._children[e].point))),this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;ua._p.set(...this._parameterValues);const s=ua._p.length();t=0,e=0;for(let i=0;i<this._children.length;i++){const n=this._children[i],r=n.point,o=n.pointLength;let l=Number.MAX_VALUE;for(let t=0;t<this._children.length;t++){if(i===t)continue;const e=this.pointCache(i,t),n=this._children[t].pointLength;ua._pip.set((s-o)/((n+o)/2),2*Jt.Z.angleRad(r,ua._p));const h=a.D.clamp(1-Math.abs(ua._pip.dot(e)/e.lengthSq()),0,1);h<l&&(l=h)}n.weight=l,t+=l,this._syncAnimations&&(e+=n.animTrack.duration/n.absoluteSpeed*n.weight)}for(let i=0;i<this._children.length;i++){const s=this._children[i];if(s.weight=s._weight/t,this._syncAnimations){const i=s.animTrack.duration/e*t;s.weightedSpeed=s.absoluteSpeed*i}}}}class fa extends ha{calculateWeights(){if(this.updateParameterValues())return;let t=0,e=0;for(let s=0;s<this._children.length;s++)if(t+=Math.max(this._parameterValues[s],0),this._syncAnimations){const t=this._children[s];e+=t.animTrack.duration/t.absoluteSpeed*t.weight}for(let s=0;s<this._children.length;s++){const i=this._children[s],n=Math.max(this._parameterValues[s],0);t?(i.weight=n/t,this._syncAnimations&&(i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e)):(i.weight=0,this._syncAnimations&&(i.weightedSpeed=0))}}}class pa{constructor(t,e,s=1,i=!0,n){this._animations={},this._animationList=[],this._controller=t,this._name=e,this._speed=s,this._loop=i,this._hasAnimations=!1,this._blendTree=n?this._createTree(n.type,this,null,e,1,n.parameter?[n.parameter]:n.parameters,n.children,n.syncAnimations,this._createTree,this._controller.findParameter):new la(this,null,e,1,s)}_createTree(t,e,s,i,n,r,a,o,l,h){switch(t){case"1D":return new ca(e,s,i,n,r,a,o,l,h);case"2D_CARTESIAN":return new da(e,s,i,n,r,a,o,l,h);case"2D_DIRECTIONAL":return new ua(e,s,i,n,r,a,o,l,h);case"DIRECT":return new fa(e,s,i,n,r,a,o,l,h)}}_getNodeFromPath(t){let e=this._blendTree;for(let s=1;s<t.length;s++)e=e.getChild(t[s]);return e}addAnimation(t,e){const s=t.join("."),i=this._animationList.findIndex(t=>t.path===s);if(i>=0)this._animationList[i].animTrack=e;else{const s=this._getNodeFromPath(t);s.animTrack=e,this._animationList.push(s)}this._updateHasAnimations()}_updateHasAnimations(){this._hasAnimations=this._animationList.length>0&&this._animationList.every(t=>t.animTrack&&t.animTrack!==Qr.EMPTY)}get name(){return this._name}set animations(t){this._animationList=t,this._updateHasAnimations()}get animations(){return this._animationList}get hasAnimations(){return this._hasAnimations}set speed(t){this._speed=t}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}get nodeCount(){return this._blendTree&&this._blendTree.constructor!==la?this._blendTree.getNodeCount():1}get playable(){return-1!==$r.indexOf(this.name)||this.animations.length===this.nodeCount}get looping(){if(this.animations.length>0){const t=`${this.name}.${this.animations[0].animTrack.name}`,e=this._controller.animEvaluator.findClip(t);if(e)return e.loop}return!1}get totalWeight(){let t=0;for(let e=0;e<this.animations.length;e++)t+=this.animations[e].weight;return t}get timelineDuration(){let t=0;for(let e=0;e<this.animations.length;e++){const s=this.animations[e];s.animTrack.duration>t&&(t=s.animTrack.duration)}return t}}class ma{constructor({from:t,to:e,time:s=0,priority:i=0,conditions:n=[],exitTime:r=null,transitionOffset:a=null,interruptionSource:o=Br}){this._from=t,this._to=e,this._time=s,this._priority=i,this._conditions=n,this._exitTime=r,this._transitionOffset=a,this._interruptionSource=o}get from(){return this._from}set to(t){this._to=t}get to(){return this._to}get time(){return this._time}get priority(){return this._priority}get conditions(){return this._conditions}get exitTime(){return this._exitTime}get transitionOffset(){return this._transitionOffset}get interruptionSource(){return this._interruptionSource}get hasExitTime(){return!!this.exitTime}}class _a{constructor(t,e,s,i,n,r,a){this._states={},this._stateNames=[],this._findTransitionsFromStateCache={},this._findTransitionsBetweenStatesCache={},this._previousStateName=null,this._activeStateName=Hr,this._activeStateDuration=0,this._activeStateDurationDirty=!0,this._playing=!1,this._currTransitionTime=1,this._totalTransitionTime=1,this._isTransitioning=!1,this._transitionInterruptionSource=Br,this._transitionPreviousStates=[],this._timeInState=0,this._timeInStateBefore=0,this.findParameter=t=>this._findParameter(t),this._animEvaluator=t,this._eventHandler=n,this._findParameter=r,this._consumeTrigger=a;for(let o=0;o<e.length;o++)this._states[e[o].name]=new pa(this,e[o].name,e[o].speed,e[o].loop,e[o].blendTree),this._stateNames.push(e[o].name);this._transitions=s.map(t=>new ma({...t})),this._activate=i}get animEvaluator(){return this._animEvaluator}set activeState(t){this._activeStateName=t}get activeState(){return this._findState(this._activeStateName)}get activeStateName(){return this._activeStateName}get activeStateAnimations(){return this.activeState.animations}set previousState(t){this._previousStateName=t}get previousState(){return this._findState(this._previousStateName)}get previousStateName(){return this._previousStateName}get playable(){let t=!0;for(let e=0;e<this._stateNames.length;e++)this._states[this._stateNames[e]].playable||(t=!1);return t}set playing(t){this._playing=t}get playing(){return this._playing}get activeStateProgress(){return this._getActiveStateProgressForTime(this._timeInState)}get activeStateDuration(){if(this._activeStateDurationDirty){let t=0;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this._animEvaluator.findClip(this.activeStateAnimations[e].name);s&&(t=Math.max(t,s.track.duration))}this._activeStateDuration=t,this._activeStateDurationDirty=!1}return this._activeStateDuration}set activeStateCurrentTime(t){this._timeInStateBefore=t,this._timeInState=t;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this.animEvaluator.findClip(this.activeStateAnimations[e].name);s&&(s.time=t)}}get activeStateCurrentTime(){return this._timeInState}get transitioning(){return this._isTransitioning}get transitionProgress(){return this._currTransitionTime/this._totalTransitionTime}get states(){return this._stateNames}assignMask(t){return this._animEvaluator.assignMask(t)}_findState(t){return this._states[t]}_getActiveStateProgressForTime(t){if(this.activeStateName===Hr||this.activeStateName===Wr||this.activeStateName===Xr)return 1;const e=this._animEvaluator.findClip(this.activeStateAnimations[0].name);return e?e.progressForTime(t):null}_findTransitionsFromState(t){let e=this._findTransitionsFromStateCache[t];return e||(e=this._transitions.filter(e=>e.from===t),Cn(e),this._findTransitionsFromStateCache[t]=e),e}_findTransitionsBetweenStates(t,e){let s=this._findTransitionsBetweenStatesCache[`${t}->${e}`];return s||(s=this._transitions.filter(s=>s.from===t&&s.to===e),Cn(s),this._findTransitionsBetweenStatesCache[`${t}->${e}`]=s),s}_transitionHasConditionsMet(t){const e=t.conditions;for(let s=0;s<e.length;s++){const t=e[s],i=this._findParameter(t.parameterName);switch(t.predicate){case"GREATER_THAN":if(!(i.value>t.value))return!1;break;case"LESS_THAN":if(!(i.value<t.value))return!1;break;case"GREATER_THAN_EQUAL_TO":if(!(i.value>=t.value))return!1;break;case"LESS_THAN_EQUAL_TO":if(!(i.value<=t.value))return!1;break;case"EQUAL_TO":if(i.value!==t.value)return!1;break;case"NOT_EQUAL_TO":if(i.value===t.value)return!1}}return!0}_findTransition(t,e){let s=[];if(t&&e)s=s.concat(this._findTransitionsBetweenStates(t,e));else if(this._isTransitioning)switch(this._transitionInterruptionSource){case"PREV_STATE":s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(Xr));break;case"NEXT_STATE":s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Xr));break;case"PREV_STATE_NEXT_STATE":s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Xr));break;case"NEXT_STATE_PREV_STATE":s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(this._previousStateName)),s=s.concat(this._findTransitionsFromState(Xr))}else s=s.concat(this._findTransitionsFromState(this._activeStateName)),s=s.concat(this._findTransitionsFromState(Xr));if(s=s.filter(t=>{if(t.to===this.activeStateName)return!1;if(t.hasExitTime){let e=this._getActiveStateProgressForTime(this._timeInStateBefore),s=this._getActiveStateProgressForTime(this._timeInState);if(t.exitTime<1&&this.activeState.loop&&(e-=Math.floor(e),s-=Math.floor(s)),s===e){if(s!==t.exitTime)return null}else if(!(t.exitTime>e&&t.exitTime<=s))return null}return this._transitionHasConditionsMet(t)}),s.length>0){const t=s[0];if(t.to===Wr){const e=this._findTransitionsFromState(Hr)[0];t.to=e.to}return t}return null}updateStateFromTransition(t){let e,s,i;this.previousState=t.from?this.activeStateName:null,this.activeState=t.to,this._activeStateDurationDirty=!0;for(let l=0;l<t.conditions.length;l++){const e=t.conditions[l];this._findParameter(e.parameterName).type===Gr&&this._consumeTrigger(e.parameterName)}if(this.previousState){this._isTransitioning||(this._transitionPreviousStates=[]),this._transitionPreviousStates.push({name:this._previousStateName,weight:1});const t=Math.min(0!==this._totalTransitionTime?this._currTransitionTime/this._totalTransitionTime:1,1);for(let n=0;n<this._transitionPreviousStates.length;n++){this._isTransitioning?n!==this._transitionPreviousStates.length-1?this._transitionPreviousStates[n].weight*=1-t:this._transitionPreviousStates[n].weight=t:this._transitionPreviousStates[n].weight=1,e=this._findState(this._transitionPreviousStates[n].name);for(let t=0;t<e.animations.length;t++)s=e.animations[t],i=this._animEvaluator.findClip(`${s.name}.previous.${n}`),i||(i=this._animEvaluator.findClip(s.name),i.name=`${s.name}.previous.${n}`),n!==this._transitionPreviousStates.length-1&&i.pause()}}this._isTransitioning=!0,this._totalTransitionTime=t.time,this._currTransitionTime=0,this._transitionInterruptionSource=t.interruptionSource;const n=this.activeState,r=t.transitionOffset&&t.transitionOffset>0&&t.transitionOffset<1;let a=0,o=0;if(r){const e=n.timelineDuration*t.transitionOffset;a=e,o=e}this._timeInState=a,this._timeInStateBefore=o;for(let l=0;l<n.animations.length;l++){if(i=this._animEvaluator.findClip(n.animations[l].name),i)i.reset();else{const t=Number.isFinite(n.animations[l].speed)?n.animations[l].speed:n.speed;i=new kr(n.animations[l].animTrack,this._timeInState,t,!0,n.loop,this._eventHandler),i.name=n.animations[l].name,this._animEvaluator.addClip(i)}if(t.time>0?i.blendWeight=0:i.blendWeight=n.animations[l].normalizedWeight,i.play(),r)i.time=n.timelineDuration*t.transitionOffset;else{const t=n.speed>=0?0:this.activeStateDuration;i.time=t}}}_transitionToState(t){if(!this._findState(t))return;let e=this._findTransition(this._activeStateName,t);e||(this._animEvaluator.removeClips(),e=new ma({from:null,to:t})),this.updateStateFromTransition(e)}assignAnimation(t,e,s,i){const n=t.split(".");let r=this._findState(n[0]);r||(r=new pa(this,n[0],s),this._states[n[0]]=r,this._stateNames.push(n[0])),r.addAnimation(n,e),this._animEvaluator.updateClipTrack(r.name,e),void 0!==s&&(r.speed=s),void 0!==i&&(r.loop=i),!this._playing&&this._activate&&this.playable&&this.play(),this._activeStateDurationDirty=!0}removeNodeAnimations(t){if(-1!==$r.indexOf(t))return!1;const e=this._findState(t);return!!e&&(e.animations=[],!0)}play(t){t&&this._transitionToState(t),this._playing=!0}pause(){this._playing=!1}reset(){this._previousStateName=null,this._activeStateName=Hr,this._playing=!1,this._currTransitionTime=1,this._totalTransitionTime=1,this._isTransitioning=!1,this._timeInState=0,this._timeInStateBefore=0,this._animEvaluator.removeClips()}rebind(){this._animEvaluator.rebind()}update(t){if(!this._playing)return;let e,s,i;(this.activeState.loop||this._timeInState<this.activeStateDuration)&&(this._timeInStateBefore=this._timeInState,this._timeInState+=t*this.activeState.speed,!this.activeState.loop&&this._timeInState>this.activeStateDuration&&(this._timeInState=this.activeStateDuration,t=this.activeStateDuration-this._timeInStateBefore));const n=this._findTransition(this._activeStateName);if(n&&this.updateStateFromTransition(n),this._isTransitioning)if(this._currTransitionTime+=t,this._currTransitionTime<=this._totalTransitionTime){const t=0!==this._totalTransitionTime?this._currTransitionTime/this._totalTransitionTime:1;for(let n=0;n<this._transitionPreviousStates.length;n++){e=this._findState(this._transitionPreviousStates[n].name);const r=this._transitionPreviousStates[n].weight;for(let a=0;a<e.animations.length;a++)s=e.animations[a],i=this._animEvaluator.findClip(`${s.name}.previous.${n}`),i&&(i.blendWeight=(1-t)*s.normalizedWeight*r)}e=this.activeState;for(let i=0;i<e.animations.length;i++)s=e.animations[i],this._animEvaluator.findClip(s.name).blendWeight=t*s.normalizedWeight}else{this._isTransitioning=!1;const t=this.activeStateAnimations.length,n=this._animEvaluator.clips.length;for(let e=0;e<n-t;e++)this._animEvaluator.removeClip(0);this._transitionPreviousStates=[],e=this.activeState;for(let r=0;r<e.animations.length;r++)s=e.animations[r],i=this._animEvaluator.findClip(s.name),i&&(i.blendWeight=s.normalizedWeight)}else if(this.activeState._blendTree.constructor!==la){e=this.activeState;for(let t=0;t<e.animations.length;t++)s=e.animations[t],i=this._animEvaluator.findClip(s.name),i&&(i.blendWeight=s.normalizedWeight,s.parent.syncAnimations&&(i.speed=s.speed))}this._animEvaluator.update(t,this.activeState.hasAnimations)}}const ga=new Jt.Z,va=new l.e,Sa=new w.Z,ya=new p.Q,xa=new St.k;class Ta extends ea{constructor(t,e,s,i,n){super(e),this.animComponent=t,this._mask=i,this.layerName=s,this.layerIndex=n}static _packFloat(t){return t[0]}static _packBoolean(t){return!!t[0]}static _packVec2(t){return ga.x=t[0],ga.y=t[1],ga}static _packVec3(t){return va.x=t[0],va.y=t[1],va.z=t[2],va}static _packVec4(t){return Sa.x=t[0],Sa.y=t[1],Sa.z=t[2],Sa.w=t[3],Sa}static _packColor(t){return ya.r=t[0],ya.g=t[1],ya.b=t[2],ya.a=t[3],ya}static _packQuat(t){return xa.x=t[0],xa.y=t[1],xa.z=t[2],xa.w=t[3],xa}resolve(t){const e=Jr.encode(t.entityPath,t.component,t.propertyPath);let s,i,n,r=this.targetCache[e];if(r)return r;switch(t.component){case"entity":s=this._getEntityFromHierarchy(t.entityPath),n=Jr.encode(s.path,"entity",t.propertyPath),i=s;break;case"graph":if(i=this.findNode(t),!i)return null;n=Jr.encode(i.path,"graph",t.propertyPath);break;default:if(s=this._getEntityFromHierarchy(t.entityPath),i=s.findComponent(t.component),!i)return null;n=Jr.encode(s.path,t.component,t.propertyPath)}return r=this._createAnimTargetForProperty(i,t.propertyPath,n),this.targetCache[e]=r,r}update(t){const e=this.activeNodes;if(e)for(let s=0;s<e.length;s++)e[s]._dirtifyLocal()}_getEntityFromHierarchy(t){if(!this.animComponent.entity.name===t[0])return null;const e=this.animComponent.entity;return 1===t.length?e:e._parent.findByPath(t)}_resolvePath(t,e,s){const i=e.length-(s?0:1);for(let n=0;n<i;n++)t=t[e[n]];return t}_setter(t,e,s){const i=this._resolvePath(t,e),n=e[e.length-1],r=`set${n.substring(0,1).toUpperCase()}${n.substring(1)}`;if(i[r]){let t=i[`get${n.substring(0,1).toUpperCase()}${n.substring(1)}`].bind(i)();t=[t.x,t.y,t.z,t.w];const e=i[r].bind(i);return{set:t=>{e(s(t))},get:()=>t}}const a=i[n];if("object"==typeof a&&a.hasOwnProperty("copy"))return function(t){a.copy(s(t))};if(-1!==[Jt.Z,l.e,w.Z,p.Q,St.k].indexOf(i.constructor)&&e.length>1){const r=e.length>2?this._resolvePath(t,e.slice(0,-1)):t,a=e[e.length-2];return function(t){i[n]=s(t),r[a]=i}}return function(t){i[n]=s(t)}}_createAnimTargetForProperty(t,e,s){if(this.handlers&&e[0].startsWith("weight."))return this.handlers.weight(t,e[0].replace("weight.",""));if(this.handlers&&"material"===e[0]&&2===e.length){const s=e[1];if(s.endsWith("Map"))return this.handlers.materialTexture(t,s)}const i=this._resolvePath(t,e,!0);if(void 0===i)return null;let n,r,a;if("number"==typeof i)n=this._setter(t,e,Ta._packFloat),r="vector",a=1;else if("boolean"==typeof i)n=this._setter(t,e,Ta._packBoolean),r="vector",a=1;else if("object"==typeof i)switch(i.constructor){case Jt.Z:n=this._setter(t,e,Ta._packVec2),r="vector",a=2;break;case l.e:n=this._setter(t,e,Ta._packVec3),r="vector",a=3;break;case w.Z:n=this._setter(t,e,Ta._packVec4),r="vector",a=4;break;case p.Q:n=this._setter(t,e,Ta._packColor),r="vector",a=4;break;case St.k:n=this._setter(t,e,Ta._packQuat),r="quaternion",a=4;break;default:return null}return-1!==e.indexOf("material")?new ta(e=>{n(e),t.material.update()},r,a,s):new ta(n,r,a,s)}rebind(){this.targetCache={},this.animComponent.rootBone?this.graph=this.animComponent.rootBone:this.graph=this.animComponent.entity;const t={},e=function(s){t[s.name]=s;for(let t=0;t<s.children.length;++t)e(s.children[t])};e(this.graph),this.nodes=t}}class wa{constructor(t,e,s,i=1,n=qr){this._mask=null,this._blendTime=0,this._blendTimeElapsed=0,this._startingWeight=0,this._targetWeight=0,this._name=t,this._controller=e,this._component=s,this._weight=i,this._blendType=n}get name(){return this._name}set playing(t){this._controller.playing=t}get playing(){return this._controller.playing}get playable(){return this._controller.playable}get activeState(){return this._controller.activeStateName}get previousState(){return this._controller.previousStateName}get activeStateProgress(){return this._controller.activeStateProgress}get activeStateDuration(){return this._controller.activeStateDuration}set activeStateCurrentTime(t){const e=this._controller,s=e.playing;e.playing=!0,e.activeStateCurrentTime=t,s||e.update(0),e.playing=s}get activeStateCurrentTime(){return this._controller.activeStateCurrentTime}get transitioning(){return this._controller.transitioning}get transitionProgress(){return this.transitioning?this._controller.transitionProgress:null}get states(){return this._controller.states}set weight(t){this._weight=t,this._component.dirtifyTargets()}get weight(){return this._weight}set blendType(t){t!==this._blendType&&(this._blendType=t,this._controller.normalizeWeights&&this._component.rebind())}get blendType(){return this._blendType}set mask(t){this._controller.assignMask(t)&&this._component.rebind(),this._mask=t}get mask(){return this._mask}play(t){this._controller.play(t)}pause(){this._controller.pause()}reset(){this._controller.reset()}rebind(){this._controller.rebind()}update(t){this._blendTime&&(this._blendTimeElapsed<this._blendTime?(this.weight=a.D.lerp(this._startingWeight,this._targetWeight,this._blendTimeElapsed/this._blendTime),this._blendTimeElapsed+=t):(this.weight=this._targetWeight,this._blendTime=0,this._blendTimeElapsed=0,this._startingWeight=0,this._targetWeight=0)),this._controller.update(t)}blendToWeight(t,e){this._startingWeight=this.weight,this._targetWeight=t,this._blendTime=Math.max(0,e),this._blendTimeElapsed=0}assignAnimation(t,e,s,i){e instanceof Qr&&(this._controller.assignAnimation(t,e,s,i),0===this._controller._transitions.length&&this._controller._transitions.push(new ma({from:"START",to:t})),this._component.activate&&this._component.playable&&(this._component.playing=!0))}removeNodeAnimations(t){this._controller.removeNodeAnimations(t)&&(this._component.playing=!1)}getAnimationAsset(t){return this._component.animationAssets[`${this.name}:${t}`]}transition(t,e=0,s=null){this._controller.updateStateFromTransition(new ma({from:this._controller.activeStateName,to:t,time:e,transitionOffset:s}))}}class ba{constructor(t){if(this._layers=[],this._parameters={},Array.isArray(t.layers))this._layers=t.layers;else for(const e in t.layers){const s=t.layers[e],i={name:s.name,blendType:s.blendType,weight:s.weight,states:[],transitions:[]};for(let e=0;e<s.states.length;e++)i.states.push(t.states[s.states[e]]);for(let e=0;e<s.transitions.length;e++){const n=t.transitions[s.transitions[e]];if(n.conditions&&!Array.isArray(n.conditions)){const t=Object.keys(n.conditions),e=[];for(let s=0;s<t.length;s++){const i=n.conditions[t[s]];i.parameterName&&e.push(i)}n.conditions=e}Number.isInteger(n.from)&&(n.from=t.states[n.from].name),Number.isInteger(n.to)&&(n.to=t.states[n.to].name),i.transitions.push(n)}this._layers.push(i)}for(const e in t.parameters){const s=t.parameters[e];this._parameters[s.name]={type:s.type,value:s.value}}}get parameters(){return Object.assign({},this._parameters)}get layers(){return this._layers}}class Ea extends Ir{set stateGraphAsset(t){if(null===t)return void this.removeStateGraph();if(this._stateGraphAsset){this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this)}let e,s;t instanceof Kn.V?(e=t.id,s=this.system.app.assets.get(e),s||(this.system.app.assets.add(t),s=this.system.app.assets.get(e))):(e=t,s=this.system.app.assets.get(e)),s&&this._stateGraphAsset!==e&&(s.resource?(this._stateGraph=s.resource,this.loadStateGraph(this._stateGraph),s.on("change",this._onStateGraphAssetChangeEvent,this)):(s.once("load",t=>{this._stateGraph=t.resource,this.loadStateGraph(this._stateGraph)}),s.on("change",this._onStateGraphAssetChangeEvent,this),this.system.app.assets.load(s)),this._stateGraphAsset=e)}get stateGraphAsset(){return this._stateGraphAsset}set normalizeWeights(t){this._normalizeWeights=t,this.unbind()}get normalizeWeights(){return this._normalizeWeights}set animationAssets(t){this._animationAssets=t,this.loadAnimationAssets()}get animationAssets(){return this._animationAssets}set speed(t){this._speed=t}get speed(){return this._speed}set activate(t){this._activate=t}get activate(){return this._activate}set playing(t){this._playing=t}get playing(){return this._playing}set rootBone(t){if("string"==typeof t){const e=this.entity.root.findByGuid(t);this._rootBone=e}else t instanceof as.w?this._rootBone=t:this._rootBone=null;this.rebind()}get rootBone(){return this._rootBone}set stateGraph(t){this._stateGraph=t}get stateGraph(){return this._stateGraph}get layers(){return this._layers}set layerIndices(t){this._layerIndices=t}get layerIndices(){return this._layerIndices}set parameters(t){this._parameters=t}get parameters(){return this._parameters}set targets(t){this._targets=t}get targets(){return this._targets}get playable(){for(let t=0;t<this._layers.length;t++)if(!this._layers[t].playable)return!1;return!0}get baseLayer(){return this._layers.length>0?this._layers[0]:null}_onStateGraphAssetChangeEvent(t){const e=this.animationAssets,s=this.layers.map(t=>t.mask);this.removeStateGraph(),this._stateGraph=new ba(t._data),this.loadStateGraph(this._stateGraph),this.animationAssets=e,this.loadAnimationAssets(),this.layers.forEach((t,e)=>{t.mask=s[e]}),this.rebind()}dirtifyTargets(){const t=Object.values(this._targets);for(let e=0;e<t.length;e++)t[e].dirty=!0}_addLayer({name:t,states:e,transitions:s,weight:i,mask:n,blendType:r}){let a;a=this.rootBone?this.rootBone:this.entity;const o=this._layers.length,l=new Ta(this,a,t,n,o),h=new Kr(l),c=new _a(h,e,s,this._activate,this,this.findParameter,this.consumeTrigger);return this._layers.push(new wa(t,c,this,i,r)),this._layerIndices[t]=o,this._layers[o]}addLayer(t,e,s,i){const n=this.findAnimationLayer(t);if(n)return n;return this._addLayer({name:t,states:[{name:"START",speed:1}],transitions:[],weight:e,mask:s,blendType:i})}_assignParameters(t){this._parameters={};const e=Object.keys(t.parameters);for(let s=0;s<e.length;s++){const i=e[s];this._parameters[i]={type:t.parameters[i].type,value:t.parameters[i].value}}}loadStateGraph(t){this._stateGraph=t,this._assignParameters(t),this._layers=[];let e=!1;for(let s=0;s<t.layers.length;s++){const i=t.layers[s];this._addLayer({...i}),i.states.some(t=>t.blendTree)&&(e=!0)}e||this.setupAnimationAssets()}setupAnimationAssets(){for(let t=0;t<this._layers.length;t++){const e=this._layers[t],s=e.name;for(let t=0;t<e.states.length;t++){const i=e.states[t];if(-1===$r.indexOf(i)){const t=`${s}:${i}`;this._animationAssets[t]||(this._animationAssets[t]={asset:null})}}}this.loadAnimationAssets()}loadAnimationAssets(){for(let t=0;t<this._layers.length;t++){const e=this._layers[t];for(let t=0;t<e.states.length;t++){const s=e.states[t];if(-1!==$r.indexOf(s))continue;const i=this._animationAssets[`${e.name}:${s}`];if(!i||!i.asset){this.findAnimationLayer(e.name).assignAnimation(s,Qr.EMPTY);continue}const n=i.asset,r=this.system.app.assets.get(n);r&&(r.resource?this.onAnimationAssetLoaded(e.name,s,r):(r.once("load",function(t,e){return function(s){this.onAnimationAssetLoaded(t,e,s)}.bind(this)}.bind(this)(e.name,s)),this.system.app.assets.load(r)))}}}onAnimationAssetLoaded(t,e,s){this.findAnimationLayer(t).assignAnimation(e,s.resource)}removeStateGraph(){this._stateGraph=null,this._stateGraphAsset=null,this._animationAssets={},this._layers=[],this._layerIndices={},this._parameters={},this._playing=!1,this.unbind(),this._targets={}}reset(){this._assignParameters(this._stateGraph);for(let t=0;t<this._layers.length;t++){const e=this._layers[t].playing;this._layers[t].reset(),this._layers[t].playing=e}}unbind(){this._normalizeWeights||Object.keys(this._targets).forEach(t=>{this._targets[t].unbind()})}rebind(){this._targets={};for(let t=0;t<this._layers.length;t++)this._layers[t].rebind()}findAnimationLayer(t){const e=this._layerIndices[t];return this._layers[e]||null}addAnimationState(t,e,s=1,i=!0,n="Base"){this._stateGraph||this.loadStateGraph(new ba({layers:[{name:n,states:[{name:"START",speed:1},{name:t,speed:s,loop:i,defaultState:!0}],transitions:[{from:"START",to:t}]}],parameters:{}}));const r=this.findAnimationLayer(n);r?r.assignAnimation(t,e,s,i):this.addLayer(n)?.assignAnimation(t,e,s,i)}assignAnimation(t,e,s,i=1,n=!0){if(!this._stateGraph&&-1===t.indexOf("."))return this.loadStateGraph(new ba({layers:[{name:"Base",states:[{name:"START",speed:1},{name:t,speed:i,loop:n,defaultState:!0}],transitions:[{from:"START",to:t}]}],parameters:{}})),void this.baseLayer.assignAnimation(t,e);const r=s?this.findAnimationLayer(s):this.baseLayer;r&&r.assignAnimation(t,e,i,n)}removeNodeAnimations(t,e){const s=e?this.findAnimationLayer(e):this.baseLayer;s&&s.removeNodeAnimations(t)}getParameterValue(t,e){const s=this._parameters[t];if(s&&s.type===e)return s.value}setParameterValue(t,e,s){const i=this._parameters[t];i&&i.type===e&&(i.value=s)}getFloat(t){return this.getParameterValue(t,zr)}setFloat(t,e){this.setParameterValue(t,zr,e)}getInteger(t){return this.getParameterValue(t,Ur)}setInteger(t,e){"number"==typeof e&&e%1==0&&this.setParameterValue(t,Ur,e)}getBoolean(t){return this.getParameterValue(t,Vr)}setBoolean(t,e){this.setParameterValue(t,Vr,!!e)}getTrigger(t){return this.getParameterValue(t,Gr)}setTrigger(t,e=!1){this.setParameterValue(t,Gr,!0),e&&this._consumedTriggers.add(t)}resetTrigger(t){this.setParameterValue(t,Gr,!1)}onBeforeRemove(){if(Number.isFinite(this._stateGraphAsset)){this.system.app.assets.get(this._stateGraphAsset).off("change",this._onStateGraphAssetChangeEvent,this)}}update(t){for(let e=0;e<this.layers.length;e++)this.layers[e].update(t*this.speed);this._consumedTriggers.forEach(t=>{this.parameters[t].value=!1}),this._consumedTriggers.clear()}resolveDuplicatedEntityReferenceProperties(t,e){t.rootBone&&e[t.rootBone.getGuid()]?this.rootBone=e[t.rootBone.getGuid()]:this.rebind()}constructor(...t){super(...t),this._stateGraphAsset=null,this._animationAssets={},this._speed=1,this._activate=!0,this._playing=!1,this._rootBone=null,this._stateGraph=null,this._layers=[],this._layerIndices={},this._parameters={},this._targets={},this._consumedTriggers=new Set,this._normalizeWeights=!1,this.findParameter=t=>this._parameters[t],this.consumeTrigger=t=>{this._consumedTriggers.add(t)}}}class Aa{constructor(){this.enabled=!0}}const Ca=["enabled"];class Pa extends Rr{constructor(t){super(t),this.id="anim",this.ComponentType=Ea,this.DataType=Aa,this.schema=Ca,this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("animationUpdate",this.onAnimationUpdate,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,Ca);const i=["animationAssets","stateGraph","layers","masks"];Object.keys(e).forEach(s=>{i.includes(s)||(t[s]=e[s])}),e.stateGraph&&(t.stateGraph=e.stateGraph,t.loadStateGraph(t.stateGraph)),e.layers&&e.layers.forEach((e,s)=>{e._controller.states.forEach(i=>{e._controller._states[i]._animationList.forEach(i=>{if(i.animTrack&&i.animTrack!==Qr.EMPTY)t.layers[s].assignAnimation(i.name,i.animTrack);else{const n=this.app.assets.get(e._component._animationAssets[`${e.name}:${i.name}`].asset);n&&!n.loaded&&n.once("load",()=>{t.layers[s].assignAnimation(i.name,n.resource)})}})})}),e.animationAssets&&(t.animationAssets=Object.assign(t.animationAssets,e.animationAssets)),e.masks&&Object.keys(e.masks).forEach(s=>{if(t.layers[s]){const i=e.masks[s].mask,n={};Object.keys(i).forEach(t=>{n[decodeURI(t)]=i[t]}),t.layers[s].mask=n}})}onAnimationUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s].entity.anim;i.data.enabled&&i.entity.enabled&&i.playing&&i.update(t)}}cloneComponent(t,e){let s;t.anim.rootBone&&t.anim.rootBone!==t||(s={},t.anim.layers.forEach((t,i)=>{if(t.mask){const n={};Object.keys(t.mask).forEach(s=>{const i=s.split("/");i.shift();const r=[e.name,...i].join("/");n[r]=t.mask[s]}),s[i]={mask:n}}}));const i={enabled:t.anim.enabled,stateGraphAsset:t.anim.stateGraphAsset,animationAssets:t.anim.animationAssets,speed:t.anim.speed,activate:t.anim.activate,playing:t.anim.playing,rootBone:t.anim.rootBone,stateGraph:t.anim.stateGraph,layers:t.anim.layers,layerIndices:t.anim.layerIndices,parameters:t.anim.parameters,normalizeWeights:t.anim.normalizeWeights,masks:s};return this.addComponent(e,i)}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy(),this.app.systems.off("animationUpdate",this.onAnimationUpdate,this)}}Ir._buildAccessors(Ea.prototype,Ca);class Da extends Ir{setCurrentListener(){if(this.enabled&&this.entity.audiolistener&&this.entity.enabled){this.system.current=this.entity;const t=this.system.current.getPosition();this.system.manager.listener.setPosition(t)}}onEnable(){this.setCurrentListener()}onDisable(){this.system.current===this.entity&&(this.system.current=null)}}class La{constructor(){this.enabled=!0}}const Ma=["enabled"];class Ia extends Rr{constructor(t){super(t),this.id="audiolistener",this.ComponentType=Da,this.DataType=La,this.schema=Ma,this.manager=t.soundManager,this.current=null,this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["enabled"],super.initializeComponentData(t,e,s)}onUpdate(t){if(this.current){const t=this.current.getPosition();this.manager.listener.setPosition(t);const e=this.current.getWorldTransform();this.manager.listener.setOrientation(e)}}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}Ir._buildAccessors(Da.prototype,Ma);const Ra="group",Fa="image",Oa="text",Na="stretch",ka="DEFAULT",Ba="HOVER",Ua="PRESSED",za="INACTIVE",Va={};Va[ka]="_defaultTint",Va[Ba]="hoverTint",Va[Ua]="pressedTint",Va[za]="inactiveTint";const Ga={};Ga[ka]="_defaultSpriteAsset",Ga[Ba]="hoverSpriteAsset",Ga[Ua]="pressedSpriteAsset",Ga[za]="inactiveSpriteAsset";const Ha={};Ha[ka]="_defaultSpriteFrame",Ha[Ba]="hoverSpriteFrame",Ha[Ua]="pressedSpriteFrame",Ha[za]="inactiveSpriteFrame";class Wa extends Ir{static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEENTER="mouseenter"}static{this.EVENT_MOUSELEAVE="mouseleave"}static{this.EVENT_CLICK="click"}static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHCANCEL="touchcancel"}static{this.EVENT_TOUCHLEAVE="touchleave"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SELECTENTER="selectenter"}static{this.EVENT_SELECTLEAVE="selectleave"}static{this.EVENT_HOVERSTART="hoverstart"}static{this.EVENT_HOVEREND="hoverend"}static{this.EVENT_PRESSEDSTART="pressedstart"}static{this.EVENT_PRESSEDEND="pressedend"}constructor(t,e){super(t,e),this._visualState=ka,this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._defaultTint=new p.Q(1,1,1,1),this._defaultSpriteAsset=null,this._defaultSpriteFrame=0,this._imageEntity=null,this._evtElementAdd=null,this._evtImageEntityElementAdd=null,this._evtImageEntityElementRemove=null,this._evtImageEntityElementColor=null,this._evtImageEntityElementOpacity=null,this._evtImageEntityElementSpriteAsset=null,this._evtImageEntityElementSpriteFrame=null,this._visualState=ka,this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._defaultTint=new p.Q(1,1,1,1),this._defaultSpriteAsset=null,this._defaultSpriteFrame=0,this._toggleLifecycleListeners("on",t)}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set active(t){this._setValue("active",t)}get active(){return this.data.active}set imageEntity(t){if(this._imageEntity!==t){const e="string"==typeof t;if(this._imageEntity&&e&&this._imageEntity.getGuid()===t)return;this._imageEntity&&this._imageEntityUnsubscribe(),t instanceof Rt.t?this._imageEntity=t:this._imageEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._imageEntity&&this._imageEntitySubscribe(),this._imageEntity?this.data.imageEntity=this._imageEntity.getGuid():e&&t&&(this.data.imageEntity=t)}}get imageEntity(){return this._imageEntity}set hitPadding(t){this._setValue("hitPadding",t)}get hitPadding(){return this.data.hitPadding}set transitionMode(t){this._setValue("transitionMode",t)}get transitionMode(){return this.data.transitionMode}set hoverTint(t){this._setValue("hoverTint",t)}get hoverTint(){return this.data.hoverTint}set pressedTint(t){this._setValue("pressedTint",t)}get pressedTint(){return this.data.pressedTint}set inactiveTint(t){this._setValue("inactiveTint",t)}get inactiveTint(){return this.data.inactiveTint}set fadeDuration(t){this._setValue("fadeDuration",t)}get fadeDuration(){return this.data.fadeDuration}set hoverSpriteAsset(t){this._setValue("hoverSpriteAsset",t)}get hoverSpriteAsset(){return this.data.hoverSpriteAsset}set hoverSpriteFrame(t){this._setValue("hoverSpriteFrame",t)}get hoverSpriteFrame(){return this.data.hoverSpriteFrame}set pressedSpriteAsset(t){this._setValue("pressedSpriteAsset",t)}get pressedSpriteAsset(){return this.data.pressedSpriteAsset}set pressedSpriteFrame(t){this._setValue("pressedSpriteFrame",t)}get pressedSpriteFrame(){return this.data.pressedSpriteFrame}set inactiveSpriteAsset(t){this._setValue("inactiveSpriteAsset",t)}get inactiveSpriteAsset(){return this.data.inactiveSpriteAsset}set inactiveSpriteFrame(t){this._setValue("inactiveSpriteFrame",t)}get inactiveSpriteFrame(){return this.data.inactiveSpriteFrame}_setValue(t,e){const s=this.data,i=s[t];s[t]=e,this.fire("set",t,i,e)}_toggleLifecycleListeners(t,e){this[t]("set_active",this._onSetActive,this),this[t]("set_transitionMode",this._onSetTransitionMode,this),this[t]("set_hoverTint",this._onSetTransitionValue,this),this[t]("set_pressedTint",this._onSetTransitionValue,this),this[t]("set_inactiveTint",this._onSetTransitionValue,this),this[t]("set_hoverSpriteAsset",this._onSetTransitionValue,this),this[t]("set_hoverSpriteFrame",this._onSetTransitionValue,this),this[t]("set_pressedSpriteAsset",this._onSetTransitionValue,this),this[t]("set_pressedSpriteFrame",this._onSetTransitionValue,this),this[t]("set_inactiveSpriteAsset",this._onSetTransitionValue,this),this[t]("set_inactiveSpriteFrame",this._onSetTransitionValue,this),"on"===t?this._evtElementAdd=this.entity.on("element:add",this._onElementComponentAdd,this):(this._evtElementAdd?.off(),this._evtElementAdd=null)}_onSetActive(t,e,s){e!==s&&this._updateVisualState()}_onSetTransitionMode(t,e,s){e!==s&&(this._cancelTween(),this._resetToDefaultVisualState(e),this._forceReapplyVisualState())}_onSetTransitionValue(t,e,s){e!==s&&this._forceReapplyVisualState()}_imageEntitySubscribe(){this._evtImageEntityElementAdd=this._imageEntity.on("element:add",this._onImageElementGain,this),this._imageEntity.element&&this._onImageElementGain()}_imageEntityUnsubscribe(){this._evtImageEntityElementAdd?.off(),this._evtImageEntityElementAdd=null,this._imageEntity?.element&&this._onImageElementLose()}_imageEntityElementSubscribe(){const t=this._imageEntity.element;this._evtImageEntityElementRemove=t.once("beforeremove",this._onImageElementLose,this),this._evtImageEntityElementColor=t.on("set:color",this._onSetColor,this),this._evtImageEntityElementOpacity=t.on("set:opacity",this._onSetOpacity,this),this._evtImageEntityElementSpriteAsset=t.on("set:spriteAsset",this._onSetSpriteAsset,this),this._evtImageEntityElementSpriteFrame=t.on("set:spriteFrame",this._onSetSpriteFrame,this)}_imageEntityElementUnsubscribe(){this._evtImageEntityElementRemove?.off(),this._evtImageEntityElementRemove=null,this._evtImageEntityElementColor?.off(),this._evtImageEntityElementColor=null,this._evtImageEntityElementOpacity?.off(),this._evtImageEntityElementOpacity=null,this._evtImageEntityElementSpriteAsset?.off(),this._evtImageEntityElementSpriteAsset=null,this._evtImageEntityElementSpriteFrame?.off(),this._evtImageEntityElementSpriteFrame=null}_onElementComponentRemove(){this._toggleHitElementListeners("off")}_onElementComponentAdd(){this._toggleHitElementListeners("on")}_onImageElementLose(){this._imageEntityElementUnsubscribe(),this._cancelTween(),this._resetToDefaultVisualState(this.transitionMode)}_onImageElementGain(){this._imageEntityElementSubscribe(),this._storeDefaultVisualState(),this._forceReapplyVisualState()}_toggleHitElementListeners(t){if(this.entity.element){const e="on"===t;if(e&&this._hasHitElementListeners)return;this.entity.element[t]("beforeremove",this._onElementComponentRemove,this),this.entity.element[t]("mouseenter",this._onMouseEnter,this),this.entity.element[t]("mouseleave",this._onMouseLeave,this),this.entity.element[t]("mousedown",this._onMouseDown,this),this.entity.element[t]("mouseup",this._onMouseUp,this),this.entity.element[t]("touchstart",this._onTouchStart,this),this.entity.element[t]("touchend",this._onTouchEnd,this),this.entity.element[t]("touchleave",this._onTouchLeave,this),this.entity.element[t]("touchcancel",this._onTouchCancel,this),this.entity.element[t]("selectstart",this._onSelectStart,this),this.entity.element[t]("selectend",this._onSelectEnd,this),this.entity.element[t]("selectenter",this._onSelectEnter,this),this.entity.element[t]("selectleave",this._onSelectLeave,this),this.entity.element[t]("click",this._onClick,this),this._hasHitElementListeners=e}}_storeDefaultVisualState(){const t=this._imageEntity?.element;t&&t.type!==Ra&&(this._storeDefaultColor(t.color),this._storeDefaultOpacity(t.opacity),this._storeDefaultSpriteAsset(t.spriteAsset),this._storeDefaultSpriteFrame(t.spriteFrame))}_storeDefaultColor(t){this._defaultTint.r=t.r,this._defaultTint.g=t.g,this._defaultTint.b=t.b}_storeDefaultOpacity(t){this._defaultTint.a=t}_storeDefaultSpriteAsset(t){this._defaultSpriteAsset=t}_storeDefaultSpriteFrame(t){this._defaultSpriteFrame=t}_onSetColor(t){this._isApplyingTint||(this._storeDefaultColor(t),this._forceReapplyVisualState())}_onSetOpacity(t){this._isApplyingTint||(this._storeDefaultOpacity(t),this._forceReapplyVisualState())}_onSetSpriteAsset(t){this._isApplyingSprite||(this._storeDefaultSpriteAsset(t),this._forceReapplyVisualState())}_onSetSpriteFrame(t){this._isApplyingSprite||(this._storeDefaultSpriteFrame(t),this._forceReapplyVisualState())}_onMouseEnter(t){this._isHovering=!0,this._updateVisualState(),this._fireIfActive("mouseenter",t)}_onMouseLeave(t){this._isHovering=!1,this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseleave",t)}_onMouseDown(t){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("mousedown",t)}_onMouseUp(t){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("mouseup",t)}_onTouchStart(t){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("touchstart",t)}_onTouchEnd(t){t.event.preventDefault(),this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchend",t)}_onTouchLeave(t){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchleave",t)}_onTouchCancel(t){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("touchcancel",t)}_onSelectStart(t){this._isPressed=!0,this._updateVisualState(),this._fireIfActive("selectstart",t)}_onSelectEnd(t){this._isPressed=!1,this._updateVisualState(),this._fireIfActive("selectend",t)}_onSelectEnter(t){this._hoveringCounter++,1===this._hoveringCounter&&(this._isHovering=!0,this._updateVisualState()),this._fireIfActive("selectenter",t)}_onSelectLeave(t){this._hoveringCounter--,0===this._hoveringCounter&&(this._isHovering=!1,this._isPressed=!1,this._updateVisualState()),this._fireIfActive("selectleave",t)}_onClick(t){this._fireIfActive("click",t)}_fireIfActive(t,e){this.data.active&&this.fire(t,e)}_updateVisualState(t){const e=this._visualState,s=this._determineVisualState();if((e!==s||t)&&this.enabled)switch(this._visualState=s,e===Ba&&this._fireIfActive("hoverend"),e===Ua&&this._fireIfActive("pressedend"),s===Ba&&this._fireIfActive("hoverstart"),s===Ua&&this._fireIfActive("pressedstart"),this.transitionMode){case 0:{const t=this[Va[this._visualState]];this._applyTint(t);break}case 1:{const t=Ga[this._visualState],e=Ha[this._visualState],s=this[t],i=this[e];this._applySprite(s,i);break}}}_forceReapplyVisualState(){this._updateVisualState(!0)}_resetToDefaultVisualState(t){if(this._imageEntity?.element)switch(t){case 0:this._cancelTween(),this._applyTintImmediately(this._defaultTint);break;case 1:this._applySprite(this._defaultSpriteAsset,this._defaultSpriteFrame)}}_determineVisualState(){return this.active?this._isPressed?Ua:this._isHovering?Ba:ka:za}_applySprite(t,e){const s=this._imageEntity?.element;s&&(e=e||0,this._isApplyingSprite=!0,s.spriteAsset!==t&&(s.spriteAsset=t),s.spriteFrame!==e&&(s.spriteFrame=e),this._isApplyingSprite=!1)}_applyTint(t){this._cancelTween(),0===this.fadeDuration?this._applyTintImmediately(t):this._applyTintWithTween(t)}_applyTintImmediately(t){const e=this._imageEntity?.element;if(!t||!e||e.type===Ra)return;const s=Xa(t);this._isApplyingTint=!0,s.equals(e.color)||(e.color=s),e.opacity!==t.a&&(e.opacity=t.a),this._isApplyingTint=!1}_applyTintWithTween(t){const e=this._imageEntity?.element;if(!t||!e||e.type===Ra)return;const s=Xa(t),i=e.color,n=e.opacity;s.equals(i)&&t.a===n||(this._tweenInfo={startTime:(0,f.t)(),from:new p.Q(i.r,i.g,i.b,n),to:t.clone(),lerpColor:new p.Q})}_updateTintTween(){const t=(0,f.t)()-this._tweenInfo.startTime;let e=0===this.fadeDuration?1:t/this.fadeDuration;if(e=a.D.clamp(e,0,1),Math.abs(e-1)>1e-5){const t=this._tweenInfo.lerpColor;t.lerp(this._tweenInfo.from,this._tweenInfo.to,e),this._applyTintImmediately(new p.Q(t.r,t.g,t.b,t.a))}else this._applyTintImmediately(this._tweenInfo.to),this._cancelTween()}_cancelTween(){delete this._tweenInfo}onUpdate(){this._tweenInfo&&this._updateTintTween()}onEnable(){this._isHovering=!1,this._hoveringCounter=0,this._isPressed=!1,this._toggleHitElementListeners("on"),this._forceReapplyVisualState()}onDisable(){this._toggleHitElementListeners("off"),this._resetToDefaultVisualState(this.transitionMode)}onRemove(){this._imageEntityUnsubscribe(),this._toggleLifecycleListeners("off",this.system),this.onDisable()}resolveDuplicatedEntityReferenceProperties(t,e){t.imageEntity&&(this.imageEntity=e[t.imageEntity.getGuid()])}}function Xa(t){return new p.Q(t.r,t.g,t.b)}class $a{constructor(){this.enabled=!0,this.active=!0,this.imageEntity=null,this.hitPadding=new w.Z,this.transitionMode=0,this.hoverTint=new p.Q(.75,.75,.75),this.pressedTint=new p.Q(.5,.5,.5),this.inactiveTint=new p.Q(.25,.25,.25),this.fadeDuration=0,this.hoverSpriteAsset=null,this.hoverSpriteFrame=0,this.pressedSpriteAsset=null,this.pressedSpriteFrame=0,this.inactiveSpriteAsset=null,this.inactiveSpriteFrame=0}}const qa=["enabled","active",{name:"hitPadding",type:"vec4"},"transitionMode",{name:"hoverTint",type:"rgba"},{name:"pressedTint",type:"rgba"},{name:"inactiveTint",type:"rgba"},"fadeDuration","hoverSpriteAsset","hoverSpriteFrame","pressedSpriteAsset","pressedSpriteFrame","inactiveSpriteAsset","inactiveSpriteFrame"];class ja extends Rr{constructor(t){super(t),this.id="button",this.ComponentType=Wa,this.DataType=$a,this.schema=qa,this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){t.imageEntity=e.imageEntity,super.initializeComponentData(t,e,qa)}onUpdate(t){const e=this.store;for(const s in e){const t=e[s].entity,i=t.button;i.enabled&&t.enabled&&i.onUpdate()}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}class Ya{constructor(t){this.morph=t,t.incRefCount(),this.device=t.device;const e=t._targets.length;this.shader=this._createShader(e),this._weights=[],this._weightMap=new Map;for(let r=0;r<t._targets.length;r++){const e=t._targets[r];e.name&&this._weightMap.set(e.name,r),this.setWeight(r,e.defaultWeight)}this._shaderMorphWeights=new Float32Array(e),this._shaderMorphIndex=new Uint32Array(e);const s=(e,s)=>(this[s]=t._createTexture(e,t._renderTextureFormat),new T.O({colorBuffer:this[s],depth:!1}));t.morphPositions&&(this.rtPositions=s("MorphRTPos","texturePositions")),t.morphNormals&&(this.rtNormals=s("MorphRTNrm","textureNormals")),this._textureParams=new Float32Array([t.morphTextureWidth,t.morphTextureHeight]);const i=t.aabb.halfExtents;this._aabbSize=new Float32Array([4*i.x,4*i.y,4*i.z]);const n=t.aabb.getMin();this._aabbMin=new Float32Array([2*n.x,2*n.y,2*n.z]),this._aabbNrmSize=new Float32Array([2,2,2]),this._aabbNrmMin=new Float32Array([-1,-1,-1]),this.aabbSizeId=this.device.scope.resolve("aabbSize"),this.aabbMinId=this.device.scope.resolve("aabbMin"),this.morphTextureId=this.device.scope.resolve("morphTexture"),this.morphFactor=this.device.scope.resolve("morphFactor[0]"),this.morphIndex=this.device.scope.resolve("morphIndex[0]"),this.countId=this.device.scope.resolve("count"),this.zeroTextures=!1}destroy(){this.shader=null;const t=this.morph;t&&(this.morph=null,t.decRefCount(),t.refCount<1&&t.destroy()),this.rtPositions?.destroy(),this.rtPositions=null,this.texturePositions?.destroy(),this.texturePositions=null,this.rtNormals?.destroy(),this.rtNormals=null,this.textureNormals?.destroy(),this.textureNormals=null}clone(){return new Ya(this.morph)}_getWeightIndex(t){if("string"==typeof t){return this._weightMap.get(t)}return t}getWeight(t){const e=this._getWeightIndex(t);return this._weights[e]}setWeight(t,e){const s=this._getWeightIndex(t);this._weights[s]=e,this._dirty=!0}_createShader(t){const e=new Map;e.set("{MORPH_TEXTURE_MAX_COUNT}",t),this.morph.intRenderFormat&&e.set("MORPH_INT","");const s=this.morph.intRenderFormat?"uvec4":"vec4";return V.createShader(this.device,{uniqueName:`TextureMorphShader_${t}-${this.morph.intRenderFormat?"int":"float"}`,attributes:{vertex_position:x.JYe},vertexChunk:"morphVS",fragmentChunk:"morphPS",fragmentDefines:e,fragmentOutputTypes:[s]})}_updateTextureRenderTarget(t,e,s){const{morph:i,device:n}=this;this.setAabbUniforms(s),this.morphTextureId.setValue(s?i.targetsTexturePositions:i.targetsTextureNormals),n.setBlendState(re.t.NOBLEND),this.countId.setValue(e),this.morphFactor.setValue(this._shaderMorphWeights),this.morphIndex.setValue(this._shaderMorphIndex),Z(n,t,this.shader)}_updateTextureMorph(t){this.device,(t>0||!this.zeroTextures)&&(this.rtPositions&&this._updateTextureRenderTarget(this.rtPositions,t,!0),this.rtNormals&&this._updateTextureRenderTarget(this.rtNormals,t,!1),this.zeroTextures=0===t)}setAabbUniforms(t=!0){this.aabbSizeId.setValue(t?this._aabbSize:this._aabbNrmSize),this.aabbMinId.setValue(t?this._aabbMin:this._aabbNrmMin)}prepareRendering(t){this.setAabbUniforms()}update(){this._dirty=!1;const t=this.morph._targets,e=this._shaderMorphWeights,s=this._shaderMorphIndex;let i=0;for(let n=0;n<t.length;n++)Math.abs(this.getWeight(n))>1e-5&&(e[i]=this.getWeight(n),s[i]=n,i++);this._updateTextureMorph(i)}}class Ka{constructor(){this.graph=null,this.meshInstances=[],this.skinInstances=[],this.morphInstances=[],this.cameras=[],this.lights=[],this._shadersVersion=0,this._immutable=!1}getGraph(){return this.graph}setGraph(t){this.graph=t}getCameras(){return this.cameras}setCameras(t){this.cameras=t}getLights(){return this.lights}setLights(t){this.lights=t}getMaterials(){const t=[];for(let e=0;e<this.meshInstances.length;e++){const s=this.meshInstances[e];-1===t.indexOf(s.material)&&t.push(s.material)}return t}clone(){const t=[],e=[],s=function(i){const n=i.clone();t.push(i),e.push(n);for(let t=0;t<i._children.length;t++)n.addChild(s(i._children[t]));return n},i=s(this.graph),n=[],r=[],a=[];for(let l=0;l<this.skinInstances.length;l++){const t=this.skinInstances[l].skin,e=new Hs(t),s=[];for(let n=0;n<t.boneNames.length;n++){const e=t.boneNames[n],r=i.findByName(e);s.push(r)}e.bones=s,r.push(e)}for(let l=0;l<this.morphInstances.length;l++){const t=this.morphInstances[l].morph,e=new Ya(t);a.push(e)}for(let l=0;l<this.meshInstances.length;l++){const s=this.meshInstances[l],i=t.indexOf(s.node),o=new pt(s.mesh,s.material,e[i]);if(s.skinInstance){const t=this.skinInstances.indexOf(s.skinInstance);o.skinInstance=r[t]}if(s.morphInstance){const t=this.morphInstances.indexOf(s.morphInstance);o.morphInstance=a[t]}n.push(o)}const o=new Ka;return o.graph=i,o.meshInstances=n,o.skinInstances=r,o.morphInstances=a,o.getGraph().syncHierarchy(),o}destroy(){const t=this.meshInstances;for(let e=0;e<t.length;e++)t[e].destroy();this.meshInstances.length=0}generateWireframe(){pt._prepareRenderStyleForArray(this.meshInstances,F.l3Q)}}const Za=new l.e,Qa=new St.k;class Ja extends Ir{static{this.EVENT_CONTACT="contact"}static{this.EVENT_COLLISIONSTART="collisionstart"}static{this.EVENT_COLLISIONEND="collisionend"}static{this.EVENT_TRIGGERENTER="triggerenter"}static{this.EVENT_TRIGGERLEAVE="triggerleave"}constructor(t,e){super(t,e),this._compoundParent=null,this._hasOffset=!1,this.entity.on("insert",this._onInsert,this),this.on("set_type",this.onSetType,this),this.on("set_convexHull",this.onSetModel,this),this.on("set_halfExtents",this.onSetHalfExtents,this),this.on("set_linearOffset",this.onSetOffset,this),this.on("set_angularOffset",this.onSetOffset,this),this.on("set_radius",this.onSetRadius,this),this.on("set_height",this.onSetHeight,this),this.on("set_axis",this.onSetAxis,this),this.on("set_asset",this.onSetAsset,this),this.on("set_renderAsset",this.onSetRenderAsset,this),this.on("set_model",this.onSetModel,this),this.on("set_render",this.onSetRender,this)}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set type(t){this._setValue("type",t)}get type(){return this.data.type}set halfExtents(t){this._setValue("halfExtents",t)}get halfExtents(){return this.data.halfExtents}set linearOffset(t){this._setValue("linearOffset",t)}get linearOffset(){return this.data.linearOffset}set angularOffset(t){this._setValue("angularOffset",t)}get angularOffset(){return this.data.angularOffset}set radius(t){this._setValue("radius",t)}get radius(){return this.data.radius}set axis(t){this._setValue("axis",t)}get axis(){return this.data.axis}set height(t){this._setValue("height",t)}get height(){return this.data.height}set asset(t){this._setValue("asset",t)}get asset(){return this.data.asset}set renderAsset(t){this._setValue("renderAsset",t)}get renderAsset(){return this.data.renderAsset}set convexHull(t){this._setValue("convexHull",t)}get convexHull(){return this.data.convexHull}set shape(t){this._setValue("shape",t)}get shape(){return this.data.shape}set model(t){this._setValue("model",t)}get model(){return this.data.model}set render(t){this._setValue("render",t)}get render(){return this.data.render}set checkVertexDuplicates(t){this._setValue("checkVertexDuplicates",t)}get checkVertexDuplicates(){return this.data.checkVertexDuplicates}_setValue(t,e){const s=this.data,i=s[t];s[t]=e,this.fire("set",t,i,e)}onSetType(t,e,s){e!==s&&this.system.changeType(this,e,s)}onSetHalfExtents(t,e,s){const i=this.data.type;this.data.initialized&&"box"===i&&this.system.recreatePhysicalShapes(this)}onSetOffset(t,e,s){this._hasOffset=!this.data.linearOffset.equals(l.e.ZERO)||!this.data.angularOffset.equals(St.k.IDENTITY),this.data.initialized&&this.system.recreatePhysicalShapes(this)}onSetRadius(t,e,s){const i=this.data.type;!this.data.initialized||"sphere"!==i&&"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)}onSetHeight(t,e,s){const i=this.data.type;!this.data.initialized||"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)}onSetAxis(t,e,s){const i=this.data.type;!this.data.initialized||"capsule"!==i&&"cylinder"!==i&&"cone"!==i||this.system.recreatePhysicalShapes(this)}onSetAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&t.off("remove",this.onAssetRemoved,this)}if(s){s instanceof Kn.V&&(this.data.asset=s.id);const t=i.get(this.data.asset);t&&(t.off("remove",this.onAssetRemoved,this),t.on("remove",this.onAssetRemoved,this))}this.data.initialized&&"mesh"===this.data.type&&(s||(this.data.model=null),this.system.recreatePhysicalShapes(this))}onSetRenderAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&t.off("remove",this.onRenderAssetRemoved,this)}if(s){s instanceof Kn.V&&(this.data.renderAsset=s.id);const t=i.get(this.data.renderAsset);t&&(t.off("remove",this.onRenderAssetRemoved,this),t.on("remove",this.onRenderAssetRemoved,this))}this.data.initialized&&"mesh"===this.data.type&&(s||(this.data.render=null),this.system.recreatePhysicalShapes(this))}onSetModel(t,e,s){this.data.initialized&&"mesh"===this.data.type&&this.system.implementations.mesh.doRecreatePhysicalShape(this)}onSetRender(t,e,s){this.onSetModel(t,e,s)}onAssetRemoved(t){t.off("remove",this.onAssetRemoved,this),this.data.asset===t.id&&(this.asset=null)}onRenderAssetRemoved(t){t.off("remove",this.onRenderAssetRemoved,this),this.data.renderAsset===t.id&&(this.renderAsset=null)}getCompoundChildShapeIndex(t){const e=this.data.shape,s=e.getNumChildShapes();for(let i=0;i<s;i++){const s=e.getChildShape(i);if(Ammo.getPointer(s)===Ammo.getPointer(t))return i}return null}_onInsert(t){if("undefined"!=typeof Ammo)if(this._compoundParent)this.system.recreatePhysicalShapes(this);else if(!this.entity.rigidbody){let t=this.entity.parent;for(;t;){if(t.collision&&"compound"===t.collision.type){0===t.collision.shape.getNumChildShapes()?this.system.recreatePhysicalShapes(t.collision):this.system.recreatePhysicalShapes(this);break}t=t.parent}}}_updateCompound(){const t=this.entity;if(t._dirtyWorld){let e=t._dirtyLocal,s=t;for(;s&&!e&&(!s.collision||s.collision!==this._compoundParent);)s._dirtyLocal&&(e=!0),s=s.parent;if(e){t.forEach(this.system.implementations.compound._updateEachDescendantTransform,t);const e=this._compoundParent.entity.rigidbody;e&&e.activate()}}}getShapePosition(){const t=this.entity.getPosition();if(this._hasOffset){const e=this.entity.getRotation(),s=this.data.linearOffset;return Qa.copy(e).transformVector(s,Za),Za.add(t)}return t}getShapeRotation(){const t=this.entity.getRotation();return this._hasOffset?Qa.copy(t).mul(this.data.angularOffset):t}onEnable(){if("mesh"===this.data.type&&(this.data.asset||this.data.renderAsset)&&this.data.initialized){const t=this.system.app.assets.get(this.data.asset||this.data.renderAsset);if(t&&(!t.resource||!this.data.shape))return void this.system.recreatePhysicalShapes(this)}if(this.entity.rigidbody)this.entity.rigidbody.enabled&&this.entity.rigidbody.enableSimulation();else if(this._compoundParent&&this!==this._compoundParent)if(0===this._compoundParent.shape.getNumChildShapes())this.system.recreatePhysicalShapes(this._compoundParent);else{const t=this.system._getNodeTransform(this.entity,this._compoundParent.entity);this._compoundParent.shape.addChildShape(t,this.data.shape),Ammo.destroy(t),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()}else this.entity.trigger&&this.entity.trigger.enable()}onDisable(){this.entity.rigidbody?this.entity.rigidbody.disableSimulation():this._compoundParent&&this!==this._compoundParent?this._compoundParent.entity._destroying||(this.system._removeCompoundChild(this._compoundParent,this.data.shape),this._compoundParent.entity.rigidbody&&this._compoundParent.entity.rigidbody.activate()):this.entity.trigger&&this.entity.trigger.disable()}onBeforeRemove(){this.asset&&(this.asset=null),this.renderAsset&&(this.renderAsset=null),this.entity.off("insert",this._onInsert,this),this.off()}}class to{constructor(){this.enabled=!0,this.type="box",this.halfExtents=new l.e(.5,.5,.5),this.linearOffset=new l.e,this.angularOffset=new St.k,this.radius=.5,this.axis=1,this.height=2,this.convexHull=!1,this.asset=null,this.renderAsset=null,this.checkVertexDuplicates=!0,this.shape=null,this.model=null,this.render=null,this.initialized=!1}}const eo="static",so="dynamic",io="kinematic",no=65533;let ro,ao,oo;class lo{constructor(t,e,s){this.entity=e.entity,this.component=e,this.app=t,"undefined"==typeof Ammo||ro||(ro=new Ammo.btVector3,ao=new Ammo.btQuaternion,oo=new Ammo.btTransform),this.initialize(s)}initialize(t){const e=this.entity,s=t.shape;if(s&&"undefined"!=typeof Ammo){e.trigger&&e.trigger.destroy();const t=1,i=this.component;if(i){const t=i.getShapePosition(),e=i.getShapeRotation();ro.setValue(t.x,t.y,t.z),ao.setValue(e.x,e.y,e.z,e.w)}else{const t=e.getPosition(),s=e.getRotation();ro.setValue(t.x,t.y,t.z),ao.setValue(s.x,s.y,s.z,s.w)}oo.setOrigin(ro),oo.setRotation(ao);const n=this.app.systems.rigidbody.createBody(t,s,oo);n.setRestitution(0),n.setFriction(0),n.setDamping(0,0),ro.setValue(0,0,0),n.setLinearFactor(ro),n.setAngularFactor(ro),n.setCollisionFlags(4|n.getCollisionFlags()),n.entity=e,this.body=n,this.component.enabled&&e.enabled&&this.enable()}}destroy(){this.body&&(this.disable(),this.app.systems.rigidbody.destroyBody(this.body),this.body=null)}_getEntityTransform(t){const e=this.component;if(e){const t=e.getShapePosition(),s=e.getShapeRotation();ro.setValue(t.x,t.y,t.z),ao.setValue(s.x,s.y,s.z,s.w)}else{const t=this.entity.getPosition(),e=this.entity.getRotation();ro.setValue(t.x,t.y,t.z),ao.setValue(e.x,e.y,e.z,e.w)}t.setOrigin(ro),t.setRotation(ao)}updateTransform(){this._getEntityTransform(oo);const t=this.body;t.setWorldTransform(oo),t.activate()}enable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody;e._triggers.indexOf(this)<0&&(e.addBody(t,16,65517),e._triggers.push(this)),t.forceActivationState(1),this.updateTransform()}disable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody,s=e._triggers.indexOf(this);s>-1&&(e.removeBody(t),e._triggers.splice(s,1)),t.forceActivationState(5)}}const ho=new o.$,co=new l.e,uo=new l.e,fo=new St.k,po=new Rt.t,mo=["enabled","type","halfExtents","linearOffset","angularOffset","radius","axis","height","convexHull","asset","renderAsset","shape","model","render","checkVertexDuplicates"];class _o{constructor(t){this.system=t}beforeInitialize(t,e){e.shape=null,e.model=new Ka,e.model.graph=new Rt.t}afterInitialize(t,e){this.recreatePhysicalShapes(t),t.data.initialized=!0}reset(t,e){this.beforeInitialize(t,e),this.afterInitialize(t,e)}recreatePhysicalShapes(t){const e=t.entity,s=t.data;if("undefined"!=typeof Ammo){e.trigger&&(e.trigger.destroy(),delete e.trigger),s.shape&&(t._compoundParent&&(t!==t._compoundParent&&this.system._removeCompoundChild(t._compoundParent,s.shape),t._compoundParent.entity.rigidbody&&t._compoundParent.entity.rigidbody.activate()),this.destroyShape(s)),s.shape=this.createPhysicalShape(t.entity,s);const i=!t._compoundParent;if("compound"!==s.type||t._compoundParent&&t!==t._compoundParent){if("compound"!==s.type&&!t.rigidbody){t._compoundParent=null;let s=e.parent;for(;s;){if(s.collision&&"compound"===s.collision.type){t._compoundParent=s.collision;break}s=s.parent}}}else t._compoundParent=t,e.forEach(this._addEachDescendant,t);t._compoundParent&&t!==t._compoundParent&&(i&&0===t._compoundParent.shape.getNumChildShapes()?this.system.recreatePhysicalShapes(t._compoundParent):(this.system.updateCompoundChildTransform(e,!0),t._compoundParent.entity.rigidbody&&t._compoundParent.entity.rigidbody.activate())),e.rigidbody?(e.rigidbody.disableSimulation(),e.rigidbody.createBody(),e.enabled&&e.rigidbody.enabled&&e.rigidbody.enableSimulation()):t._compoundParent||(e.trigger?e.trigger.initialize(s):e.trigger=new lo(this.system.app,t,s))}}createPhysicalShape(t,e){}updateTransform(t,e,s,i){t.entity.trigger&&t.entity.trigger.updateTransform()}destroyShape(t){t.shape&&(Ammo.destroy(t.shape),t.shape=null)}beforeRemove(t,e){e.data.shape&&(e._compoundParent&&!e._compoundParent.entity._destroying&&(this.system._removeCompoundChild(e._compoundParent,e.data.shape),e._compoundParent.entity.rigidbody&&e._compoundParent.entity.rigidbody.activate()),e._compoundParent=null,this.destroyShape(e.data))}remove(t,e){t.rigidbody&&t.rigidbody.body&&t.rigidbody.disableSimulation(),t.trigger&&(t.trigger.destroy(),delete t.trigger)}clone(t,e){const s=this.system.store[t.getGuid()],i={enabled:s.data.enabled,type:s.data.type,halfExtents:[s.data.halfExtents.x,s.data.halfExtents.y,s.data.halfExtents.z],linearOffset:[s.data.linearOffset.x,s.data.linearOffset.y,s.data.linearOffset.z],angularOffset:[s.data.angularOffset.x,s.data.angularOffset.y,s.data.angularOffset.z,s.data.angularOffset.w],radius:s.data.radius,axis:s.data.axis,height:s.data.height,convexHull:s.data.convexHull,asset:s.data.asset,renderAsset:s.data.renderAsset,model:s.data.model,render:s.data.render,checkVertexDuplicates:s.data.checkVertexDuplicates};return this.system.addComponent(e,i)}}class go extends _o{createPhysicalShape(t,e){if("undefined"!=typeof Ammo){const t=e.halfExtents,s=new Ammo.btVector3(t?t.x:.5,t?t.y:.5,t?t.z:.5),i=new Ammo.btBoxShape(s);return Ammo.destroy(s),i}}}class vo extends _o{createPhysicalShape(t,e){if("undefined"!=typeof Ammo)return new Ammo.btSphereShape(e.radius)}}class So extends _o{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,n=Math.max((e.height??2)-2*i,0);let r=null;if("undefined"!=typeof Ammo)switch(s){case 0:r=new Ammo.btCapsuleShapeX(i,n);break;case 1:r=new Ammo.btCapsuleShape(i,n);break;case 2:r=new Ammo.btCapsuleShapeZ(i,n)}return r}}class yo extends _o{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,n=e.height??1;let r=null,a=null;if("undefined"!=typeof Ammo)switch(s){case 0:r=new Ammo.btVector3(.5*n,i,i),a=new Ammo.btCylinderShapeX(r);break;case 1:r=new Ammo.btVector3(i,.5*n,i),a=new Ammo.btCylinderShape(r);break;case 2:r=new Ammo.btVector3(i,i,.5*n),a=new Ammo.btCylinderShapeZ(r)}return r&&Ammo.destroy(r),a}}class xo extends _o{createPhysicalShape(t,e){const s=e.axis??1,i=e.radius??.5,n=e.height??1;let r=null;if("undefined"!=typeof Ammo)switch(s){case 0:r=new Ammo.btConeShapeX(i,n);break;case 1:r=new Ammo.btConeShape(i,n);break;case 2:r=new Ammo.btConeShapeZ(i,n)}return r}}class To extends _o{beforeInitialize(t,e){}createAmmoHull(t,e,s,i){const n=new Ammo.btConvexHullShape,r=new Ammo.btVector3,a=[];t.getPositions(a);for(let l=0;l<a.length;l+=3)r.setValue(a[l]*i.x,a[l+1]*i.y,a[l+2]*i.z),n.addPoint(r,!1);Ammo.destroy(r),n.recalcLocalAabb(),n.setMargin(.01);const o=this.system._getNodeTransform(e);s.addChildShape(o,n),Ammo.destroy(o)}createAmmoMesh(t,e,s,i,n=!0){const r=this.system;let a;if(r._triMeshCache[t.id])a=r._triMeshCache[t.id];else{const e=t.vertexBuffer,s=e.getFormat();let o,l;for(let t=0;t<s.elements.length;t++){const i=s.elements[t];if(i.name===x.JYe){l=new Float32Array(e.lock(),i.offset),o=i.stride/4;break}}const h=[];t.getIndices(h);const c=t.primitive[0].count/3,d=new Ammo.btVector3;let u,f,p;const m=t.primitive[0].base;a=new Ammo.btTriangleMesh,r._triMeshCache[t.id]=a;const _=new Map;a.getIndexedMeshArray().at(0).m_numTriangles=c;const g=i?i.x:1,v=i?i.y:1,S=i?i.z:1,y=t=>{const e=l[t*o]*g,s=l[t*o+1]*v,i=l[t*o+2]*S;let r;if(n){const t=`${e}:${s}:${i}`;if(r=_.get(t),void 0!==r)return r;d.setValue(e,s,i),r=a.findOrAddVertex(d,!1),_.set(t,r)}else d.setValue(e,s,i),r=a.findOrAddVertex(d,!1);return r};for(let t=0;t<c;t++)u=y(h[m+3*t]),f=y(h[m+3*t+1]),p=y(h[m+3*t+2]),a.addIndex(u),a.addIndex(f),a.addIndex(p);Ammo.destroy(d)}const o=new Ammo.btBvhTriangleMeshShape(a,!0);if(!i){const t=r._getNodeScaling(e);o.setLocalScaling(t),Ammo.destroy(t)}const l=r._getNodeTransform(e);s.addChildShape(l,o),Ammo.destroy(l)}createPhysicalShape(t,e){if("undefined"!=typeof Ammo&&(e.model||e.render)){const s=new Ammo.btCompoundShape,i=t.getWorldTransform().getScale();if(e.render){const t=e.render.meshes;for(let n=0;n<t.length;n++)e.convexHull?this.createAmmoHull(t[n],po,s,i):this.createAmmoMesh(t[n],po,s,i,e.checkVertexDuplicates)}else if(e.model){const t=e.model.meshInstances;for(let i=0;i<t.length;i++)this.createAmmoMesh(t[i].mesh,t[i].node,s,null,e.checkVertexDuplicates);const n=new Ammo.btVector3(i.x,i.y,i.z);s.setLocalScaling(n),Ammo.destroy(n)}return s}}recreatePhysicalShapes(t){const e=t.data;(e.renderAsset||e.asset)&&t.enabled&&t.entity.enabled?this.loadAsset(t,e.renderAsset||e.asset,e.renderAsset?"render":"model"):this.doRecreatePhysicalShape(t)}loadAsset(t,e,s){const i=t.data,n=this.system.app.assets,r=i[s],a=e=>{i[s]===r&&(i[s]=e.resource,this.doRecreatePhysicalShape(t))},o=t=>{t.ready(t=>{if(t.data.containerAsset){const e=n.get(t.data.containerAsset);e.loaded?a(t):(e.ready(()=>{a(t)}),n.load(e))}else a(t)}),n.load(t)},l=n.get(e);l?o(l):n.once(`add:${e}`,o)}doRecreatePhysicalShape(t){const e=t.entity,s=t.data;s.model||s.render?(this.destroyShape(s),s.shape=this.createPhysicalShape(e,s),e.rigidbody?(e.rigidbody.disableSimulation(),e.rigidbody.createBody(),e.enabled&&e.rigidbody.enabled&&e.rigidbody.enableSimulation()):e.trigger?e.trigger.initialize(s):e.trigger=new lo(this.system.app,t,s)):(this.beforeRemove(e,t),this.remove(e,s))}updateTransform(t,e,s,i){if(t.shape){const e=t.entity.getWorldTransform().getScale(),s=t.shape.getLocalScaling();e.x===s.x()&&e.y===s.y()&&e.z===s.z()||this.doRecreatePhysicalShape(t)}super.updateTransform(t,e,s,i)}destroyShape(t){if(!t.shape)return;const e=t.shape.getNumChildShapes();for(let s=0;s<e;s++){const e=t.shape.getChildShape(s);Ammo.destroy(e)}Ammo.destroy(t.shape),t.shape=null}}class wo extends _o{createPhysicalShape(t,e){if("undefined"!=typeof Ammo)return new Ammo.btCompoundShape}_addEachDescendant(t){t.collision&&!t.rigidbody&&(t.collision._compoundParent=this,t!==this.entity&&t.collision.system.recreatePhysicalShapes(t.collision))}_updateEachDescendant(t){t.collision&&t.collision._compoundParent===this&&(t.collision._compoundParent=null,t===this.entity||t.rigidbody||t.collision.system.recreatePhysicalShapes(t.collision))}_updateEachDescendantTransform(t){t.collision&&t.collision._compoundParent===this.collision._compoundParent&&this.collision.system.updateCompoundChildTransform(t,!1)}}class bo extends Rr{constructor(t){super(t),this.id="collision",this.ComponentType=Ja,this.DataType=to,this.schema=mo,this.implementations={},this._triMeshCache={},this.on("beforeremove",this.onBeforeRemove,this),this.on("remove",this.onRemove,this)}initializeComponentData(t,e,s){const i={};for(let a=0,o=(s=["type","halfExtents","radius","axis","height","convexHull","shape","model","asset","render","renderAsset","enabled","linearOffset","angularOffset","checkVertexDuplicates"]).length;a<o;a++){const t=s[a];i[t]=e[t]}let n;if(e.hasOwnProperty("asset")?(n=s.indexOf("model"),-1!==n&&s.splice(n,1),n=s.indexOf("render"),-1!==n&&s.splice(n,1)):e.hasOwnProperty("model")&&(n=s.indexOf("asset"),-1!==n&&s.splice(n,1)),i.type||(i.type=t.data.type),t.data.type=i.type,Array.isArray(i.halfExtents)&&(i.halfExtents=new l.e(i.halfExtents)),Array.isArray(i.linearOffset)&&(i.linearOffset=new l.e(i.linearOffset)),Array.isArray(i.angularOffset)){const t=i.angularOffset;3===t.length?i.angularOffset=(new St.k).setFromEulerAngles(t[0],t[1],t[2]):i.angularOffset=new St.k(i.angularOffset)}const r=this._createImplementation(i.type);r.beforeInitialize(t,i),super.initializeComponentData(t,i,s),r.afterInitialize(t,i)}_createImplementation(t){if(void 0===this.implementations[t]){let e;switch(t){case"box":e=new go(this);break;case"sphere":e=new vo(this);break;case"capsule":e=new So(this);break;case"cylinder":e=new yo(this);break;case"cone":e=new xo(this);break;case"mesh":e=new To(this);break;case"compound":e=new wo(this)}this.implementations[t]=e}return this.implementations[t]}_getImplementation(t){return this.implementations[t.collision.data.type]}cloneComponent(t,e){return this._getImplementation(t).clone(t,e)}onBeforeRemove(t,e){this.implementations[e.data.type].beforeRemove(t,e),e.onBeforeRemove()}onRemove(t,e){this.implementations[e.type].remove(t,e)}updateCompoundChildTransform(t,e){const s=t.collision._compoundParent;if(s!==t.collision&&t.enabled&&t.collision.enabled&&(t._dirtyLocal||e)){const e=this._getNodeTransform(t,s.entity),i=s.getCompoundChildShapeIndex(t.collision.shape);null===i?s.shape.addChildShape(e,t.collision.data.shape):s.shape.updateChildTransform(i,e,!0),Ammo.destroy(e)}}_removeCompoundChild(t,e){if(0!==t.shape.getNumChildShapes())if(t.shape.removeChildShape)t.shape.removeChildShape(e);else{const s=t.getCompoundChildShapeIndex(e);null!==s&&t.shape.removeChildShapeByIndex(s)}}onTransformChanged(t,e,s,i){this.implementations[t.data.type].updateTransform(t,e,s,i)}changeType(t,e,s){this.implementations[e].beforeRemove(t.entity,t),this.implementations[e].remove(t.entity,t.data),this._createImplementation(s).reset(t,t.data)}recreatePhysicalShapes(t){this.implementations[t.data.type].recreatePhysicalShapes(t)}_calculateNodeRelativeTransform(t,e){if(t===e){const e=t.getWorldTransform().getScale();ho.setScale(e.x,e.y,e.z)}else this._calculateNodeRelativeTransform(t.parent,e),ho.mul(t.getLocalTransform())}_getNodeScaling(t){const e=t.getWorldTransform().getScale();return new Ammo.btVector3(e.x,e.y,e.z)}_getNodeTransform(t,e){let s,i;e?(this._calculateNodeRelativeTransform(t,e),s=co,i=fo,ho.getTranslation(s),i.setFromMat4(ho)):(s=t.getPosition(),i=t.getRotation());const n=new Ammo.btQuaternion,r=new Ammo.btTransform;r.setIdentity();const a=r.getOrigin(),o=t.collision;if(o&&o._hasOffset){const t=o.data.linearOffset,e=o.data.angularOffset,r=uo;fo.copy(i).transformVector(t,r),r.add(s),fo.copy(i).mul(e),a.setValue(r.x,r.y,r.z),n.setValue(fo.x,fo.y,fo.z,fo.w)}else a.setValue(s.x,s.y,s.z),n.setValue(i.x,i.y,i.z,i.w);return r.setRotation(n),Ammo.destroy(n),r}destroy(){for(const t in this._triMeshCache)Ammo.destroy(this._triMeshCache[t]);this._triMeshCache=null,super.destroy()}}var Eo=s(53480);const Ao=new p.Q,Co=new D.N;class Po{constructor(t,e,s){this._entity=t,this._element=t.element,this.model=new Ka,this.node=new Rt.t,this.model.graph=this.node,this.mesh=e,this.meshInstance=new pt(this.mesh,s,this.node),this.meshInstance.name=`ImageElement: ${t.name}`,this.meshInstance.castShadow=!1,this.meshInstance.receiveShadow=!1,this._meshDirty=!1,this.model.meshInstances.push(this.meshInstance),this._entity.addChild(this.model.graph),this.model._entity=this._entity,this.unmaskMeshInstance=null}destroy(){this.setMaterial(null),this._element.removeModelFromLayers(this.model),this.model.destroy(),this.model=null,this.node=null,this.mesh=null,this.meshInstance?.destroy(),this.meshInstance=null,this.unmaskMeshInstance?.destroy(),this.unmaskMeshInstance=null,this._entity=null,this._element=null}setMesh(t){this.meshInstance&&(this.mesh=t,this.meshInstance.mesh=t,this.meshInstance.visible=!!t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.mesh=t),this.forceUpdateAabb())}setMask(t){if(this.meshInstance){if(this._entity.enabled&&this._element.enabled&&this._element.removeModelFromLayers(this.model),t){this.unmaskMeshInstance=new pt(this.mesh,this.meshInstance.material,this.node),this.unmaskMeshInstance.name=`Unmask: ${this._entity.name}`,this.unmaskMeshInstance.castShadow=!1,this.unmaskMeshInstance.receiveShadow=!1,this.unmaskMeshInstance.pick=!1,this.model.meshInstances.push(this.unmaskMeshInstance);for(const t in this.meshInstance.parameters)this.unmaskMeshInstance.setParameter(t,this.meshInstance.parameters[t].data)}else{const t=this.model.meshInstances.indexOf(this.unmaskMeshInstance);t>=0&&this.model.meshInstances.splice(t,1)}this._entity.enabled&&this._element.enabled&&this._element.addModelToLayers(this.model),t||(this.unmaskMeshInstance?.destroy(),this.unmaskMeshInstance=null)}}setMaterial(t){this.meshInstance&&(this.meshInstance.material=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.material=t))}setParameter(t,e){this.meshInstance&&(this.meshInstance.setParameter(t,e),this.unmaskMeshInstance&&this.unmaskMeshInstance.setParameter(t,e))}deleteParameter(t){this.meshInstance&&(this.meshInstance.deleteParameter(t),this.unmaskMeshInstance&&this.unmaskMeshInstance.deleteParameter(t))}setUnmaskDrawOrder(){if(!this.meshInstance)return;const t=function(e){let s;const i=e.children,n=i.length;if(n){for(let t=0;t<n;t++)i[t].element&&(s=i[t]);if(!s)return null;const e=t(s);return e||s}return null};if(this.unmaskMeshInstance){const e=t(this._entity);e&&e.element?this.unmaskMeshInstance.drawOrder=e.element.drawOrder+e.element.getMaskOffset():this.unmaskMeshInstance.drawOrder=this.meshInstance.drawOrder+this._element.getMaskOffset()}}setDrawOrder(t){this.meshInstance&&(this.meshInstance.drawOrder=t)}setCull(t){if(!this.meshInstance)return;const e=this._element;let s=null;t&&e._isScreenSpace()&&(s=function(t){return e.isVisibleForCamera(t)}),this.meshInstance.cull=t,this.meshInstance.isVisibleFunc=s,this.unmaskMeshInstance&&(this.unmaskMeshInstance.cull=t,this.unmaskMeshInstance.isVisibleFunc=s)}setScreenSpace(t){this.meshInstance&&(this.meshInstance.screenSpace=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.screenSpace=t))}setLayer(t){this.meshInstance&&(this.meshInstance.layer=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance.layer=t))}forceUpdateAabb(t){this.meshInstance&&(this.meshInstance._aabbVer=-1,this.unmaskMeshInstance&&(this.unmaskMeshInstance._aabbVer=-1))}setAabbFunc(t){this.meshInstance&&(this.meshInstance._updateAabbFunc=t,this.unmaskMeshInstance&&(this.unmaskMeshInstance._updateAabbFunc=t))}}class Do{constructor(t){this._evtSetMeshes=null,this._element=t,this._entity=t.entity,this._system=t.system,this._textureAsset=null,this._texture=null,this._materialAsset=null,this._material=null,this._spriteAsset=null,this._sprite=null,this._spriteFrame=0,this._pixelsPerUnit=null,this._targetAspectRatio=-1,this._rect=new w.Z(0,0,1,1),this._mask=!1,this._maskRef=0,this._outerScale=new Jt.Z,this._outerScaleUniform=new Float32Array(2),this._innerOffset=new w.Z,this._innerOffsetUniform=new Float32Array(4),this._atlasRect=new w.Z,this._atlasRectUniform=new Float32Array(4),this._defaultMesh=this._createMesh(),this._renderable=new Po(this._entity,this._defaultMesh,this._material),this._color=new p.Q(1,1,1,1),this._colorUniform=new Float32Array([1,1,1]),this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",1),this._updateAabbFunc=this._updateAabb.bind(this),this._onScreenChange(this._element.screen),this._element.on("resize",this._onParentResizeOrPivotChange,this),this._element.on("set:pivot",this._onParentResizeOrPivotChange,this),this._element.on("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.on("set:screen",this._onScreenChange,this),this._element.on("set:draworder",this._onDrawOrderChange,this),this._element.on("screen:set:resolution",this._onResolutionChange,this)}destroy(){this.textureAsset=null,this.spriteAsset=null,this.materialAsset=null,this._renderable.setMesh(this._defaultMesh),this._renderable.destroy(),this._defaultMesh=null,this._element.off("resize",this._onParentResizeOrPivotChange,this),this._element.off("set:pivot",this._onParentResizeOrPivotChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("screen:set:resolution",this._onResolutionChange,this)}_onResolutionChange(t){}_onParentResizeOrPivotChange(){this._renderable.mesh&&this._updateMesh(this._renderable.mesh)}_onScreenSpaceChange(t){this._updateMaterial(t)}_onScreenChange(t,e){t?this._updateMaterial(t.screen.screenSpace):this._updateMaterial(!1)}_onDrawOrderChange(t){this._renderable.setDrawOrder(t),this.mask&&this._element.screen&&this._element.screen.screen.once("syncdraworder",function(){this._renderable.setUnmaskDrawOrder()},this)}_hasUserMaterial(){return!!this._materialAsset||!!this._material&&-1===this._system.defaultImageMaterials.indexOf(this._material)}_use9Slicing(){return this.sprite&&(this.sprite.renderMode===F.FCf||this.sprite.renderMode===F.jZy)}_updateMaterial(t){const e=!!this._mask,s=!(!this.sprite||this.sprite.renderMode!==F.FCf),i=!(!this.sprite||this.sprite.renderMode!==F.jZy);this._hasUserMaterial()||(this._material=this._system.getImageElementMaterial(t,e,s,i)),this._renderable&&(this._renderable.setCull(!this._element._isScreenSpace()||this._element._isScreenCulled()),this._renderable.setMaterial(this._material),this._renderable.setScreenSpace(t),this._renderable.setLayer(t?F.m2Y:F.$1A))}_createMesh(){const t=this._element,e=t.calculatedWidth,s=t.calculatedHeight,i=this._rect,n=this._system.app.graphicsDevice,r=new Float32Array([e,0,0,0,0,1,i.x+i.z,1-i.y,e,s,0,0,0,1,i.x+i.z,1-(i.y+i.w),0,0,0,0,0,1,i.x,1-i.y,0,s,0,0,0,1,i.x,1-(i.y+i.w)]),a=Co.get(n,()=>new xs.y(n,[{semantic:x.JYe,components:3,type:x.n$B},{semantic:x.XF6,components:3,type:x.n$B},{semantic:x.slc,components:2,type:x.n$B}])),o=new ys.R(n,a,4,{data:r.buffer}),h=new Us(n);return h.vertexBuffer=o,h.primitive[0].type=x.SF$,h.primitive[0].base=0,h.primitive[0].count=4,h.primitive[0].indexed=!1,h.aabb.setMinMax(l.e.ZERO,new l.e(e,s,0)),this._updateMesh(h),h}_updateMesh(t){const e=this._element;let s=e.calculatedWidth,i=e.calculatedHeight;if(e.fitMode!==Na&&this._targetAspectRatio>0){const t=e.calculatedWidth/e.calculatedHeight;"contain"===e.fitMode&&t>this._targetAspectRatio||"cover"===e.fitMode&&t<this._targetAspectRatio?s=e.calculatedHeight*this._targetAspectRatio:i=e.calculatedWidth/this._targetAspectRatio}const n=e._isScreenSpace();if(this._updateMaterial(n),this._renderable&&this._renderable.forceUpdateAabb(),!this.sprite||this.sprite.renderMode!==F.FCf&&this.sprite.renderMode!==F.jZy){const n=t.vertexBuffer,r=new Float32Array(n.lock()),a=e.pivot.x,o=e.pivot.y;r[0]=s-a*s,r[1]=0-o*i,r[8]=s-a*s,r[9]=i-o*i,r[16]=0-a*s,r[17]=0-o*i,r[24]=0-a*s,r[25]=i-o*i;let h=1,c=1,d=this._rect;if(this._sprite&&this._sprite.frameKeys[this._spriteFrame]&&this._sprite.atlas){const t=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];t&&(d=t.rect,h=this._sprite.atlas.texture.width,c=this._sprite.atlas.texture.height)}r[6]=(d.x+d.z)/h,r[7]=1-d.y/c,r[14]=(d.x+d.z)/h,r[15]=1-(d.y+d.w)/c,r[22]=d.x/h,r[23]=1-d.y/c,r[30]=d.x/h,r[31]=1-(d.y+d.w)/c,n.unlock();const u=new l.e(0-a*s,0-o*i,0),f=new l.e(s-a*s,i-o*i,0);t.aabb.setMinMax(u,f),this._renderable&&(this._renderable.node.setLocalScale(1,1,1),this._renderable.node.setLocalPosition(0,0,0),this._renderable.setAabbFunc(null))}else{const t=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]],n=2/t.rect.z,r=2/t.rect.w;this._innerOffset.set(t.border.x*n,t.border.y*r,t.border.z*n,t.border.w*r);const o=this.sprite.atlas.texture;this._atlasRect.set(t.rect.x/o.width,t.rect.y/o.height,t.rect.z/o.width,t.rect.w/o.height);const l=null!==this._pixelsPerUnit?this._pixelsPerUnit:this.sprite.pixelsPerUnit,h=t.rect.z/l,c=t.rect.w/l;this._outerScale.set(Math.max(s,this._innerOffset.x*h),Math.max(i,this._innerOffset.y*c));let d=h,u=c;this._outerScale.x/=h,this._outerScale.y/=c,d*=a.D.clamp(s/(this._innerOffset.x*h),1e-4,1),u*=a.D.clamp(i/(this._innerOffset.y*c),1e-4,1),this._renderable&&(this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._renderable.setParameter("innerOffset",this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._renderable.setParameter("atlasRect",this._atlasRectUniform),this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._renderable.setParameter("outerScale",this._outerScaleUniform),this._renderable.setAabbFunc(this._updateAabbFunc),this._renderable.node.setLocalScale(d,u,1),this._renderable.node.setLocalPosition((.5-e.pivot.x)*s,(.5-e.pivot.y)*i,0))}this._meshDirty=!1}_updateSprite(){let t=!1,e=null;if(this._targetAspectRatio=-1,this._sprite&&this._sprite.atlas){e=this._sprite.meshes[this.spriteFrame],t=this._sprite.renderMode===F.FCf||this._sprite.renderMode===F.jZy;const s=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];s?.rect.w>0&&(this._targetAspectRatio=s.rect.z/s.rect.w)}this.mesh=t?e:this._defaultMesh,this.refreshMesh()}refreshMesh(){this.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this.mesh))}_updateAabb(t){return t.center.set(0,0,0),t.halfExtents.set(.5*this._outerScale.x,.5*this._outerScale.y,.001),t.setFromTransformedAabb(t,this._renderable.node.getWorldTransform()),t}_toggleMask(){this._element._dirtifyMask();const t=this._element._isScreenSpace();this._updateMaterial(t),this._renderable.setMask(!!this._mask)}_onMaterialLoad(t){this.material=t.resource}_onMaterialAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onMaterialAdded,this),this._materialAsset===t.id&&this._bindMaterialAsset(t)}_bindMaterialAsset(t){this._entity.enabled&&(t.on("load",this._onMaterialLoad,this),t.on("change",this._onMaterialChange,this),t.on("remove",this._onMaterialRemove,this),t.resource?this._onMaterialLoad(t):this._system.app.assets.load(t))}_unbindMaterialAsset(t){t.off("load",this._onMaterialLoad,this),t.off("change",this._onMaterialChange,this),t.off("remove",this._onMaterialRemove,this)}_onMaterialChange(){}_onMaterialRemove(){}_onTextureAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onTextureAdded,this),this._textureAsset===t.id&&this._bindTextureAsset(t)}_bindTextureAsset(t){this._entity.enabled&&(t.on("load",this._onTextureLoad,this),t.on("change",this._onTextureChange,this),t.on("remove",this._onTextureRemove,this),t.resource?this._onTextureLoad(t):this._system.app.assets.load(t))}_unbindTextureAsset(t){t.off("load",this._onTextureLoad,this),t.off("change",this._onTextureChange,this),t.off("remove",this._onTextureRemove,this)}_onTextureLoad(t){this.texture=t.resource}_onTextureChange(t){}_onTextureRemove(t){}_onSpriteAssetAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onSpriteAssetAdded,this),this._spriteAsset===t.id&&this._bindSpriteAsset(t)}_bindSpriteAsset(t){this._entity.enabled&&(t.on("load",this._onSpriteAssetLoad,this),t.on("change",this._onSpriteAssetChange,this),t.on("remove",this._onSpriteAssetRemove,this),t.resource?this._onSpriteAssetLoad(t):this._system.app.assets.load(t))}_unbindSpriteAsset(t){t.off("load",this._onSpriteAssetLoad,this),t.off("change",this._onSpriteAssetChange,this),t.off("remove",this._onSpriteAssetRemove,this),t.data.textureAtlasAsset&&this._system.app.assets.off(`load:${t.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this)}_onSpriteAssetLoad(t){if(t&&t.resource)if(t.resource.atlas)this.sprite=t.resource;else{const e=t.data.textureAtlasAsset;if(e){const t=this._system.app.assets;t.off(`load:${e}`,this._onTextureAtlasLoad,this),t.once(`load:${e}`,this._onTextureAtlasLoad,this)}}else this.sprite=null}_onSpriteAssetChange(t){this._onSpriteAssetLoad(t)}_onSpriteAssetRemove(t){}_bindSprite(t){this._evtSetMeshes=t.on("set:meshes",this._onSpriteMeshesChange,this),t.on("set:pixelsPerUnit",this._onSpritePpuChange,this),t.on("set:atlas",this._onAtlasTextureChange,this),t.atlas&&t.atlas.on("set:texture",this._onAtlasTextureChange,this)}_unbindSprite(t){this._evtSetMeshes?.off(),this._evtSetMeshes=null,t.off("set:pixelsPerUnit",this._onSpritePpuChange,this),t.off("set:atlas",this._onAtlasTextureChange,this),t.atlas&&t.atlas.off("set:texture",this._onAtlasTextureChange,this)}_onSpriteMeshesChange(){this._sprite&&(this._spriteFrame=a.D.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()}_onSpritePpuChange(){this.sprite.renderMode!==F.hA3&&null===this._pixelsPerUnit&&this._updateSprite()}_onAtlasTextureChange(){this.sprite&&this.sprite.atlas&&this.sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"))}_onTextureAtlasLoad(t){const e=this._spriteAsset;e instanceof Kn.V?this._onSpriteAssetLoad(e):this._onSpriteAssetLoad(this._system.app.assets.get(e))}onEnable(){if(this._materialAsset){const t=this._system.app.assets.get(this._materialAsset);t&&t.resource!==this._material&&this._bindMaterialAsset(t)}if(this._textureAsset){const t=this._system.app.assets.get(this._textureAsset);t&&t.resource!==this._texture&&this._bindTextureAsset(t)}if(this._spriteAsset){const t=this._system.app.assets.get(this._spriteAsset);t&&t.resource!==this._sprite&&this._bindSpriteAsset(t)}this._element.addModelToLayers(this._renderable.model)}onDisable(){this._element.removeModelFromLayers(this._renderable.model)}_setStencil(t){this._renderable.meshInstance.stencilFront=t,this._renderable.meshInstance.stencilBack=t;let e=0;if(this._element.maskedBy&&(e=this._element.maskedBy.element._image._maskRef),this._renderable.unmaskMeshInstance){const t=new Eo.n({ref:e+1,func:x.sTv,zpass:x.Srv});this._renderable.unmaskMeshInstance.stencilFront=t,this._renderable.unmaskMeshInstance.stencilBack=t}}_updateRenderableEmissive(){Ao.linear(this._color),this._colorUniform[0]=Ao.r,this._colorUniform[1]=Ao.g,this._colorUniform[2]=Ao.b,this._renderable.setParameter("material_emissive",this._colorUniform)}set color(t){const{r:e,g:s,b:i}=t;this._color.r===e&&this._color.g===s&&this._color.b===i||(this._color.r=e,this._color.g=s,this._color.b=i,this._updateRenderableEmissive()),this._element&&this._element.fire("set:color",this._color)}get color(){return this._color}set opacity(t){t!==this._color.a&&(this._color.a=t,this._renderable.setParameter("material_opacity",t)),this._element&&this._element.fire("set:opacity",t)}get opacity(){return this._color.a}set rect(t){let e,s,i,n;t instanceof w.Z?(e=t.x,s=t.y,i=t.z,n=t.w):(e=t[0],s=t[1],i=t[2],n=t[3]),e===this._rect.x&&s===this._rect.y&&i===this._rect.z&&n===this._rect.w||(this._rect.set(e,s,i,n),this._renderable.mesh&&(this._element._beingInitialized?this._meshDirty=!0:this._updateMesh(this._renderable.mesh)))}get rect(){return this._rect}_removeMaterialAssetEvents(){if(this._materialAsset){const t=this._system.app.assets;t.off(`add:${this._materialAsset}`,this._onMaterialAdded,this);const e=t.get(this._materialAsset);e&&(e.off("load",this._onMaterialLoad,this),e.off("change",this._onMaterialChange,this),e.off("remove",this._onMaterialRemove,this))}}set material(t){if(this._material!==t){if(!t){const e=this._element._isScreenSpace();t=this.mask?e?this._system.defaultScreenSpaceImageMaskMaterial:this._system.defaultImageMaskMaterial:e?this._system.defaultScreenSpaceImageMaterial:this._system.defaultImageMaterial}if(this._material=t,this._materialAsset){const e=this._system.app.assets.get(this._materialAsset);e&&e.resource===t||(this._removeMaterialAssetEvents(),this._materialAsset=null)}t&&(this._renderable.setMaterial(t),this._hasUserMaterial()?(this._renderable.deleteParameter("material_opacity"),this._renderable.deleteParameter("material_emissive")):(this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",this._color.a)))}}get material(){return this._material}set materialAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof Kn.V&&(s=t.id),this._materialAsset!==s)if(this._removeMaterialAssetEvents(),this._materialAsset=s,this._materialAsset){const t=e.get(this._materialAsset);t?this._bindMaterialAsset(t):(this._materialAsset=null,this.material=null,this._materialAsset=s,e.on(`add:${this._materialAsset}`,this._onMaterialAdded,this))}else this._materialAsset=null,this.material=null,this._materialAsset=s}get materialAsset(){return this._materialAsset}set texture(t){if(this._texture!==t){if(this._textureAsset){const e=this._system.app.assets.get(this._textureAsset);e&&e.resource!==t&&(this.textureAsset=null)}if(this._texture=t,t){this._spriteAsset&&(this.spriteAsset=null),this._renderable.setParameter("texture_emissiveMap",this._texture),this._renderable.setParameter("texture_opacityMap",this._texture),this._updateRenderableEmissive(),this._renderable.setParameter("material_opacity",this._color.a);const t=this._texture.width/this._texture.height;t!==this._targetAspectRatio&&(this._targetAspectRatio=t,this._element.fitMode!==Na&&this.refreshMesh())}else this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap"),this._targetAspectRatio=-1,this._element.fitMode!==Na&&this.refreshMesh()}}get texture(){return this._texture}set textureAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof Kn.V&&(s=t.id),this._textureAsset!==s){if(this._textureAsset){e.off(`add:${this._textureAsset}`,this._onTextureAdded,this);const t=e.get(this._textureAsset);t&&(t.off("load",this._onTextureLoad,this),t.off("change",this._onTextureChange,this),t.off("remove",this._onTextureRemove,this))}if(this._textureAsset=s,this._textureAsset){const t=e.get(this._textureAsset);t?this._bindTextureAsset(t):(this.texture=null,e.on(`add:${this._textureAsset}`,this._onTextureAdded,this))}else this.texture=null}}get textureAsset(){return this._textureAsset}set spriteAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof Kn.V&&(s=t.id),this._spriteAsset!==s){if(this._spriteAsset){e.off(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this);const t=e.get(this._spriteAsset);t&&this._unbindSpriteAsset(t)}if(this._spriteAsset=s,this._spriteAsset){const t=e.get(this._spriteAsset);t?this._bindSpriteAsset(t):(this.sprite=null,e.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this))}else this.sprite=null}this._element&&this._element.fire("set:spriteAsset",s)}get spriteAsset(){return this._spriteAsset}set sprite(t){if(this._sprite!==t){if(this._sprite&&this._unbindSprite(this._sprite),this._spriteAsset){const e=this._system.app.assets.get(this._spriteAsset);e&&e.resource!==t&&(this.spriteAsset=null)}this._sprite=t,this._sprite&&(this._bindSprite(this._sprite),this._textureAsset&&(this.textureAsset=null)),this._sprite&&this._sprite.atlas&&this._sprite.atlas.texture?(this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture),this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)):(this._renderable.deleteParameter("texture_emissiveMap"),this._renderable.deleteParameter("texture_opacityMap")),this._sprite&&(this._spriteFrame=a.D.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)),this._updateSprite()}}get sprite(){return this._sprite}set spriteFrame(t){const e=this._spriteFrame;this._sprite?this._spriteFrame=a.D.clamp(t,0,this._sprite.frameKeys.length-1):this._spriteFrame=t,this._spriteFrame!==e&&this._updateSprite(),this._element&&this._element.fire("set:spriteFrame",t)}get spriteFrame(){return this._spriteFrame}set mesh(t){this._renderable.setMesh(t),this._defaultMesh===t?this._renderable.setAabbFunc(null):this._renderable.setAabbFunc(this._updateAabbFunc)}get mesh(){return this._renderable.mesh}set mask(t){this._mask!==t&&(this._mask=t,this._toggleMask())}get mask(){return this._mask}set pixelsPerUnit(t){this._pixelsPerUnit!==t&&(this._pixelsPerUnit=t,!this._sprite||this._sprite.renderMode!==F.FCf&&this._sprite.renderMode!==F.jZy||this._updateSprite())}get pixelsPerUnit(){return this._pixelsPerUnit}get aabb(){return this._renderable.meshInstance?this._renderable.meshInstance.aabb:null}}const Lo="abcdefghijklmnopqrstuvwxyz",Mo="ABCDEFGHIJKLMNOPQRSTUVWXYZ",Io=55296,Ro=127462,Fo=127487,Oo=65024,No=65039;function ko(t,e=0){const s=t.length;if(e<0||e>=s)return null;const i=t.charCodeAt(e);if(s>1&&i>=Io&&i<=56319){const s=t.charCodeAt(e+1);if(s>=56320&&s<=57343)return{code:1024*(i-Io)+s-56320+65536,long:!0}}return{code:i,long:!1}}function Bo(t,e,s){if(!t)return!1;const i=ko(t);if(i){const t=i.code;return t>=e&&t<=s}return!1}function Uo(t,e){if(e===t.length-1)return 1;if(Bo(t[e],Io,56319)){const s=t.substring(e,e+2),i=t.substring(e+2,e+4);return Bo(i,127995,127999)||Bo(s,Ro,Fo)&&Bo(i,Ro,Fo)?4:Bo(i,Oo,No)?3:2}return Bo(t[e+1],Oo,No)?2:1}const zo={ASCII_LOWERCASE:Lo,ASCII_UPPERCASE:Mo,ASCII_LETTERS:Lo+Mo,format(t,...e){for(let s=0;s<e.length;s++)t=t.replace(`{${s}}`,e[s]);return t},getCodePoint(t,e){const s=ko(t,e);return s&&s.code},getCodePoints(t){if("string"!=typeof t)throw new TypeError("Not a string");let e=0;const s=[];let i;for(;i=ko(t,e);)s.push(i.code),e+=i.long?2:1;return s},getSymbols(t){if("string"!=typeof t)throw new TypeError("Not a string");let e=0;const s=t.length,i=[];let n,r=0;for(;e<s;){if(r+=Uo(t,e+r),n=t[e+r],Bo(n,8400,8447)&&(n=t[e+r++]),Bo(n,Oo,No)&&(n=t[e+r++]),n&&8205===n.charCodeAt(0)){n=t[e+r++];continue}const s=t.substring(e,e+r);i.push(s),e+=r,r=0}return i},fromCodePoint:(...t)=>t.map(t=>t>65535?(t-=65536,String.fromCharCode(55296+(t>>10),t%1024+56320)):String.fromCharCode(t)).join("")};class Vo extends r.J{constructor(t){super(),this._app=t,t.i18n.on(hr.EVENT_CHANGE,this._onSetLocale,this),this._autoLoad=!1,this._disableLocalization=!1,this._defaultAsset=null,this._localizedAsset=null}set defaultAsset(t){const e=t instanceof Kn.V?t.id:t;this._defaultAsset!==e&&(this._defaultAsset&&this._unbindDefaultAsset(),this._defaultAsset=e,this._defaultAsset&&this._bindDefaultAsset(),this._onSetLocale(this._app.i18n.locale))}get defaultAsset(){return this._defaultAsset}set localizedAsset(t){const e=t instanceof Kn.V?t.id:t;if(this._localizedAsset!==e&&(this._localizedAsset&&(this._app.assets.off(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this),this._unbindLocalizedAsset()),this._localizedAsset=e,this._localizedAsset)){this._app.assets.get(this._localizedAsset)?this._bindLocalizedAsset():this._app.assets.once(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this)}}get localizedAsset(){return this._localizedAsset}set autoLoad(t){this._autoLoad!==t&&(this._autoLoad=t,this._autoLoad&&this._localizedAsset&&(this._unbindLocalizedAsset(),this._bindLocalizedAsset()))}get autoLoad(){return this._autoLoad}set disableLocalization(t){this._disableLocalization!==t&&(this._disableLocalization=t,this._onSetLocale(this._app.i18n.locale))}get disableLocalization(){return this._disableLocalization}_bindDefaultAsset(){const t=this._app.assets.get(this._defaultAsset);t?this._onDefaultAssetAdd(t):this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this)}_unbindDefaultAsset(){if(!this._defaultAsset)return;this._app.assets.off(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this);const t=this._app.assets.get(this._defaultAsset);t&&(t.off("add:localized",this._onLocaleAdd,this),t.off("remove:localized",this._onLocaleRemove,this),t.off("remove",this._onDefaultAssetRemove,this))}_onDefaultAssetAdd(t){this._defaultAsset===t.id&&(t.on("add:localized",this._onLocaleAdd,this),t.on("remove:localized",this._onLocaleRemove,this),t.once("remove",this._onDefaultAssetRemove,this))}_onDefaultAssetRemove(t){this._defaultAsset===t.id&&(t.off("add:localized",this._onLocaleAdd,this),t.off("remove:localized",this._onLocaleAdd,this),this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this))}_bindLocalizedAsset(){if(!this._autoLoad)return;const t=this._app.assets.get(this._localizedAsset);t&&(t.on("load",this._onLocalizedAssetLoad,this),t.on("change",this._onLocalizedAssetChange,this),t.on("remove",this._onLocalizedAssetRemove,this),t.resource?this._onLocalizedAssetLoad(t):this._app.assets.load(t))}_unbindLocalizedAsset(){const t=this._app.assets.get(this._localizedAsset);t&&(t.off("load",this._onLocalizedAssetLoad,this),t.off("change",this._onLocalizedAssetChange,this),t.off("remove",this._onLocalizedAssetRemove,this))}_onLocalizedAssetAdd(t){this._localizedAsset===t.id&&this._bindLocalizedAsset()}_onLocalizedAssetLoad(t){this.fire("load",t)}_onLocalizedAssetChange(t,e,s,i){this.fire("change",t,e,s,i)}_onLocalizedAssetRemove(t){this._localizedAsset===t.id&&(this.localizedAsset=this._defaultAsset),this.fire("remove",t)}_onLocaleAdd(t,e){this._app.i18n.locale===t&&this._onSetLocale(t)}_onLocaleRemove(t,e){this._app.i18n.locale===t&&this._onSetLocale(t)}_onSetLocale(t){if(!this._defaultAsset)return void(this.localizedAsset=null);const e=this._app.assets.get(this._defaultAsset);if(!e||this._disableLocalization)return void(this.localizedAsset=this._defaultAsset);const s=e.getLocalizedAssetId(t);this.localizedAsset=s||this._defaultAsset}destroy(){this.defaultAsset=null,this._app.i18n.off(hr.EVENT_CHANGE,this._onSetLocale,this),this.off()}}const Go="msdf",Ho=/[\w|/]/;class Wo{constructor(t){this._symbols=t,this._index=0,this._last=0,this._cur=this._symbols.length>0?this._symbols[0]:null,this._buf=[],this._mode="text",this._error=null}read(){let t=this._read();for(;8===t;)t=this._read();return 0!==t&&1!==t&&(this._last=this._index),t}buf(){return this._buf}last(){return this._last}error(){return this._error}debugPrint(){const t=["EOF","ERROR","TEXT","OPEN_BRACKET","CLOSE_BRACKET","EQUALS","STRING","IDENTIFIER","WHITESPACE"];let e=this.read(),s="";for(;s+=`${(s.length>0?"\n":"")+t[e]} '${this.buf().join("")}'`,0!==e&&1!==e;)e=this.read();return s}_read(){return this._buf=[],this._eof()?0:"text"===this._mode?this._text():this._tag()}_text(){for(;;)switch(this._cur){case null:return this._buf.length>0?2:0;case"[":return this._mode="tag",this._buf.length>0?2:this._tag();case"\\":if(this._next(),"["===this._cur)this._store();else this._output("\\");break;default:this._store()}}_tag(){switch(this._cur){case null:return this._error="unexpected end of input reading tag",1;case"[":return this._store(),3;case"]":return this._store(),this._mode="text",4;case"=":return this._store(),5;case" ":case"\t":case"\n":case"\r":case"\v":case"\f":return this._whitespace();case'"':return this._string();default:return this._isIdentifierSymbol(this._cur)?this._identifier():(this._error="unrecognized character",1)}}_whitespace(){for(this._store();-1!==" \t\n\r\v\f".indexOf(this._cur);)this._store();return 8}_string(){for(this._next();;)switch(this._cur){case null:return this._error="unexpected end of input reading string",1;case'"':return this._next(),6;default:this._store()}}_identifier(){for(this._store();null!==this._cur&&this._isIdentifierSymbol(this._cur);)this._store();return 7}_isIdentifierSymbol(t){return 1===t.length&&null!==t.match(Ho)}_eof(){return null===this._cur}_next(){return this._eof()||(this._index++,this._cur=this._index<this._symbols.length?this._symbols[this._index]:null),this._cur}_store(){return this._buf.push(this._cur),this._next()}_output(t){this._buf.push(t)}}class Xo{constructor(t){this._scanner=new Wo(t),this._error=null}parse(t,e){for(;;){switch(this._scanner.read()){case 0:return!0;case 1:default:return!1;case 2:Array.prototype.push.apply(t,this._scanner.buf());break;case 3:if(!this._parseTag(t,e))return!1}}}error(){return`Error evaluating markup at #${this._scanner.last().toString()} (${this._scanner.error()||this._error})`}_parseTag(t,e){let s=this._scanner.read();if(7!==s)return this._error="expected identifier",!1;const i=this._scanner.buf().join("");if("/"===i[0]){for(let n=e.length-1;n>=0;--n)if(i===`/${e[n].name}`&&null===e[n].end)return e[n].end=t.length,s=this._scanner.read(),4===s||(this._error="expected close bracket",!1);return this._error="failed to find matching tag",!1}const n={name:i,value:null,attributes:{},start:t.length,end:null};if(s=this._scanner.read(),5===s){if(s=this._scanner.read(),6!==s)return this._error="expected string",!1;n.value=this._scanner.buf().join(""),s=this._scanner.read()}for(;;){switch(s){case 4:return e.push(n),!0;case 7:{const t=this._scanner.buf().join("");if(s=this._scanner.read(),5!==s)return this._error="expected equals",!1;if(s=this._scanner.read(),6!==s)return this._error="expected string",!1;const e=this._scanner.buf().join("");n.attributes[t]=e;break}default:return this._error="expected close bracket or identifier",!1}s=this._scanner.read()}}}function $o(t,e){for(const s in e){if(!e.hasOwnProperty(s))continue;const i=e[s];i instanceof Object?(t.hasOwnProperty(s)||(t[s]={}),$o(t[s],e[s])):t[s]=i}}function qo(t){if(0===t.length)return null;const e={};for(let s=0;s<t.length;++s){const i=t[s],n={};n[i.name]={value:i.value,attributes:i.attributes},$o(e,n)}return e}function jo(t){const e=new Xo(t),s=[],i=[];if(!e.parse(s,i))return console.warn(e.error()),{symbols:t,tags:null};const n=i.find(t=>null===t.end);if(n)return console.warn(`Markup error: found unclosed tag='${n.name}'`),{symbols:t,tags:null};const r=function(t,e){if(0===t.length)return null;const s={};for(let c=0;c<t.length;++c){const e=t[c];s.hasOwnProperty(e.start)?null===s[e.start].open?s[e.start].open=[e]:s[e.start].open.push(e):s[e.start]={open:[e],close:null},s.hasOwnProperty(e.end)?null===s[e.end].close?s[e.end].close=[e]:s[e.end].close.push(e):s[e.end]={open:null,close:[e]}}let i=[];function n(t){i=i.filter(e=>void 0===t.find(t=>t===e))}function r(t){for(let e=0;e<t.length;++e)i.push(t[e])}const a=Object.keys(s).sort((t,e)=>t-e),o=[];for(let c=0;c<a.length;++c){const t=s[a[c]];null!==t.close&&n(t.close),null!==t.open&&r(t.open),o.push({start:a[c],tags:qo(i)})}const l=[];let h=null;for(let c=0;c<o.length;++c){const t=o[c];for(;l.length<t.start;)l.push(h?h.tags:null);h=t}for(;l.length<e;)l.push(null);return l}(i,s.length);return{symbols:s,tags:r}}class Yo{static evaluate(t){return jo(t)}}class Ko{constructor(){this.count=0,this.quad=0,this.lines={},this.positions=[],this.normals=[],this.uvs=[],this.colors=[],this.indices=[],this.outlines=[],this.shadows=[],this.meshInstance=null}}function Zo(t,e){const s=new Us(t);return s.setPositions(e.positions),s.setNormals(e.normals),s.setColors32(e.colors),s.setUvs(0,e.uvs),s.setIndices(e.indices),s.setVertexStream(x.$_V,e.outlines,3,void 0,x.n$B,!1),s.setVertexStream(x.URU,e.shadows,3,void 0,x.n$B,!1),s.update(),s}const Qo=/^[\r\n]$/,Jo=/^[ \t]$/,tl=/^[ \t\-]|\u200b$/,el=/^[a-z0-9]$/i,sl=/^[\u1100-\u11ff]|[\u3000-\u9fff\ua960-\ua97f]|[\uac00-\ud7ff]$/,il=/^[\u3015\u3009\u300b\u300d\u300f\u3011\u3019\u3017\u301f\u30fd\u30fe\u30fc\u30a1\u30a3\u30a5\u30a7\u30a9\u30c3\u30e3\u30e5\u30e7\u30ee\u30f5\u30f6\u3041\u3043\u3045\u3047\u3049\u3063\u3083\u3085\u3087\u308e\u3095\u3096\u31f0\u31f1\u31f2\u31f3\u31f4\u31f5\u31f6\u31f7\u31f8\u31f9\u31fa\u31fb\u31fc\u31fd\u31fe\u31ff\u3005\u303b]$/,nl=["\u200b","\u061c","\u200e","\u200f","\u202a","\u202b","\u202c","\u202d","\u202e","\u2066","\u2067","\u2068","\u2069"],rl={width:0,height:0,xadvance:0,xoffset:0,yoffset:0},al=new p.Q,ol=new Jt.Z,ll=new p.Q;class hl{constructor(t){this._element=t,this._system=t.system,this._entity=t.entity,this._text="",this._symbols=[],this._colorPalette=[],this._outlinePalette=[],this._shadowPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null,this._i18nKey=null,this._fontAsset=new Vo(this._system.app),this._fontAsset.disableLocalization=!0,this._fontAsset.on("load",this._onFontLoad,this),this._fontAsset.on("change",this._onFontChange,this),this._fontAsset.on("remove",this._onFontRemove,this),this._font=null,this._color=new p.Q(1,1,1,1),this._colorUniform=new Float32Array(3),this._spacing=1,this._fontSize=32,this._fontMinY=0,this._fontMaxY=0,this._originalFontSize=32,this._maxFontSize=32,this._minFontSize=8,this._autoFitWidth=!1,this._autoFitHeight=!1,this._maxLines=-1,this._lineHeight=32,this._scaledLineHeight=32,this._wrapLines=!1,this._drawOrder=0,this._alignment=new Jt.Z(.5,.5),this._autoWidth=!0,this._autoHeight=!0,this.width=0,this.height=0,this._node=new Rt.t,this._model=new Ka,this._model.graph=this._node,this._entity.addChild(this._node),this._meshInfo=[],this._material=null,this._aabbDirty=!0,this._aabb=new y,this._noResize=!1,this._currentMaterialType=null,this._maskedMaterialSrc=null,this._rtlReorder=!1,this._unicodeConverter=!1,this._rtl=!1,this._outlineColor=new p.Q(0,0,0,1),this._outlineColorUniform=new Float32Array(4),this._outlineThicknessScale=.2,this._outlineThickness=0,this._shadowColor=new p.Q(0,0,0,1),this._shadowColorUniform=new Float32Array(4),this._shadowOffsetScale=.005,this._shadowOffset=new Jt.Z(0,0),this._shadowOffsetUniform=new Float32Array(2),this._enableMarkup=!1,this._onScreenChange(this._element.screen),t.on("resize",this._onParentResize,this),t.on("set:screen",this._onScreenChange,this),t.on("screen:set:screenspace",this._onScreenSpaceChange,this),t.on("set:draworder",this._onDrawOrderChange,this),t.on("set:pivot",this._onPivotChange,this),this._system.app.i18n.on(hr.EVENT_CHANGE,this._onLocaleSet,this),this._system.app.i18n.on("data:add",this._onLocalizationData,this),this._system.app.i18n.on("data:remove",this._onLocalizationData,this),this._rangeStart=0,this._rangeEnd=0}destroy(){this._setMaterial(null),this._model&&(this._element.removeModelFromLayers(this._model),this._model.destroy(),this._model=null),this._fontAsset.destroy(),this.font=null,this._element.off("resize",this._onParentResize,this),this._element.off("set:screen",this._onScreenChange,this),this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this),this._element.off("set:draworder",this._onDrawOrderChange,this),this._element.off("set:pivot",this._onPivotChange,this),this._system.app.i18n.off(hr.EVENT_CHANGE,this._onLocaleSet,this),this._system.app.i18n.off("data:add",this._onLocalizationData,this),this._system.app.i18n.off("data:remove",this._onLocalizationData,this)}_onParentResize(t,e){this._noResize||this._font&&this._updateText()}_onScreenChange(t){t?this._updateMaterial(t.screen.screenSpace):this._updateMaterial(!1)}_onScreenSpaceChange(t){this._updateMaterial(t)}_onDrawOrderChange(t){if(this._drawOrder=t,this._model)for(let e=0,s=this._model.meshInstances.length;e<s;e++)this._model.meshInstances[e].drawOrder=t}_onPivotChange(t){this._font&&this._updateText()}_onLocaleSet(t){if(this._i18nKey){if(this.fontAsset){const t=this._system.app.assets.get(this.fontAsset);t&&t.resource&&t.resource===this._font||(this.font=null)}this._resetLocalizedText()}}_onLocalizationData(t,e){this._i18nKey&&e[this._i18nKey]&&this._resetLocalizedText()}_resetLocalizedText(){this._setText(this._system.app.i18n.getText(this._i18nKey))}_setText(t){if(this.unicodeConverter){const e=this._system.getUnicodeConverter();e?t=e(t):console.warn("Element created with unicodeConverter option but no unicodeConverter function registered")}this._text!==t&&(this._font&&this._updateText(t),this._text=t)}_updateText(t){let e;if(void 0===t&&(t=this._text),this._symbols=zo.getSymbols(t.normalize?t.normalize("NFC"):t),0===this._symbols.length&&(this._symbols=[" "]),this._enableMarkup){const t=Yo.evaluate(this._symbols);this._symbols=t.symbols,e=t.tags||[]}if(this._rtlReorder){const t=this._system.app.systems.element.getRtlReorder();if(t){const s=t(this._symbols);this._rtl=s.rtl,this._symbols=s.mapping.map(function(t){return this._symbols[t]},this),e&&(e=s.mapping.map(t=>e[t]))}else console.warn("Element created with rtlReorder option but no rtlReorder function registered")}else this._rtl=!1;const s=(t,e)=>`${t.toString(!0).toLowerCase()}:${e.toFixed(2)}`,i=(t,e)=>`${t.toString(!0).toLowerCase()}:${e.x.toFixed(2)}:${e.y.toFixed(2)}`;if(e){const t={},n={},r={};this._colorPalette=[Math.round(255*this._color.r),Math.round(255*this._color.g),Math.round(255*this._color.b)],this._outlinePalette=[Math.round(255*this._outlineColor.r),Math.round(255*this._outlineColor.g),Math.round(255*this._outlineColor.b),Math.round(255*this._outlineColor.a),Math.round(255*this._outlineThickness)],this._shadowPalette=[Math.round(255*this._shadowColor.r),Math.round(255*this._shadowColor.g),Math.round(255*this._shadowColor.b),Math.round(255*this._shadowColor.a),Math.round(127*this._shadowOffset.x),Math.round(127*this._shadowOffset.y)],this._symbolColors=[],this._symbolOutlineParams=[],this._symbolShadowParams=[],t[this._color.toString(!1).toLowerCase()]=0,n[s(this._outlineColor,this._outlineThickness)]=0,r[i(this._shadowColor,this._shadowOffset)]=0;for(let a=0,o=this._symbols.length;a<o;++a){const o=e[a];let l=0;if(o&&o.color&&o.color.value){const e=o.color.value;if(7===e.length&&"#"===e[0]){const s=e.substring(1).toLowerCase();t.hasOwnProperty(s)?l=t[s]:/^[0-9a-f]{6}$/.test(s)&&(l=this._colorPalette.length/3,t[s]=l,this._colorPalette.push(parseInt(s.substring(0,2),16)),this._colorPalette.push(parseInt(s.substring(2,4),16)),this._colorPalette.push(parseInt(s.substring(4,6),16)))}}this._symbolColors.push(l);let h=0;if(o&&o.outline&&(o.outline.attributes.color||o.outline.attributes.thickness)){let t=o.outline.attributes.color?al.fromString(o.outline.attributes.color):this._outlineColor,e=Number(o.outline.attributes.thickness);(Number.isNaN(t.r)||Number.isNaN(t.g)||Number.isNaN(t.b)||Number.isNaN(t.a))&&(t=this._outlineColor),Number.isNaN(e)&&(e=this._outlineThickness);const i=s(t,e);n.hasOwnProperty(i)?h=n[i]:(h=this._outlinePalette.length/5,n[i]=h,this._outlinePalette.push(Math.round(255*t.r),Math.round(255*t.g),Math.round(255*t.b),Math.round(255*t.a),Math.round(255*e)))}this._symbolOutlineParams.push(h);let c=0;if(o&&o.shadow&&(o.shadow.attributes.color||o.shadow.attributes.offset||o.shadow.attributes.offsetX||o.shadow.attributes.offsetY)){let t=o.shadow.attributes.color?al.fromString(o.shadow.attributes.color):this._shadowColor;const e=Number(o.shadow.attributes.offset),s=Number(o.shadow.attributes.offsetX),n=Number(o.shadow.attributes.offsetY);(Number.isNaN(t.r)||Number.isNaN(t.g)||Number.isNaN(t.b)||Number.isNaN(t.a))&&(t=this._shadowColor);const a=ol.set(Number.isNaN(s)?Number.isNaN(e)?this._shadowOffset.x:e:s,Number.isNaN(n)?Number.isNaN(e)?this._shadowOffset.y:e:n),l=i(t,a);r.hasOwnProperty(l)?c=r[l]:(c=this._shadowPalette.length/6,r[l]=c,this._shadowPalette.push(Math.round(255*t.r),Math.round(255*t.g),Math.round(255*t.b),Math.round(255*t.a),Math.round(127*a.x),Math.round(127*a.y)))}this._symbolShadowParams.push(c)}}else this._colorPalette=[],this._symbolColors=null,this._symbolOutlineParams=null,this._symbolShadowParams=null;this._updateMaterialEmissive(),this._updateMaterialOutline(),this._updateMaterialShadow();const n=this._calculateCharsPerTexture();let r=!1;const a=this._element,o=a._isScreenSpace(),l=a._isScreenCulled(),h=function(t){return a.isVisibleForCamera(t)};for(let c=0,d=this._meshInfo.length;c<d;c++){const t=n[c]||0,e=this._meshInfo[c];if(e.count!==t){if(r||(a.removeModelFromLayers(this._model),r=!0),e.count=t,e.positions.length=e.normals.length=3*t*4,e.indices.length=3*t*2,e.uvs.length=2*t*4,e.colors.length=4*t*4,e.outlines.length=4*t*3,e.shadows.length=4*t*3,e.meshInstance&&this._removeMeshInstance(e.meshInstance),0===t){e.meshInstance=null;continue}for(let n=0;n<t;n++)e.indices[3*n*2+0]=4*n,e.indices[3*n*2+1]=4*n+1,e.indices[3*n*2+2]=4*n+3,e.indices[3*n*2+3]=4*n+2,e.indices[3*n*2+4]=4*n+3,e.indices[3*n*2+5]=4*n+1,e.normals[4*n*3+0]=0,e.normals[4*n*3+1]=0,e.normals[4*n*3+2]=-1,e.normals[4*n*3+3]=0,e.normals[4*n*3+4]=0,e.normals[4*n*3+5]=-1,e.normals[4*n*3+6]=0,e.normals[4*n*3+7]=0,e.normals[4*n*3+8]=-1,e.normals[4*n*3+9]=0,e.normals[4*n*3+10]=0,e.normals[4*n*3+11]=-1;const s=Zo(this._system.app.graphicsDevice,e),i=new pt(s,this._material,this._node);if(i.name=`Text Element: ${this._entity.name}`,i.castShadow=!1,i.receiveShadow=!1,i.cull=!o,i.screenSpace=o,i.drawOrder=this._drawOrder,l&&(i.cull=!0,i.isVisibleFunc=h),this._setTextureParams(i,this._font.textures[c]),i.setParameter("material_emissive",this._colorUniform),i.setParameter("material_opacity",this._color.a),i.setParameter("font_sdfIntensity",this._font.intensity),i.setParameter("font_pxrange",this._getPxRange(this._font)),i.setParameter("font_textureWidth",this._font.data.info.maps[c].width),i.setParameter("outline_color",this._outlineColorUniform),i.setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness),i.setParameter("shadow_color",this._shadowColorUniform),this._symbolShadowParams)this._shadowOffsetUniform[0]=0,this._shadowOffsetUniform[1]=0;else{const t=-this._font.data.info.maps[c].width/this._font.data.info.maps[c].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=t*this._shadowOffsetScale*this._shadowOffset.y}i.setParameter("shadow_offset",this._shadowOffsetUniform),e.meshInstance=i,this._model.meshInstances.push(i)}}this._element.maskedBy&&this._element._setMaskedBy(this._element.maskedBy),r&&this._element.enabled&&this._entity.enabled&&this._element.addModelToLayers(this._model),this._updateMeshes(),this._rangeStart=0,this._rangeEnd=this._symbols.length,this._updateRenderRange()}_removeMeshInstance(t){t.destroy();const e=this._model.meshInstances.indexOf(t);-1!==e&&this._model.meshInstances.splice(e,1)}_setMaterial(t){if(this._material=t,this._model)for(let e=0,s=this._model.meshInstances.length;e<s;e++){this._model.meshInstances[e].material=t}}_updateMaterial(t){const e=this._element,s=e._isScreenCulled(),i=function(t){return e.isVisibleForCamera(t)},n=this._font&&this._font.type===Go;if(this._material=this._system.getTextElementMaterial(t,n,this._enableMarkup),this._model)for(let r=0,a=this._model.meshInstances.length;r<a;r++){const e=this._model.meshInstances[r];e.cull=!t,e.material=this._material,e.screenSpace=t,s?(e.cull=!0,e.isVisibleFunc=i):e.isVisibleFunc=null}}_updateMaterialEmissive(){this._symbolColors?(this._colorUniform[0]=1,this._colorUniform[1]=1,this._colorUniform[2]=1):(ll.linear(this._color),this._colorUniform[0]=ll.r,this._colorUniform[1]=ll.g,this._colorUniform[2]=ll.b)}_updateMaterialOutline(){this._symbolOutlineParams?(this._outlineColorUniform[0]=0,this._outlineColorUniform[1]=0,this._outlineColorUniform[2]=0,this._outlineColorUniform[3]=1):(ll.linear(this._outlineColor),this._outlineColorUniform[0]=ll.r,this._outlineColorUniform[1]=ll.g,this._outlineColorUniform[2]=ll.b,this._outlineColorUniform[3]=ll.a)}_updateMaterialShadow(){this._symbolOutlineParams?(this._shadowColorUniform[0]=0,this._shadowColorUniform[1]=0,this._shadowColorUniform[2]=0,this._shadowColorUniform[3]=0):(ll.linear(this._shadowColor),this._shadowColorUniform[0]=ll.r,this._shadowColorUniform[1]=ll.g,this._shadowColorUniform[2]=ll.b,this._shadowColorUniform[3]=ll.a)}_isWordBoundary(t){return tl.test(t)}_isValidNextChar(t){return null!==t&&!il.test(t)}_isNextCJKBoundary(t,e){return sl.test(t)&&(tl.test(e)||el.test(e))}_isNextCJKWholeWord(t){return sl.test(t)}_updateMeshes(){const t=this._font.data,e=this,s=Math.min(this._minFontSize,this._maxFontSize),i=this._maxFontSize,n=this._shouldAutoFit();n&&(this._fontSize=this._maxFontSize);const r=this._symbols.length;let o=0,l=0,h=0,c=0,d=1,u=0,f=0,p=0,m=0,_=0,g=0;const v=Math.abs(this._element.anchor.x-this._element.anchor.z)>=1e-4;let S=this._element.calculatedWidth;(this.autoWidth&&!v||!this._wrapLines)&&(S=Number.POSITIVE_INFINITY);let y,T,w,b,E=0,A=0;function C(t,s,i){e._lineWidths.push(Math.abs(i));const n=p>s?s+1:p,r=p>s?p+1:s,a=t.slice(n,r);if(g){let t=a.length;for(;t--&&g>0;)Qo.test(a[t])&&(a.splice(t,1),g--)}e._lineContents.push(a.join("")),o=0,l-=e._scaledLineHeight,d++,m=0,_=0,g=0,u=0,p=s}let P=!0;for(;P;){P=!1,this._scaledLineHeight=n?this._lineHeight*this._fontSize/(this._maxFontSize||1e-4):this._lineHeight,this.width=0,this.height=0,this._lineWidths=[],this._lineContents=[],o=0,l=0,h=0,c=0,d=1,u=0,f=0,p=0,m=0,_=0,g=0;const e=this._fontSize/32;E=this._fontMinY*e,A=this._fontMaxY*e;for(let t=0;t<this._meshInfo.length;t++)this._meshInfo[t].quad=0,this._meshInfo[t].lines={};let v=255,x=255,D=255,L=65535,M=65535,I=0,R=65535,F=65535,O=32639;for(let n=0;n<r;n++){y=this._symbols[n],b=n+1>=r?null:this._symbols[n+1];if(Qo.test(y)){g++,(!this._wrapLines||this._maxLines<0||d<this._maxLines)&&(C(this._symbols,n,c),f=n+1,p=n+1);continue}let N,k,B=0,U=0,z=0,V=1;if(T=t.chars[y],!T)if(-1!==nl.indexOf(y))T=rl;else if(t.chars[" "])T=t.chars[" "];else for(const e in t.chars){T=t.chars[e];break}if(T){let t=0;if(_>0){const e=this._font.data.kerning;if(e){const s=e[zo.getCodePoint(this._symbols[n-1])||0];s&&(t=s[zo.getCodePoint(this._symbols[n])||0]||0)}}N=T.scale||1,k=(T.width+T.height)/2,V=e*k/N,z=(T.xadvance+t)*e,B=(T.xoffset-t)*e,U=T.yoffset*e}else console.error(`Couldn't substitute missing character: '${y}'`);const G=Jo.test(y),H=T&&T.map||0,W=-this._font.data.info.maps[H].width/this._font.data.info.maps[H].height,X=this._meshInfo[H],$=o+this._spacing*z;if($>S&&_>0&&!G&&(this._maxLines<0||d<this._maxLines)){if(0!==m){const e=Math.max(n-f,0);if(this._meshInfo.length<=1)X.lines[d-1]-=e,X.quad-=e;else{const e=n;for(let s=f;s<e;s++){const e=this._symbols[s],i=t.chars[e],n=this._meshInfo[i&&i.map||0];n.lines[d-1]-=1,n.quad-=1}}n-=e+1,C(this._symbols,f,u);continue}f=n,C(this._symbols,n,c)}w=X.quad,X.lines[d-1]=w;let q=o-B,j=q+V;const Y=l-U,K=Y+V;if(this._rtl){const t=V-B-this._spacing*z-B;q-=t,j-=t}let Z;if(X.positions[4*w*3+0]=q,X.positions[4*w*3+1]=Y,X.positions[4*w*3+2]=h,X.positions[4*w*3+3]=j,X.positions[4*w*3+4]=Y,X.positions[4*w*3+5]=h,X.positions[4*w*3+6]=j,X.positions[4*w*3+7]=K,X.positions[4*w*3+8]=h,X.positions[4*w*3+9]=q,X.positions[4*w*3+10]=K,X.positions[4*w*3+11]=h,this.width=Math.max(this.width,$),this._shouldAutoFitWidth()&&this.width>this._element.calculatedWidth&&(Z=Math.floor(this._element.fontSize*this._element.calculatedWidth/(this.width||1e-4)),Z=a.D.clamp(Z,s,i),Z!==this._element.fontSize)){this._fontSize=Z,P=!0;break}if(this.height=Math.max(this.height,A-(l+E)),this._shouldAutoFitHeight()&&this.height>this._element.calculatedHeight&&(Z=a.D.clamp(this._fontSize-1,s,i),Z!==this._element.fontSize)){this._fontSize=Z,P=!0;break}o+=this._spacing*z,G||(c=o),(this._isWordBoundary(y)||this._isValidNextChar(b)&&(this._isNextCJKBoundary(y,b)||this._isNextCJKWholeWord(b)))&&(m++,u=c,f=n+1),_++;const Q=this._getUv(y);if(X.uvs[4*w*2+0]=Q[0],X.uvs[4*w*2+1]=1-Q[1],X.uvs[4*w*2+2]=Q[2],X.uvs[4*w*2+3]=1-Q[1],X.uvs[4*w*2+4]=Q[2],X.uvs[4*w*2+5]=1-Q[3],X.uvs[4*w*2+6]=Q[0],X.uvs[4*w*2+7]=1-Q[3],this._symbolColors){const t=3*this._symbolColors[n];v=this._colorPalette[t],x=this._colorPalette[t+1],D=this._colorPalette[t+2]}if(X.colors[4*w*4+0]=v,X.colors[4*w*4+1]=x,X.colors[4*w*4+2]=D,X.colors[4*w*4+3]=255,X.colors[4*w*4+4]=v,X.colors[4*w*4+5]=x,X.colors[4*w*4+6]=D,X.colors[4*w*4+7]=255,X.colors[4*w*4+8]=v,X.colors[4*w*4+9]=x,X.colors[4*w*4+10]=D,X.colors[4*w*4+11]=255,X.colors[4*w*4+12]=v,X.colors[4*w*4+13]=x,X.colors[4*w*4+14]=D,X.colors[4*w*4+15]=255,this._symbolOutlineParams){const t=5*this._symbolOutlineParams[n];L=this._outlinePalette[t]+256*this._outlinePalette[t+1],M=this._outlinePalette[t+2]+256*this._outlinePalette[t+3],I=this._outlinePalette[t+4]}if(X.outlines[4*w*3+0]=L,X.outlines[4*w*3+1]=M,X.outlines[4*w*3+2]=I,X.outlines[4*w*3+3]=L,X.outlines[4*w*3+4]=M,X.outlines[4*w*3+5]=I,X.outlines[4*w*3+6]=L,X.outlines[4*w*3+7]=M,X.outlines[4*w*3+8]=I,X.outlines[4*w*3+9]=L,X.outlines[4*w*3+10]=M,X.outlines[4*w*3+11]=I,this._symbolShadowParams){const t=6*this._symbolShadowParams[n];R=this._shadowPalette[t]+256*this._shadowPalette[t+1],F=this._shadowPalette[t+2]+256*this._shadowPalette[t+3],O=this._shadowPalette[t+4]+127+256*Math.round(W*this._shadowPalette[t+5]+127)}X.shadows[4*w*3+0]=R,X.shadows[4*w*3+1]=F,X.shadows[4*w*3+2]=O,X.shadows[4*w*3+3]=R,X.shadows[4*w*3+4]=F,X.shadows[4*w*3+5]=O,X.shadows[4*w*3+6]=R,X.shadows[4*w*3+7]=F,X.shadows[4*w*3+8]=O,X.shadows[4*w*3+9]=R,X.shadows[4*w*3+10]=F,X.shadows[4*w*3+11]=O,X.quad++}P||p<r&&C(this._symbols,r,o)}this._noResize=!0,this.autoWidth=this._autoWidth,this.autoHeight=this._autoHeight,this._noResize=!1;const D=this._element.pivot.x,L=this._element.pivot.y,M=this._alignment.x,I=this._alignment.y;for(let a=0;a<this._meshInfo.length;a++){if(0===this._meshInfo[a].count)continue;let t=0;for(const n in this._meshInfo[a].lines){const e=this._meshInfo[a].lines[n],s=this._lineWidths[parseInt(n,10)],i=-D*this._element.calculatedWidth+M*(this._element.calculatedWidth-s)*(this._rtl?-1:1),r=(1-L)*this._element.calculatedHeight-A-(1-I)*(this._element.calculatedHeight-this.height);for(let n=t;n<=e;n++)this._meshInfo[a].positions[4*n*3]+=i,this._meshInfo[a].positions[4*n*3+3]+=i,this._meshInfo[a].positions[4*n*3+6]+=i,this._meshInfo[a].positions[4*n*3+9]+=i,this._meshInfo[a].positions[4*n*3+1]+=r,this._meshInfo[a].positions[4*n*3+4]+=r,this._meshInfo[a].positions[4*n*3+7]+=r,this._meshInfo[a].positions[4*n*3+10]+=r;if(this._rtl)for(let n=t;n<=e;n++){const t=4*n*3;for(let n=0;n<4;++n)this._meshInfo[a].positions[t+3*n]=this._element.calculatedWidth-this._meshInfo[a].positions[t+3*n]+2*i;const e=this._meshInfo[a].positions[t+3],s=this._meshInfo[a].positions[t+6];this._meshInfo[a].positions[t+3]=this._meshInfo[a].positions[t+0],this._meshInfo[a].positions[t+6]=this._meshInfo[a].positions[t+9],this._meshInfo[a].positions[t+0]=e,this._meshInfo[a].positions[t+9]=s}t=e+1}const e=4*this._meshInfo[a].count,s=4*this._meshInfo[a].quad,i=new Os(this._meshInfo[a].meshInstance.mesh.vertexBuffer);for(let n=0;n<e;n++)n>=s?(i.element[x.JYe].set(0,0,0),i.element[x.slc].set(0,0),i.element[x.F8$].set(0,0,0,0),i.element[x.$_V].set(0,0,0,0),i.element[x.URU].set(0,0,0,0)):(i.element[x.JYe].set(this._meshInfo[a].positions[3*n+0],this._meshInfo[a].positions[3*n+1],this._meshInfo[a].positions[3*n+2]),i.element[x.slc].set(this._meshInfo[a].uvs[2*n+0],this._meshInfo[a].uvs[2*n+1]),i.element[x.F8$].set(this._meshInfo[a].colors[4*n+0],this._meshInfo[a].colors[4*n+1],this._meshInfo[a].colors[4*n+2],this._meshInfo[a].colors[4*n+3]),i.element[x.$_V].set(this._meshInfo[a].outlines[3*n+0],this._meshInfo[a].outlines[3*n+1],this._meshInfo[a].outlines[3*n+2]),i.element[x.URU].set(this._meshInfo[a].shadows[3*n+0],this._meshInfo[a].shadows[3*n+1],this._meshInfo[a].shadows[3*n+2])),i.next();i.end(),this._meshInfo[a].meshInstance.mesh.aabb.compute(this._meshInfo[a].positions),this._meshInfo[a].meshInstance._aabbVer=-1}this._aabbDirty=!0}_onFontRender(){this.font=this._font}_onFontLoad(t){this.font!==t.resource&&(this.font=t.resource)}_onFontChange(t,e,s,i){if("data"===e){this._font.data=s;const t=this._font.data.info.maps.length;for(let e=0;e<t;e++){if(!this._meshInfo[e])continue;const t=this._meshInfo[e].meshInstance;t&&(t.setParameter("font_sdfIntensity",this._font.intensity),t.setParameter("font_pxrange",this._getPxRange(this._font)),t.setParameter("font_textureWidth",this._font.data.info.maps[e].width))}}}_onFontRemove(t){}_setTextureParams(t,e){this._font&&(this._font.type===Go?(t.deleteParameter("texture_emissiveMap"),t.deleteParameter("texture_opacityMap"),t.setParameter("texture_msdfMap",e)):"bitmap"===this._font.type&&(t.deleteParameter("texture_msdfMap"),t.setParameter("texture_emissiveMap",e),t.setParameter("texture_opacityMap",e)))}_getPxRange(t){const e=Object.keys(this._font.data.chars);for(let s=0;s<e.length;s++){const t=this._font.data.chars[e[s]];if(t.range)return(t.scale||1)*t.range}return 2}_getUv(t){const e=this._font.data;if(!e.chars[t]){const t=" ";return e.chars[t]?this._getUv(t):[0,0,0,0]}const s=e.chars[t].map,i=e.info.maps[s].width,n=e.info.maps[s].height,r=e.chars[t].x,a=e.chars[t].y,o=r,l=a,h=r+e.chars[t].width,c=a-e.chars[t].height,d=1-e.chars[t].height/n;return[o/i,d-l/n,h/i,d-c/n]}onEnable(){this._fontAsset.autoLoad=!0,this._model&&this._element.addModelToLayers(this._model)}onDisable(){this._fontAsset.autoLoad=!1,this._model&&this._element.removeModelFromLayers(this._model)}_setStencil(t){if(this._model){const e=this._model.meshInstances;for(let s=0;s<e.length;s++)e[s].stencilFront=t,e[s].stencilBack=t}}_shouldAutoFitWidth(){return this._autoFitWidth&&!this._autoWidth}_shouldAutoFitHeight(){return this._autoFitHeight&&!this._autoHeight}_shouldAutoFit(){return this._autoFitWidth&&!this._autoWidth||this._autoFitHeight&&!this._autoHeight}_calculateCharsPerTexture(t){const e={};void 0===t&&(t=this._symbols.length);for(let s=0,i=t;s<i;s++){const t=this._symbols[s];let i=this._font.data.chars[t];i||(i=this._font.data.chars[" "],i||(i=this._font.data.chars[Object.keys(this._font.data.chars)[0]]));const n=i.map;e[n]?e[n]++:e[n]=1}return e}_updateRenderRange(){const t=0===this._rangeStart?0:this._calculateCharsPerTexture(this._rangeStart),e=0===this._rangeEnd?0:this._calculateCharsPerTexture(this._rangeEnd);for(let s=0,i=this._meshInfo.length;s<i;s++){const i=t[s]||0,n=e[s]||0,r=this._meshInfo[s].meshInstance;if(r){const t=r.mesh;t&&(t.primitive[0].base=3*i*2,t.primitive[0].count=3*(n-i)*2)}}}set text(t){this._i18nKey=null;const e=null!=t&&t.toString()||"";this._setText(e)}get text(){return this._text}set key(t){const e=null!==t?t.toString():null;this._i18nKey!==e&&(this._i18nKey=e,e?(this._fontAsset.disableLocalization=!1,this._resetLocalizedText()):this._fontAsset.disableLocalization=!0)}get key(){return this._i18nKey}set color(t){const e=t.r,s=t.g,i=t.b;if((this._color.r!==e||this._color.g!==s||this._color.b!==i)&&(this._color.r=e,this._color.g=s,this._color.b=i,this._model)){if(this._symbolColors)this._font&&this._updateText();else{ll.linear(this._color),this._colorUniform[0]=ll.r,this._colorUniform[1]=ll.g,this._colorUniform[2]=ll.b;for(let t=0,e=this._model.meshInstances.length;t<e;t++){this._model.meshInstances[t].setParameter("material_emissive",this._colorUniform)}}this._element&&this._element.fire("set:color",this._color)}}get color(){return this._color}set opacity(t){if(this._color.a!==t&&(this._color.a=t,this._model))for(let e=0,s=this._model.meshInstances.length;e<s;e++){this._model.meshInstances[e].setParameter("material_opacity",t)}this._element&&this._element.fire("set:opacity",t)}get opacity(){return this._color.a}set lineHeight(t){const e=this._lineHeight;this._lineHeight=t,this._scaledLineHeight=t,e!==t&&this._font&&this._updateText()}get lineHeight(){return this._lineHeight}set wrapLines(t){const e=this._wrapLines;this._wrapLines=t,e!==t&&this._font&&this._updateText()}get wrapLines(){return this._wrapLines}get lines(){return this._lineContents}set spacing(t){const e=this._spacing;this._spacing=t,e!==t&&this._font&&this._updateText()}get spacing(){return this._spacing}set fontSize(t){const e=this._fontSize;this._fontSize=t,this._originalFontSize=t,e!==t&&this._font&&this._updateText()}get fontSize(){return this._fontSize}set fontAsset(t){this._fontAsset.defaultAsset=t}get fontAsset(){return this._fontAsset.localizedAsset}set font(t){let e;if(this._font&&(e=this._font.type,this._font.off&&this._font.off("render",this._onFontRender,this)),this._font=t,this._fontMinY=0,this._fontMaxY=0,!t)return;const s=this._font.data;for(const n in s.chars){const t=s.chars[n];t.bounds&&(this._fontMinY=Math.min(this._fontMinY,t.bounds[1]),this._fontMaxY=Math.max(this._fontMaxY,t.bounds[3]))}if(this._font.on&&this._font.on("render",this._onFontRender,this),this._fontAsset.localizedAsset){this._system.app.assets.get(this._fontAsset.localizedAsset).resource!==this._font&&(this._fontAsset.defaultAsset=null)}if(t.type!==e){const t=this._element._isScreenSpace();this._updateMaterial(t)}for(let n=0,r=this._font.textures.length;n<r;n++)if(this._meshInfo[n]){const t=this._meshInfo[n].meshInstance;t&&(t.setParameter("font_sdfIntensity",this._font.intensity),t.setParameter("font_pxrange",this._getPxRange(this._font)),t.setParameter("font_textureWidth",this._font.data.info.maps[n].width),this._setTextureParams(t,this._font.textures[n]))}else this._meshInfo[n]=new Ko;let i=!1;for(let n=this._font.textures.length;n<this._meshInfo.length;n++)this._meshInfo[n].meshInstance&&(i||(this._element.removeModelFromLayers(this._model),i=!0),this._removeMeshInstance(this._meshInfo[n].meshInstance));this._meshInfo.length>this._font.textures.length&&(this._meshInfo.length=this._font.textures.length),this._updateText()}get font(){return this._font}set alignment(t){t instanceof Jt.Z?this._alignment.set(t.x,t.y):this._alignment.set(t[0],t[1]),this._font&&this._updateText()}get alignment(){return this._alignment}set autoWidth(t){const e=this._autoWidth;if(this._autoWidth=t,t&&Math.abs(this._element.anchor.x-this._element.anchor.z)<1e-4&&(this._element.width=this.width),e!==t){const t=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;t!==this._fontSize&&(this._fontSize=t,this._font&&this._updateText())}}get autoWidth(){return this._autoWidth}set autoHeight(t){const e=this._autoHeight;if(this._autoHeight=t,t&&Math.abs(this._element.anchor.y-this._element.anchor.w)<1e-4&&(this._element.height=this.height),e!==t){const t=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;t!==this._fontSize&&(this._fontSize=t,this._font&&this._updateText())}}get autoHeight(){return this._autoHeight}set rtlReorder(t){this._rtlReorder!==t&&(this._rtlReorder=t,this._font&&this._updateText())}get rtlReorder(){return this._rtlReorder}set unicodeConverter(t){this._unicodeConverter!==t&&(this._unicodeConverter=t,this._setText(this._text))}get unicodeConverter(){return this._unicodeConverter}get aabb(){if(this._aabbDirty){let t=!1;for(let e=0;e<this._meshInfo.length;e++)this._meshInfo[e].meshInstance&&(t?this._aabb.add(this._meshInfo[e].meshInstance.aabb):(this._aabb.copy(this._meshInfo[e].meshInstance.aabb),t=!0));this._aabbDirty=!1}return this._aabb}set outlineColor(t){const e=t instanceof p.Q?t.r:t[0],s=t instanceof p.Q?t.g:t[1],i=t instanceof p.Q?t.b:t[2],n=t instanceof p.Q?t.a:t[3];if((this._outlineColor.r!==e||this._outlineColor.g!==s||this._outlineColor.b!==i||this._outlineColor.a!==n)&&(this._outlineColor.r=e,this._outlineColor.g=s,this._outlineColor.b=i,this._outlineColor.a=n,this._model)){if(this._symbolOutlineParams)this._font&&this._updateText();else{ll.linear(this._outlineColor),this._outlineColorUniform[0]=ll.r,this._outlineColorUniform[1]=ll.g,this._outlineColorUniform[2]=ll.b,this._outlineColorUniform[3]=ll.a;for(let t=0,e=this._model.meshInstances.length;t<e;t++){this._model.meshInstances[t].setParameter("outline_color",this._outlineColorUniform)}}this._element&&this._element.fire("set:outline",this._color)}}get outlineColor(){return this._outlineColor}set outlineThickness(t){const e=this._outlineThickness;if(this._outlineThickness=t,e!==t&&this._font){if(!this._model)return;if(this._symbolOutlineParams)this._font&&this._updateText();else for(let t=0,e=this._model.meshInstances.length;t<e;t++){this._model.meshInstances[t].setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness)}}}get outlineThickness(){return this._outlineThickness}set shadowColor(t){const e=t instanceof p.Q?t.r:t[0],s=t instanceof p.Q?t.g:t[1],i=t instanceof p.Q?t.b:t[2],n=t instanceof p.Q?t.a:t[3];if((this._shadowColor.r!==e||this._shadowColor.g!==s||this._shadowColor.b!==i||this._shadowColor.a!==n)&&(this._shadowColor.r=e,this._shadowColor.g=s,this._shadowColor.b=i,this._shadowColor.a=n,this._model))if(this._symbolShadowParams)this._font&&this._updateText();else{ll.linear(this._shadowColor),this._shadowColorUniform[0]=ll.r,this._shadowColorUniform[1]=ll.g,this._shadowColorUniform[2]=ll.b,this._shadowColorUniform[3]=ll.a;for(let t=0,e=this._model.meshInstances.length;t<e;t++){this._model.meshInstances[t].setParameter("shadow_color",this._shadowColorUniform)}}}get shadowColor(){return this._shadowColor}set shadowOffset(t){const e=t instanceof Jt.Z?t.x:t[0],s=t instanceof Jt.Z?t.y:t[1];if((this._shadowOffset.x!==e||this._shadowOffset.y!==s)&&(this._shadowOffset.set(e,s),this._font&&this._model))if(this._symbolShadowParams)this._updateText();else for(let i=0,n=this._model.meshInstances.length;i<n;i++){const t=-this._font.data.info.maps[i].width/this._font.data.info.maps[i].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x,this._shadowOffsetUniform[1]=t*this._shadowOffsetScale*this._shadowOffset.y;this._model.meshInstances[i].setParameter("shadow_offset",this._shadowOffsetUniform)}}get shadowOffset(){return this._shadowOffset}set minFontSize(t){this._minFontSize!==t&&(this._minFontSize=t,this.font&&this._shouldAutoFit()&&this._updateText())}get minFontSize(){return this._minFontSize}set maxFontSize(t){this._maxFontSize!==t&&(this._maxFontSize=t,this.font&&this._shouldAutoFit()&&this._updateText())}get maxFontSize(){return this._maxFontSize}set autoFitWidth(t){this._autoFitWidth!==t&&(this._autoFitWidth=t,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}get autoFitWidth(){return this._autoFitWidth}set autoFitHeight(t){this._autoFitHeight!==t&&(this._autoFitHeight=t,this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize,this.font&&this._updateText())}get autoFitHeight(){return this._autoFitHeight}set maxLines(t){this._maxLines!==t&&(null===t&&-1===this._maxLines||(this._maxLines=null===t?-1:t,this.font&&this._wrapLines&&this._updateText()))}get maxLines(){return this._maxLines}set enableMarkup(t){if(t=!!t,this._enableMarkup===t)return;this._enableMarkup=t,this.font&&this._updateText();const e=this._element._isScreenSpace();this._updateMaterial(e)}get enableMarkup(){return this._enableMarkup}get symbols(){return this._symbols}get symbolColors(){return null===this._symbolColors?null:this._symbolColors.map(function(t){return this._colorPalette.slice(3*t,3*t+3)},this)}get symbolOutlineParams(){return null===this._symbolOutlineParams?null:this._symbolOutlineParams.map(function(t){return this._outlinePalette.slice(5*t,5*t+5)},this)}get symbolShadowParams(){return null===this._symbolShadowParams?null:this._symbolShadowParams.map(function(t){return this._shadowPalette.slice(6*t,6*t+6)},this)}get rtl(){return this._rtl}set rangeStart(t){(t=Math.max(0,Math.min(t,this._symbols.length)))!==this._rangeStart&&(this._rangeStart=t,this._updateRenderRange())}get rangeStart(){return this._rangeStart}set rangeEnd(t){(t=Math.max(this._rangeStart,Math.min(t,this._symbols.length)))!==this._rangeEnd&&(this._rangeEnd=t,this._updateRenderRange())}get rangeEnd(){return this._rangeEnd}}const cl=new l.e,dl=new o.$,ul=new l.e,fl=new l.e,pl=new o.$,ml=new o.$,_l=new o.$,gl=new o.$;class vl extends Ir{static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEENTER="mouseenter"}static{this.EVENT_MOUSELEAVE="mouseleave"}static{this.EVENT_MOUSEMOVE="mousemove"}static{this.EVENT_MOUSEWHEEL="mousewheel"}static{this.EVENT_CLICK="click"}static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHMOVE="touchmove"}static{this.EVENT_TOUCHCANCEL="touchcancel"}constructor(t,e){super(t,e),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._beingInitialized=!1,this._anchor=new w.Z,this._localAnchor=new w.Z,this._pivot=new Jt.Z,this._width=this._calculatedWidth=32,this._height=this._calculatedHeight=32,this._margin=new w.Z(0,0,-32,-32),this._modelTransform=new o.$,this._screenToWorld=new o.$,this._anchorTransform=new o.$,this._anchorDirty=!0,this._parentWorldTransform=new o.$,this._screenTransform=new o.$,this._screenCorners=[new l.e,new l.e,new l.e,new l.e],this._canvasCorners=[new Jt.Z,new Jt.Z,new Jt.Z,new Jt.Z],this._worldCorners=[new l.e,new l.e,new l.e,new l.e],this._cornersDirty=!0,this._canvasCornersDirty=!0,this._worldCornersDirty=!0,this.entity.on("insert",this._onInsert,this),this._patch(),this.screen=null,this._type=Ra,this._image=null,this._text=null,this._group=null,this._drawOrder=0,this._fitMode=Na,this._useInput=!1,this._layers=[F.Qed],this._addedModels=[],this._batchGroupId=-1,this._offsetReadAt=0,this._maskOffset=.5,this._maskedBy=null}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){const e=this.data,s=e.enabled;e.enabled=t,this.fire("set","enabled",s,t)}get enabled(){return this.data.enabled}get _absLeft(){return this._localAnchor.x+this._margin.x}get _absRight(){return this._localAnchor.z-this._margin.z}get _absTop(){return this._localAnchor.w-this._margin.w}get _absBottom(){return this._localAnchor.y+this._margin.y}get _hasSplitAnchorsX(){return Math.abs(this._anchor.x-this._anchor.z)>.001}get _hasSplitAnchorsY(){return Math.abs(this._anchor.y-this._anchor.w)>.001}get aabb(){return this._image?this._image.aabb:this._text?this._text.aabb:null}set anchor(t){t instanceof w.Z?this._anchor.copy(t):this._anchor.set(...t),this.entity._parent||this.screen?this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY):this._calculateLocalAnchors(),this._anchorDirty=!0,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:anchor",this._anchor)}get anchor(){return this._anchor}set batchGroupId(t){this._batchGroupId!==t&&(this.entity.enabled&&this._batchGroupId>=0&&this.system.app.batcher?.remove(Vs.ELEMENT,this.batchGroupId,this.entity),this.entity.enabled&&t>=0&&this.system.app.batcher?.insert(Vs.ELEMENT,t,this.entity),t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&(this._image&&this._image._renderable.model?this.addModelToLayers(this._image._renderable.model):this._text&&this._text._model&&this.addModelToLayers(this._text._model)),this._batchGroupId=t)}get batchGroupId(){return this._batchGroupId}set bottom(t){this._margin.y=t;const e=this.entity.getLocalPosition(),s=this._absTop,i=this._localAnchor.y+t;this._setHeight(s-i),e.y=t+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(e)}get bottom(){return this._margin.y}set calculatedWidth(t){this._setCalculatedWidth(t,!0)}get calculatedWidth(){return this._calculatedWidth}set calculatedHeight(t){this._setCalculatedHeight(t,!0)}get calculatedHeight(){return this._calculatedHeight}get canvasCorners(){if(!this._canvasCornersDirty||!this.screen||!this.screen.screen.screenSpace)return this._canvasCorners;const t=this.system.app.graphicsDevice,e=this.screenCorners,s=t.canvas.clientWidth/t.width,i=t.canvas.clientHeight/t.height;for(let n=0;n<4;n++)this._canvasCorners[n].set(e[n].x*s,(t.height-e[n].y)*i);return this._canvasCornersDirty=!1,this._canvasCorners}set drawOrder(t){let e=0;this.screen&&(e=this.screen.screen.priority),t>16777215&&(t=16777215),this._drawOrder=(e<<24)+t,this.fire("set:draworder",this._drawOrder)}get drawOrder(){return this._drawOrder}set height(t){this._height=t,this._hasSplitAnchorsY||this._setCalculatedHeight(t,!0),this.fire("set:height",this._height)}get height(){return this._height}set layers(t){if(this._addedModels.length)for(let e=0;e<this._layers.length;e++){const t=this.system.app.scene.layers.getLayerById(this._layers[e]);if(t)for(let e=0;e<this._addedModels.length;e++)t.removeMeshInstances(this._addedModels[e].meshInstances)}if(this._layers=t,this.enabled&&this.entity.enabled&&this._addedModels.length)for(let e=0;e<this._layers.length;e++){const t=this.system.app.scene.layers.getLayerById(this._layers[e]);if(t)for(let e=0;e<this._addedModels.length;e++)t.addMeshInstances(this._addedModels[e].meshInstances)}}get layers(){return this._layers}set left(t){this._margin.x=t;const e=this.entity.getLocalPosition(),s=this._absRight,i=this._localAnchor.x+t;this._setWidth(s-i),e.x=t+this._calculatedWidth*this._pivot.x,this.entity.setLocalPosition(e)}get left(){return this._margin.x}set margin(t){this._margin.copy(t),this._calculateSize(!0,!0),this.fire("set:margin",this._margin)}get margin(){return this._margin}get maskedBy(){return this._maskedBy}set pivot(t){const{pivot:e,margin:s}=this,i=e.x,n=e.y;t instanceof Jt.Z?e.copy(t):e.set(...t);const r=s.x+s.z,a=e.x-i;s.x+=r*a,s.z-=r*a;const o=s.y+s.w,l=e.y-n;s.y+=o*l,s.w-=o*l,this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(!1,!1),this._flagChildrenAsDirty(),this.fire("set:pivot",e)}get pivot(){return this._pivot}set right(t){this._margin.z=t;const e=this.entity.getLocalPosition(),s=this._absLeft,i=this._localAnchor.z-t;this._setWidth(i-s),e.x=this._localAnchor.z-this._localAnchor.x-t-this._calculatedWidth*(1-this._pivot.x),this.entity.setLocalPosition(e)}get right(){return this._margin.z}get screenCorners(){if(!this._cornersDirty||!this.screen)return this._screenCorners;const t=this.entity.parent&&this.entity.parent.element&&this.entity.parent.element.screenCorners[0];this._screenCorners[0].set(this._absLeft,this._absBottom,0),this._screenCorners[1].set(this._absRight,this._absBottom,0),this._screenCorners[2].set(this._absRight,this._absTop,0),this._screenCorners[3].set(this._absLeft,this._absTop,0);const e=this.screen.screen.screenSpace;for(let s=0;s<4;s++)this._screenTransform.transformPoint(this._screenCorners[s],this._screenCorners[s]),e&&this._screenCorners[s].mulScalar(this.screen.screen.scale),t&&this._screenCorners[s].add(t);return this._cornersDirty=!1,this._canvasCornersDirty=!0,this._worldCornersDirty=!0,this._screenCorners}get textWidth(){return this._text?this._text.width:0}get textHeight(){return this._text?this._text.height:0}set top(t){this._margin.w=t;const e=this.entity.getLocalPosition(),s=this._absBottom,i=this._localAnchor.w-t;this._setHeight(i-s),e.y=this._localAnchor.w-this._localAnchor.y-t-this._calculatedHeight*(1-this._pivot.y),this.entity.setLocalPosition(e)}get top(){return this._margin.w}set type(t){t!==this._type&&(this._type=t,this._image&&(this._image.destroy(),this._image=null),this._text&&(this._text.destroy(),this._text=null),t===Fa?this._image=new Do(this):t===Oa&&(this._text=new hl(this)))}get type(){return this._type}set useInput(t){this._useInput!==t&&(this._useInput=t,this.system.app.elementInput?t?this.enabled&&this.entity.enabled&&this.system.app.elementInput.addElement(this):this.system.app.elementInput.removeElement(this):this._useInput,this.fire("set:useInput",t))}get useInput(){return this._useInput}set fitMode(t){this._fitMode=t,this._calculateSize(!0,!0),this._image&&this._image.refreshMesh()}get fitMode(){return this._fitMode}set width(t){this._width=t,this._hasSplitAnchorsX||this._setCalculatedWidth(t,!0),this.fire("set:width",this._width)}get width(){return this._width}get worldCorners(){if(!this._worldCornersDirty)return this._worldCorners;if(this.screen){const t=this.screenCorners;if(!this.screen.screen.screenSpace){pl.copy(this.screen.screen._screenMatrix),pl.data[13]=-pl.data[13],pl.mul2(this.screen.getWorldTransform(),pl);for(let e=0;e<4;e++)pl.transformPoint(t[e],this._worldCorners[e])}}else{const t=this.entity.getLocalPosition();pl.setTranslate(-t.x,-t.y,-t.z),ml.setTRS(l.e.ZERO,this.entity.getLocalRotation(),this.entity.getLocalScale()),_l.setTranslate(t.x,t.y,t.z);const e=this.entity.parent?this.entity.parent:this.entity;gl.copy(e.getWorldTransform()),gl.mul(_l).mul(ml).mul(pl),ul.set(t.x-this.pivot.x*this.calculatedWidth,t.y-this.pivot.y*this.calculatedHeight,t.z),gl.transformPoint(ul,this._worldCorners[0]),ul.set(t.x+(1-this.pivot.x)*this.calculatedWidth,t.y-this.pivot.y*this.calculatedHeight,t.z),gl.transformPoint(ul,this._worldCorners[1]),ul.set(t.x+(1-this.pivot.x)*this.calculatedWidth,t.y+(1-this.pivot.y)*this.calculatedHeight,t.z),gl.transformPoint(ul,this._worldCorners[2]),ul.set(t.x-this.pivot.x*this.calculatedWidth,t.y+(1-this.pivot.y)*this.calculatedHeight,t.z),gl.transformPoint(ul,this._worldCorners[3])}return this._worldCornersDirty=!1,this._worldCorners}set fontSize(t){this._setValue("fontSize",t)}get fontSize(){return this._text?this._text.fontSize:null}set minFontSize(t){this._setValue("minFontSize",t)}get minFontSize(){return this._text?this._text.minFontSize:null}set maxFontSize(t){this._setValue("maxFontSize",t)}get maxFontSize(){return this._text?this._text.maxFontSize:null}set maxLines(t){this._setValue("maxLines",t)}get maxLines(){return this._text?this._text.maxLines:null}set autoFitWidth(t){this._setValue("autoFitWidth",t)}get autoFitWidth(){return this._text?this._text.autoFitWidth:null}set autoFitHeight(t){this._setValue("autoFitHeight",t)}get autoFitHeight(){return this._text?this._text.autoFitHeight:null}set color(t){this._setValue("color",t)}get color(){return this._text?this._text.color:this._image?this._image.color:null}set font(t){this._setValue("font",t)}get font(){return this._text?this._text.font:null}set fontAsset(t){this._setValue("fontAsset",t)}get fontAsset(){return this._text&&"number"==typeof this._text.fontAsset?this._text.fontAsset:null}set spacing(t){this._setValue("spacing",t)}get spacing(){return this._text?this._text.spacing:null}set lineHeight(t){this._setValue("lineHeight",t)}get lineHeight(){return this._text?this._text.lineHeight:null}set wrapLines(t){this._setValue("wrapLines",t)}get wrapLines(){return this._text?this._text.wrapLines:null}set lines(t){this._setValue("lines",t)}get lines(){return this._text?this._text.lines:null}set alignment(t){this._setValue("alignment",t)}get alignment(){return this._text?this._text.alignment:null}set autoWidth(t){this._setValue("autoWidth",t)}get autoWidth(){return this._text?this._text.autoWidth:null}set autoHeight(t){this._setValue("autoHeight",t)}get autoHeight(){return this._text?this._text.autoHeight:null}set rtlReorder(t){this._setValue("rtlReorder",t)}get rtlReorder(){return this._text?this._text.rtlReorder:null}set unicodeConverter(t){this._setValue("unicodeConverter",t)}get unicodeConverter(){return this._text?this._text.unicodeConverter:null}set text(t){this._setValue("text",t)}get text(){return this._text?this._text.text:null}set key(t){this._setValue("key",t)}get key(){return this._text?this._text.key:null}set texture(t){this._setValue("texture",t)}get texture(){return this._image?this._image.texture:null}set textureAsset(t){this._setValue("textureAsset",t)}get textureAsset(){return this._image?this._image.textureAsset:null}set material(t){this._setValue("material",t)}get material(){return this._image?this._image.material:null}set materialAsset(t){this._setValue("materialAsset",t)}get materialAsset(){return this._image?this._image.materialAsset:null}set sprite(t){this._setValue("sprite",t)}get sprite(){return this._image?this._image.sprite:null}set spriteAsset(t){this._setValue("spriteAsset",t)}get spriteAsset(){return this._image?this._image.spriteAsset:null}set spriteFrame(t){this._setValue("spriteFrame",t)}get spriteFrame(){return this._image?this._image.spriteFrame:null}set pixelsPerUnit(t){this._setValue("pixelsPerUnit",t)}get pixelsPerUnit(){return this._image?this._image.pixelsPerUnit:null}set opacity(t){this._setValue("opacity",t)}get opacity(){return this._text?this._text.opacity:this._image?this._image.opacity:null}set rect(t){this._setValue("rect",t)}get rect(){return this._image?this._image.rect:null}set mask(t){this._setValue("mask",t)}get mask(){return this._image?this._image.mask:null}set outlineColor(t){this._setValue("outlineColor",t)}get outlineColor(){return this._text?this._text.outlineColor:null}set outlineThickness(t){this._setValue("outlineThickness",t)}get outlineThickness(){return this._text?this._text.outlineThickness:null}set shadowColor(t){this._setValue("shadowColor",t)}get shadowColor(){return this._text?this._text.shadowColor:null}set shadowOffset(t){this._setValue("shadowOffset",t)}get shadowOffset(){return this._text?this._text.shadowOffset:null}set enableMarkup(t){this._setValue("enableMarkup",t)}get enableMarkup(){return this._text?this._text.enableMarkup:null}set rangeStart(t){this._setValue("rangeStart",t)}get rangeStart(){return this._text?this._text.rangeStart:null}set rangeEnd(t){this._setValue("rangeEnd",t)}get rangeEnd(){return this._text?this._text.rangeEnd:null}_setValue(t,e){this._text?(this._text[t]!==e&&this._dirtyBatch(),this._text[t]=e):this._image&&(this._image[t]!==e&&this._dirtyBatch(),this._image[t]=e)}_patch(){this.entity._sync=this._sync,this.entity.setPosition=this._setPosition,this.entity.setLocalPosition=this._setLocalPosition}_unpatch(){this.entity._sync=as.w.prototype._sync,this.entity.setPosition=as.w.prototype.setPosition,this.entity.setLocalPosition=as.w.prototype.setLocalPosition}_setPosition(t,e,s){this.element.screen?(t instanceof l.e?cl.copy(t):cl.set(t,e,s),this.getWorldTransform(),dl.copy(this.element._screenToWorld).invert(),dl.transformPoint(cl,this.localPosition),this._dirtyLocal||this._dirtifyLocal()):as.w.prototype.setPosition.call(this,t,e,s)}_setLocalPosition(t,e,s){t instanceof l.e?this.localPosition.copy(t):this.localPosition.set(t,e,s);const i=this.element,n=this.localPosition,r=i._pivot;i._margin.x=n.x-i._calculatedWidth*r.x,i._margin.z=i._localAnchor.z-i._localAnchor.x-i._calculatedWidth-i._margin.x,i._margin.y=n.y-i._calculatedHeight*r.y,i._margin.w=i._localAnchor.w-i._localAnchor.y-i._calculatedHeight-i._margin.y,this._dirtyLocal||this._dirtifyLocal()}_sync(){const t=this.element,e=t.screen;if(e){if(t._anchorDirty){let s=0,i=0,n=0,r=1;if(this._parent&&this._parent.element)s=this._parent.element.calculatedWidth,i=this._parent.element.calculatedHeight,n=this._parent.element.pivot.x,r=this._parent.element.pivot.y;else{const t=e.screen.resolution;s=t.x/e.screen.scale,i=t.y/e.screen.scale}t._anchorTransform.setTranslate(s*(t.anchor.x-n),-i*(r-t.anchor.y),0),t._anchorDirty=!1,t._calculateLocalAnchors()}t._sizeDirty&&t._calculateSize(!1,!1)}if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);const e=this.localPosition,s=t._pivot;t._margin.x=e.x-t._calculatedWidth*s.x,t._margin.z=t._localAnchor.z-t._localAnchor.x-t._calculatedWidth-t._margin.x,t._margin.y=e.y-t._calculatedHeight*s.y,t._margin.w=t._localAnchor.w-t._localAnchor.y-t._calculatedHeight-t._margin.y,this._dirtyLocal=!1}if(!e)return this._dirtyWorld&&(t._cornersDirty=!0,t._canvasCornersDirty=!0,t._worldCornersDirty=!0),void as.w.prototype._sync.call(this);if(this._dirtyWorld){if(null===this._parent)this.worldTransform.copy(this.localTransform);else if(this._parent.element?t._screenToWorld.mul2(this._parent.element._modelTransform,t._anchorTransform):t._screenToWorld.copy(t._anchorTransform),t._modelTransform.mul2(t._screenToWorld,this.localTransform),e){t._screenToWorld.mul2(e.screen._screenMatrix,t._screenToWorld),e.screen.screenSpace||t._screenToWorld.mul2(e.worldTransform,t._screenToWorld),this.worldTransform.mul2(t._screenToWorld,this.localTransform);const s=t._parentWorldTransform;s.setIdentity();const i=this._parent;i&&i.element&&i!==e&&(pl.setTRS(l.e.ZERO,i.getLocalRotation(),i.getLocalScale()),s.mul2(i.element._parentWorldTransform,pl));const n=ul;n.set(0,0,this.localPosition.z);const r=fl;r.set(t._absLeft+t._pivot.x*t.calculatedWidth,t._absBottom+t._pivot.y*t.calculatedHeight,0),pl.setTranslate(-r.x,-r.y,-r.z),ml.setTRS(n,this.getLocalRotation(),this.getLocalScale()),_l.setTranslate(r.x,r.y,r.z),t._screenTransform.mul2(t._parentWorldTransform,_l).mul(ml).mul(pl),t._cornersDirty=!0,t._canvasCornersDirty=!0,t._worldCornersDirty=!0}else this.worldTransform.copy(t._modelTransform);this._dirtyWorld=!1}}_onInsert(t){const e=this._parseUpToScreen();this.entity._dirtifyWorld(),this._updateScreen(e.screen),this._dirtifyMask()}_dirtifyMask(){let t=this.entity;for(;t;){const e=t.parent;if((null===e||e.screen)&&t.element){this.system._prerender&&this.system._prerender.length||(this.system._prerender=[],this.system.app.once("prerender",this._onPrerender,this));const e=this.system._prerender.indexOf(this.entity);e>=0&&this.system._prerender.splice(e,1);this.system._prerender.indexOf(t)<0&&this.system._prerender.push(t)}t=e}}_onPrerender(){for(let t=0;t<this.system._prerender.length;t++){const e=this.system._prerender[t];if(e.element){const t=1;e.element.syncMask(t)}}this.system._prerender.length=0}_bindScreen(t){t._bindElement(this)}_unbindScreen(t){t._unbindElement(this)}_updateScreen(t){this.screen&&this.screen!==t&&this._unbindScreen(this.screen.screen);const e=this.screen;this.screen=t,this.screen&&this._bindScreen(this.screen.screen),this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("set:screen",this.screen,e),this._anchorDirty=!0;const s=this.entity.children;for(let i=0,n=s.length;i<n;i++)s[i].element&&s[i].element._updateScreen(t);this.screen&&this.screen.screen.syncDrawOrder()}syncMask(t){const e=this._parseUpToScreen();this._updateMask(e.mask,t)}_setMaskedBy(t){const e=this._image||this._text;if(t){const s=t.element._image._maskRef;e?._setStencil(new Eo.n({ref:s,func:x.sTv})),this._maskedBy=t}else e?._setStencil(null),this._maskedBy=null}_updateMask(t,e){if(t){if(this._setMaskedBy(t),this.mask){const s=t.element._image._maskRef,i=new Eo.n({ref:s,func:x.sTv,zpass:x.G1V});this._image._setStencil(i),this._image._maskRef=e,e++,t=this.entity}const s=this.entity.children;for(let i=0,n=s.length;i<n;i++)s[i].element?._updateMask(t,e);this.mask&&e--}else{if(this._setMaskedBy(null),this.mask){const s=new Eo.n({ref:e,func:x.vpx,zpass:x.L4b});this._image._setStencil(s),this._image._maskRef=e,e++,t=this.entity}const s=this.entity.children;for(let i=0,n=s.length;i<n;i++)s[i].element?._updateMask(t,e);this.mask&&e--}}_parseUpToScreen(){const t={screen:null,mask:null};let e=this.entity._parent;for(;e&&!e.screen;)e.element&&e.element.mask&&(t.mask||(t.mask=e)),e=e.parent;return e&&e.screen&&(t.screen=e),t}_onScreenResize(t){this._anchorDirty=!0,this._cornersDirty=!0,this._worldCornersDirty=!0,this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY),this.fire("screen:set:resolution",t)}_onScreenSpaceChange(){this.fire("screen:set:screenspace",this.screen.screen.screenSpace)}_onScreenRemove(){this.screen&&(this.screen._destroying?this.screen=null:this._updateScreen(null))}_calculateLocalAnchors(){let t=1e3,e=1e3;const s=this.entity._parent;if(s&&s.element)t=s.element.calculatedWidth,e=s.element.calculatedHeight;else if(this.screen){const s=this.screen.screen.resolution,i=this.screen.screen.scale;t=s.x/i,e=s.y/i}this._localAnchor.set(this._anchor.x*t,this._anchor.y*e,this._anchor.z*t,this._anchor.w*e)}getOffsetPosition(t,e){const s=this.entity.getLocalPosition().clone();return s.x+=t,s.y+=e,this._screenToWorld.transformPoint(s,s),s}onLayersChanged(t,e){this.addModelToLayers(this._image?this._image._renderable.model:this._text._model),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)<0||(this._image?t.addMeshInstances(this._image._renderable.model.meshInstances):this._text&&t.addMeshInstances(this._text._model.meshInstances))}onLayerRemoved(t){this.layers.indexOf(t.id)<0||(this._image?t.removeMeshInstances(this._image._renderable.model.meshInstances):this._text&&t.removeMeshInstances(this._text._model.meshInstances))}onEnable(){const t=this.system.app.scene,e=t.layers;this._image&&this._image.onEnable(),this._text&&this._text.onEnable(),this._group&&this._group.onEnable(),this.useInput&&this.system.app.elementInput&&this.system.app.elementInput.addElement(this),this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this),e&&(this._evtLayerAdded=e.on("add",this.onLayerAdded,this),this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)),this._batchGroupId>=0&&this.system.app.batcher?.insert(Vs.ELEMENT,this.batchGroupId,this.entity),this.fire("enableelement")}onDisable(){const t=this.system.app.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,t&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this._image&&this._image.onDisable(),this._text&&this._text.onDisable(),this._group&&this._group.onDisable(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this._batchGroupId>=0&&this.system.app.batcher?.remove(Vs.ELEMENT,this.batchGroupId,this.entity),this.fire("disableelement")}onRemove(){this.entity.off("insert",this._onInsert,this),this._unpatch(),this._image&&this._image.destroy(),this._text&&this._text.destroy(),this.system.app.elementInput&&this.useInput&&this.system.app.elementInput.removeElement(this),this.screen&&this.screen.screen&&(this._unbindScreen(this.screen.screen),this.screen.screen.syncDrawOrder()),this.off()}_calculateSize(t,e){if(!this.entity._parent&&!this.screen)return;this._calculateLocalAnchors();const s=this._absRight-this._absLeft,i=this._absTop-this._absBottom;t?this._setWidth(s):this._setCalculatedWidth(s,!1),e?this._setHeight(i):this._setCalculatedHeight(i,!1);const n=this.entity.getLocalPosition();n.x=this._margin.x+this._calculatedWidth*this._pivot.x,n.y=this._margin.y+this._calculatedHeight*this._pivot.y,this.entity.setLocalPosition(n),this._sizeDirty=!1}_setWidth(t){this._width=t,this._setCalculatedWidth(t,!1),this.fire("set:width",this._width)}_setHeight(t){this._height=t,this._setCalculatedHeight(t,!1),this.fire("set:height",this._height)}_setCalculatedWidth(t,e){if(!(Math.abs(t-this._calculatedWidth)<=1e-4)){if(this._calculatedWidth=t,this.entity._dirtifyLocal(),e){const t=this.entity.getLocalPosition(),e=this._pivot;this._margin.x=t.x-this._calculatedWidth*e.x,this._margin.z=this._localAnchor.z-this._localAnchor.x-this._calculatedWidth-this._margin.x}this._flagChildrenAsDirty(),this.fire("set:calculatedWidth",this._calculatedWidth),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}}_setCalculatedHeight(t,e){if(!(Math.abs(t-this._calculatedHeight)<=1e-4)){if(this._calculatedHeight=t,this.entity._dirtifyLocal(),e){const t=this.entity.getLocalPosition(),e=this._pivot;this._margin.y=t.y-this._calculatedHeight*e.y,this._margin.w=this._localAnchor.w-this._localAnchor.y-this._calculatedHeight-this._margin.y}this._flagChildrenAsDirty(),this.fire("set:calculatedHeight",this._calculatedHeight),this.fire("resize",this._calculatedWidth,this._calculatedHeight)}}_flagChildrenAsDirty(){const t=this.entity._children;for(let e=0,s=t.length;e<s;e++)t[e].element&&(t[e].element._anchorDirty=!0,t[e].element._sizeDirty=!0)}addModelToLayers(t){this._addedModels.push(t);for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);s&&s.addMeshInstances(t.meshInstances)}}removeModelFromLayers(t){const e=this._addedModels.indexOf(t);e>=0&&this._addedModels.splice(e,1);for(let s=0;s<this.layers.length;s++){const e=this.system.app.scene.layers.getLayerById(this.layers[s]);e&&e.removeMeshInstances(t.meshInstances)}}getMaskOffset(){const t=this.system.app.frame;this._offsetReadAt!==t&&(this._maskOffset=.5,this._offsetReadAt=t);const e=this._maskOffset;return this._maskOffset-=.001,e}isVisibleForCamera(t){let e,s,i,n;if(this.maskedBy){const t=this.maskedBy.element.screenCorners;e=Math.min(Math.min(t[0].x,t[1].x),Math.min(t[2].x,t[3].x)),s=Math.max(Math.max(t[0].x,t[1].x),Math.max(t[2].x,t[3].x)),n=Math.min(Math.min(t[0].y,t[1].y),Math.min(t[2].y,t[3].y)),i=Math.max(Math.max(t[0].y,t[1].y),Math.max(t[2].y,t[3].y))}else{const r=this.system.app.graphicsDevice.width,a=this.system.app.graphicsDevice.height,o=t._rect.z*r,l=t._rect.w*a;e=t._rect.x*r,s=e+o,i=(1-t._rect.y)*a,n=i-l}const r=this.screenCorners,a=Math.min(Math.min(r[0].x,r[1].x),Math.min(r[2].x,r[3].x)),o=Math.max(Math.max(r[0].x,r[1].x),Math.max(r[2].x,r[3].x)),l=Math.min(Math.min(r[0].y,r[1].y),Math.min(r[2].y,r[3].y)),h=Math.max(Math.max(r[0].y,r[1].y),Math.max(r[2].y,r[3].y));return!(o<e||a>s||l>i||h<n)}_isScreenSpace(){return!(!this.screen||!this.screen.screen)&&this.screen.screen.screenSpace}_isScreenCulled(){return!(!this.screen||!this.screen.screen)&&this.screen.screen.cull}_dirtyBatch(){-1!==this.batchGroupId&&this.system.app.batcher?.markGroupDirty(this.batchGroupId)}}class Sl{constructor(){this.enabled=!0}}const yl=["enabled"];class xl extends Rr{constructor(t){super(t),this.id="element",this.ComponentType=vl,this.DataType=Sl,this.schema=yl,this._unicodeConverter=null,this._rtlReorder=null,this._defaultTexture=new Q.g(t.graphicsDevice,{width:1,height:1,format:x.Mb4,name:"element-system"});const e=this._defaultTexture.lock(),s=new Uint8Array(4);s[0]=255,s[1]=255,s[2]=255,s[3]=255,e.set(s),this._defaultTexture.unlock(),this.defaultImageMaterial=null,this.defaultImage9SlicedMaterial=null,this.defaultImage9TiledMaterial=null,this.defaultImageMaskMaterial=null,this.defaultImage9SlicedMaskMaterial=null,this.defaultImage9TiledMaskMaterial=null,this.defaultScreenSpaceImageMaterial=null,this.defaultScreenSpaceImage9SlicedMaterial=null,this.defaultScreenSpaceImage9TiledMaterial=null,this.defaultScreenSpaceImageMask9SlicedMaterial=null,this.defaultScreenSpaceImageMask9TiledMaterial=null,this.defaultScreenSpaceImageMaskMaterial=null,this._defaultTextMaterials={},this.defaultImageMaterials=[],this.on("add",this.onAddComponent,this),this.on("beforeremove",this.onRemoveComponent,this)}destroy(){super.destroy(),this._defaultTexture.destroy()}initializeComponentData(t,e,s){t._beingInitialized=!0,void 0!==e.anchor&&(e.anchor instanceof w.Z?t.anchor.copy(e.anchor):t.anchor.set(e.anchor[0],e.anchor[1],e.anchor[2],e.anchor[3])),void 0!==e.pivot&&(e.pivot instanceof Jt.Z?t.pivot.copy(e.pivot):t.pivot.set(e.pivot[0],e.pivot[1]));const i=Math.abs(t.anchor.x-t.anchor.z)>.001,n=Math.abs(t.anchor.y-t.anchor.w)>.001;let r,a=!1;void 0!==e.margin&&(e.margin instanceof w.Z?t.margin.copy(e.margin):t._margin.set(e.margin[0],e.margin[1],e.margin[2],e.margin[3]),a=!0),void 0!==e.left&&(t._margin.x=e.left,a=!0),void 0!==e.bottom&&(t._margin.y=e.bottom,a=!0),void 0!==e.right&&(t._margin.z=e.right,a=!0),void 0!==e.top&&(t._margin.w=e.top,a=!0),a&&(t.margin=t._margin);let o=!1;void 0===e.width||i?i&&(o=!0):t.width=e.width,void 0===e.height||n?n&&(o=!0):t.height=e.height,o&&(t.anchor=t.anchor),void 0!==e.enabled&&(t.enabled=e.enabled),void 0!==e.useInput&&(t.useInput=e.useInput),void 0!==e.fitMode&&(t.fitMode=e.fitMode),t.batchGroupId=void 0===e.batchGroupId||null===e.batchGroupId?-1:e.batchGroupId,e.layers&&Array.isArray(e.layers)&&(t.layers=e.layers.slice(0)),void 0!==e.type&&(t.type=e.type),t.type===Fa?(void 0!==e.rect&&(t.rect=e.rect),void 0!==e.color&&(r=e.color,r instanceof p.Q||(r=new p.Q(e.color[0],e.color[1],e.color[2])),t.color=r),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.textureAsset&&(t.textureAsset=e.textureAsset),e.texture&&(t.texture=e.texture),void 0!==e.spriteAsset&&(t.spriteAsset=e.spriteAsset),e.sprite&&(t.sprite=e.sprite),void 0!==e.spriteFrame&&(t.spriteFrame=e.spriteFrame),void 0!==e.pixelsPerUnit&&null!==e.pixelsPerUnit&&(t.pixelsPerUnit=e.pixelsPerUnit),void 0!==e.materialAsset&&(t.materialAsset=e.materialAsset),e.material&&(t.material=e.material),void 0!==e.mask&&(t.mask=e.mask)):t.type===Oa&&(void 0!==e.autoWidth&&(t.autoWidth=e.autoWidth),void 0!==e.autoHeight&&(t.autoHeight=e.autoHeight),void 0!==e.rtlReorder&&(t.rtlReorder=e.rtlReorder),void 0!==e.unicodeConverter&&(t.unicodeConverter=e.unicodeConverter),null!==e.text&&void 0!==e.text?t.text=e.text:null!==e.key&&void 0!==e.key&&(t.key=e.key),void 0!==e.color&&(r=e.color,r instanceof p.Q||(r=new p.Q(r[0],r[1],r[2])),t.color=r),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.spacing&&(t.spacing=e.spacing),void 0!==e.fontSize&&(t.fontSize=e.fontSize,e.lineHeight||(t.lineHeight=e.fontSize)),void 0!==e.lineHeight&&(t.lineHeight=e.lineHeight),void 0!==e.maxLines&&(t.maxLines=e.maxLines),void 0!==e.wrapLines&&(t.wrapLines=e.wrapLines),void 0!==e.minFontSize&&(t.minFontSize=e.minFontSize),void 0!==e.maxFontSize&&(t.maxFontSize=e.maxFontSize),e.autoFitWidth&&(t.autoFitWidth=e.autoFitWidth),e.autoFitHeight&&(t.autoFitHeight=e.autoFitHeight),void 0!==e.fontAsset&&(t.fontAsset=e.fontAsset),void 0!==e.font&&(t.font=e.font),void 0!==e.alignment&&(t.alignment=e.alignment),void 0!==e.outlineColor&&(t.outlineColor=e.outlineColor),void 0!==e.outlineThickness&&(t.outlineThickness=e.outlineThickness),void 0!==e.shadowColor&&(t.shadowColor=e.shadowColor),void 0!==e.shadowOffset&&(t.shadowOffset=e.shadowOffset),void 0!==e.enableMarkup&&(t.enableMarkup=e.enableMarkup));const l=t._parseUpToScreen();l.screen&&t._updateScreen(l.screen),super.initializeComponentData(t,e,s),t._beingInitialized=!1,t.type===Fa&&t._image._meshDirty&&t._image._updateMesh(t._image.mesh)}onAddComponent(t,e){t.fire("element:add")}onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.element,i={enabled:s.enabled,width:s.width,height:s.height,anchor:s.anchor.clone(),pivot:s.pivot.clone(),margin:s.margin.clone(),alignment:s.alignment&&s.alignment.clone()||s.alignment,autoWidth:s.autoWidth,autoHeight:s.autoHeight,type:s.type,rect:s.rect&&s.rect.clone()||s.rect,rtlReorder:s.rtlReorder,unicodeConverter:s.unicodeConverter,materialAsset:s.materialAsset,material:s.material,color:s.color&&s.color.clone()||s.color,opacity:s.opacity,textureAsset:s.textureAsset,texture:s.texture,spriteAsset:s.spriteAsset,sprite:s.sprite,spriteFrame:s.spriteFrame,pixelsPerUnit:s.pixelsPerUnit,spacing:s.spacing,lineHeight:s.lineHeight,wrapLines:s.wrapLines,layers:s.layers,fontSize:s.fontSize,minFontSize:s.minFontSize,maxFontSize:s.maxFontSize,autoFitWidth:s.autoFitWidth,autoFitHeight:s.autoFitHeight,maxLines:s.maxLines,fontAsset:s.fontAsset,font:s.font,useInput:s.useInput,fitMode:s.fitMode,batchGroupId:s.batchGroupId,mask:s.mask,outlineColor:s.outlineColor&&s.outlineColor.clone()||s.outlineColor,outlineThickness:s.outlineThickness,shadowColor:s.shadowColor&&s.shadowColor.clone()||s.shadowColor,shadowOffset:s.shadowOffset&&s.shadowOffset.clone()||s.shadowOffset,enableMarkup:s.enableMarkup};return void 0!==s.key&&null!==s.key?i.key=s.key:i.text=s.text,this.addComponent(e,i)}getTextElementMaterial(t,e,s){const i=(t&&1)|(e&&2)|(s&&4);let n=this._defaultTextMaterials[i];if(n)return n;let r="TextMaterial";return n=new Xe,e?(n.msdfMap=this._defaultTexture,n.msdfTextAttribute=s,n.emissive.set(1,1,1)):(r=`Bitmap${r}`,n.emissive.set(1,1,1),n.emissiveMap=this._defaultTexture,n.opacityMap=this._defaultTexture,n.opacityMapChannel="a"),t&&(r=`ScreenSpace${r}`,n.depthTest=!1),n.name=`default${r}`,n.useLighting=!1,n.useTonemap=!1,n.useFog=!1,n.useSkybox=!1,n.diffuse.set(0,0,0),n.opacity=.5,n.blendType=F.bYZ,n.depthWrite=!1,n.emissiveVertexColor=!0,n.update(),this._defaultTextMaterials[i]=n,n}_createBaseImageMaterial(){const t=new Xe;return t.diffuse.set(0,0,0),t.emissive.set(1,1,1),t.emissiveMap=this._defaultTexture,t.opacityMap=this._defaultTexture,t.opacityMapChannel="a",t.useLighting=!1,t.useTonemap=!1,t.useFog=!1,t.useSkybox=!1,t.blendType=F.bYZ,t.depthWrite=!1,t}getImageElementMaterial(t,e,s,i){return t?e?s?(this.defaultScreenSpaceImageMask9SlicedMaterial||(this.defaultScreenSpaceImageMask9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMask9SlicedMaterial.name="defaultScreenSpaceImageMask9SlicedMaterial",this.defaultScreenSpaceImageMask9SlicedMaterial.nineSlicedMode=F.FCf,this.defaultScreenSpaceImageMask9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9SlicedMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9SlicedMaterial)),this.defaultScreenSpaceImageMask9SlicedMaterial):i?(this.defaultScreenSpaceImageMask9TiledMaterial||(this.defaultScreenSpaceImageMask9TiledMaterial=this.defaultScreenSpaceImage9TiledMaterial.clone(),this.defaultScreenSpaceImageMask9TiledMaterial.name="defaultScreenSpaceImageMask9TiledMaterial",this.defaultScreenSpaceImageMask9TiledMaterial.nineSlicedMode=F.jZy,this.defaultScreenSpaceImageMask9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaTest=1,this.defaultScreenSpaceImageMask9TiledMaterial.redWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.greenWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.blueWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMask9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9TiledMaterial)),this.defaultScreenSpaceImageMask9TiledMaterial):(this.defaultScreenSpaceImageMaskMaterial||(this.defaultScreenSpaceImageMaskMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaskMaterial.name="defaultScreenSpaceImageMaskMaterial",this.defaultScreenSpaceImageMaskMaterial.depthTest=!1,this.defaultScreenSpaceImageMaskMaterial.alphaTest=1,this.defaultScreenSpaceImageMaskMaterial.redWrite=!1,this.defaultScreenSpaceImageMaskMaterial.greenWrite=!1,this.defaultScreenSpaceImageMaskMaterial.blueWrite=!1,this.defaultScreenSpaceImageMaskMaterial.alphaWrite=!1,this.defaultScreenSpaceImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaskMaterial)),this.defaultScreenSpaceImageMaskMaterial):s?(this.defaultScreenSpaceImage9SlicedMaterial||(this.defaultScreenSpaceImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9SlicedMaterial.name="defaultScreenSpaceImage9SlicedMaterial",this.defaultScreenSpaceImage9SlicedMaterial.nineSlicedMode=F.FCf,this.defaultScreenSpaceImage9SlicedMaterial.depthTest=!1,this.defaultScreenSpaceImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9SlicedMaterial)),this.defaultScreenSpaceImage9SlicedMaterial):i?(this.defaultScreenSpaceImage9TiledMaterial||(this.defaultScreenSpaceImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImage9TiledMaterial.name="defaultScreenSpaceImage9TiledMaterial",this.defaultScreenSpaceImage9TiledMaterial.nineSlicedMode=F.jZy,this.defaultScreenSpaceImage9TiledMaterial.depthTest=!1,this.defaultScreenSpaceImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImage9TiledMaterial)),this.defaultScreenSpaceImage9TiledMaterial):(this.defaultScreenSpaceImageMaterial||(this.defaultScreenSpaceImageMaterial=this._createBaseImageMaterial(),this.defaultScreenSpaceImageMaterial.name="defaultScreenSpaceImageMaterial",this.defaultScreenSpaceImageMaterial.depthTest=!1,this.defaultScreenSpaceImageMaterial.update(),this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaterial)),this.defaultScreenSpaceImageMaterial):e?s?(this.defaultImage9SlicedMaskMaterial||(this.defaultImage9SlicedMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaskMaterial.name="defaultImage9SlicedMaskMaterial",this.defaultImage9SlicedMaskMaterial.nineSlicedMode=F.FCf,this.defaultImage9SlicedMaskMaterial.alphaTest=1,this.defaultImage9SlicedMaskMaterial.redWrite=!1,this.defaultImage9SlicedMaskMaterial.greenWrite=!1,this.defaultImage9SlicedMaskMaterial.blueWrite=!1,this.defaultImage9SlicedMaskMaterial.alphaWrite=!1,this.defaultImage9SlicedMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaskMaterial)),this.defaultImage9SlicedMaskMaterial):i?(this.defaultImage9TiledMaskMaterial||(this.defaultImage9TiledMaskMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaskMaterial.name="defaultImage9TiledMaskMaterial",this.defaultImage9TiledMaskMaterial.nineSlicedMode=F.jZy,this.defaultImage9TiledMaskMaterial.alphaTest=1,this.defaultImage9TiledMaskMaterial.redWrite=!1,this.defaultImage9TiledMaskMaterial.greenWrite=!1,this.defaultImage9TiledMaskMaterial.blueWrite=!1,this.defaultImage9TiledMaskMaterial.alphaWrite=!1,this.defaultImage9TiledMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaskMaterial)),this.defaultImage9TiledMaskMaterial):(this.defaultImageMaskMaterial||(this.defaultImageMaskMaterial=this._createBaseImageMaterial(),this.defaultImageMaskMaterial.name="defaultImageMaskMaterial",this.defaultImageMaskMaterial.alphaTest=1,this.defaultImageMaskMaterial.redWrite=!1,this.defaultImageMaskMaterial.greenWrite=!1,this.defaultImageMaskMaterial.blueWrite=!1,this.defaultImageMaskMaterial.alphaWrite=!1,this.defaultImageMaskMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaskMaterial)),this.defaultImageMaskMaterial):s?(this.defaultImage9SlicedMaterial||(this.defaultImage9SlicedMaterial=this._createBaseImageMaterial(),this.defaultImage9SlicedMaterial.name="defaultImage9SlicedMaterial",this.defaultImage9SlicedMaterial.nineSlicedMode=F.FCf,this.defaultImage9SlicedMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9SlicedMaterial)),this.defaultImage9SlicedMaterial):i?(this.defaultImage9TiledMaterial||(this.defaultImage9TiledMaterial=this._createBaseImageMaterial(),this.defaultImage9TiledMaterial.name="defaultImage9TiledMaterial",this.defaultImage9TiledMaterial.nineSlicedMode=F.jZy,this.defaultImage9TiledMaterial.update(),this.defaultImageMaterials.push(this.defaultImage9TiledMaterial)),this.defaultImage9TiledMaterial):(this.defaultImageMaterial||(this.defaultImageMaterial=this._createBaseImageMaterial(),this.defaultImageMaterial.name="defaultImageMaterial",this.defaultImageMaterial.update(),this.defaultImageMaterials.push(this.defaultImageMaterial)),this.defaultImageMaterial)}registerUnicodeConverter(t){this._unicodeConverter=t}registerRtlReorder(t){this._rtlReorder=t}getUnicodeConverter(){return this._unicodeConverter}getRtlReorder(){return this._rtlReorder}}const Tl="free",wl="limited",bl="locked",El=["angularDampingX","angularDampingY","angularDampingZ","angularEquilibriumX","angularEquilibriumY","angularEquilibriumZ","angularLimitsX","angularLimitsY","angularLimitsZ","angularMotionX","angularMotionY","angularMotionZ","angularSpringX","angularSpringY","angularSpringZ","angularStiffnessX","angularStiffnessY","angularStiffnessZ","breakForce","enableCollision","enabled","entityA","entityB","linearDampingX","linearDampingY","linearDampingZ","linearEquilibriumX","linearEquilibriumY","linearEquilibriumZ","linearLimitsX","linearLimitsY","linearLimitsZ","linearMotionX","linearMotionY","linearMotionZ","linearSpringX","linearSpringY","linearSpringZ","linearStiffnessX","linearStiffnessY","linearStiffnessZ"];class Al extends Ir{constructor(t,e){super(t,e),this._constraint=null,this._entityA=null,this._entityB=null,this._breakForce=34e37,this._enableCollision=!0,this._linearMotionX=bl,this._linearLimitsX=new Jt.Z(0,0),this._linearSpringX=!1,this._linearStiffnessX=0,this._linearDampingX=1,this._linearEquilibriumX=0,this._linearMotionY=bl,this._linearLimitsY=new Jt.Z(0,0),this._linearSpringY=!1,this._linearStiffnessY=0,this._linearDampingY=1,this._linearEquilibriumY=0,this._linearMotionZ=bl,this._linearLimitsZ=new Jt.Z(0,0),this._linearSpringZ=!1,this._linearStiffnessZ=0,this._linearDampingZ=1,this._linearEquilibriumZ=0,this._angularMotionX=bl,this._angularLimitsX=new Jt.Z(0,0),this._angularSpringX=!1,this._angularStiffnessX=0,this._angularDampingX=1,this._angularEquilibriumX=0,this._angularMotionY=bl,this._angularLimitsY=new Jt.Z(0,0),this._angularSpringY=!1,this._angularStiffnessY=0,this._angularDampingY=1,this._angularEquilibriumY=0,this._angularMotionZ=bl,this._angularLimitsZ=new Jt.Z(0,0),this._angularSpringZ=!1,this._angularEquilibriumZ=0,this._angularDampingZ=1,this._angularStiffnessZ=0,this.on("set_enabled",this._onSetEnabled,this)}set entityA(t){this._destroyConstraint(),this._entityA=t,this._createConstraint()}get entityA(){return this._entityA}set entityB(t){this._destroyConstraint(),this._entityB=t,this._createConstraint()}get entityB(){return this._entityB}set breakForce(t){this._constraint&&this._breakForce!==t&&(this._constraint.setBreakingImpulseThreshold(t),this._breakForce=t)}get breakForce(){return this._breakForce}set enableCollision(t){this._destroyConstraint(),this._enableCollision=t,this._createConstraint()}get enableCollision(){return this._enableCollision}set angularLimitsX(t){this._angularLimitsX.equals(t)||(this._angularLimitsX.copy(t),this._updateAngularLimits())}get angularLimitsX(){return this._angularLimitsX}set angularMotionX(t){this._angularMotionX!==t&&(this._angularMotionX=t,this._updateAngularLimits())}get angularMotionX(){return this._angularMotionX}set angularLimitsY(t){this._angularLimitsY.equals(t)||(this._angularLimitsY.copy(t),this._updateAngularLimits())}get angularLimitsY(){return this._angularLimitsY}set angularMotionY(t){this._angularMotionY!==t&&(this._angularMotionY=t,this._updateAngularLimits())}get angularMotionY(){return this._angularMotionY}set angularLimitsZ(t){this._angularLimitsZ.equals(t)||(this._angularLimitsZ.copy(t),this._updateAngularLimits())}get angularLimitsZ(){return this._angularLimitsZ}set angularMotionZ(t){this._angularMotionZ!==t&&(this._angularMotionZ=t,this._updateAngularLimits())}get angularMotionZ(){return this._angularMotionZ}set linearLimitsX(t){this._linearLimitsX.equals(t)||(this._linearLimitsX.copy(t),this._updateLinearLimits())}get linearLimitsX(){return this._linearLimitsX}set linearMotionX(t){this._linearMotionX!==t&&(this._linearMotionX=t,this._updateLinearLimits())}get linearMotionX(){return this._linearMotionX}set linearLimitsY(t){this._linearLimitsY.equals(t)||(this._linearLimitsY.copy(t),this._updateLinearLimits())}get linearLimitsY(){return this._linearLimitsY}set linearMotionY(t){this._linearMotionY!==t&&(this._linearMotionY=t,this._updateLinearLimits())}get linearMotionY(){return this._linearMotionY}set linearLimitsZ(t){this._linearLimitsZ.equals(t)||(this._linearLimitsZ.copy(t),this._updateLinearLimits())}get linearLimitsZ(){return this._linearLimitsZ}set linearMotionZ(t){this._linearMotionZ!==t&&(this._linearMotionZ=t,this._updateLinearLimits())}get linearMotionZ(){return this._linearMotionZ}_convertTransform(t,e){const s=t.getTranslation(),i=new St.k;i.setFromMat4(t);const n=new Ammo.btVector3(s.x,s.y,s.z),r=new Ammo.btQuaternion(i.x,i.y,i.z,i.w);e.setOrigin(n),e.setRotation(r),Ammo.destroy(n),Ammo.destroy(r)}_updateAngularLimits(){const t=this._constraint;if(t){let e,s,i,n,r,o;this._angularMotionX===wl?(e=this._angularLimitsX.x*a.D.DEG_TO_RAD,n=this._angularLimitsX.y*a.D.DEG_TO_RAD):this._angularMotionX===Tl?(e=1,n=0):e=n=0,this._angularMotionY===wl?(s=this._angularLimitsY.x*a.D.DEG_TO_RAD,r=this._angularLimitsY.y*a.D.DEG_TO_RAD):this._angularMotionY===Tl?(s=1,r=0):s=r=0,this._angularMotionZ===wl?(i=this._angularLimitsZ.x*a.D.DEG_TO_RAD,o=this._angularLimitsZ.y*a.D.DEG_TO_RAD):this._angularMotionZ===Tl?(i=1,o=0):i=o=0;const l=new Ammo.btVector3(e,s,i);t.setAngularLowerLimit(l),l.setValue(n,r,o),t.setAngularUpperLimit(l),Ammo.destroy(l)}}_updateLinearLimits(){const t=this._constraint;if(t){let e,s,i,n,r,a;this._linearMotionX===wl?(e=this._linearLimitsX.x,n=this._linearLimitsX.y):this._linearMotionX===Tl?(e=1,n=0):e=n=0,this._linearMotionY===wl?(s=this._linearLimitsY.x,r=this._linearLimitsY.y):this._linearMotionY===Tl?(s=1,r=0):s=r=0,this._linearMotionZ===wl?(i=this._linearLimitsZ.x,a=this._linearLimitsZ.y):this._linearMotionZ===Tl?(i=1,a=0):i=a=0;const o=new Ammo.btVector3(e,s,i);t.setLinearLowerLimit(o),o.setValue(n,r,a),t.setLinearUpperLimit(o),Ammo.destroy(o)}}_createConstraint(){if(this._entityA&&this._entityA.rigidbody){this._destroyConstraint();const t=new o.$,e=this._entityA.rigidbody.body;e.activate();const s=this.entity.getWorldTransform(),i=this._entityA.getWorldTransform().clone().invert();t.mul2(i,s);const n=new Ammo.btTransform;if(this._convertTransform(t,n),this._entityB&&this._entityB.rigidbody){const i=this._entityB.rigidbody.body;i.activate();const r=this._entityB.getWorldTransform().clone().invert();t.mul2(r,s);const a=new Ammo.btTransform;this._convertTransform(t,a),this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,i,n,a,!this._enableCollision),Ammo.destroy(a)}else this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,n,!this._enableCollision);Ammo.destroy(n);const r=["X","Y","Z","X","Y","Z"];for(let a=0;a<6;a++){const t=a<3?"_linear":"_angular";this._constraint.enableSpring(a,this[`${t}Spring${r[a]}`]),this._constraint.setDamping(a,this[`${t}Damping${r[a]}`]),this._constraint.setEquilibriumPoint(a,this[`${t}Equilibrium${r[a]}`]),this._constraint.setStiffness(a,this[`${t}Stiffness${r[a]}`])}this._constraint.setBreakingImpulseThreshold(this._breakForce),this._updateLinearLimits(),this._updateAngularLimits();this.system.app.systems.rigidbody.dynamicsWorld.addConstraint(this._constraint,!this._enableCollision)}}_destroyConstraint(){if(this._constraint){this.system.app.systems.rigidbody.dynamicsWorld.removeConstraint(this._constraint),Ammo.destroy(this._constraint),this._constraint=null}}initFromData(t){for(const e of El)t.hasOwnProperty(e)&&(t[e]instanceof Jt.Z?this[`_${e}`].copy(t[e]):this[`_${e}`]=t[e]);this._createConstraint()}onEnable(){this._createConstraint()}onDisable(){this._destroyConstraint()}_onSetEnabled(t,e,s){}_onBeforeRemove(){this.fire("remove")}}const Cl={Damping:"setDamping",Equilibrium:"setEquilibriumPoint",Spring:"enableSpring",Stiffness:"setStiffness"};["linear","angular"].forEach(t=>{["Damping","Equilibrium","Spring","Stiffness"].forEach(e=>{["X","Y","Z"].forEach(s=>{const i=t+e+s,n=`_${i}`;let r="linear"===t?0:3;"Y"===s&&(r+=1),"Z"===s&&(r+=2),Object.defineProperty(Al.prototype,i,{get:function(){return this[n]},set:function(t){this[n]!==t&&(this[n]=t,this._constraint[Cl[e]](r,t))}})})})});class Pl{constructor(){this.enabled=!0}}const Dl=["enabled"];class Ll extends Rr{constructor(t){super(t),this.id="joint",this.app=t,this.ComponentType=Al,this.DataType=Pl,this.schema=Dl}initializeComponentData(t,e,s){t.initFromData(e),super.initializeComponentData(t,e,Dl)}}Ir._buildAccessors(Al.prototype,Dl);class Ml extends Ir{set minWidth(t){t!==this._minWidth&&(this._minWidth=t,this.fire("resize"))}get minWidth(){return this._minWidth}set minHeight(t){t!==this._minHeight&&(this._minHeight=t,this.fire("resize"))}get minHeight(){return this._minHeight}set maxWidth(t){t!==this._maxWidth&&(this._maxWidth=t,this.fire("resize"))}get maxWidth(){return this._maxWidth}set maxHeight(t){t!==this._maxHeight&&(this._maxHeight=t,this.fire("resize"))}get maxHeight(){return this._maxHeight}set fitWidthProportion(t){t!==this._fitWidthProportion&&(this._fitWidthProportion=t,this.fire("resize"))}get fitWidthProportion(){return this._fitWidthProportion}set fitHeightProportion(t){t!==this._fitHeightProportion&&(this._fitHeightProportion=t,this.fire("resize"))}get fitHeightProportion(){return this._fitHeightProportion}set excludeFromLayout(t){t!==this._excludeFromLayout&&(this._excludeFromLayout=t,this.fire("resize"))}get excludeFromLayout(){return this._excludeFromLayout}constructor(...t){super(...t),this._minWidth=0,this._minHeight=0,this._maxWidth=null,this._maxHeight=null,this._fitWidthProportion=0,this._fitHeightProportion=0,this._excludeFromLayout=!1}}class Il{constructor(){this.enabled=!0}}const Rl=["enabled"];class Fl extends Rr{constructor(t){super(t),this.id="layoutchild",this.ComponentType=Ml,this.DataType=Il,this.schema=Rl}initializeComponentData(t,e,s){void 0!==e.enabled&&(t.enabled=e.enabled),void 0!==e.minWidth&&(t.minWidth=e.minWidth),void 0!==e.minHeight&&(t.minHeight=e.minHeight),void 0!==e.maxWidth&&(t.maxWidth=e.maxWidth),void 0!==e.maxHeight&&(t.maxHeight=e.maxHeight),void 0!==e.fitWidthProportion&&(t.fitWidthProportion=e.fitWidthProportion),void 0!==e.fitHeightProportion&&(t.fitHeightProportion=e.fitHeightProportion),void 0!==e.excludeFromLayout&&(t.excludeFromLayout=e.excludeFromLayout),super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutchild;return this.addComponent(e,{enabled:s.enabled,minWidth:s.minWidth,minHeight:s.minHeight,maxWidth:s.maxWidth,maxHeight:s.maxHeight,fitWidthProportion:s.fitWidthProportion,fitHeightProportion:s.fitHeightProportion,excludeFromLayout:s.excludeFromLayout})}}Ir._buildAccessors(Ml.prototype,Rl);const Ol={};Ol[F.SzJ]={axis:"x",size:"width",calculatedSize:"calculatedWidth",minSize:"minWidth",maxSize:"maxWidth",fitting:"widthFitting",fittingProportion:"fitWidthProportion"},Ol[F.Yns]={axis:"y",size:"height",calculatedSize:"calculatedHeight",minSize:"minHeight",maxSize:"maxHeight",fitting:"heightFitting",fittingProportion:"fitHeightProportion"};const Nl={};Nl[F.SzJ]=F.Yns,Nl[F.Yns]=F.SzJ;const kl={minWidth:0,minHeight:0,maxWidth:Number.POSITIVE_INFINITY,maxHeight:Number.POSITIVE_INFINITY,width:null,height:null,fitWidthProportion:0,fitHeightProportion:0},Bl="NONE",Ul="APPLY_STRETCHING",zl="APPLY_SHRINKING",Vl=new Jt.Z;function Gl(t){let e;const s=Ol[t],i=Ol[Nl[t]];function n(t,e){return-e[s.size]*t.pivot[s.axis]}function r(t,e){return-e[i.size]*t.pivot[i.axis]}function a(t,e){return e[s.size]*(1-t.pivot[s.axis])}function o(t){const e=t.entity.layoutchild;return!e||!e.enabled||!e.excludeFromLayout}function l(t,e,s){switch(t){case 0:return Bl;case 1:return e<s?Ul:Bl;case 2:return e>=s?zl:Bl;case 3:return e<s?Ul:zl;default:throw new Error(`Unrecognized fitting mode: ${t}`)}}function h(t,s){return _(t,s.size)+(t.length-1)*e.spacing[s.axis]}function c(t,e,s){const i=v(t,s.maxSize),n=g(t,s.fittingProportion),r=x(n,i);let a=Vl[s.axis]-e;for(let o=0;o<t.length;++o){const e=i[o],l=u(e,a,n,r),h=t[e][s.size]+l,c=t[e][s.maxSize],d=Math.min(h,c);t[e][s.size]=d;a-=l-Math.max(h-d,0)}}function d(t,e,s){const i=v(t,s.minSize,!0),n=function(t){if(1===t.length)return[1];const e=[],s=t.length;for(let i=0;i<s;++i)e.push((1-t[i])/(s-1));return e}(g(t,s.fittingProportion)),r=x(n,i);let a=e-Vl[s.axis];for(let o=0;o<t.length;++o){const e=i[o],l=u(e,a,n,r),h=t[e][s.size]-l,c=t[e][s.minSize],d=Math.max(h,c);t[e][s.size]=d;a-=l-Math.max(d-h,0)}}function u(t,e,s,i){const n=s[t],r=i[t];return Math.abs(n)<1e-5&&Math.abs(r)<1e-5?e:e*n/r}function f(t){const e=[];for(let s=0;s<t.length;++s){const i=t[s],n=Math.max(p(i,"minWidth"),0),r=Math.max(p(i,"minHeight"),0),a=Math.max(p(i,"maxWidth"),n),o=Math.max(p(i,"maxHeight"),r),l=m(p(i,"width"),n,a),h=m(p(i,"height"),r,o),c=p(i,"fitWidthProportion"),d=p(i,"fitHeightProportion");e.push({minWidth:n,minHeight:r,maxWidth:a,maxHeight:o,width:l,height:h,fitWidthProportion:c,fitHeightProportion:d})}return e}function p(t,e){const s=t.entity.layoutchild;return s&&s.enabled&&void 0!==s[e]&&null!==s[e]?s[e]:void 0!==t[e]?t[e]:kl[e]}function m(t,e,s){return Math.min(Math.max(t,e),s)}function _(t,e){return t.reduce((t,s)=>t+s[e],0)}function g(t,e){const s=_(t,e),i=[],n=t.length;if(0===s)for(let r=0;r<n;++r)i.push(1/n);else for(let r=0;r<n;++r)i.push(t[r][e]/s);return i}function v(t,e,s){return t.forEach(S),t.slice().sort((t,i)=>s?i[e]-t[e]:t[e]-i[e]).map(y)}function S(t,e){t.index=e}function y(t){return t.index}function x(t,e){const s=[];s[e[t.length-1]]=t[e[t.length-1]];for(let i=t.length-2;i>=0;--i)s[e[i]]=s[e[i+1]]+t[e[i]];return s}return function(t,u){t=t.filter(o),e=u,Vl.x=e.containerSize.x-e.padding.x-e.padding.z,Vl.y=e.containerSize.y-e.padding.y-e.padding.w,function(t){for(let e=0;e<t.length;++e){const s=t[e],i=s.anchor;0===i.x&&0===i.y&&0===i.z&&0===i.w||(s.anchor=w.Z.ZERO)}}(t);const p=function(t){const s=e.orientation===F.SzJ&&e.reverseX||e.orientation===F.Yns&&e.reverseY,i=e.orientation===F.SzJ&&e.reverseY||e.orientation===F.Yns&&e.reverseX;if(s)for(let e=0;e<t.length;++e)s&&t[e].reverse();i&&t.reverse();return t}(function(t){if(!e.wrap)return[t];const i=[[]],n=f(t);let r=0;const a=2===e[s.fitting];for(let o=0;o<t.length;++o){i[i.length-1].length>0&&(r+=e.spacing[s.axis]);const l=n[o][s.size];r+=l,!a&&r>Vl[s.axis]&&0!==i[i.length-1].length&&(r=l,i.push([])),i[i.length-1].push(t[o]),a&&r>Vl[s.axis]&&o!==t.length-1&&(r=0,i.push([]))}return i}(t)),m=function(t,s){const n=[],r=[];for(let e=0;e<t.length;++e){const a=t[e];a.largestElement=null,a.largestSize={width:Number.NEGATIVE_INFINITY,height:Number.NEGATIVE_INFINITY};for(let t=0;t<a.length;++t){const n=s[e][t];n[i.size]>a.largestSize[i.size]&&(a.largestElement=a[t],a.largestSize=n)}n.push(a.largestElement),r.push(a.largestSize)}const a=h(r,i),o=l(e[i.fitting],a,Vl[i.axis]);o===Ul?c(r,a,i):o===zl&&d(r,a,i);for(let h=0;h<t.length;++h){const n=t[h];for(let r=0;r<n.length;++r){const a=s[h][r],o=a[i.size],c=1===t.length?Vl[i.axis]:n.largestSize[i.size],d=l(e[i.fitting],o,c);d===Ul?a[i.size]=Math.min(c,a[i.maxSize]):d===zl&&(a[i.size]=Math.max(c,a[i.minSize]))}}return s}(p,function(t){const i=[];for(let n=0;n<t.length;++n){const r=f(t[n]),a=h(r,s),o=l(e[s.fitting],a,Vl[s.axis]);o===Ul?c(r,a,s):o===zl&&d(r,a,s),i.push(r)}return i}(p)),_=function(t,o){const l={};l[s.axis]=0,l[i.axis]=0,t[s.size]=Number.NEGATIVE_INFINITY;const h=[];for(let c=0;c<t.length;++c){const d=t[c];if(0===d.length){h.push([]);continue}const u=[],f=o[c];for(let t=0;t<d.length;++t){const o=d[t],h=f[t];l[i.axis]-=r(o,h),l[s.axis]-=n(o,h),u[t]={},u[t][s.axis]=l[s.axis],u[t][i.axis]=l[i.axis],l[i.axis]+=r(o,h),l[s.axis]+=a(o,h)+e.spacing[s.axis]}d[s.size]=l[s.axis]-e.spacing[s.axis],d[i.size]=d.largestSize[i.size],t[s.size]=Math.max(t[s.size],d[s.size]),l[s.axis]=0,l[i.axis]+=d[i.size]+e.spacing[i.axis],h.push(u)}return t[i.size]=l[i.axis]-e.spacing[i.axis],h}(p,m);return function(t,n,r){const a=e.alignment[s.axis],o=e.alignment[i.axis],l=e.padding[s.axis],h=e.padding[i.axis];for(let c=0;c<t.length;++c){const d=t[c],u=n[c],f=r[c],p=(Vl[s.axis]-d[s.size])*a+l,m=(Vl[i.axis]-t[i.size])*o+h;for(let t=0;t<d.length;++t){const n=(d[i.size]-u[t][i.size])*e.alignment[i.axis];f[t][s.axis]+=p,f[t][i.axis]+=m+n}}}(p,m,_),function(t,n,r){for(let a=0;a<t.length;++a){const o=t[a],l=n[a],h=r[a];for(let t=0;t<o.length;++t){const n=o[t];n[s.calculatedSize]=l[t][s.size],n[i.calculatedSize]=l[t][i.size],e.orientation===F.SzJ?n.entity.setLocalPosition(h[t][s.axis],h[t][i.axis],n.entity.getLocalPosition().z):n.entity.setLocalPosition(h[t][i.axis],h[t][s.axis],n.entity.getLocalPosition().z)}}}(p,m,_),function(t){const s=t.width,i=t.height,n=(Vl.x-s)*e.alignment.x+e.padding.x,r=(Vl.y-i)*e.alignment.y+e.padding.y;return{bounds:new w.Z(n,r,s,i)}}(p)}}const Hl={};Hl[F.SzJ]=Gl(F.SzJ),Hl[F.Yns]=Gl(F.Yns);class Wl{calculateLayout(t,e){const s=Hl[e.orientation];if(s)return s(t,e);throw new Error(`Unrecognized orientation value: ${e.orientation}`)}}function Xl(t){return t.element}function $l(t){return t.enabled&&t.element&&t.element.enabled}class ql extends Ir{constructor(t,e){super(t,e),this._orientation=F.SzJ,this._reverseX=!1,this._reverseY=!0,this._alignment=new Jt.Z(0,1),this._padding=new w.Z,this._spacing=new Jt.Z,this._widthFitting=0,this._heightFitting=0,this._wrap=!1,this._layoutCalculator=new Wl,this._listenForReflowEvents(this.entity,"on"),this.entity.children.forEach(t=>{this._listenForReflowEvents(t,"on")}),this.entity.on("childinsert",this._onChildInsert,this),this.entity.on("childremove",this._onChildRemove,this),t.app.systems.element.on("add",this._onElementOrLayoutComponentAdd,this),t.app.systems.element.on("beforeremove",this._onElementOrLayoutComponentRemove,this),t.app.systems.layoutchild.on("add",this._onElementOrLayoutComponentAdd,this),t.app.systems.layoutchild.on("beforeremove",this._onElementOrLayoutComponentRemove,this)}set orientation(t){t!==this._orientation&&(this._orientation=t,this._scheduleReflow())}get orientation(){return this._orientation}set reverseX(t){t!==this._reverseX&&(this._reverseX=t,this._scheduleReflow())}get reverseX(){return this._reverseX}set reverseY(t){t!==this._reverseY&&(this._reverseY=t,this._scheduleReflow())}get reverseY(){return this._reverseY}set alignment(t){t.equals(this._alignment)||(this._alignment.copy(t),this._scheduleReflow())}get alignment(){return this._alignment}set padding(t){t.equals(this._padding)||(this._padding.copy(t),this._scheduleReflow())}get padding(){return this._padding}set spacing(t){t.equals(this._spacing)||(this._spacing.copy(t),this._scheduleReflow())}get spacing(){return this._spacing}set widthFitting(t){t!==this._widthFitting&&(this._widthFitting=t,this._scheduleReflow())}get widthFitting(){return this._widthFitting}set heightFitting(t){t!==this._heightFitting&&(this._heightFitting=t,this._scheduleReflow())}get heightFitting(){return this._heightFitting}set wrap(t){t!==this._wrap&&(this._wrap=t,this._scheduleReflow())}get wrap(){return this._wrap}_isSelfOrChild(t){return t===this.entity||-1!==this.entity.children.indexOf(t)}_listenForReflowEvents(t,e){t.element&&(t.element[e]("enableelement",this._scheduleReflow,this),t.element[e]("disableelement",this._scheduleReflow,this),t.element[e]("resize",this._scheduleReflow,this),t.element[e]("set:pivot",this._scheduleReflow,this)),t.layoutchild&&(t.layoutchild[e]("set_enabled",this._scheduleReflow,this),t.layoutchild[e]("resize",this._scheduleReflow,this))}_onElementOrLayoutComponentAdd(t){this._isSelfOrChild(t)&&(this._listenForReflowEvents(t,"on"),this._scheduleReflow())}_onElementOrLayoutComponentRemove(t){this._isSelfOrChild(t)&&(this._listenForReflowEvents(t,"off"),this._scheduleReflow())}_onChildInsert(t){this._listenForReflowEvents(t,"on"),this._scheduleReflow()}_onChildRemove(t){this._listenForReflowEvents(t,"off"),this._scheduleReflow()}_scheduleReflow(){this.enabled&&this.entity&&this.entity.enabled&&!this._isPerformingReflow&&this.system.scheduleReflow(this)}reflow(){const t=Xl(this.entity),e=this.entity.children.filter($l).map(Xl);if(!t||0===e.length)return;const s=Math.max(t.calculatedWidth,0),i=Math.max(t.calculatedHeight,0),n={orientation:this._orientation,reverseX:this._reverseX,reverseY:this._reverseY,alignment:this._alignment,padding:this._padding,spacing:this._spacing,widthFitting:this._widthFitting,heightFitting:this._heightFitting,wrap:this._wrap,containerSize:new Jt.Z(s,i)};this._isPerformingReflow=!0;const r=this._layoutCalculator.calculateLayout(e,n);this._isPerformingReflow=!1,this.fire("reflow",r)}onEnable(){this._scheduleReflow()}onRemove(){this.entity.off("childinsert",this._onChildInsert,this),this.entity.off("childremove",this._onChildRemove,this),this._listenForReflowEvents(this.entity,"off"),this.entity.children.forEach(t=>{this._listenForReflowEvents(t,"off")}),this.system.app.systems.element.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.element.off("beforeremove",this._onElementOrLayoutComponentRemove,this),this.system.app.systems.layoutchild.off("add",this._onElementOrLayoutComponentAdd,this),this.system.app.systems.layoutchild.off("beforeremove",this._onElementOrLayoutComponentRemove,this)}}class jl{constructor(){this.enabled=!0}}const Yl=["enabled"];class Kl extends Rr{constructor(t){super(t),this.id="layoutgroup",this.ComponentType=ql,this.DataType=jl,this.schema=Yl,this._reflowQueue=[],this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e,s){void 0!==e.enabled&&(t.enabled=e.enabled),void 0!==e.orientation&&(t.orientation=e.orientation),void 0!==e.reverseX&&(t.reverseX=e.reverseX),void 0!==e.reverseY&&(t.reverseY=e.reverseY),void 0!==e.alignment&&(t.alignment=Array.isArray(e.alignment)?new Jt.Z(e.alignment):e.alignment),void 0!==e.padding&&(t.padding=Array.isArray(e.padding)?new w.Z(e.padding):e.padding),void 0!==e.spacing&&(t.spacing=Array.isArray(e.spacing)?new Jt.Z(e.spacing):e.spacing),void 0!==e.widthFitting&&(t.widthFitting=e.widthFitting),void 0!==e.heightFitting&&(t.heightFitting=e.heightFitting),void 0!==e.wrap&&(t.wrap=e.wrap),super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutgroup;return this.addComponent(e,{enabled:s.enabled,orientation:s.orientation,reverseX:s.reverseX,reverseY:s.reverseY,alignment:s.alignment,padding:s.padding,spacing:s.spacing,widthFitting:s.widthFitting,heightFitting:s.heightFitting,wrap:s.wrap})}scheduleReflow(t){-1===this._reflowQueue.indexOf(t)&&this._reflowQueue.push(t)}_onPostUpdate(){this._processReflowQueue()}_processReflowQueue(){if(0===this._reflowQueue.length)return;let t=0;for(;this._reflowQueue.length>0;){const e=this._reflowQueue.slice();this._reflowQueue.length=0,e.sort((t,e)=>t.entity.graphDepth-e.entity.graphDepth);for(let t=0;t<e.length;++t)e[t].reflow();if(++t>=100){console.warn("Max reflow iterations limit reached, bailing.");break}}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("postUpdate",this._onPostUpdate,this)}}Ir._buildAccessors(ql.prototype,Yl);const Zl=4/64,Ql=.875;class Jl extends Rn{constructor(t,e,s,i,n,r){super();const a=new l.e,o=new l.e,h=new l.e,c=new l.e,d=new l.e,u=new l.e,f=[],p=[],m=[],_=[],g=[];let v;if(s>0)for(let l=0;l<=i;l++)for(let r=0;r<=n;r++){const v=r/n*2*Math.PI-Math.PI,S=Math.sin(v),y=Math.cos(v);d.set(S*t,-s/2,y*t),c.set(S*e,s/2,y*e),a.lerp(d,c,l/i),o.sub2(c,d).normalize(),u.set(y,0,-S),h.cross(u,o).normalize(),f.push(a.x,a.y,a.z),p.push(h.x,h.y,h.z);let x=r/n,T=l/i;m.push(x,1-T);const w=T;if(T=x,x=w,x=x*Ql+Zl,T=T*Ql+Zl,x/=3,_.push(x,1-T),l<i&&r<n){const t=l*(n+1)+r,e=l*(n+1)+(r+1),s=(l+1)*(n+1)+r,i=(l+1)*(n+1)+(r+1);g.push(t,e,s),g.push(e,i,s)}}if(r){const t=Math.floor(n/2),r=n,a=s/2;for(let s=0;s<=t;s++){const i=s*Math.PI*.5/t,n=Math.sin(i),o=Math.cos(i);for(let l=0;l<=r;l++){const i=2*l*Math.PI/r-Math.PI/2,h=Math.sin(i),c=Math.cos(i)*n,d=o,u=h*n;let g=1-l/r,v=1-s/t;f.push(c*e,d*e+a,u*e),p.push(c,d,u),m.push(g,1-v),g=g*Ql+Zl,v=v*Ql+Zl,g/=3,v/=3,g+=1/3,_.push(g,1-v)}}v=(i+1)*(n+1);for(let e=0;e<t;++e)for(let t=0;t<r;++t){const s=e*(r+1)+t,i=s+r+1;g.push(v+s+1,v+i,v+s),g.push(v+s+1,v+i+1,v+i)}for(let s=0;s<=t;s++){const i=.5*Math.PI+s*Math.PI*.5/t,n=Math.sin(i),o=Math.cos(i);for(let l=0;l<=r;l++){const i=2*l*Math.PI/r-Math.PI/2,h=Math.sin(i),c=Math.cos(i)*n,d=o,u=h*n;let g=1-l/r,v=1-s/t;f.push(c*e,d*e-a,u*e),p.push(c,d,u),m.push(g,1-v),g=g*Ql+Zl,v=v*Ql+Zl,g/=3,v/=3,g+=2/3,_.push(g,1-v)}}v=(i+1)*(n+1)+(r+1)*(t+1);for(let e=0;e<t;++e)for(let t=0;t<r;++t){const s=e*(r+1)+t,i=s+r+1;g.push(v+s+1,v+i,v+s),g.push(v+s+1,v+i+1,v+i)}}else{if(v=(i+1)*(n+1),t>0)for(let e=0;e<n;e++){const i=e/n*2*Math.PI,r=Math.sin(i),a=-s/2,o=Math.cos(i);let l=1-(r+1)/2,h=(o+1)/2;f.push(r*t,a,o*t),p.push(0,-1,0),m.push(l,1-h),l=l*Ql+Zl,h=h*Ql+Zl,l/=3,h/=3,l+=1/3,_.push(l,1-h),e>1&&g.push(v,v+e,v+e-1)}if(v+=n,e>0)for(let t=0;t<n;t++){const i=t/n*2*Math.PI,r=Math.sin(i),a=s/2,o=Math.cos(i);let l=1-(r+1)/2,h=(o+1)/2;f.push(r*e,a,o*e),p.push(0,1,0),m.push(l,1-h),l=l*Ql+Zl,h=h*Ql+Zl,l/=3,h/=3,l+=2/3,_.push(l,1-h),t>1&&g.push(v,v+t-1,v+t)}}this.positions=f,this.normals=p,this.uvs=m,this.uvs1=_,this.indices=g}}class th extends Jl{constructor(t={}){const e=t.radius??.3;super(e,e,(t.height??1)-2*e,t.heightSegments??1,t.sides??20,!0),t.calculateTangents&&(this.tangents=In(this.positions,this.normals,this.uvs,this.indices))}}class eh extends Jl{constructor(t={}){super(t.baseRadius??.5,t.peakRadius??0,t.height??1,t.heightSegments??5,t.capSegments??18,!1),t.calculateTangents&&(this.tangents=In(this.positions,this.normals,this.uvs,this.indices))}}class sh extends Jl{constructor(t={}){const e=t.radius??.5;super(e,e,t.height??1,t.heightSegments??5,t.capSegments??20,!1),t.calculateTangents&&(this.tangents=In(this.positions,this.normals,this.uvs,this.indices))}}class ih extends Rn{constructor(t={}){super();const e=t.tubeRadius??.2,s=t.ringRadius??.3,i=(t.sectorAngle??360)*a.D.DEG_TO_RAD,n=t.segments??30,r=t.sides??20,o=[],l=[],h=[],c=[];for(let a=0;a<=r;a++)for(let t=0;t<=n;t++){const d=Math.cos(i*t/n)*(s+e*Math.cos(2*Math.PI*a/r)),u=Math.sin(2*Math.PI*a/r)*e,f=Math.sin(i*t/n)*(s+e*Math.cos(2*Math.PI*a/r)),p=Math.cos(i*t/n)*Math.cos(2*Math.PI*a/r),m=Math.sin(2*Math.PI*a/r),_=Math.sin(i*t/n)*Math.cos(2*Math.PI*a/r),g=a/r,v=1-t/n;if(o.push(d,u,f),l.push(p,m,_),h.push(g,1-v),a<r&&t<n){const e=a*(n+1)+t,s=(a+1)*(n+1)+t,i=a*(n+1)+(t+1),r=(a+1)*(n+1)+(t+1);c.push(e,s,i),c.push(s,r,i)}}this.positions=o,this.normals=l,this.uvs=h,this.uvs1=h,this.indices=c,t.calculateTangents&&(this.tangents=In(o,l,h,c))}}class nh extends Rn{constructor(t={}){super();const e=t.halfExtents??new Jt.Z(.5,.5),s=t.widthSegments??5,i=t.lengthSegments??5,n=[],r=[],a=[],o=[];let l=0;for(let h=0;h<=s;h++)for(let t=0;t<=i;t++){const c=-e.x+2*e.x*h/s,d=0,u=-(-e.y+2*e.y*t/i),f=h/s,p=t/i;n.push(c,d,u),r.push(0,1,0),a.push(f,1-p),h<s&&t<i&&(o.push(l+i+1,l+1,l),o.push(l+i+1,l+i+2,l+1)),l++}this.positions=n,this.normals=r,this.uvs=a,this.uvs1=a,this.indices=o,t.calculateTangents&&(this.tangents=In(n,r,a,o))}}class rh{destroy(t){this.map.forEach(t=>t.mesh.destroy())}constructor(){this.map=new Map}}const ah=new D.N,oh=(t,e)=>{const s=ah.get(t,()=>new rh);let i=s.map.get(e);if(!i){let n,r;switch(e){case"box":n=Us.fromGeometry(t,new On),r={x:2,y:2,z:2,uv:2/3};break;case"capsule":n=Us.fromGeometry(t,new th({radius:.5,height:2})),r={x:2*Math.PI,y:Math.PI,z:2*Math.PI,uv:1/3+1/3/3*2};break;case"cone":n=Us.fromGeometry(t,new eh({baseRadius:.5,peakRadius:0,height:1})),r={x:2.54,y:2.54,z:2.54,uv:1/3+1/3/3};break;case"cylinder":n=Us.fromGeometry(t,new sh({radius:.5,height:1})),r={x:Math.PI,y:1.58,z:Math.PI,uv:1/3+1/3/3*2};break;case"plane":n=Us.fromGeometry(t,new nh({halfExtents:new Jt.Z(.5,.5),widthSegments:1,lengthSegments:1})),r={x:0,y:1,z:0,uv:1};break;case"sphere":n=Us.fromGeometry(t,new Nn({radius:.5})),r={x:Math.PI,y:Math.PI,z:Math.PI,uv:1};break;case"torus":n=Us.fromGeometry(t,new ih({tubeRadius:.2,ringRadius:.3})),r={x:.5*Math.PI*.5-.1*Math.PI*.1,y:.4,z:.4,uv:1};break;default:throw new Error(`Invalid primitive type: ${e}`)}n.incRefCount(),i={mesh:n,area:r},s.map.set(e,i)}return i};class lh extends Ir{constructor(t,e){super(t,e),this._type="asset",this._asset=null,this._model=null,this._mapping={},this._castShadows=!0,this._receiveShadows=!0,this._materialAsset=null,this._castShadowsLightmap=!0,this._lightmapped=!1,this._lightmapSizeMultiplier=1,this.isStatic=!1,this._layers=[F.uEK],this._batchGroupId=-1,this._customAabb=null,this._area=null,this._materialEvents=null,this._clonedModel=!1,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._material=t.defaultMaterial,e.on("remove",this.onRemoveChild,this),e.on("removehierarchy",this.onRemoveChild,this),e.on("insert",this.onInsertChild,this),e.on("inserthierarchy",this.onInsertChild,this)}set meshInstances(t){this._model&&(this._model.meshInstances=t)}get meshInstances(){return this._model?this._model.meshInstances:null}set customAabb(t){if(this._customAabb=t,this._model){const t=this._model.meshInstances;if(t)for(let e=0;e<t.length;e++)t[e].setCustomAabb(this._customAabb)}}get customAabb(){return this._customAabb}set type(t){if(this._type!==t)if(this._area=null,this._type=t,"asset"===t)null!==this._asset?this._bindModelAsset(this._asset):this.model=null;else{const e=oh(this.system.app.graphicsDevice,t);this._area=e.area;const s=e.mesh,i=new Rt.t,n=new Ka;n.graph=i,n.meshInstances=[new pt(s,this._material,i)],this.model=n,this._asset=null}}get type(){return this._type}set asset(t){const e=this.system.app.assets;let s=t;if(t instanceof Kn.V&&(s=t.id),this._asset!==s){if(this._asset){e.off(`add:${this._asset}`,this._onModelAssetAdded,this);const t=e.get(this._asset);t&&this._unbindModelAsset(t)}if(this._asset=s,this._asset){const t=e.get(this._asset);t?this._bindModelAsset(t):(this.model=null,e.on(`add:${this._asset}`,this._onModelAssetAdded,this))}else this.model=null}}get asset(){return this._asset}set model(t){if(this._model!==t&&(!t||!t._immutable)&&(this._model&&(this._model._immutable=!1,this.removeModelFromLayers(),this._model.getGraph().destroy(),delete this._model._entity,this._clonedModel&&(this._model.destroy(),this._clonedModel=!1)),this._model=t,this._model)){this._model._immutable=!0;const t=this._model.meshInstances;for(let e=0;e<t.length;e++)t[e].castShadow=this._castShadows,t[e].receiveShadow=this._receiveShadows,t[e].setCustomAabb(this._customAabb);this.lightmapped=this._lightmapped,this.entity.addChild(this._model.graph),this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._model._entity=this.entity,this.entity.animation&&this.entity.animation.setModel(this._model),this.entity.anim&&this.entity.anim.rebind(),"asset"===this.type?this.mapping=this._mapping:this._unsetMaterialEvents()}}get model(){return this._model}set lightmapped(t){if(t!==this._lightmapped&&(this._lightmapped=t,this._model)){const e=this._model.meshInstances;for(let s=0;s<e.length;s++)e[s].setLightmapped(t)}}get lightmapped(){return this._lightmapped}set castShadows(t){if(this._castShadows===t)return;const e=this._model;if(e){const s=this.layers,i=this.system.app.scene;if(this._castShadows&&!t)for(let t=0;t<s.length;t++){const s=this.system.app.scene.layers.getLayerById(this.layers[t]);s&&s.removeShadowCasters(e.meshInstances)}const n=e.meshInstances;for(let e=0;e<n.length;e++)n[e].castShadow=t;if(!this._castShadows&&t)for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);n&&n.addShadowCasters(e.meshInstances)}}this._castShadows=t}get castShadows(){return this._castShadows}set receiveShadows(t){if(this._receiveShadows!==t&&(this._receiveShadows=t,this._model)){const e=this._model.meshInstances;for(let s=0,i=e.length;s<i;s++)e[s].receiveShadow=t}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(t){this._castShadowsLightmap=t}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(t){this._lightmapSizeMultiplier=t}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(t){const e=this.system.app.scene.layers;if(this.meshInstances)for(let s=0;s<this._layers.length;s++){const t=e.getLayerById(this._layers[s]);t&&t.removeMeshInstances(this.meshInstances)}this._layers.length=0;for(let s=0;s<t.length;s++)this._layers[s]=t[s];if(this.enabled&&this.entity.enabled&&this.meshInstances)for(let s=0;s<this._layers.length;s++){const t=e.getLayerById(this._layers[s]);t&&t.addMeshInstances(this.meshInstances)}}get layers(){return this._layers}set batchGroupId(t){this._batchGroupId!==t&&(this.entity.enabled&&this._batchGroupId>=0&&this.system.app.batcher?.remove(Vs.MODEL,this.batchGroupId,this.entity),this.entity.enabled&&t>=0&&this.system.app.batcher?.insert(Vs.MODEL,t,this.entity),t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addModelToLayers(),this._batchGroupId=t)}get batchGroupId(){return this._batchGroupId}set materialAsset(t){let e=t;t instanceof Kn.V&&(e=t.id);const s=this.system.app.assets;if(e!==this._materialAsset){if(this._materialAsset){s.off(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this);const t=s.get(this._materialAsset);t&&this._unbindMaterialAsset(t)}if(this._materialAsset=e,this._materialAsset){const t=s.get(this._materialAsset);t?this._bindMaterialAsset(t):(this._setMaterial(this.system.defaultMaterial),s.on(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this))}else this._setMaterial(this.system.defaultMaterial)}}get materialAsset(){return this._materialAsset}set material(t){this._material!==t&&(this.materialAsset=null,this._setMaterial(t))}get material(){return this._material}set mapping(t){if("asset"!==this._type)return;if(this._unsetMaterialEvents(),t||(t={}),this._mapping=t,!this._model)return;const e=this._model.meshInstances,s=this.asset?this.system.app.assets.get(this.asset):null,i=s?s.data.mapping:null;let n=null;for(let r=0,a=e.length;r<a;r++)if(void 0!==t[r])t[r]?(n=this.system.app.assets.get(t[r]),this._loadAndSetMeshInstanceMaterial(n,e[r],r)):e[r].material=this.system.defaultMaterial;else if(i)if(i[r]&&(i[r].material||i[r].path)){if(void 0!==i[r].material)n=this.system.app.assets.get(i[r].material);else if(void 0!==i[r].path){const t=this._getMaterialAssetUrl(i[r].path);t&&(n=this.system.app.assets.getByUrl(t))}this._loadAndSetMeshInstanceMaterial(n,e[r],r)}else e[r].material=this.system.defaultMaterial}get mapping(){return this._mapping}addModelToLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);s&&s.addMeshInstances(this.meshInstances)}}removeModelFromLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);s&&s.removeMeshInstances(this.meshInstances)}}onRemoveChild(){this._model&&this.removeModelFromLayers()}onInsertChild(){this._model&&this.enabled&&this.entity.enabled&&this.addModelToLayers()}onRemove(){this.asset=null,this.model=null,this.materialAsset=null,this._unsetMaterialEvents(),this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addModelToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)<0||t.addMeshInstances(this.meshInstances)}onLayerRemoved(t){this.layers.indexOf(t.id)<0||t.removeMeshInstances(this.meshInstances)}_setMaterialEvent(t,e,s,i){const n=`${e}:${s}`;this.system.app.assets.on(n,i,this),this._materialEvents||(this._materialEvents=[]),this._materialEvents[t]||(this._materialEvents[t]={}),this._materialEvents[t][n]={id:s,handler:i}}_unsetMaterialEvents(){const t=this.system.app.assets,e=this._materialEvents;if(e){for(let s=0,i=e.length;s<i;s++){if(!e[s])continue;const i=e[s];for(const e in i)t.off(e,i[e].handler,this)}this._materialEvents=null}}_getAssetByIdOrPath(t){let e=null;if(isNaN(parseInt(t,10))){if(this.asset){const s=this._getMaterialAssetUrl(t);s&&(e=this.system.app.assets.getByUrl(s))}}else e=this.system.app.assets.get(t);return e}_getMaterialAssetUrl(t){if(!this.asset)return null;const e=this.system.app.assets.get(this.asset);return e?e.getAbsoluteUrl(t):null}_loadAndSetMeshInstanceMaterial(t,e,s){const i=this.system.app.assets;t&&(t.resource?(e.material=t.resource,this._setMaterialEvent(s,"remove",t.id,function(){e.material=this.system.defaultMaterial})):(this._setMaterialEvent(s,"load",t.id,function(i){e.material=i.resource,this._setMaterialEvent(s,"remove",t.id,function(){e.material=this.system.defaultMaterial})}),this.enabled&&this.entity.enabled&&i.load(t)))}onEnable(){const t=this.system.app,e=t.scene,s=e?.layers;this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this));const i="asset"===this._type;let n;if(this._model?this.addModelToLayers():i&&this._asset&&(n=t.assets.get(this._asset),n&&n.resource!==this._model&&this._bindModelAsset(n)),this._materialAsset&&(n=t.assets.get(this._materialAsset),n&&n.resource!==this._material&&this._bindMaterialAsset(n)),i&&this._mapping)for(const r in this._mapping)this._mapping[r]&&(n=this._getAssetByIdOrPath(this._mapping[r]),n&&!n.resource&&t.assets.load(n));this._batchGroupId>=0&&t.batcher?.insert(Vs.MODEL,this.batchGroupId,this.entity)}onDisable(){const t=this.system.app,e=t.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,e&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this._batchGroupId>=0&&t.batcher?.remove(Vs.MODEL,this.batchGroupId,this.entity),this._model&&this.removeModelFromLayers()}hide(){if(this._model){const t=this._model.meshInstances;for(let e=0,s=t.length;e<s;e++)t[e].visible=!1}}show(){if(this._model){const t=this._model.meshInstances;for(let e=0,s=t.length;e<s;e++)t[e].visible=!0}}_bindMaterialAsset(t){if(t.on("load",this._onMaterialAssetLoad,this),t.on("unload",this._onMaterialAssetUnload,this),t.on("remove",this._onMaterialAssetRemove,this),t.on("change",this._onMaterialAssetChange,this),t.resource)this._onMaterialAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindMaterialAsset(t){t.off("load",this._onMaterialAssetLoad,this),t.off("unload",this._onMaterialAssetUnload,this),t.off("remove",this._onMaterialAssetRemove,this),t.off("change",this._onMaterialAssetChange,this)}_onMaterialAssetAdd(t){this.system.app.assets.off(`add:${t.id}`,this._onMaterialAssetAdd,this),this._materialAsset===t.id&&this._bindMaterialAsset(t)}_onMaterialAssetLoad(t){this._setMaterial(t.resource)}_onMaterialAssetUnload(t){this._setMaterial(this.system.defaultMaterial)}_onMaterialAssetRemove(t){this._onMaterialAssetUnload(t)}_onMaterialAssetChange(t){}_bindModelAsset(t){if(this._unbindModelAsset(t),t.on("load",this._onModelAssetLoad,this),t.on("unload",this._onModelAssetUnload,this),t.on("change",this._onModelAssetChange,this),t.on("remove",this._onModelAssetRemove,this),t.resource)this._onModelAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindModelAsset(t){t.off("load",this._onModelAssetLoad,this),t.off("unload",this._onModelAssetUnload,this),t.off("change",this._onModelAssetChange,this),t.off("remove",this._onModelAssetRemove,this)}_onModelAssetAdded(t){this.system.app.assets.off(`add:${t.id}`,this._onModelAssetAdded,this),t.id===this._asset&&this._bindModelAsset(t)}_onModelAssetLoad(t){this.model=t.resource.clone(),this._clonedModel=!0}_onModelAssetUnload(t){this.model=null}_onModelAssetChange(t,e,s,i){"data"===e&&(this.mapping=this._mapping)}_onModelAssetRemove(t){this.model=null}_setMaterial(t){if(this._material===t)return;this._material=t;const e=this._model;if(e&&"asset"!==this._type){const s=e.meshInstances;for(let e=0,i=s.length;e<i;e++)s[e].material=t}}}class hh{constructor(){this.enabled=!0}}const ch=["enabled"];class dh extends Rr{constructor(t){super(t),this.id="model",this.ComponentType=lh,this.DataType=hh,this.schema=ch,this.defaultMaterial=(0,st.h)(t.graphicsDevice),this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){s=["material","materialAsset","asset","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","type","mapping","layers","isStatic","batchGroupId"],null!==e.batchGroupId&&void 0!==e.batchGroupId||(e.batchGroupId=-1),e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<s.length;i++)e.hasOwnProperty(s[i])&&(t[s[i]]=e[s[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new y(new l.e(e.aabbCenter),new l.e(e.aabbHalfExtents))),super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s={type:t.model.type,asset:t.model.asset,castShadows:t.model.castShadows,receiveShadows:t.model.receiveShadows,castShadowsLightmap:t.model.castShadowsLightmap,lightmapped:t.model.lightmapped,lightmapSizeMultiplier:t.model.lightmapSizeMultiplier,isStatic:t.model.isStatic,enabled:t.model.enabled,layers:t.model.layers,batchGroupId:t.model.batchGroupId,mapping:(0,ti.X$)({},t.model.mapping)};let i=t.model.materialAsset;i instanceof Kn.V||null==i||(i=this.app.assets.get(i));const n=t.model.material;n&&n!==this.defaultMaterial&&i&&n!==i.resource||(s.materialAsset=i);const r=this.addComponent(e,s);if(t.model.model&&"asset"===t.model.type&&!t.model.asset&&(r.model=t.model.model.clone(),r._clonedModel=!0),s.materialAsset||(r.material=n),t.model.model){const e=t.model.model.meshInstances,s=r.model.meshInstances;for(let t=0;t<e.length;t++)s[t].mask=e[t].mask,s[t].material=e[t].material,s[t].layer=e[t].layer,s[t].receiveShadow=e[t].receiveShadow}return t.model.customAabb&&(r.customAabb=t.model.customAabb.clone()),r}onRemove(t,e){e.onRemove()}}Ir._buildAccessors(lh.prototype,ch);class uh{constructor(t,e=0){this._left=-1/0,this._right=1/0,this._recip=0,this._p0=0,this._p1=0,this._m0=0,this._m1=0,this._curve=t,this._reset(e)}evaluate(t,e=!1){let s;(e||t<this._left||t>=this._right)&&this._reset(t);const i=this._curve.type;if(5===i)s=this._p0;else{const e=0===this._recip?0:(t-this._left)*this._recip;s=0===i?a.D.lerp(this._p0,this._p1,e):1===i?a.D.lerp(this._p0,this._p1,e*e*(3-2*e)):this._evaluateHermite(this._p0,this._p1,this._m0,this._m1,e)}return s}_reset(t){const e=this._curve.keys,s=e.length;if(s)if(t<e[0][0])this._left=-1/0,this._right=e[0][0],this._recip=0,this._p0=this._p1=e[0][1],this._m0=this._m1=0;else if(t>=e[s-1][0])this._left=e[s-1][0],this._right=1/0,this._recip=0,this._p0=this._p1=e[s-1][1],this._m0=this._m1=0;else{let s=0;for(;t>=e[s+1][0];)s++;this._left=e[s][0],this._right=e[s+1][0];const i=1/(this._right-this._left);this._recip=isFinite(i)?i:0,this._p0=e[s][1],this._p1=e[s+1][1],4===this._curve.type&&this._calcTangents(e,s)}else this._left=-1/0,this._right=1/0,this._recip=0,this._p0=this._p1=this._m0=this._m1=0}_calcTangents(t,e){let s;const i=t[e],n=t[e+1];let r;if(s=0===e?[t[0][0]+(t[0][0]-t[1][0]),t[0][1]+(t[0][1]-t[1][1])]:t[e-1],r=e===t.length-2?[t[e+1][0]+(t[e+1][0]-t[e][0]),t[e+1][1]+(t[e+1][1]-t[e][1])]:t[e+2],4===this._curve.type){const t=2*(n[0]-i[0])/(n[0]-s[0]),e=2*(n[0]-i[0])/(r[0]-i[0]);this._m0=this._curve.tension*(isFinite(t)?t:0)*(n[1]-s[1]),this._m1=this._curve.tension*(isFinite(e)?e:0)*(r[1]-i[1])}else{const t=(n[0]-i[0])/(i[0]-s[0]),e=(n[0]-i[0])/(r[0]-n[0]),a=i[1]+(s[1]-i[1])*(isFinite(t)?t:0),o=n[1]+(r[1]-n[1])*(isFinite(e)?e:0),l=this._curve.tension;this._m0=l*(n[1]-a),this._m1=l*(o-i[1])}}_evaluateHermite(t,e,s,i,n){const r=n*n,a=n+n,o=1-n,l=o*o;return t*((1+a)*l)+s*(n*l)+e*(r*(3-a))+i*(r*(n-1))}}class fh{constructor(t){if(this.keys=[],this.type=1,this.tension=.5,this._eval=new uh(this),t)for(let e=0;e<t.length-1;e+=2)this.keys.push([t[e],t[e+1]]);this.sort()}get length(){return this.keys.length}add(t,e){const s=this.keys,i=s.length;let n=0;for(;n<i&&!(s[n][0]>t);n++);const r=[t,e];return this.keys.splice(n,0,r),r}get(t){return this.keys[t]}sort(){this.keys.sort((t,e)=>t[0]-e[0])}value(t){return this._eval.evaluate(t,!0)}closest(t){const e=this.keys,s=e.length;let i=2,n=null;for(let r=0;r<s;r++){const s=Math.abs(t-e[r][0]);if(!(i>=s))break;i=s,n=e[r]}return n}clone(){const t=new this.constructor;return t.keys=this.keys.map(t=>[...t]),t.type=this.type,t.tension=this.tension,t}quantize(t){t=Math.max(t,2);const e=new Float32Array(t),s=1/(t-1);e[0]=this._eval.evaluate(0,!0);for(let i=1;i<t;i++)e[i]=this._eval.evaluate(s*i);return e}quantizeClamped(t,e,s){const i=this.quantize(t);for(let n=0;n<i.length;++n)i[n]=Math.min(s,Math.max(e,i[n]));return i}}class ph{constructor(...t){if(this.curves=[],this._type=1,t.length>1)for(let e=0;e<t.length;e++)this.curves.push(new fh(t[e]));else if(0===t.length)this.curves.push(new fh);else{const e=t[0];if("number"==typeof e)for(let t=0;t<e;t++)this.curves.push(new fh);else for(let t=0;t<e.length;t++)this.curves.push(new fh(e[t]))}}get length(){return this.curves.length}set type(t){this._type=t;for(let e=0;e<this.curves.length;e++)this.curves[e].type=t}get type(){return this._type}get(t){return this.curves[t]}value(t,e=[]){const s=this.curves.length;e.length=s;for(let i=0;i<s;i++)e[i]=this.curves[i].value(t);return e}clone(){const t=new this.constructor;t.curves=[];for(let e=0;e<this.curves.length;e++)t.curves.push(this.curves[e].clone());return t._type=this._type,t}quantize(t){t=Math.max(t,2);const e=this.curves.length,s=new Float32Array(t*e),i=1/(t-1);for(let n=0;n<e;n++){const r=new uh(this.curves[n]);for(let a=0;a<t;a++)s[a*e+n]=r.evaluate(i*a)}return s}quantizeClamped(t,e,s){const i=this.quantize(t);for(let n=0;n<i.length;++n)i[n]=Math.min(s,Math.max(e,i[n]));return i}}let mh,_h=1;const gh=new o.$,vh=new o.$,Sh=new l.e,yh=new l.e,xh=new l.e,Th=new l.e,wh=new l.e,bh=new l.e,Eh=new l.e,Ah=new l.e,Ch=new l.e,Ph=new l.e,Dh=new l.e,Lh=new l.e,Mh=new l.e;function Ih(t){return t-Math.floor(t)}function Rh(t){return Math.max(Math.min(t,1),0)}function Fh(t,e){return t-e*Math.floor(t/e)}function Oh(t){let e=Ih(t),s=Ih(255*t);return e-=s/255,s-=s/255,[e,s]}class Nh{constructor(t){this._emitter=t}calcSpawnPosition(t,e,s,i,n){const r=this._emitter,o=Math.random(),l=Math.random(),h=Math.random(),c=Math.random();if(r.useCpu&&(t[4*n+0+2*r.numParticlesPot*4]=o,t[4*n+1+2*r.numParticlesPot*4]=l,t[4*n+2+2*r.numParticlesPot*4]=h),yh.x=o-.5,yh.y=l-.5,yh.z=h-.5,r.emitterShape===F.Qlj){const t=Math.max(Math.abs(yh.x),Math.max(Math.abs(yh.y),Math.abs(yh.z))),n=t+(.5-t)*s[0],a=t+(.5-t)*s[1],o=t+(.5-t)*s[2];yh.x=n*(t===Math.abs(yh.x)?Math.sign(yh.x):2*yh.x),yh.y=a*(t===Math.abs(yh.y)?Math.sign(yh.y):2*yh.y),yh.z=o*(t===Math.abs(yh.z)?Math.sign(yh.z):2*yh.z),r.localSpace?Sh.copy(e.transformPoint(yh)):Sh.copy(i).add(e.transformPoint(yh))}else{yh.normalize();const t=0===r.emitterRadius?0:r.emitterRadiusInner/r.emitterRadius,e=c*(1-t)+t;r.localSpace?Sh.copy(yh.mulScalar(e*r.emitterRadius)):Sh.copy(i).add(yh.mulScalar(e*r.emitterRadius))}let d=-a.D.lerp(r.rate,r.rate2,o)*n;if(r.pack8){const e=(Sh.x-r.worldBounds.center.x)/r.worldBoundsSize.x+.5,s=(Sh.y-r.worldBounds.center.y)/r.worldBoundsSize.y+.5,i=(Sh.z-r.worldBounds.center.z)/r.worldBoundsSize.z+.5;let l=a.D.lerp(r.startAngle*a.D.DEG_TO_RAD,r.startAngle2*a.D.DEG_TO_RAD,o);l=l%(2*Math.PI)/(2*Math.PI);const h=Oh(e);t[4*n]=h[0],t[4*n+1]=h[1];const c=Oh(s);t[4*n+2]=c[0],t[4*n+3]=c[1];const u=Oh(i);t[4*n+0+4*r.numParticlesPot]=u[0],t[4*n+1+4*r.numParticlesPot]=u[1];const f=Oh(l);t[4*n+2+4*r.numParticlesPot]=f[0],t[4*n+3+4*r.numParticlesPot]=f[1];const p=1;t[4*n+3+4*r.numParticlesPot*2]=p;const m=Math.max(r.lifetime,(r.numParticles-1)*Math.max(r.rate,r.rate2));d=(d+m)/(m+(r.lifetime+1));const _=function(t){let e=Ih(t),s=Ih(255*t),i=Ih(65025*t),n=Ih(160581375*t);return e-=s/255,s-=i/255,i-=n/255,n-=n/255,[e,s,i,n]}(d);t[4*n+0+4*r.numParticlesPot*3]=_[0],t[4*n+1+4*r.numParticlesPot*3]=_[1],t[4*n+2+4*r.numParticlesPot*3]=_[2],t[4*n+3+4*r.numParticlesPot*3]=_[3]}else t[4*n]=Sh.x,t[4*n+1]=Sh.y,t[4*n+2]=Sh.z,t[4*n+3]=a.D.lerp(r.startAngle*a.D.DEG_TO_RAD,r.startAngle2*a.D.DEG_TO_RAD,o),t[4*n+3+4*r.numParticlesPot]=d}update(t,e,s,i,n,r,a,o){let h,c,d;const u=this._emitter;if(u.meshInstance.node){const t=u.meshInstance.node.worldTransform;for(let e=0;e<12;e++)gh.data[e]=t.data[e];vh.copy(gh),vh.invert(),mh=u.meshInstance.node.localScale,_h=Math.max(Math.max(mh.x,mh.y),mh.z)}r=null===u.meshInstance.node||u.localSpace?l.e.ZERO:u.meshInstance.node.getPosition();const f=u.camera?u.camera._node.getPosition():l.e.ZERO,p=u.useMesh?17:15;let m,_,g,v,S,y,x,T,w;const b=u.precision-1;for(let E=0;E<u.numParticles;E++){const e=Math.floor(u.vbCPU[E*u.numParticleVerts*(u.useMesh?6:4)+3]),A=s[4*e+0+2*u.numParticlesPot*4];xh.x=A,xh.y=s[4*e+1+2*u.numParticlesPot*4],xh.z=s[4*e+2+2*u.numParticlesPot*4];const C=u.rate+(u.rate2-u.rate)*A,P=u.lifetime;let D=s[4*e+3+4*u.numParticlesPot]+a;const L=Rh(D/P);let M=0,I=0;const R=0;(D-a<=0||D>=P)&&this.calcSpawnPosition(s,i,n,r,e);let O=D>0&&D<P;O&&(d=L*b,m=Math.floor(d),_=Math.ceil(d),d%=1,h=u.qRotSpeed[m],c=u.qRotSpeed[_],g=h+(c-h)*d,h=u.qRotSpeed2[m],c=u.qRotSpeed2[_],v=h+(c-h)*d,h=u.qScale[m],c=u.qScale[_],M=h+(c-h)*d,h=u.qScale2[m],c=u.qScale2[_],S=h+(c-h)*d,h=u.qAlpha[m],c=u.qAlpha[_],y=h+(c-h)*d,h=u.qAlpha2[m],c=u.qAlpha2[_],x=h+(c-h)*d,h=u.qRadialSpeed[m],c=u.qRadialSpeed[_],T=h+(c-h)*d,h=u.qRadialSpeed2[m],c=u.qRadialSpeed2[_],w=h+(c-h)*d,T+=100*A%1*(w-T),Th.x=s[4*e],Th.y=s[4*e+1],Th.z=s[4*e+2],u.localSpace?Ch.copy(Th):Ch.copy(Th).sub(r),Ch.normalize().mulScalar(T),m*=3,_*=3,h=u.qLocalVelocity[m],c=u.qLocalVelocity[_],bh.x=h+(c-h)*d,h=u.qLocalVelocity[m+1],c=u.qLocalVelocity[_+1],bh.y=h+(c-h)*d,h=u.qLocalVelocity[m+2],c=u.qLocalVelocity[_+2],bh.z=h+(c-h)*d,h=u.qLocalVelocity2[m],c=u.qLocalVelocity2[_],Ah.x=h+(c-h)*d,h=u.qLocalVelocity2[m+1],c=u.qLocalVelocity2[_+1],Ah.y=h+(c-h)*d,h=u.qLocalVelocity2[m+2],c=u.qLocalVelocity2[_+2],Ah.z=h+(c-h)*d,h=u.qVelocity[m],c=u.qVelocity[_],wh.x=h+(c-h)*d,h=u.qVelocity[m+1],c=u.qVelocity[_+1],wh.y=h+(c-h)*d,h=u.qVelocity[m+2],c=u.qVelocity[_+2],wh.z=h+(c-h)*d,h=u.qVelocity2[m],c=u.qVelocity2[_],Eh.x=h+(c-h)*d,h=u.qVelocity2[m+1],c=u.qVelocity2[_+1],Eh.y=h+(c-h)*d,h=u.qVelocity2[m+2],c=u.qVelocity2[_+2],Eh.z=h+(c-h)*d,bh.x+=(Ah.x-bh.x)*xh.x,bh.y+=(Ah.y-bh.y)*xh.y,bh.z+=(Ah.z-bh.z)*xh.z,u.initialVelocity>0&&(u.emitterShape===F.M2Z?(yh.copy(xh).mulScalar(2).sub(l.e.ONE).normalize(),bh.add(yh.mulScalar(u.initialVelocity))):bh.add(l.e.FORWARD.mulScalar(u.initialVelocity))),wh.x+=(Eh.x-wh.x)*xh.x,wh.y+=(Eh.y-wh.y)*xh.y,wh.z+=(Eh.z-wh.z)*xh.z,g+=(v-g)*xh.y,M=(M+1e4*A%1*(S-M))*_h,I=1e3*A%1*(x-y),u.meshInstance.node&&(u.localSpace?(bh.x/=mh.x,bh.y/=mh.y,bh.z/=mh.z):gh.transformPoint(bh,bh)),u.localSpace?(vh.transformPoint(wh,wh),bh.add(wh).add(Ch)):(bh.add(wh.mul(mh)),bh.add(Ch.mul(mh))),Lh.copy(bh),Ph.copy(Th).add(bh.mulScalar(a)),Dh.copy(Ph),s[4*e]=Dh.x,s[4*e+1]=Dh.y,s[4*e+2]=Dh.z,s[4*e+3]+=g*a,u.wrap&&u.wrapBounds&&(u.localSpace||Dh.sub(r),Dh.x=Fh(Dh.x,u.wrapBounds.x)-.5*u.wrapBounds.x,Dh.y=Fh(Dh.y,u.wrapBounds.y)-.5*u.wrapBounds.y,Dh.z=Fh(Dh.z,u.wrapBounds.z)-.5*u.wrapBounds.z,u.localSpace||Dh.add(r)),u.sort>0&&(1===u.sort?(Mh.copy(Dh).sub(f),u.particleDistance[e]=-(Mh.x*Mh.x+Mh.y*Mh.y+Mh.z*Mh.z)):2===u.sort?u.particleDistance[e]=D:3===u.sort&&(u.particleDistance[e]=-D))),o?D<0&&(s[4*e+3+2*u.numParticlesPot*4]=-1):(D>=P&&(D-=Math.max(P,(u.numParticles-1)*C),s[4*e+3+2*u.numParticlesPot*4]=u.loop?1:-1),D<0&&u.loop&&(s[4*e+3+2*u.numParticlesPot*4]=1)),s[4*e+3+2*u.numParticlesPot*4]<0&&(O=!1),s[4*e+3+4*u.numParticlesPot]=D;for(let i=0;i<u.numParticleVerts;i++){const n=(E*u.numParticleVerts+i)*(u.useMesh?6:4);let r=u.vbCPU[n],a=u.vbCPU[n+1],o=u.vbCPU[n+2];O||(r=a=o=0);const l=E*u.numParticleVerts*p+i*p;t[l]=Dh.x,t[l+1]=Dh.y,t[l+2]=Dh.z,t[l+3]=L,t[l+4]=u.alignToMotion?R:s[4*e+3],t[l+5]=M,t[l+6]=I,t[l+7]=Lh.x,t[l+8]=r,t[l+9]=a,t[l+10]=o,t[l+11]=Lh.y,t[l+12]=e,t[l+13]=Lh.z,t[l+14]=u.vbCPU[n+3],u.useMesh&&(t[l+15]=u.vbCPU[n+4],t[l+16]=u.vbCPU[n+5])}}if(u.sort>F.WLb&&u.camera){const t=u.useMesh?6:4,s=u.particleDistance;for(let i=0;i<u.numParticles;i++)e[i][0]=i,e[i][1]=s[Math.floor(u.vbCPU[i*u.numParticleVerts*t+3])];u.vbOld.set(u.vbCPU),e.sort((t,e)=>t[1]-e[1]);for(let i=0;i<u.numParticles;i++){const s=e[i][0]*u.numParticleVerts*t,n=i*u.numParticleVerts*t;for(let e=0;e<u.numParticleVerts*t;e++)u.vbCPU[n+e]=u.vbOld[s+e]}}}}const kh=new _s.U,Bh=new _s.U,Uh=new _s.U;class zh{constructor(t,e){this._emitter=t,this.frameRandomUniform=new Float32Array(3),this.emitterPosUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),this.worldBoundsMulUniform=new Float32Array(3),this.worldBoundsAddUniform=new Float32Array(3),this.inBoundsSizeUniform=new Float32Array(3),this.inBoundsCenterUniform=new Float32Array(3),this.constantParticleTexIN=e.scope.resolve("particleTexIN"),this.constantParticleTexOUT=e.scope.resolve("particleTexOUT"),this.constantEmitterPos=e.scope.resolve("emitterPos"),this.constantEmitterScale=e.scope.resolve("emitterScale"),this.constantSpawnBounds=e.scope.resolve("spawnBounds"),this.constantSpawnPosInnerRatio=e.scope.resolve("spawnPosInnerRatio"),this.constantSpawnBoundsSphere=e.scope.resolve("spawnBoundsSphere"),this.constantSpawnBoundsSphereInnerRatio=e.scope.resolve("spawnBoundsSphereInnerRatio"),this.constantInitialVelocity=e.scope.resolve("initialVelocity"),this.constantFrameRandom=e.scope.resolve("frameRandom"),this.constantDelta=e.scope.resolve("delta"),this.constantRate=e.scope.resolve("rate"),this.constantRateDiv=e.scope.resolve("rateDiv"),this.constantLifetime=e.scope.resolve("lifetime"),this.constantGraphSampleSize=e.scope.resolve("graphSampleSize"),this.constantGraphNumSamples=e.scope.resolve("graphNumSamples"),this.constantInternalTex0=e.scope.resolve("internalTex0"),this.constantInternalTex1=e.scope.resolve("internalTex1"),this.constantInternalTex2=e.scope.resolve("internalTex2"),this.constantInternalTex3=e.scope.resolve("internalTex3"),this.constantEmitterMatrix=e.scope.resolve("emitterMatrix"),this.constantEmitterMatrixInv=e.scope.resolve("emitterMatrixInv"),this.constantNumParticles=e.scope.resolve("numParticles"),this.constantNumParticlesPot=e.scope.resolve("numParticlesPot"),this.constantLocalVelocityDivMult=e.scope.resolve("localVelocityDivMult"),this.constantVelocityDivMult=e.scope.resolve("velocityDivMult"),this.constantRotSpeedDivMult=e.scope.resolve("rotSpeedDivMult"),this.constantSeed=e.scope.resolve("seed"),this.constantStartAngle=e.scope.resolve("startAngle"),this.constantStartAngle2=e.scope.resolve("startAngle2"),this.constantOutBoundsMul=e.scope.resolve("outBoundsMul"),this.constantOutBoundsAdd=e.scope.resolve("outBoundsAdd"),this.constantInBoundsSize=e.scope.resolve("inBoundsSize"),this.constantInBoundsCenter=e.scope.resolve("inBoundsCenter"),this.constantMaxVel=e.scope.resolve("maxVel"),this.constantFaceTangent=e.scope.resolve("faceTangent"),this.constantFaceBinorm=e.scope.resolve("faceBinorm")}_setInputBounds(){this.inBoundsSizeUniform[0]=this._emitter.prevWorldBoundsSize.x,this.inBoundsSizeUniform[1]=this._emitter.prevWorldBoundsSize.y,this.inBoundsSizeUniform[2]=this._emitter.prevWorldBoundsSize.z,this.constantInBoundsSize.setValue(this.inBoundsSizeUniform),this.inBoundsCenterUniform[0]=this._emitter.prevWorldBoundsCenter.x,this.inBoundsCenterUniform[1]=this._emitter.prevWorldBoundsCenter.y,this.inBoundsCenterUniform[2]=this._emitter.prevWorldBoundsCenter.z,this.constantInBoundsCenter.setValue(this.inBoundsCenterUniform)}randomize(){this.frameRandomUniform[0]=Math.random(),this.frameRandomUniform[1]=Math.random(),this.frameRandomUniform[2]=Math.random()}update(t,e,s,i,n){const r=this._emitter;t.setBlendState(re.t.NOBLEND),t.setDepthState(q.H.NODEPTH),t.setCullMode(x.pLF),this.randomize(),this.constantGraphSampleSize.setValue(1/r.precision),this.constantGraphNumSamples.setValue(r.precision),this.constantNumParticles.setValue(r.numParticles),this.constantNumParticlesPot.setValue(r.numParticlesPot),this.constantInternalTex0.setValue(r.internalTex0),this.constantInternalTex1.setValue(r.internalTex1),this.constantInternalTex2.setValue(r.internalTex2),this.constantInternalTex3.setValue(r.internalTex3);const h=r.meshInstance.node,c=null===h?l.e.ONE:h.localScale;if(r.pack8){this.worldBoundsMulUniform[0]=r.worldBoundsMul.x,this.worldBoundsMulUniform[1]=r.worldBoundsMul.y,this.worldBoundsMulUniform[2]=r.worldBoundsMul.z,this.constantOutBoundsMul.setValue(this.worldBoundsMulUniform),this.worldBoundsAddUniform[0]=r.worldBoundsAdd.x,this.worldBoundsAddUniform[1]=r.worldBoundsAdd.y,this.worldBoundsAddUniform[2]=r.worldBoundsAdd.z,this.constantOutBoundsAdd.setValue(this.worldBoundsAddUniform),this._setInputBounds();let t=r.maxVel*Math.max(Math.max(c.x,c.y),c.z);t=Math.max(t,1),this.constantMaxVel.setValue(t)}const d=null===h||r.localSpace?l.e.ZERO:h.getPosition(),u=null===h?o.$.IDENTITY:h.getWorldTransform();r.emitterShape===F.Qlj?(kh.setFromMat4(e),this.constantSpawnBounds.setValue(kh.data),this.constantSpawnPosInnerRatio.setValue(s)):(this.constantSpawnBoundsSphere.setValue(r.emitterRadius),this.constantSpawnBoundsSphereInnerRatio.setValue(0===r.emitterRadius?0:r.emitterRadiusInner/r.emitterRadius)),this.constantInitialVelocity.setValue(r.initialVelocity),Bh.setFromMat4(u),Uh.invertMat4(u),this.emitterPosUniform[0]=d.x,this.emitterPosUniform[1]=d.y,this.emitterPosUniform[2]=d.z,this.constantEmitterPos.setValue(this.emitterPosUniform),this.constantFrameRandom.setValue(this.frameRandomUniform),this.constantDelta.setValue(i),this.constantRate.setValue(r.rate),this.constantRateDiv.setValue(r.rate2-r.rate),this.constantStartAngle.setValue(r.startAngle*a.D.DEG_TO_RAD),this.constantStartAngle2.setValue(r.startAngle2*a.D.DEG_TO_RAD),this.constantSeed.setValue(r.seed),this.constantLifetime.setValue(r.lifetime),this.emitterScaleUniform[0]=c.x,this.emitterScaleUniform[1]=c.y,this.emitterScaleUniform[2]=c.z,this.constantEmitterScale.setValue(this.emitterScaleUniform),this.constantEmitterMatrix.setValue(Bh.data),this.constantEmitterMatrixInv.setValue(Uh.data),this.constantLocalVelocityDivMult.setValue(r.localVelocityUMax),this.constantVelocityDivMult.setValue(r.velocityUMax),this.constantRotSpeedDivMult.setValue(r.rotSpeedUMax[0]);let f=r.swapTex?r.particleTexOUT:r.particleTexIN;f=r.beenReset?r.particleTexStart:f;const p=r.swapTex?r.particleTexIN:r.particleTexOUT;this.constantParticleTexIN.setValue(f),Z(t,r.swapTex?r.rtParticleTexIN:r.rtParticleTexOUT,n?r.shaderParticleUpdateOnStop:r.loop?r.shaderParticleUpdateRespawn:r.shaderParticleUpdateNoRespawn),r.material.setParameter("particleTexOUT",f),r.material.setParameter("particleTexIN",p),r.beenReset=!1,r.swapTex=!r.swapTex,r.prevWorldBoundsSize.copy(r.worldBoundsSize),r.prevWorldBoundsCenter.copy(r.worldBounds.center),r.pack8&&this._setInputBounds()}}const Vh=["NONE","VERTEX","MAP"];const Gh=new class extends R{generateKey(t){let e=`particle_${R.definesHash(t.defines)}_`;for(const s in t)t.hasOwnProperty(s)&&(e+=t[s]);return e}createVertexDefines(t,e){const s=new Map(t.defines);return t.mesh&&s.set("USE_MESH",""),t.meshUv&&s.set("USE_MESH_UV",""),t.localSpace&&s.set("LOCAL_SPACE",""),t.screenSpace&&s.set("SCREEN_SPACE",""),t.animTex&&s.set("ANIMTEX",""),t.soft>0&&s.set("SOFT",""),t.stretch>0&&s.set("STRETCH",""),t.customFace&&s.set("CUSTOM_FACE",""),t.pack8&&s.set("PACK8",""),t.localSpace&&s.set("LOCAL_SPACE",""),t.animTexLoop&&s.set("ANIMTEX_LOOP",""),t.wrap&&s.set("WRAP",""),t.alignToMotion&&s.set("ALIGN_TO_MOTION",""),s.set("NORMAL",Vh[t.normal]),e.particle_vertexData=x.JYe,t.mesh&&t.meshUv&&(e.particle_uv=x.slc),t.useCpu&&(e.particle_vertexData2=x.UhA,e.particle_vertexData3=x.$1R,e.particle_vertexData4=x.G3_,e.particle_vertexData5=x.NLq),s}createFragmentDefines(t){const e=new Map(t.defines);return t.soft>0&&e.set("SOFT",""),t.halflambert&&e.set("HALF_LAMBERT",""),e.set("NORMAL",Vh[t.normal]),e.set("BLEND",F._wM[t.blend]),e}createShaderDefinition(t,e){const s=t.isWebGPU?x.g80:x.BzK,i=B.W.get(t,s),n={},r=this.createVertexDefines(e,n),a=this.createFragmentDefines(e),o=`PARTICLE_${e.useCpu?"CPU":"GPU"}\n`;r.set(o,""),a.set(o,"");const l=new Map(i);return P.C.createDefinition(t,{name:"ParticleShader",shaderLanguage:s,attributes:n,vertexCode:i.get("particle_shaderVS"),fragmentCode:i.get("particle_shaderPS"),fragmentDefines:a,fragmentIncludes:l,vertexIncludes:l,vertexDefines:r})}};class Hh extends Ie.i{constructor(t){super(),this.emitter=null,this.emitter=t}getShaderVariant(t){const{device:e,scene:s,cameraShaderParams:i,objDefs:n}=t,{emitter:r}=this,a={defines:V.getCoreDefines(this,t),pass:F.OPe,useCpu:this.emitter.useCpu,normal:r.lighting?null!==r.normalMap?2:1:0,halflambert:this.emitter.halfLambert,stretch:this.emitter.stretch,alignToMotion:this.emitter.alignToMotion,soft:this.emitter.depthSoftening,mesh:this.emitter.useMesh,meshUv:n&F.JqS,gamma:i?.shaderOutputGamma??F.hcE,toneMap:i?.toneMapping??F.llM,fog:s&&!this.emitter.noFog?s.fog.type:"none",wrap:this.emitter.wrap&&this.emitter.wrapBounds,localSpace:this.emitter.localSpace,screenSpace:!r.inTools&&this.emitter.screenSpace,blend:this.emitter.blendType,animTex:this.emitter._isAnimated(),animTexLoop:this.emitter.animLoop,pack8:this.emitter.pack8,customFace:this.emitter.orientation!==F.gpt},o=new E(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat),l=M(e);return l.register("particle",Gh),l.getProgram("particle",a,o,this.userId)}}const Wh=[[-1,-1],[1,-1],[1,1],[-1,1]];function Xh(t,e,s,i,n=x.s7h,r,a){let o=x.uhC;!a||n!==x.Lxj&&n!==x.Mb4||(o=x.DrA);const l=new Q.g(t,{width:e,height:s,format:n,cubemap:!1,mipmaps:!1,minFilter:o,magFilter:o,addressU:x.vq6,addressV:x.vq6,name:"ParticleSystemTexture"}),h=l.lock();if(n===x.Lxj||n===x.Mb4){const t=new Uint8Array(i.length);for(let e=0;e<i.length;e++)t[e]=i[e]*r*255;i=t}return h.set(i),l.unlock(),l}function $h(t){return Math.max(Math.min(t,1),0)}const qh=new fh([0,0,1,0]),jh=new fh([0,1,1,1]),Yh=new ph([0,0,1,0],[0,0,1,0],[0,0,1,0]),Kh=new ph([0,1,1,1],[0,1,1,1],[0,1,1,1]);let Zh=2;const Qh=new Float32Array(3),Jh=new o.$,tc=new l.e,ec=new l.e,sc=new l.e;let ic,nc;function rc(t,e){void 0!==nc[t]&&null!==nc[t]?ic[t]=nc[t]:ic[t]=e}function ac(t,e,s){return(255*t<<16|255*e<<8|255*s)/(1<<24)}function oc(t,e){const s=t.length/3,i=new Array(4*s);for(let n=0;n<s;n++)i[4*n]=t[3*n],i[4*n+1]=t[3*n+1],i[4*n+2]=t[3*n+2],i[4*n+3]=ac(e[3*n],e[3*n+1],e[3*n+2]);return i}function lc(t,e){const s=e.length,i=t.length/s;for(let n=0;n<i;n++)for(let i=0;i<s;i++){const r=Math.abs(t[n*s+i]);e[i]=Math.max(e[i],r)}}function hc(t,e,s){const i=function(t,e){const s=new Float32Array(t.length);for(let i=0;i<t.length;i++)s[i]=t[i]-e[i];return s}(e,t);return lc(i,s),function(t,e){const s=e.length,i=t.length/s;for(let n=0;n<i;n++)for(let i=0;i<s;i++)t[n*s+i]/=0===e[i]?1:e[i],t[n*s+i]*=.5,t[n*s+i]+=.5}(i,s),i}const cc=new D.N;class dc{constructor(t,e){this.material=null,this.internalTex0=null,this.internalTex1=null,this.internalTex2=null,this.colorParam=null,this.graphicsDevice=t;const s=t;this.precision=32,this._addTimeTime=0,ic=this,nc=e,rc("numParticles",1),this.numParticles>t.maxTextureSize&&(this.numParticles=t.maxTextureSize),rc("rate",1),rc("rate2",this.rate),rc("lifetime",50),rc("emitterExtents",new l.e(0,0,0)),rc("emitterExtentsInner",new l.e(0,0,0)),rc("emitterRadius",0),rc("emitterRadiusInner",0),rc("emitterShape",F.Qlj),rc("initialVelocity",1),rc("wrap",!1),rc("localSpace",!1),rc("screenSpace",!1),rc("wrapBounds",null),rc("colorMap",this.defaultParamTexture),rc("normalMap",null),rc("loop",!0),rc("preWarm",!1),rc("sort",F.WLb),rc("mode",F.JQq),rc("scene",null),rc("lighting",!1),rc("halfLambert",!1),rc("intensity",1),rc("stretch",0),rc("alignToMotion",!1),rc("depthSoftening",0),rc("mesh",null),rc("particleNormal",new l.e(0,1,0)),rc("orientation",F.gpt),rc("depthWrite",!1),rc("noFog",!1),rc("blendType",F.i96),rc("node",null),rc("startAngle",0),rc("startAngle2",this.startAngle),rc("animTilesX",1),rc("animTilesY",1),rc("animStartFrame",0),rc("animNumFrames",1),rc("animNumAnimations",1),rc("animIndex",0),rc("randomizeAnimIndex",!1),rc("animSpeed",1),rc("animLoop",!0),this._gpuUpdater=new zh(this,s),this._cpuUpdater=new Nh(this),this.emitterPosUniform=new Float32Array(3),this.wrapBoundsUniform=new Float32Array(3),this.emitterScaleUniform=new Float32Array([1,1,1]),rc("colorGraph",Kh),rc("colorGraph2",this.colorGraph),rc("scaleGraph",jh),rc("scaleGraph2",this.scaleGraph),rc("alphaGraph",jh),rc("alphaGraph2",this.alphaGraph),rc("localVelocityGraph",Yh),rc("localVelocityGraph2",this.localVelocityGraph),rc("velocityGraph",Yh),rc("velocityGraph2",this.velocityGraph),rc("rotationSpeedGraph",qh),rc("rotationSpeedGraph2",this.rotationSpeedGraph),rc("radialSpeedGraph",qh),rc("radialSpeedGraph2",this.radialSpeedGraph),this.animTilesParams=new Float32Array(2),this.animParams=new Float32Array(4),this.animIndexParams=new Float32Array(2),this.vbToSort=null,this.vbOld=null,this.particleDistance=null,this.camera=null,this.swapTex=!1,this.useMesh=!0,this.useCpu=!t.supportsGpuParticles,this.pack8=!0,this.localBounds=new y,this.worldBoundsNoTrail=new y,this.worldBoundsTrail=[new y,new y],this.worldBounds=new y,this.worldBoundsSize=new l.e,this.prevWorldBoundsSize=new l.e,this.prevWorldBoundsCenter=new l.e,this.prevEmitterExtents=this.emitterExtents,this.prevEmitterRadius=this.emitterRadius,this.worldBoundsMul=new l.e,this.worldBoundsAdd=new l.e,this.timeToSwitchBounds=0,this.shaderParticleUpdateRespawn=null,this.shaderParticleUpdateNoRespawn=null,this.shaderParticleUpdateOnStop=null,this.numParticleVerts=0,this.numParticleIndices=0,this.material=null,this.meshInstance=null,this.drawOrder=0,this.seed=Math.random(),this.fixedTimeStep=1/60,this.maxSubSteps=10,this.simTime=0,this.simTimeTotal=0,this.beenReset=!1,this._layer=null,this.rebuild()}get defaultParamTexture(){return cc.get(this.graphicsDevice,()=>{const t=16,e=new Float32Array(1024);for(let i=0;i<t;i++)for(let s=0;s<t;s++){const n=s+1-8.5,r=i+1-8.5,a=$h(1-$h(Math.sqrt(n*n+r*r)/t)-.5),o=i*t+s;e[4*o]=1,e[4*o+1]=1,e[4*o+2]=1,e[4*o+3]=a}const s=Xh(this.graphicsDevice,t,t,e,x.Mb4,1,!0);return s.minFilter=x.DrA,s.magFilter=x.DrA,s})}onChangeCamera(){this.resetMaterial()}calculateBoundsMad(){this.worldBoundsMul.x=1/this.worldBoundsSize.x,this.worldBoundsMul.y=1/this.worldBoundsSize.y,this.worldBoundsMul.z=1/this.worldBoundsSize.z,this.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).mulScalar(-1),this.worldBoundsAdd.x+=.5,this.worldBoundsAdd.y+=.5,this.worldBoundsAdd.z+=.5}calculateWorldBounds(){if(!this.node)return;if(this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),!this.useCpu){let t=!1;t=this.emitterShape===F.Qlj?!this.emitterExtents.equals(this.prevEmitterExtents):!(this.emitterRadius===this.prevEmitterRadius),t&&this.calculateLocalBounds()}const t=this.node.getWorldTransform();this.localSpace?this.worldBoundsNoTrail.copy(this.localBounds):this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,t),this.worldBoundsTrail[0].add(this.worldBoundsNoTrail),this.worldBoundsTrail[1].add(this.worldBoundsNoTrail);const e=this.simTimeTotal;e>=this.timeToSwitchBounds&&(this.worldBoundsTrail[0].copy(this.worldBoundsTrail[1]),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.timeToSwitchBounds=e+this.lifetime),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.localSpace?(this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,t),this.meshInstance.mesh.aabb.setFromTransformedAabb(this.worldBounds,t)):(this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance.mesh.aabb.copy(this.worldBounds)),this.meshInstance._aabbVer=1-this.meshInstance._aabbVer,this.pack8&&this.calculateBoundsMad()}resetWorldBounds(){this.node&&(this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,this.localSpace?o.$.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBoundsNoTrail),this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail),this.worldBounds.copy(this.worldBoundsTrail[0]),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.simTimeTotal=0,this.timeToSwitchBounds=0)}calculateLocalBounds(){let t=Number.MAX_VALUE,e=Number.MAX_VALUE,s=Number.MAX_VALUE,i=-Number.MAX_VALUE,n=-Number.MAX_VALUE,r=-Number.MAX_VALUE,a=0,o=0;const l=this.lifetime/this.precision,h=[this.qVelocity,this.qVelocity2],c=[this.qLocalVelocity,this.qLocalVelocity2],d=[0,0],u=[0,0],f=[0,0],p=[0,0],m=[0,0];let _,g,v;for(let y=0;y<this.precision+1;y++){const S=Math.min(y,this.precision-1);for(let a=0;a<2;a++)_=c[a][3*S+0]*l+d[a],g=c[a][3*S+1]*l+u[a],v=c[a][3*S+2]*l+f[a],t=Math.min(_,t),e=Math.min(g,e),s=Math.min(v,s),i=Math.max(_,i),n=Math.max(g,n),r=Math.max(v,r),d[a]=_,u[a]=g,f[a]=v;for(let t=0;t<2;t++)m[t]+=l*Math.sqrt(h[t][3*S+0]*h[t][3*S+0]+h[t][3*S+1]*h[t][3*S+1]+h[t][3*S+2]*h[t][3*S+2]);p[0]+=this.qRadialSpeed[S]*l,p[1]+=this.qRadialSpeed2[S]*l,a=Math.max(a,Math.max(Math.abs(p[0]),Math.abs(p[1]))),o=Math.max(o,this.qScale[S])}this.emitterShape===F.Qlj?(_=.5*this.emitterExtents.x,g=.5*this.emitterExtents.y,v=.5*this.emitterExtents.z):(_=this.emitterRadius,g=this.emitterRadius,v=this.emitterRadius);const S=Math.max(m[0],m[1]);ec.x=t-o-_-a-S,ec.y=e-o-g-a-S,ec.z=s-o-v-a-S,sc.x=i+o+_+a+S,sc.y=n+o+g+a+S,sc.z=r+o+v+a+S,this.localBounds.setMinMax(ec,sc)}rebuild(){const t=this.graphicsDevice;null===this.colorMap&&(this.colorMap=this.defaultParamTexture),this.spawnBounds=this.emitterShape===F.Qlj?this.emitterExtents:this.emitterRadius,this.useCpu=this.useCpu||this.sort>F.WLb||t.maxVertexTextures<=1||t.fragmentUniformsCount<64||t.forceCpuParticles;const e=this._destroyResources();this.pack8=(this.pack8||!t.textureFloatRenderable)&&!this.useCpu,Zh=this.useCpu||this.pack8?4:2,this.useMesh=!!this.mesh,this.numParticlesPot=a.D.nextPowerOfTwo(this.numParticles),this.rebuildGraphs(),this.calculateLocalBounds(),this.resetWorldBounds(),this.node&&(this.worldBounds.setFromTransformedAabb(this.localBounds,this.localSpace?o.$.IDENTITY:this.node.getWorldTransform()),this.worldBoundsTrail[0].copy(this.worldBounds),this.worldBoundsTrail[1].copy(this.worldBounds),this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2),this.prevWorldBoundsSize.copy(this.worldBoundsSize),this.prevWorldBoundsCenter.copy(this.worldBounds.center),this.pack8&&this.calculateBoundsMad()),this.vbToSort=new Array(this.numParticles);for(let a=0;a<this.numParticles;a++)this.vbToSort[a]=[0,0];this.particleDistance=new Float32Array(this.numParticles),this._gpuUpdater.randomize(),this.particleTex=new Float32Array(this.numParticlesPot*Zh*4);const s=null===this.node||this.localSpace?l.e.ZERO:this.node.getPosition();this.emitterShape===F.Qlj&&(null===this.node||this.localSpace?Jh.setTRS(l.e.ZERO,St.k.IDENTITY,this.spawnBounds):Jh.setTRS(l.e.ZERO,this.node.getRotation(),tc.copy(this.spawnBounds).mul(this.node.localScale)),Qh[0]=0!==this.emitterExtents.x?this.emitterExtentsInner.x/this.emitterExtents.x:0,Qh[1]=0!==this.emitterExtents.y?this.emitterExtentsInner.y/this.emitterExtents.y:0,Qh[2]=0!==this.emitterExtents.z?this.emitterExtentsInner.z/this.emitterExtents.z:0);for(let a=0;a<this.numParticles;a++)this._cpuUpdater.calcSpawnPosition(this.particleTex,Jh,Qh,s,a),this.useCpu&&(this.particleTex[4*a+3+2*this.numParticlesPot*4]=1);this.particleTexStart=new Float32Array(this.numParticlesPot*Zh*4);for(let a=0;a<this.particleTexStart.length;a++)this.particleTexStart[a]=this.particleTex[a];this.useCpu||(this.pack8?(this.particleTexIN=Xh(t,this.numParticlesPot,Zh,this.particleTex,x.Lxj,1,!1),this.particleTexOUT=Xh(t,this.numParticlesPot,Zh,this.particleTex,x.Lxj,1,!1),this.particleTexStart=Xh(t,this.numParticlesPot,Zh,this.particleTexStart,x.Lxj,1,!1)):(this.particleTexIN=Xh(t,this.numParticlesPot,Zh,this.particleTex),this.particleTexOUT=Xh(t,this.numParticlesPot,Zh,this.particleTex),this.particleTexStart=Xh(t,this.numParticlesPot,Zh,this.particleTexStart)),this.rtParticleTexIN=new T.O({colorBuffer:this.particleTexIN,depth:!1}),this.rtParticleTexOUT=new T.O({colorBuffer:this.particleTexOUT,depth:!1}),this.swapTex=!1);const i=new Map;this.localSpace&&i.set("LOCAL_SPACE",""),this.pack8&&i.set("PACK8",""),this.emitterShape===F.Qlj&&i.set("EMITTERSHAPE_BOX","");const n=`Shape:${this.emitterShape}-Pack:${this.pack8}-Local:${this.localSpace}`,r=B.W.get(t,t.isWebGPU?x.g80:x.BzK),h=new Map(r),c={attributes:{vertex_position:x.JYe},vertexChunk:"fullscreenQuadVS",fragmentChunk:"particle_simulationPS",fragmentDefines:i,fragmentIncludes:h};c.uniqueName=`ParticleUpdateRespawn-${n}`,i.set("RESPAWN",""),this.shaderParticleUpdateRespawn=V.createShader(t,c),i.delete("RESPAWN"),c.uniqueName=`ParticleUpdateNoRespawn-${n}`,i.set("NO_RESPAWN",""),this.shaderParticleUpdateNoRespawn=V.createShader(t,c),i.delete("NO_RESPAWN"),c.uniqueName=`ParticleUpdateStop-${n}`,i.set("ON_STOP",""),this.shaderParticleUpdateOnStop=V.createShader(t,c),this.numParticleVerts=this.useMesh?this.mesh.vertexBuffer.numVertices:4,this.numParticleIndices=this.useMesh?this.mesh.indexBuffer[0].numIndices:6,this._allocate(this.numParticles);const d=new Us(t);d.vertexBuffer=this.vertexBuffer,d.indexBuffer[0]=this.indexBuffer,d.primitive[0].type=x.Qpk,d.primitive[0].base=0,d.primitive[0].count=this.numParticles*this.numParticleIndices,d.primitive[0].indexed=!0,this.material=this._createMaterial(),this.resetMaterial(),this.meshInstance=new pt(d,this.material,this.node),this.meshInstance.pick=!1,this.meshInstance.updateKey(),this.meshInstance.cull=!0,this.localSpace?this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,this.node.getWorldTransform()):this.meshInstance.aabb.copy(this.worldBounds),this.meshInstance._updateAabb=!1,this.meshInstance.visible=e,this._setMaterialTextures(),this.resetTime(),this.addTime(0,!1),this.preWarm&&this.prewarm(this.lifetime)}_isAnimated(){return this.animNumFrames>=1&&(this.animTilesX>1||this.animTilesY>1)&&(this.colorMap&&this.colorMap!==this.defaultParamTexture||this.normalMap)}rebuildGraphs(){const t=this.precision,e=this.graphicsDevice;this.qLocalVelocity=this.localVelocityGraph.quantize(t),this.qVelocity=this.velocityGraph.quantize(t),this.qColor=this.colorGraph.quantizeClamped(t,0,1),this.qRotSpeed=this.rotationSpeedGraph.quantize(t),this.qScale=this.scaleGraph.quantize(t),this.qAlpha=this.alphaGraph.quantize(t),this.qRadialSpeed=this.radialSpeedGraph.quantize(t),this.qLocalVelocity2=this.localVelocityGraph2.quantize(t),this.qVelocity2=this.velocityGraph2.quantize(t),this.qColor2=this.colorGraph2.quantizeClamped(t,0,1),this.qRotSpeed2=this.rotationSpeedGraph2.quantize(t),this.qScale2=this.scaleGraph2.quantize(t),this.qAlpha2=this.alphaGraph2.quantize(t),this.qRadialSpeed2=this.radialSpeedGraph2.quantize(t);for(let s=0;s<t;s++)this.qRotSpeed[s]*=a.D.DEG_TO_RAD,this.qRotSpeed2[s]*=a.D.DEG_TO_RAD;if(this.localVelocityUMax=new Float32Array(3),this.velocityUMax=new Float32Array(3),this.colorUMax=new Float32Array(3),this.rotSpeedUMax=[0],this.scaleUMax=[0],this.alphaUMax=[0],this.radialSpeedUMax=[0],this.qLocalVelocityDiv=hc(this.qLocalVelocity,this.qLocalVelocity2,this.localVelocityUMax),this.qVelocityDiv=hc(this.qVelocity,this.qVelocity2,this.velocityUMax),this.qColorDiv=hc(this.qColor,this.qColor2,this.colorUMax),this.qRotSpeedDiv=hc(this.qRotSpeed,this.qRotSpeed2,this.rotSpeedUMax),this.qScaleDiv=hc(this.qScale,this.qScale2,this.scaleUMax),this.qAlphaDiv=hc(this.qAlpha,this.qAlpha2,this.alphaUMax),this.qRadialSpeedDiv=hc(this.qRadialSpeed,this.qRadialSpeed2,this.radialSpeedUMax),this.pack8){const t=[0,0,0];lc(this.qVelocity,t);const e=[0,0,0];lc(this.qVelocity2,e);const s=[0,0,0];lc(this.qLocalVelocity,s);const i=[0,0,0];lc(this.qLocalVelocity2,i);const n=[0];lc(this.qRadialSpeed,n);const r=[0];lc(this.qRadialSpeed2,r);let a=Math.max(t[0],e[0]);a=Math.max(a,t[1]),a=Math.max(a,e[1]),a=Math.max(a,t[2]),a=Math.max(a,e[2]);let o=Math.max(s[0],i[0]);o=Math.max(o,s[1]),o=Math.max(o,i[1]),o=Math.max(o,s[2]),o=Math.max(o,i[2]);const l=Math.max(n[0],r[0]);this.maxVel=a+o+l}this.useCpu||(this.internalTex0=Xh(e,t,1,oc(this.qLocalVelocity,this.qLocalVelocityDiv)),this.internalTex1=Xh(e,t,1,oc(this.qVelocity,this.qVelocityDiv)),this.internalTex2=Xh(e,t,1,function(t,e,s,i,n){const r=new Array(4*t.length);for(let a=0;a<t.length;a++)r[4*a]=t[a],r[4*a+1]=e[a],r[4*a+2]=0,r[4*a+3]=ac(s[a],i[a],n[a]);return r}(this.qRotSpeed,this.qScale,this.qScaleDiv,this.qRotSpeedDiv,this.qAlphaDiv)),this.internalTex3=Xh(e,t,1,function(t,e){const s=new Array(4*t.length);for(let i=0;i<t.length;i++)s[4*i]=t[i],s[4*i+1]=e[i],s[4*i+2]=0,s[4*i+3]=0;return s}(this.qRadialSpeed,this.qRadialSpeedDiv))),this.colorParam=Xh(e,t,1,function(t,e){const s=new Array(4*e.length);for(let i=0;i<e.length;i++)s[4*i]=t[3*i],s[4*i+1]=t[3*i+1],s[4*i+2]=t[3*i+2],s[4*i+3]=e[i];return s}(this.qColor,this.qAlpha),x.Mb4,1,!0)}_setMaterialTextures(){this.colorMap&&(this.material.setParameter("colorMap",this.colorMap),this.lighting&&this.normalMap&&this.material.setParameter("normalMap",this.normalMap))}_createMaterial(){const t=new Hh(this);return t.name=`EmitterMaterial:${this.node.name}`,t.cull=x.pLF,t.alphaWrite=!1,t.blendType=this.blendType,t.depthWrite=this.depthWrite,t}resetMaterial(){const t=this.material;t.setParameter("stretch",this.stretch),this._isAnimated()&&(t.setParameter("animTexTilesParams",this.animTilesParams),t.setParameter("animTexParams",this.animParams),t.setParameter("animTexIndexParams",this.animIndexParams)),t.setParameter("colorMult",this.intensity),this.useCpu||(t.setParameter("internalTex0",this.internalTex0),t.setParameter("internalTex1",this.internalTex1),t.setParameter("internalTex2",this.internalTex2),t.setParameter("internalTex3",this.internalTex3)),t.setParameter("colorParam",this.colorParam),t.setParameter("numParticles",this.numParticles),t.setParameter("numParticlesPot",this.numParticlesPot),t.setParameter("lifetime",this.lifetime),t.setParameter("rate",this.rate),t.setParameter("rateDiv",this.rate2-this.rate),t.setParameter("seed",this.seed),t.setParameter("scaleDivMult",this.scaleUMax[0]),t.setParameter("alphaDivMult",this.alphaUMax[0]),t.setParameter("radialSpeedDivMult",this.radialSpeedUMax[0]),t.setParameter("graphNumSamples",this.precision),t.setParameter("graphSampleSize",1/this.precision),t.setParameter("emitterScale",new Float32Array([1,1,1])),this.pack8&&(this._gpuUpdater._setInputBounds(),t.setParameter("inBoundsSize",this._gpuUpdater.inBoundsSizeUniform),t.setParameter("inBoundsCenter",this._gpuUpdater.inBoundsCenterUniform),t.setParameter("maxVel",this.maxVel)),this.wrap&&this.wrapBounds&&(this.wrapBoundsUniform[0]=this.wrapBounds.x,this.wrapBoundsUniform[1]=this.wrapBounds.y,this.wrapBoundsUniform[2]=this.wrapBounds.z,t.setParameter("wrapBounds",this.wrapBoundsUniform)),this._setMaterialTextures(),this.depthSoftening>0&&t.setParameter("softening",1/(this.depthSoftening*this.depthSoftening*100)),this.stretch>0&&(t.cull=x.pLF),this._compParticleFaceParams()}_compParticleFaceParams(){let t,e;if(this.orientation===F.gpt)t=new Float32Array([1,0,0]),e=new Float32Array([0,0,1]);else{let s;if(this.orientation===F.KQ8)s=this.particleNormal.normalize();else{s=(null===this.node?o.$.IDENTITY:this.node.getWorldTransform()).transformVector(this.particleNormal).normalize()}const i=new l.e(1,0,0);1===Math.abs(i.dot(s))&&i.set(0,0,1);const n=(new l.e).cross(s,i).normalize();i.cross(n,s).normalize(),t=new Float32Array([i.x,i.y,i.z]),e=new Float32Array([n.x,n.y,n.z])}this.material.setParameter("faceTangent",t),this.material.setParameter("faceBinorm",e)}getVertexInfo(){const t=[];return this.useCpu?t.push({semantic:x.NFm,components:4,type:x.n$B},{semantic:x.UhA,components:4,type:x.n$B},{semantic:x.$1R,components:4,type:x.n$B},{semantic:x.G3_,components:1,type:x.n$B},{semantic:x.NLq,components:this.useMesh?4:2,type:x.n$B}):(t.push({semantic:x.NFm,components:4,type:x.n$B}),this.useMesh&&t.push({semantic:x.UhA,components:2,type:x.n$B})),t}_allocate(t){const e=t*this.numParticleVerts,s=t*this.numParticleIndices;if(void 0===this.vertexBuffer||this.vertexBuffer.getNumVertices()!==e){const i=this.getVertexInfo(),n=new xs.y(this.graphicsDevice,i);this.vertexBuffer=new ys.R(this.graphicsDevice,n,e,{usage:x.pCO}),this.indexBuffer=new Ss(this.graphicsDevice,x.gpl,s);const r=new Float32Array(this.vertexBuffer.lock());let a,o,l;if(this.useMesh){a=new Float32Array(this.mesh.vertexBuffer.lock()),o=a.length/this.mesh.vertexBuffer.numVertices;for(let t=0;t<this.mesh.vertexBuffer.format.elements.length;t++)if(this.mesh.vertexBuffer.format.elements[t].name===x.slc){l=this.mesh.vertexBuffer.format.elements[t].offset/4;break}}for(let t=0;t<e;t++){const e=Math.floor(t/this.numParticleVerts);if(this.useMesh){const s=t%this.numParticleVerts;r[6*t]=a[s*o],r[6*t+1]=a[s*o+1],r[6*t+2]=a[s*o+2],r[6*t+3]=e,r[6*t+4]=a[s*o+l+0],r[6*t+5]=1-a[s*o+l+1]}else{const s=t%4;r[4*t]=Wh[s][0],r[4*t+1]=Wh[s][1],r[4*t+2]=0,r[4*t+3]=e}}this.useCpu&&(this.vbCPU=new Float32Array(r),this.vbOld=new Float32Array(this.vbCPU.length)),this.vertexBuffer.unlock(),this.useMesh&&this.mesh.vertexBuffer.unlock();let h=0;const c=new Uint32Array(this.indexBuffer.lock());if(this.useMesh){const t=this.mesh.indexBuffer[0];a=new x.SGA[t.format](t.lock())}for(let e=0;e<t;e++)if(this.useMesh)for(let t=0;t<this.numParticleIndices;t++)c[e*this.numParticleIndices+t]=a[t]+e*this.numParticleVerts;else{const t=4*e;c[h++]=t,c[h++]=t+1,c[h++]=t+2,c[h++]=t,c[h++]=t+2,c[h++]=t+3}this.indexBuffer.unlock(),this.useMesh&&this.mesh.indexBuffer[0].unlock()}}reset(){if(this.beenReset=!0,this.seed=Math.random(),this.material.setParameter("seed",this.seed),this.useCpu)for(let e=0;e<this.particleTexStart.length;e++)this.particleTex[e]=this.particleTexStart[e];else this._setMaterialTextures();this.resetWorldBounds(),this.resetTime();const t=this.loop;this.loop=!0,this.addTime(0,!1),this.loop=t,this.preWarm&&this.prewarm(this.lifetime)}prewarm(t){const e=t/this.lifetime,s=Math.min(Math.floor(e*this.precision),this.precision),i=t/s;for(let n=0;n<s;n++)this.addTime(i,!1)}resetTime(){this.endTime=function(t){const e=Math.max(t.rate,t.rate2)*t.numParticles+t.lifetime;return Date.now()+1e3*e}(this)}finishFrame(){this.useCpu&&this.vertexBuffer.unlock()}addTime(t,e){const s=this.graphicsDevice;if(this.simTimeTotal+=t,this.calculateWorldBounds(),this._isAnimated()){const t=this.animTilesParams;t[0]=1/this.animTilesX,t[1]=1/this.animTilesY;const e=this.animParams;e[0]=this.animStartFrame,e[1]=this.animNumFrames*this.animSpeed,e[2]=this.animNumFrames-1,e[3]=this.animNumAnimations-1;const s=this.animIndexParams;s[0]=this.animIndex,s[1]=this.randomizeAnimIndex}let i;this.scene&&this.camera!==this.scene._activeCamera&&(this.camera=this.scene._activeCamera,this.onChangeCamera()),this.emitterShape===F.Qlj&&(Qh[0]=0!==this.emitterExtents.x?this.emitterExtentsInner.x/this.emitterExtents.x:0,Qh[1]=0!==this.emitterExtents.y?this.emitterExtentsInner.y/this.emitterExtents.y:0,Qh[2]=0!==this.emitterExtents.z?this.emitterExtentsInner.z/this.emitterExtents.z:0,null===this.meshInstance.node?Jh.setTRS(l.e.ZERO,St.k.IDENTITY,this.emitterExtents):Jh.setTRS(l.e.ZERO,this.meshInstance.node.getRotation(),tc.copy(this.emitterExtents).mul(this.meshInstance.node.localScale)));const n=null===this.meshInstance.node?l.e.ONE:this.meshInstance.node.localScale;if(this.emitterScaleUniform[0]=n.x,this.emitterScaleUniform[1]=n.y,this.emitterScaleUniform[2]=n.z,this.material.setParameter("emitterScale",this.emitterScaleUniform),this.localSpace&&this.meshInstance.node&&(i=this.meshInstance.node.getPosition(),this.emitterPosUniform[0]=i.x,this.emitterPosUniform[1]=i.y,this.emitterPosUniform[2]=i.z,this.material.setParameter("emitterPos",this.emitterPosUniform)),this._compParticleFaceParams(),this.useCpu){const s=new Float32Array(this.vertexBuffer.lock());this._cpuUpdater.update(s,this.vbToSort,this.particleTex,Jh,Qh,i,t,e)}else this._gpuUpdater.update(s,Jh,Qh,t,e);this.loop||Date.now()>this.endTime&&(this.onFinished&&this.onFinished(),this.meshInstance.visible=!1),this.meshInstance&&(this.meshInstance.drawOrder=this.drawOrder)}_destroyResources(){this.particleTexIN?.destroy(),this.particleTexIN=null,this.particleTexOUT?.destroy(),this.particleTexOUT=null,this.particleTexStart&&this.particleTexStart.destroy&&(this.particleTexStart.destroy(),this.particleTexStart=null),this.rtParticleTexIN?.destroy(),this.rtParticleTexIN=null,this.rtParticleTexOUT?.destroy(),this.rtParticleTexOUT=null,this.internalTex0?.destroy(),this.internalTex0=null,this.internalTex1?.destroy(),this.internalTex1=null,this.internalTex2?.destroy(),this.internalTex2=null,this.internalTex3?.destroy(),this.internalTex3=null,this.colorParam?.destroy(),this.colorParam=null,this.vertexBuffer=void 0,this.indexBuffer=void 0;const t=this.meshInstance?.visible??!0;return this.meshInstance?.destroy(),this.meshInstance=null,this.material?.destroy(),this.material=null,t}destroy(){this.camera=null,this._destroyResources()}}const uc=["emitterExtents","emitterRadius","emitterExtentsInner","emitterRadiusInner","loop","initialVelocity","animSpeed","normalMap","particleNormal"],fc=["numParticles","lifetime","rate","rate2","startAngle","startAngle2","lighting","halfLambert","intensity","wrap","wrapBounds","depthWrite","noFog","sort","stretch","alignToMotion","preWarm","emitterShape","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animLoop","colorMap","localSpace","screenSpace","orientation"],pc=["scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","velocityGraph","velocityGraph2","localVelocityGraph","localVelocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2"],mc=["colorMapAsset","normalMapAsset","meshAsset","renderAsset"];let _c;class gc extends Ir{constructor(t,e){super(t,e),this._requestedDepth=!1,this._drawOrder=0,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._evtSetMeshes=null,this.on("set_colorMapAsset",this.onSetColorMapAsset,this),this.on("set_normalMapAsset",this.onSetNormalMapAsset,this),this.on("set_meshAsset",this.onSetMeshAsset,this),this.on("set_mesh",this.onSetMesh,this),this.on("set_renderAsset",this.onSetRenderAsset,this),this.on("set_loop",this.onSetLoop,this),this.on("set_blendType",this.onSetBlendType,this),this.on("set_depthSoftening",this.onSetDepthSoftening,this),this.on("set_layers",this.onSetLayers,this),uc.forEach(t=>{this.on(`set_${t}`,this.onSetSimpleProperty,this)}),fc.forEach(t=>{this.on(`set_${t}`,this.onSetComplexProperty,this)}),pc.forEach(t=>{this.on(`set_${t}`,this.onSetGraphProperty,this)})}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set autoPlay(t){this._setValue("autoPlay",t)}get autoPlay(){return this.data.autoPlay}set numParticles(t){this._setValue("numParticles",t)}get numParticles(){return this.data.numParticles}set lifetime(t){this._setValue("lifetime",t)}get lifetime(){return this.data.lifetime}set rate(t){this._setValue("rate",t)}get rate(){return this.data.rate}set rate2(t){this._setValue("rate2",t)}get rate2(){return this.data.rate2}set startAngle(t){this._setValue("startAngle",t)}get startAngle(){return this.data.startAngle}set startAngle2(t){this._setValue("startAngle2",t)}get startAngle2(){return this.data.startAngle2}set loop(t){this._setValue("loop",t)}get loop(){return this.data.loop}set preWarm(t){this._setValue("preWarm",t)}get preWarm(){return this.data.preWarm}set lighting(t){this._setValue("lighting",t)}get lighting(){return this.data.lighting}set halfLambert(t){this._setValue("halfLambert",t)}get halfLambert(){return this.data.halfLambert}set intensity(t){this._setValue("intensity",t)}get intensity(){return this.data.intensity}set depthWrite(t){this._setValue("depthWrite",t)}get depthWrite(){return this.data.depthWrite}set noFog(t){this._setValue("noFog",t)}get noFog(){return this.data.noFog}set depthSoftening(t){this._setValue("depthSoftening",t)}get depthSoftening(){return this.data.depthSoftening}set sort(t){this._setValue("sort",t)}get sort(){return this.data.sort}set blendType(t){this._setValue("blendType",t)}get blendType(){return this.data.blendType}set stretch(t){this._setValue("stretch",t)}get stretch(){return this.data.stretch}set alignToMotion(t){this._setValue("alignToMotion",t)}get alignToMotion(){return this.data.alignToMotion}set emitterShape(t){this._setValue("emitterShape",t)}get emitterShape(){return this.data.emitterShape}set emitterExtents(t){this._setValue("emitterExtents",t)}get emitterExtents(){return this.data.emitterExtents}set emitterExtentsInner(t){this._setValue("emitterExtentsInner",t)}get emitterExtentsInner(){return this.data.emitterExtentsInner}set emitterRadius(t){this._setValue("emitterRadius",t)}get emitterRadius(){return this.data.emitterRadius}set emitterRadiusInner(t){this._setValue("emitterRadiusInner",t)}get emitterRadiusInner(){return this.data.emitterRadiusInner}set initialVelocity(t){this._setValue("initialVelocity",t)}get initialVelocity(){return this.data.initialVelocity}set wrap(t){this._setValue("wrap",t)}get wrap(){return this.data.wrap}set wrapBounds(t){this._setValue("wrapBounds",t)}get wrapBounds(){return this.data.wrapBounds}set localSpace(t){this._setValue("localSpace",t)}get localSpace(){return this.data.localSpace}set screenSpace(t){this._setValue("screenSpace",t)}get screenSpace(){return this.data.screenSpace}set colorMapAsset(t){this._setValue("colorMapAsset",t)}get colorMapAsset(){return this.data.colorMapAsset}set normalMapAsset(t){this._setValue("normalMapAsset",t)}get normalMapAsset(){return this.data.normalMapAsset}set mesh(t){this._setValue("mesh",t)}get mesh(){return this.data.mesh}set meshAsset(t){this._setValue("meshAsset",t)}get meshAsset(){return this.data.meshAsset}set renderAsset(t){this._setValue("renderAsset",t)}get renderAsset(){return this.data.renderAsset}set orientation(t){this._setValue("orientation",t)}get orientation(){return this.data.orientation}set particleNormal(t){this._setValue("particleNormal",t)}get particleNormal(){return this.data.particleNormal}set localVelocityGraph(t){this._setValue("localVelocityGraph",t)}get localVelocityGraph(){return this.data.localVelocityGraph}set localVelocityGraph2(t){this._setValue("localVelocityGraph2",t)}get localVelocityGraph2(){return this.data.localVelocityGraph2}set velocityGraph(t){this._setValue("velocityGraph",t)}get velocityGraph(){return this.data.velocityGraph}set velocityGraph2(t){this._setValue("velocityGraph2",t)}get velocityGraph2(){return this.data.velocityGraph2}set rotationSpeedGraph(t){this._setValue("rotationSpeedGraph",t)}get rotationSpeedGraph(){return this.data.rotationSpeedGraph}set rotationSpeedGraph2(t){this._setValue("rotationSpeedGraph2",t)}get rotationSpeedGraph2(){return this.data.rotationSpeedGraph2}set radialSpeedGraph(t){this._setValue("radialSpeedGraph",t)}get radialSpeedGraph(){return this.data.radialSpeedGraph}set radialSpeedGraph2(t){this._setValue("radialSpeedGraph2",t)}get radialSpeedGraph2(){return this.data.radialSpeedGraph2}set scaleGraph(t){this._setValue("scaleGraph",t)}get scaleGraph(){return this.data.scaleGraph}set scaleGraph2(t){this._setValue("scaleGraph2",t)}get scaleGraph2(){return this.data.scaleGraph2}set colorGraph(t){this._setValue("colorGraph",t)}get colorGraph(){return this.data.colorGraph}set colorGraph2(t){this._setValue("colorGraph2",t)}get colorGraph2(){return this.data.colorGraph2}set alphaGraph(t){this._setValue("alphaGraph",t)}get alphaGraph(){return this.data.alphaGraph}set alphaGraph2(t){this._setValue("alphaGraph2",t)}get alphaGraph2(){return this.data.alphaGraph2}set colorMap(t){this._setValue("colorMap",t)}get colorMap(){return this.data.colorMap}set normalMap(t){this._setValue("normalMap",t)}get normalMap(){return this.data.normalMap}set animTilesX(t){this._setValue("animTilesX",t)}get animTilesX(){return this.data.animTilesX}set animTilesY(t){this._setValue("animTilesY",t)}get animTilesY(){return this.data.animTilesY}set animStartFrame(t){this._setValue("animStartFrame",t)}get animStartFrame(){return this.data.animStartFrame}set animNumFrames(t){this._setValue("animNumFrames",t)}get animNumFrames(){return this.data.animNumFrames}set animNumAnimations(t){this._setValue("animNumAnimations",t)}get animNumAnimations(){return this.data.animNumAnimations}set animIndex(t){this._setValue("animIndex",t)}get animIndex(){return this.data.animIndex}set randomizeAnimIndex(t){this._setValue("randomizeAnimIndex",t)}get randomizeAnimIndex(){return this.data.randomizeAnimIndex}set animSpeed(t){this._setValue("animSpeed",t)}get animSpeed(){return this.data.animSpeed}set animLoop(t){this._setValue("animLoop",t)}get animLoop(){return this.data.animLoop}set layers(t){this._setValue("layers",t)}get layers(){return this.data.layers}set drawOrder(t){this._drawOrder=t,this.emitter&&(this.emitter.drawOrder=t)}get drawOrder(){return this._drawOrder}_setValue(t,e){const s=this.data,i=s[t];s[t]=e,this.fire("set",t,i,e)}addMeshInstanceToLayers(){if(this.emitter)for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);e&&(e.addMeshInstances([this.emitter.meshInstance]),this.emitter._layer=e)}}removeMeshInstanceFromLayers(){if(this.emitter)for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);e&&e.removeMeshInstances([this.emitter.meshInstance])}}onSetLayers(t,e,s){if(this.emitter){for(let t=0;t<e.length;t++){const s=this.system.app.scene.layers.getLayerById(e[t]);s&&s.removeMeshInstances([this.emitter.meshInstance])}if(this.enabled&&this.entity.enabled)for(let t=0;t<s.length;t++){const e=this.system.app.scene.layers.getLayerById(s[t]);e&&e.addMeshInstances([this.emitter.meshInstance])}}}onLayersChanged(t,e){this.addMeshInstanceToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){if(!this.emitter)return;this.layers.indexOf(t.id)<0||t.addMeshInstances([this.emitter.meshInstance])}onLayerRemoved(t){if(!this.emitter)return;this.layers.indexOf(t.id)<0||t.removeMeshInstances([this.emitter.meshInstance])}_bindColorMapAsset(t){if(t.on("load",this._onColorMapAssetLoad,this),t.on("unload",this._onColorMapAssetUnload,this),t.on("remove",this._onColorMapAssetRemove,this),t.on("change",this._onColorMapAssetChange,this),t.resource)this._onColorMapAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindColorMapAsset(t){t.off("load",this._onColorMapAssetLoad,this),t.off("unload",this._onColorMapAssetUnload,this),t.off("remove",this._onColorMapAssetRemove,this),t.off("change",this._onColorMapAssetChange,this)}_onColorMapAssetLoad(t){this.colorMap=t.resource}_onColorMapAssetUnload(t){this.colorMap=null}_onColorMapAssetRemove(t){this._onColorMapAssetUnload(t)}_onColorMapAssetChange(t){}onSetColorMapAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&this._unbindColorMapAsset(t)}if(s){s instanceof Kn.V&&(this.data.colorMapAsset=s.id,s=s.id);const t=i.get(s);t?this._bindColorMapAsset(t):i.once(`add:${s}`,t=>{this._bindColorMapAsset(t)})}else this.colorMap=null}_bindNormalMapAsset(t){if(t.on("load",this._onNormalMapAssetLoad,this),t.on("unload",this._onNormalMapAssetUnload,this),t.on("remove",this._onNormalMapAssetRemove,this),t.on("change",this._onNormalMapAssetChange,this),t.resource)this._onNormalMapAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindNormalMapAsset(t){t.off("load",this._onNormalMapAssetLoad,this),t.off("unload",this._onNormalMapAssetUnload,this),t.off("remove",this._onNormalMapAssetRemove,this),t.off("change",this._onNormalMapAssetChange,this)}_onNormalMapAssetLoad(t){this.normalMap=t.resource}_onNormalMapAssetUnload(t){this.normalMap=null}_onNormalMapAssetRemove(t){this._onNormalMapAssetUnload(t)}_onNormalMapAssetChange(t){}onSetNormalMapAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&this._unbindNormalMapAsset(t)}if(s){s instanceof Kn.V&&(this.data.normalMapAsset=s.id,s=s.id);const t=i.get(s);t?this._bindNormalMapAsset(t):i.once(`add:${s}`,t=>{this._bindNormalMapAsset(t)})}else this.normalMap=null}_bindMeshAsset(t){if(t.on("load",this._onMeshAssetLoad,this),t.on("unload",this._onMeshAssetUnload,this),t.on("remove",this._onMeshAssetRemove,this),t.on("change",this._onMeshAssetChange,this),t.resource)this._onMeshAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindMeshAsset(t){t.off("load",this._onMeshAssetLoad,this),t.off("unload",this._onMeshAssetUnload,this),t.off("remove",this._onMeshAssetRemove,this),t.off("change",this._onMeshAssetChange,this)}_onMeshAssetLoad(t){this._onMeshChanged(t.resource)}_onMeshAssetUnload(t){this.mesh=null}_onMeshAssetRemove(t){this._onMeshAssetUnload(t)}_onMeshAssetChange(t){}onSetMeshAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&this._unbindMeshAsset(t)}if(s){s instanceof Kn.V&&(this.data.meshAsset=s.id,s=s.id);const t=i.get(s);t&&this._bindMeshAsset(t)}else this._onMeshChanged(null)}onSetMesh(t,e,s){!s||s instanceof Kn.V||"number"==typeof s?this.meshAsset=s:this._onMeshChanged(s)}_onMeshChanged(t){!t||t instanceof Us||(t=t.meshInstances[0]?t.meshInstances[0].mesh:null),this.data.mesh=t,this.emitter&&(this.emitter.mesh=t,this.emitter.resetMaterial(),this.rebuild())}onSetRenderAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);t&&this._unbindRenderAsset(t)}if(s){s instanceof Kn.V&&(this.data.renderAsset=s.id,s=s.id);const t=i.get(s);t&&this._bindRenderAsset(t)}else this._onRenderChanged(null)}_bindRenderAsset(t){if(t.on("load",this._onRenderAssetLoad,this),t.on("unload",this._onRenderAssetUnload,this),t.on("remove",this._onRenderAssetRemove,this),t.resource)this._onRenderAssetLoad(t);else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindRenderAsset(t){t.off("load",this._onRenderAssetLoad,this),t.off("unload",this._onRenderAssetUnload,this),t.off("remove",this._onRenderAssetRemove,this),this._evtSetMeshes?.off(),this._evtSetMeshes=null}_onRenderAssetLoad(t){this._onRenderChanged(t.resource)}_onRenderAssetUnload(t){this._onRenderChanged(null)}_onRenderAssetRemove(t){this._onRenderAssetUnload(t)}_onRenderChanged(t){t?(this._evtSetMeshes?.off(),this._evtSetMeshes=t.on("set:meshes",this._onRenderSetMeshes,this),t.meshes&&this._onRenderSetMeshes(t.meshes)):this._onMeshChanged(null)}_onRenderSetMeshes(t){this._onMeshChanged(t&&t[0])}onSetLoop(t,e,s){this.emitter&&(this.emitter[t]=s,this.emitter.resetTime())}onSetBlendType(t,e,s){this.emitter&&(this.emitter[t]=s,this.emitter.material.blendType=s,this.emitter.resetMaterial(),this.rebuild())}_requestDepth(){this._requestedDepth||(_c||(_c=this.system.app.scene.layers.getLayerById(F.$9T)),_c&&(_c.incrementCounter(),this._requestedDepth=!0))}_releaseDepth(){this._requestedDepth&&_c&&(_c.decrementCounter(),this._requestedDepth=!1)}onSetDepthSoftening(t,e,s){e!==s&&(s?(this.enabled&&this.entity.enabled&&this._requestDepth(),this.emitter&&(this.emitter[t]=s)):(this.enabled&&this.entity.enabled&&this._releaseDepth(),this.emitter&&(this.emitter[t]=s)),this.emitter&&(this.reset(),this.emitter.resetMaterial(),this.rebuild()))}onSetSimpleProperty(t,e,s){this.emitter&&(this.emitter[t]=s,this.emitter.resetMaterial())}onSetComplexProperty(t,e,s){this.emitter&&(this.emitter[t]=s,this.emitter.resetMaterial(),this.rebuild(),this.reset())}onSetGraphProperty(t,e,s){this.emitter&&(this.emitter[t]=s,this.emitter.rebuildGraphs(),this.emitter.resetMaterial())}onEnable(){const t=this.system.app.scene,e=t.layers,s=this.data;for(let i=0,n=mc.length;i<n;i++){let t=s[mc[i]];if(t){if(!(t instanceof Kn.V)){if(!(parseInt(t,10)>=0))continue;t=this.system.app.assets.get(t)}t&&!t.resource&&this.system.app.assets.load(t)}}if(!this.system.app.graphicsDevice.disableParticleSystem){if(!this.emitter){let t=s.mesh;t instanceof Us||(t=null),this.emitter=new dc(this.system.app.graphicsDevice,{numParticles:s.numParticles,emitterExtents:s.emitterExtents,emitterExtentsInner:s.emitterExtentsInner,emitterRadius:s.emitterRadius,emitterRadiusInner:s.emitterRadiusInner,emitterShape:s.emitterShape,initialVelocity:s.initialVelocity,wrap:s.wrap,localSpace:s.localSpace,screenSpace:s.screenSpace,wrapBounds:s.wrapBounds,lifetime:s.lifetime,rate:s.rate,rate2:s.rate2,orientation:s.orientation,particleNormal:s.particleNormal,animTilesX:s.animTilesX,animTilesY:s.animTilesY,animStartFrame:s.animStartFrame,animNumFrames:s.animNumFrames,animNumAnimations:s.animNumAnimations,animIndex:s.animIndex,randomizeAnimIndex:s.randomizeAnimIndex,animSpeed:s.animSpeed,animLoop:s.animLoop,startAngle:s.startAngle,startAngle2:s.startAngle2,scaleGraph:s.scaleGraph,scaleGraph2:s.scaleGraph2,colorGraph:s.colorGraph,colorGraph2:s.colorGraph2,alphaGraph:s.alphaGraph,alphaGraph2:s.alphaGraph2,localVelocityGraph:s.localVelocityGraph,localVelocityGraph2:s.localVelocityGraph2,velocityGraph:s.velocityGraph,velocityGraph2:s.velocityGraph2,rotationSpeedGraph:s.rotationSpeedGraph,rotationSpeedGraph2:s.rotationSpeedGraph2,radialSpeedGraph:s.radialSpeedGraph,radialSpeedGraph2:s.radialSpeedGraph2,colorMap:s.colorMap,normalMap:s.normalMap,loop:s.loop,preWarm:s.preWarm,sort:s.sort,stretch:s.stretch,alignToMotion:s.alignToMotion,lighting:s.lighting,halfLambert:s.halfLambert,intensity:s.intensity,depthSoftening:s.depthSoftening,scene:this.system.app.scene,mesh:t,depthWrite:s.depthWrite,noFog:s.noFog,node:this.entity,blendType:s.blendType}),this.emitter.meshInstance.node=this.entity,this.emitter.drawOrder=this.drawOrder,s.autoPlay||(this.pause(),this.emitter.meshInstance.visible=!1)}this.emitter.colorMap&&this.addMeshInstanceToLayers(),this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this),e&&(this._evtLayerAdded=e.on("add",this.onLayerAdded,this),this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&s.depthSoftening&&this._requestDepth()}}onDisable(){const t=this.system.app.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,t&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this.emitter&&(this.removeMeshInstanceFromLayers(),this.data.depthSoftening&&this._releaseDepth(),this.emitter.camera=null)}onBeforeRemove(){this.enabled&&(this.enabled=!1),this.emitter&&(this.emitter.destroy(),this.emitter=null);for(let t=0;t<mc.length;t++){const e=mc[t];this.data[e]&&(this[e]=null)}this.off()}reset(){this.emitter&&this.emitter.reset()}stop(){this.emitter&&(this.emitter.loop=!1,this.emitter.resetTime(),this.emitter.addTime(0,!0))}pause(){this.data.paused=!0}unpause(){this.data.paused=!1}play(){this.data.paused=!1,this.emitter&&(this.emitter.meshInstance.visible=!0,this.emitter.loop=this.data.loop,this.emitter.resetTime())}isPlaying(){return!this.data.paused&&(!(!this.emitter||!this.emitter.loop)||Date.now()<=this.emitter.endTime)}setInTools(){const{emitter:t}=this;t&&!t.inTools&&(t.inTools=!0,this.rebuild())}rebuild(){const t=this.enabled;this.enabled=!1,this.emitter&&this.emitter.rebuild(),this.enabled=t}}class vc{constructor(){this.numParticles=1,this.rate=1,this.rate2=null,this.startAngle=0,this.startAngle2=null,this.lifetime=50,this.emitterExtents=new l.e,this.emitterExtentsInner=new l.e,this.emitterRadius=0,this.emitterRadiusInner=0,this.emitterShape=F.Qlj,this.initialVelocity=0,this.wrap=!1,this.wrapBounds=new l.e,this.localSpace=!1,this.screenSpace=!1,this.colorMap=null,this.colorMapAsset=null,this.normalMap=null,this.normalMapAsset=null,this.loop=!0,this.preWarm=!1,this.sort=0,this.mode=F.JQq,this.scene=null,this.lighting=!1,this.halfLambert=!1,this.intensity=1,this.stretch=0,this.alignToMotion=!1,this.depthSoftening=0,this.renderAsset=null,this.meshAsset=null,this.mesh=null,this.depthWrite=!1,this.noFog=!1,this.orientation=F.gpt,this.particleNormal=new l.e(0,1,0),this.animTilesX=1,this.animTilesY=1,this.animStartFrame=0,this.animNumFrames=1,this.animNumAnimations=1,this.animIndex=0,this.randomizeAnimIndex=!1,this.animSpeed=1,this.animLoop=!0,this.scaleGraph=null,this.scaleGraph2=null,this.colorGraph=null,this.colorGraph2=null,this.alphaGraph=null,this.alphaGraph2=null,this.localVelocityGraph=null,this.localVelocityGraph2=null,this.velocityGraph=null,this.velocityGraph2=null,this.rotationSpeedGraph=null,this.rotationSpeedGraph2=null,this.radialSpeedGraph=null,this.radialSpeedGraph2=null,this.blendType=F.i96,this.enabled=!0,this.paused=!1,this.autoPlay=!0,this.layers=[F.uEK]}}const Sc={particlePS:"\nvarying vec4 texCoordsAlphaLife;\nuniform sampler2D colorMap;\nuniform sampler2D colorParam;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nuniform float softening;\nuniform float colorMult;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvoid main(void) {\n\tvec4 tex  = texture2D(colorMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y));\n\tvec4 ramp = texture2D(colorParam, vec2(texCoordsAlphaLife.w, 0.0));\n\tramp.rgb *= colorMult;\n\tramp.a += texCoordsAlphaLife.z;\n\tvec3 rgb = tex.rgb * ramp.rgb;\n\tfloat a  = tex.a * ramp.a;\n",particleVS:"\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc) {\n\treturn mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );\n}\nvec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex,tc);\n\tvec4 b = texture2D(tex,tc + graphSampleSize);\n\tfloat c = fract(tc.x*graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a, b, c);\n}\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY) {\n\t#ifdef SCREEN_SPACE\n\t\tvec3 pos = vec3(-1, 0, 0) * quadXY.x + vec3(0, -1, 0) * quadXY.y;\n\t#else\n\t\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\t#endif\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY) {\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvec2 safeNormalize(vec2 v) {\n\tfloat l = length(v);\n\treturn (l > 1e-06) ? v / l : v;\n}\nvoid main(void) {\n\tvec3 meshLocalPos = particle_vertexData.xyz;\n\tfloat id = floor(particle_vertexData.w);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\tfloat uv = id / numParticlesPot;\n\treadInput(uv);\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = safeNormalize((mat3(matrix_view) * inVel).xy);\n\tfloat particleLifetime = lifetime;\n\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow)\n\t\tmeshLocalPos = vec3(0.0);\n\tvec2 quadXY = meshLocalPos.xy;\n\tfloat nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n\tvec3 paramDiv;\n\tvec4 params = tex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);\n\tfloat scale = params.y;\n\tfloat scaleDiv = paramDiv.x;\n\tfloat alphaDiv = paramDiv.z;\n\tscale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);\n#ifndef USE_MESH\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#else\n\ttexCoordsAlphaLife = vec4(particle_uv, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#endif\n\tvec3 particlePos = inPos;\n\tvec3 particlePosMoved = vec3(0.0);\n\tmat2 rotMatrix;\n",particleAnimFrameClampVS:"\n\tfloat animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.y) + animTexParams.x, animTexParams.z);\n",particleAnimFrameLoopVS:"\n\tfloat animFrame = floor(mod(texCoordsAlphaLife.w * animTexParams.y + animTexParams.x, animTexParams.z + 1.0));\n",particleAnimTexVS:"\n\tfloat animationIndex;\n\tif (animTexIndexParams.y == 1.0) {\n\t\tanimationIndex = floor((animTexParams.w + 1.0) * rndFactor3.z) * (animTexParams.z + 1.0);\n\t} else {\n\t\tanimationIndex = animTexIndexParams.x * (animTexParams.z + 1.0);\n\t}\n\tfloat atlasX = (animationIndex + animFrame) * animTexTilesParams.x;\n\tfloat atlasY = 1.0 - floor(atlasX + 1.0) * animTexTilesParams.y;\n\tatlasX = fract(atlasX);\n\ttexCoordsAlphaLife.xy *= animTexTilesParams.xy;\n\ttexCoordsAlphaLife.xy += vec2(atlasX, atlasY);\n",particleInputFloatPS:"\nvoid readInput(float uv) {\n\tvec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));\n\tinPos = tex.xyz;\n\tinVel = tex2.xyz;\n\tinAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;\n\tinShow = tex.w >= 0.0;\n\tinLife = tex2.w;\n}\n",particleInputRgba8PS:"\n#define PI2 6.283185307179586\nuniform vec3 inBoundsSize;\nuniform vec3 inBoundsCenter;\nuniform float maxVel;\nfloat decodeFloatRG(vec2 rg) {\n\treturn rg.y * (1.0 / 255.0) + rg.x;\n}\nfloat decodeFloatRGBA( vec4 rgba ) {\n\treturn dot(rgba, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nvoid readInput(float uv) {\n\tvec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));\n\tvec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));\n\tvec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));\n\tinPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n\tinPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;\n\tinVel = tex2.xyz;\n\tinVel = (inVel - vec3(0.5)) * maxVel;\n\tinAngle = decodeFloatRG(tex1.ba) * PI2;\n\tinShow = tex2.a > 0.5;\n\tinLife = decodeFloatRGBA(tex3);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\tinLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;\n}\n",particleOutputFloatPS:"\nvoid writeOutput() {\n\tif (gl_FragCoord.y<1.0) {\n\t\tgl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);\n\t} else {\n\t\tgl_FragColor = vec4(outVel, outLife);\n\t}\n}\n",particleOutputRgba8PS:"\nuniform vec3 outBoundsMul;\nuniform vec3 outBoundsAdd;\nvec2 encodeFloatRG( float v ) {\n\tvec2 enc = vec2(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\treturn enc;\n}\nvec4 encodeFloatRGBA( float v ) {\n\tvec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n\treturn enc;\n}\nvoid writeOutput() {\n\toutPos = outPos * outBoundsMul + outBoundsAdd;\n\toutAngle = fract(outAngle / PI2);\n\toutVel = (outVel / maxVel) + vec3(0.5);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\tif (gl_FragCoord.y < 1.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t} else if (gl_FragCoord.y < 2.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t} else if (gl_FragCoord.y < 3.0) {\n\t\tgl_FragColor = vec4(outVel, visMode*0.5+0.5);\n\t} else {\n\t\tgl_FragColor = encodeFloatRGBA(outLife);\n\t}\n}\n",particleUpdaterAABBPS:"\nuniform mat3 spawnBounds;\nuniform vec3 spawnPosInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tvec3 pos = inBounds - vec3(0.5);\n\tvec3 posAbs = abs(pos);\n\tvec3 maxPos = vec3(max(posAbs.x, max(posAbs.y, posAbs.z)));\n\tvec3 edge = maxPos + (vec3(0.5) - maxPos) * spawnPosInnerRatio;\n\tpos.x = edge.x * (maxPos.x == posAbs.x ? sign(pos.x) : 2.0 * pos.x);\n\tpos.y = edge.y * (maxPos.y == posAbs.y ? sign(pos.y) : 2.0 * pos.y);\n\tpos.z = edge.z * (maxPos.z == posAbs.z ? sign(pos.z) : 2.0 * pos.z);\n#ifndef LOCAL_SPACE\n\treturn emitterPos + spawnBounds * pos;\n#else\n\treturn spawnBounds * pos;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity -= vec3(0, 0, initialVelocity);\n}\n",particleUpdaterEndPS:"\n\twriteOutput();\n}\n",particleUpdaterInitPS:"\nvarying vec2 vUv0;\nuniform highp sampler2D particleTexIN;\nuniform highp sampler2D internalTex0;\nuniform highp sampler2D internalTex1;\nuniform highp sampler2D internalTex2;\nuniform highp sampler2D internalTex3;\nuniform mat3 emitterMatrix;\nuniform mat3 emitterMatrixInv;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos;\nuniform vec3 frameRandom;\nuniform vec3 localVelocityDivMult;\nuniform vec3 velocityDivMult;\nuniform float delta;\nuniform float rate;\nuniform float rateDiv;\nuniform float lifetime;\nuniform float numParticles;\nuniform float rotSpeedDivMult;\nuniform float radialSpeedDivMult;\nuniform float seed;\nuniform float startAngle;\nuniform float startAngle2;\nuniform float initialVelocity;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\nfloat visMode;\nvec3 outPos;\nvec3 outVel;\nfloat outAngle;\nbool outShow;\nfloat outLife;\n",particleUpdaterNoRespawnPS:"\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = -1.0;\n\t}\n",particleUpdaterOnStopPS:"\n\tvisMode = outLife < 0.0? -1.0: visMode;\n",particleUpdaterRespawnPS:"\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = 1.0;\n\t}\n\tvisMode = outLife < 0.0? 1.0: visMode;\n",particleUpdaterSpherePS:"\nuniform float spawnBoundsSphere;\nuniform float spawnBoundsSphereInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tfloat rnd4 = fract(rndFactor * 1000.0);\n\tvec3 norm = normalize(inBounds.xyz - vec3(0.5));\n\tfloat r = rnd4 * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;\n#ifndef LOCAL_SPACE\n\treturn emitterPos + norm * r * spawnBoundsSphere;\n#else\n\treturn norm * r * spawnBoundsSphere;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;\n}\n",particleUpdaterStartPS:"\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nvec3 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex, tc);\n\tvec4 b = texture2D(tex, tc + graphSampleSize);\n\tfloat c = fract(tc.x * graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a.xyz, b.xyz, c);\n}\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\nvec4 hash41(float p) {\n\tvec4 p4 = fract(vec4(p) * HASHSCALE4);\n\tp4 += dot(p4, p4.wzxy+19.19);\n\treturn fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\nvoid main(void) {\n\tif (gl_FragCoord.x > numParticles) discard;\n\treadInput(vUv0.x);\n\tvisMode = inShow? 1.0 : -1.0;\n\tvec4 rndFactor = hash41(gl_FragCoord.x + seed);\n\tfloat particleRate = rate + rateDiv * rndFactor.x;\n\toutLife = inLife + delta;\n\tfloat nlife = clamp(outLife / lifetime, 0.0, 1.0);\n\tvec3 localVelocityDiv;\n\tvec3 velocityDiv;\n\tvec3 paramDiv;\n\tvec3 localVelocity = tex1Dlod_lerp(TEXTURE_PASS(internalTex0), vec2(nlife, 0), localVelocityDiv);\n\tvec3 velocity =\t  tex1Dlod_lerp(TEXTURE_PASS(internalTex1), vec2(nlife, 0), velocityDiv);\n\tvec3 params =\t\ttex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);\n\tfloat rotSpeed = params.x;\n\tfloat rotSpeedDiv = paramDiv.y;\n\tvec3 radialParams = tex1Dlod_lerp(TEXTURE_PASS(internalTex3), vec2(nlife, 0), paramDiv);\n\tfloat radialSpeed = radialParams.x;\n\tfloat radialSpeedDiv = radialParams.y;\n\tbool respawn = inLife <= 0.0 || outLife >= lifetime;\n\tinPos = respawn ? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : inPos;\n\tinAngle = respawn ? mix(startAngle, startAngle2, rndFactor.x) : inAngle;\n#ifndef LOCAL_SPACE\n\tvec3 radialVel = inPos - emitterPos;\n#else\n\tvec3 radialVel = inPos;\n#endif\n\tradialVel = (dot(radialVel, radialVel) > 1.0E-8) ? radialSpeed * normalize(radialVel) : vec3(0.0);\n\tradialVel += (radialSpeedDiv * vec3(2.0) - vec3(1.0)) * radialSpeedDivMult * rndFactor.xyz;\n\tlocalVelocity +=\t(localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;\n\tvelocity +=\t\t (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;\n\trotSpeed +=\t\t (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;\n\taddInitialVelocity(localVelocity, rndFactor.xyz);\n#ifndef LOCAL_SPACE\n\toutVel = emitterMatrix * localVelocity + (radialVel + velocity) * emitterScale;\n#else\n\toutVel = (localVelocity + radialVel) / emitterScale + emitterMatrixInv * velocity;\n#endif\n\toutPos = inPos + outVel * delta;\n\toutAngle = inAngle + rotSpeed * delta;\n",particle_billboardVS:"\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = billboard(particlePos, quadXY);\n",particle_blendAddPS:"\n\tdBlendModeFogFactor = 0.0;\n\trgb *= saturate(gammaCorrectInput(max(a, 0.0)));\n\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;\n",particle_blendMultiplyPS:"\n\trgb = mix(vec3(1.0), rgb, vec3(a));\n\tif (rgb.r + rgb.g + rgb.b > 2.99) discard;\n",particle_blendNormalPS:"\n\tif (a < 0.01) discard;\n",particle_cpuVS:"\nattribute vec4 particle_vertexData;\nattribute vec4 particle_vertexData2;\nattribute vec4 particle_vertexData3;\nattribute float particle_vertexData4;\n#ifndef USE_MESH\n\tattribute vec2 particle_vertexData5;\n#else\n\tattribute vec4 particle_vertexData5;\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\nuniform float numParticles;\nuniform float lifetime;\nuniform float stretch;\nuniform float seed;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale;\nuniform vec3 faceTangent;\nuniform vec3 faceBinorm;\n#ifdef PARTICLE_GPU\n\tuniform highp sampler2D internalTex0;\n\tuniform highp sampler2D internalTex1;\n\tuniform highp sampler2D internalTex2;\n#endif\nuniform vec3 emitterPos;\nvarying vec4 texCoordsAlphaLife;\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)\n{\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvoid main(void)\n{\n\tvec3 particlePos = particle_vertexData.xyz;\n\tvec3 inPos = particlePos;\n\tvec3 vertPos = particle_vertexData3.xyz;\n\tvec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData5.x);\n\tfloat id = floor(particle_vertexData4);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = normalize((mat3(matrix_view) * inVel).xy);\n\tvec2 quadXY = vertPos.xy;\n#ifdef USE_MESH\n\ttexCoordsAlphaLife = vec4(particle_vertexData5.zw, particle_vertexData2.z, particle_vertexData.w);\n#else\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);\n#endif\n\tmat2 rotMatrix;\n\tfloat inAngle = particle_vertexData2.x;\n\tvec3 particlePosMoved = vec3(0.0);\n\tvec3 meshLocalPos = particle_vertexData3.xyz;\n",particle_cpu_endVS:"\n\tlocalPos *= particle_vertexData2.y * emitterScale;\n\tlocalPos += particlePos;\n\tgl_Position = matrix_viewProjection * vec4(localPos, 1.0);\n",particle_customFaceVS:"\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = customFace(particlePos, quadXY);\n",particle_endPS:"\n\trgb = addFog(rgb);\n\trgb = toneMap(rgb);\n\trgb = gammaCorrectOutput(rgb);\n\tgl_FragColor = vec4(rgb, a);\n}\n",particle_endVS:"\n\tlocalPos *= scale * emitterScale;\n\tlocalPos += particlePos;\n\t#ifdef SCREEN_SPACE\n\tgl_Position = vec4(localPos.x, localPos.y, 0.0, 1.0);\n\t#else\n\tgl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);\n\t#endif\n",particle_halflambertPS:"\n\tvec3 negNormal = normal * 0.5 + 0.5;\n\tvec3 posNormal = -normal * 0.5 + 0.5;\n\tnegNormal *= negNormal;\n\tposNormal *= posNormal;\n",particle_initVS:"\nattribute vec4 particle_vertexData;\n#if defined(USE_MESH)\n\t#if defined(USE_MESH_UV)\n\t\tattribute vec2 particle_uv;\n\t#else\n\t\tvec2 particle_uv = vec2(0.0, 0.0);\n\t#endif\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform float numParticles;\nuniform float numParticlesPot;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nuniform float stretch;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos;\nuniform vec3 faceTangent;\nuniform vec3 faceBinorm;\nuniform float rate;\nuniform float rateDiv;\nuniform float lifetime;\nuniform float deltaRandomnessStatic;\nuniform float scaleDivMult;\nuniform float alphaDivMult;\nuniform float seed;\nuniform float delta;\nuniform sampler2D particleTexOUT;\nuniform sampler2D particleTexIN;\n#ifdef PARTICLE_GPU\n\tuniform highp sampler2D internalTex0;\n\tuniform highp sampler2D internalTex1;\n\tuniform highp sampler2D internalTex2;\n#endif\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nvarying vec4 texCoordsAlphaLife;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\n",particle_lambertPS:"\n\tvec3 negNormal = max(normal, vec3(0.0));\n\tvec3 posNormal = max(-normal, vec3(0.0));\n",particle_lightingPS:"\n\tvec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +\n\t\t\t\t\t\tnegNormal.y*lightCube[2] + posNormal.y*lightCube[3] +\n\t\t\t\t\t\tnegNormal.z*lightCube[4] + posNormal.z*lightCube[5];\n\trgb *= light;\n",particle_localShiftVS:"\n\tparticlePos = (matrix_model * vec4(particlePos, 1.0)).xyz;\n",particle_meshVS:"\n\tvec3 localPos = meshLocalPos;\n\tlocalPos.xy = rotate(localPos.xy, inAngle, rotMatrix);\n\tlocalPos.yz = rotate(localPos.yz, inAngle, rotMatrix);\n\tbillboard(particlePos, quadXY);\n",particle_normalVS:"\n\tNormal = normalize(localPos + matrix_viewInverse[2].xyz);\n",particle_normalMapPS:"\n\tvec3 normalMap = normalize(texture2D(normalMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y)).xyz * 2.0 - 1.0);\n\tvec3 normal = ParticleMat * normalMap;\n",particle_pointAlongVS:"\n\tinAngle = atan(velocityV.x, velocityV.y);\n",particle_simulationPS:'\n\t#include "particleUpdaterInitPS"\n\t#ifdef PACK8\n\t\t#include "particleInputRgba8PS"\n\t\t#include "particleOutputRgba8PS"\n\t#else\n\t\t#include "particleInputFloatPS"\n\t\t#include "particleOutputFloatPS"\n\t#endif\n\t#ifdef EMITTERSHAPE_BOX\n\t\t#include "particleUpdaterAABBPS"\n\t#else\n\t\t#include "particleUpdaterSpherePS"\n\t#endif\n\t#include "particleUpdaterStartPS"\n\t#ifdef RESPAWN\n\t\t#include "particleUpdaterRespawnPS"\n\t#endif\n\t#ifdef NO_RESPAWN\n\t\t#include "particleUpdaterNoRespawnPS"\n\t#endif\n\t#ifdef ON_STOP\n\t\t#include "particleUpdaterOnStopPS"\n\t#endif\n\t#include "particleUpdaterEndPS"\n',particle_shaderPS:'\n\t#if NORMAL != NONE\n\t\t#if NORMAL == VERTEX\n\t\t\tvarying vec3 Normal;\n\t\t#endif\n\t\t#if NORMAL == MAP\n\t\t\tvarying mat3 ParticleMat;\n\t\t#endif\n\t\tuniform vec3 lightCube[6];\n\t#endif\n\t#ifdef SOFT\n\t\tvarying float vDepth;\n\t\t#include "screenDepthPS"\n\t#endif\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#include "fogPS"\n\t#if NORMAL == MAP\n\t\tuniform sampler2D normalMap;\n\t#endif\n\t#include "particlePS"\n\t#ifdef SOFT\n\t\t#include "particle_softPS"\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvec3 normal = Normal;\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_normalMapPS"\n\t#endif\n\t#if NORMAL != NONE\n\t\t#ifdef HALF_LAMBERT\n\t\t\t#include "particle_halflambertPS"\n\t\t#else\n\t\t\t#include "particle_lambertPS"\n\t\t#endif\n\t\t#include "particle_lightingPS"\n\t#endif\n\t#if BLEND == NORMAL\n\t\t#include "particle_blendNormalPS"\n\t#elif BLEND == ADDITIVE\n\t\t#include "particle_blendAddPS"\n\t#elif BLEND == MULTIPLICATIVE\n\t\t#include "particle_blendMultiplyPS"\n\t#endif\n\t#include "particle_endPS"\n',particle_shaderVS:'\n\t#ifdef ANIMTEX\n\t\tuniform vec2 animTexTilesParams;\n\t\tuniform vec4 animTexParams;\n\t\tuniform vec2 animTexIndexParams;\n\t#endif\n\t#if NORMAL == MAP\n\t\tvarying mat3 ParticleMat;\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvarying vec3 Normal;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying float vDepth;\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_initVS"\n\t\t#ifdef PACK8\n\t\t\t#include "particleInputRgba8PS"\n\t\t#else\n\t\t\t#include  "particleInputFloatPS"\n\t\t#endif\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particleVS"\n\t#else\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particle_cpuVS"\n\t#endif\n\t#ifdef LOCAL_SPACE\n\t\t#include "particle_localShiftVS"\n\t#endif\n\t#ifdef ANIMTEX\n\t\t#ifdef ANIMTEX_LOOP\n\t\t\t#include "particleAnimFrameLoopVS"\n\t\t#else\n\t\t\t#include "particleAnimFrameClampVS"\n\t\t#endif\n\t\t#include "particleAnimTexVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#ifdef WRAP\n\t\t\t#include "particle_wrapVS"\n\t\t#endif\n\t#endif\n\t#ifdef ALIGN_TO_MOTION\n\t\t#include "particle_pointAlongVS"\n\t#endif\n\t#ifdef USE_MESH\n\t\t#include "particle_meshVS"\n\t#else\n\t\t#ifdef CUSTOM_FACE\n\t\t\t#include "particle_customFaceVS"\n\t\t#else\n\t\t\t#include "particle_billboardVS"\n\t\t#endif\n\t#endif\n\t#if NORMAL == VERTEX\n\t\t#include "particle_normalVS"\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_TBNVS"\n\t#endif\n\t#ifdef STRETCH\n\t\t#include "particle_stretchVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_endVS"\n\t#else\n\t\t#include "particle_cpu_endVS"\n\t#endif\n\t#ifdef SOFT\n\t\t#include "particle_softVS"\n\t#endif\n\t}\n',particle_softPS:"\n\tfloat depth = getLinearScreenDepth();\n\tfloat particleDepth = vDepth;\n\tfloat depthDiff = saturate(abs(particleDepth - depth) * softening);\n\ta *= depthDiff;\n",particle_softVS:"\n\tvDepth = getLinearDepth(localPos);\n",particle_stretchVS:"\n\tvec3 moveDir = inVel * stretch;\n\tvec3 posPrev = particlePos - moveDir;\n\tposPrev += particlePosMoved;\n\tvec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);\n\tfloat interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n\tparticlePos = mix(particlePos, posPrev, interpolation);\n",particle_TBNVS:"\n\tmat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0, rotMatrix[1][0], rotMatrix[1][1], 0.0, 0.0, 0.0, 1.0);\n\tParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;\n",particle_wrapVS:"\n\tvec3 origParticlePos = particlePos;\n\tparticlePos -= matrix_model[3].xyz;\n\tparticlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;\n\tparticlePos += matrix_model[3].xyz;\n\tparticlePosMoved = particlePos - origParticlePos;\n"};const yc={particlePS:"\nvarying texCoordsAlphaLife: vec4f;\nvar colorMap: texture_2d<f32>;\nvar colorMapSampler: sampler;\nvar colorParam: texture_2d<f32>;\nvar colorParamSampler: sampler;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nuniform softening: f32;\nuniform colorMult: f32;\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet tex: vec4f  = textureSample(colorMap, colorMapSampler, vec2f(input.texCoordsAlphaLife.x, 1.0 - input.texCoordsAlphaLife.y));\n\tvar ramp: vec4f = textureSample(colorParam, colorParamSampler, vec2f(input.texCoordsAlphaLife.w, 0.0));\n\tramp = vec4f(ramp.rgb * uniform.colorMult, ramp.a);\n\tramp.a = ramp.a + input.texCoordsAlphaLife.z;\n\tvar rgb: vec3f = tex.rgb * ramp.rgb;\n\tvar a: f32 = tex.a * ramp.a;\n",particleVS:"\nfn unpack3NFloats(src: f32) -> vec3f {\n\tlet r = fract(src);\n\tlet g = fract(src * 256.0);\n\tlet b = fract(src * 65536.0);\n\treturn vec3f(r, g, b);\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nstruct TexLerpUnpackResult {\n\tresult: vec4f,\n\tunpacked: vec3f\n}\nfn tex1Dlod_lerp_simple(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> vec4f {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\treturn mix( textureSample(tex, texSampler, tc), textureSample(tex, texSampler, tc_next), fract(tc.x * uniform.graphNumSamples) );\n}\nfn tex1Dlod_lerp_unpack(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> TexLerpUnpackResult {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\tlet a = textureSampleLevel(tex, texSampler, tc, 0.0);\n\tlet b = textureSampleLevel(tex, texSampler, tc_next, 0.0);\n\tlet c = fract(tc.x * uniform.graphNumSamples);\n\tlet unpackedA = unpack3NFloats(a.w);\n\tlet unpackedB = unpack3NFloats(b.w);\n\tlet w_out = mix(unpackedA, unpackedB, c);\n\treturn TexLerpUnpackResult(mix(a, b, c), w_out);\n}\nstruct RotateResult {\n\trotatedVec: vec2f,\n\tmatrix: mat2x2f\n}\nfn rotateWithMatrix(quadXY: vec2f, pRotation: f32) -> RotateResult {\n\tlet c = cos(pRotation);\n\tlet s = sin(pRotation);\n\tlet m = mat2x2f(vec2f(c, -s), vec2f(s, c));\n\treturn RotateResult(m * quadXY, m);\n}\nfn billboard(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tvar pos: vec3f;\n\t#ifdef SCREEN_SPACE\n\t\tpos = vec3f(-1.0, 0.0, 0.0) * quadXY.x + vec3f(0.0, -1.0, 0.0) * quadXY.y;\n\t#else\n\t\tpos = -uniform.matrix_viewInverse[0].xyz * quadXY.x + -uniform.matrix_viewInverse[1].xyz * quadXY.y;\n\t#endif\n\treturn pos;\n}\nfn customFace(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = uniform.faceTangent * quadXY.x + uniform.faceBinorm * quadXY.y;\n\treturn pos;\n}\nfn safeNormalize(v: vec2f) -> vec2f {\n\tlet l = length(v);\n\treturn select(v, v / l, l > 1e-06);\n}\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tlet meshLocalPos_in = input.particle_vertexData.xyz;\n\tlet id = floor(input.particle_vertexData.w);\n\tlet rndFactor = fract(sin(id + 1.0 + uniform.seed));\n\tlet rndFactor3 = vec3f(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\tlet uv = id / uniform.numParticlesPot;\n\treadInput(uv);\n\t#ifdef LOCAL_SPACE\n\t\tlet modelRotation = mat3x3f(uniform.matrix_model[0].xyz, uniform.matrix_model[1].xyz, uniform.matrix_model[2].xyz);\n\t\tinVel = modelRotation * inVel;\n\t#endif\n\tlet viewRotation = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet velocityV = safeNormalize((viewRotation * inVel).xy);\n\tlet particleLifetime = uniform.lifetime;\n\tvar meshLocalPos = meshLocalPos_in;\n\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow) {\n\t\t meshLocalPos = vec3f(0.0);\n\t}\n\tlet quadXY = meshLocalPos.xy;\n\tlet nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n\tlet lerp_result = tex1Dlod_lerp_unpack(internalTex2, internalTex2Sampler, vec2f(nlife, 0.0));\n\tlet params = lerp_result.result;\n\tlet paramDiv = lerp_result.unpacked;\n\tvar scale = params.y;\n\tlet scaleDiv = paramDiv.x;\n\tlet alphaDiv = paramDiv.z;\n\tscale = scale + (scaleDiv * 2.0 - 1.0) * uniform.scaleDivMult * fract(rndFactor*10000.0);\n\t#ifndef USE_MESH\n\t\toutput.texCoordsAlphaLife = vec4f(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * uniform.alphaDivMult * fract(rndFactor*1000.0), nlife);\n\t#else\n\t\toutput.texCoordsAlphaLife = vec4f(particle_uv, (alphaDiv * 2.0 - 1.0) * uniform.alphaDivMult * fract(rndFactor*1000.0), nlife);\n\t#endif\n\tvar particlePos = inPos;\n\tvar particlePosMoved = vec3f(0.0);\n\tvar rotMatrix: mat2x2f;\n",particleAnimFrameClampVS:"\n\tlet animFrame: f32 = min(floor(input.texCoordsAlphaLife.w * uniform.animTexParams.y) + uniform.animTexParams.x, uniform.animTexParams.z);\n",particleAnimFrameLoopVS:"\n\tlet animFrame: f32 = floor((output.texCoordsAlphaLife.w * uniform.animTexParams.y + uniform.animTexParams.x) % (uniform.animTexParams.z + 1.0));\t\n",particleAnimTexVS:"\n\tvar animationIndex: f32;\n\tif (uniform.animTexIndexParams.y == 1.0) {\n\t\tanimationIndex = floor((uniform.animTexParams.w + 1.0) * rndFactor3.z) * (uniform.animTexParams.z + 1.0);\n\t} else {\n\t\tanimationIndex = uniform.animTexIndexParams.x * (uniform.animTexParams.z + 1.0);\n\t}\n\tvar atlasX: f32 = (animationIndex + animFrame) * uniform.animTexTilesParams.x;\n\tlet atlasY: f32 = 1.0 - floor(atlasX + 1.0) * uniform.animTexTilesParams.y;\n\tatlasX = fract(atlasX);\n\tlet current_tcal_xy = output.texCoordsAlphaLife.xy;\n\tlet scaled_tcal_xy = current_tcal_xy * uniform.animTexTilesParams.xy;\n\tlet final_tcal_xy = scaled_tcal_xy + vec2f(atlasX, atlasY);\n\toutput.texCoordsAlphaLife = vec4f(final_tcal_xy, output.texCoordsAlphaLife.z, output.texCoordsAlphaLife.w);\n",particleInputFloatPS:"\nfn readInput(uv: f32) {\n\tlet tex: vec4f = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.25), 0.0);\n\tlet tex2: vec4f = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.75), 0.0);\n\tinPos = tex.xyz;\n\tinVel = tex2.xyz;\n\tinAngle = abs(tex.w) - 1000.0;\n\tinShow = tex.w >= 0.0;\n\tinLife = tex2.w;\n}\n",particleInputRgba8PS:"\nconst PI2: f32 = 6.283185307179586;\nuniform inBoundsSize: vec3f;\nuniform inBoundsCenter: vec3f;\nuniform maxVel: f32;\nfn decodeFloatRG(rg: vec2f) -> f32 {\n\treturn rg.y * (1.0 / 255.0) + rg.x;\n}\nfn decodeFloatRGBA( rgba: vec4f ) -> f32 {\n\treturn dot(rgba, vec4f(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nfn readInput(uv: f32) {\n\tlet tex0 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.125), 0.0);\n\tlet tex1 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.375), 0.0);\n\tlet tex2 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.625), 0.0);\n\tlet tex3 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.875), 0.0);\n\tinPos = vec3f(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n\tinPos = (inPos - vec3f(0.5)) * uniform.inBoundsSize + uniform.inBoundsCenter;\n\tinVel = tex2.xyz;\n\tinVel = (inVel - vec3f(0.5)) * uniform.maxVel;\n\tinAngle = decodeFloatRG(tex1.ba) * PI2;\n\tinShow = tex2.a > 0.5;\n\tlet life_decoded = decodeFloatRGBA(tex3);\n\tlet maxNegLife = max(uniform.lifetime, (uniform.numParticles - 1.0) * (uniform.rate + uniform.rateDiv));\n\tlet maxPosLife = uniform.lifetime + 1.0;\n\tinLife = life_decoded * (maxNegLife + maxPosLife) - maxNegLife;\n}",particleOutputFloatPS:"\nfn getOutput() -> vec4f {\n\tif (pcPosition.y < 1.0) {\n\t\treturn vec4f(outPos, (outAngle + 1000.0) * visMode);\n\t} else {\n\t\treturn vec4f(outVel, outLife);\n\t}\n}\n",particleOutputRgba8PS:"\nuniform outBoundsMul: vec3f;\nuniform outBoundsAdd: vec3f;\nfn encodeFloatRG( v: f32 ) -> vec2f {\n\tvar enc: vec2f = vec2f(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc = enc - enc.yy * (1.0 / 255.0);\n\treturn enc;\n}\nfn encodeFloatRGBA( v: f32 ) -> vec4f {\n\tlet factors = vec4f(1.0, 255.0, 65025.0, 160581375.0);\n\tvar enc: vec4f = factors * v;\n\tenc = fract(enc);\n\tenc = enc - enc.yzww * vec4f(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n\treturn enc;\n}\nfn getOutput() -> vec4f {\n\toutPos = outPos * uniform.outBoundsMul + uniform.outBoundsAdd;\n\toutAngle = fract(outAngle / PI2);\n\toutVel = (outVel / uniform.maxVel) + vec3f(0.5);\n\tlet maxNegLife = max(uniform.lifetime, (uniform.numParticles - 1.0) * (uniform.rate + uniform.rateDiv));\n\tlet maxPosLife = uniform.lifetime + 1.0;\n\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\tif (pcPosition.y < 1.0) {\n\t\treturn vec4f(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t} else if (pcPosition.y < 2.0) {\n\t\treturn vec4f(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t} else if (pcPosition.y < 3.0) {\n\t\treturn vec4f(outVel, visMode * 0.5 + 0.5);\n\t} else {\n\t\treturn encodeFloatRGBA(outLife);\n\t}\n}\n",particleUpdaterAABBPS:"\nuniform spawnBounds: mat3x3f;\nuniform spawnPosInnerRatio: vec3f;\nfn calcSpawnPosition(inBounds: vec3f, rndFactor: f32) -> vec3f {\n\tvar pos = inBounds - vec3f(0.5);\n\tlet posAbs = abs(pos);\n\tlet maxComp = max(posAbs.x, max(posAbs.y, posAbs.z));\n\tlet maxPos = vec3f(maxComp);\n\tlet edge = maxPos + (vec3f(0.5) - maxPos) * uniform.spawnPosInnerRatio;\n\tpos.x = edge.x * select(2.0 * pos.x, sign(pos.x), maxPos.x == posAbs.x);\n\tpos.y = edge.y * select(2.0 * pos.y, sign(pos.y), maxPos.y == posAbs.y);\n\tpos.z = edge.z * select(2.0 * pos.z, sign(pos.z), maxPos.z == posAbs.z);\n\t#ifndef LOCAL_SPACE\n\t\treturn uniform.emitterPos + uniform.spawnBounds * pos;\n\t#else\n\t\treturn uniform.spawnBounds * pos;\n\t#endif\n}\nfn addInitialVelocity(localVelocity: ptr<function, vec3f>, inBounds: vec3f) {\n\t*localVelocity = *localVelocity - vec3f(0.0, 0.0, uniform.initialVelocity);\n}\n",particleUpdaterEndPS:"\n\toutput.color = getOutput();\n\treturn output;\n}\n",particleUpdaterInitPS:"\nvarying vUv0: vec2f;\nvar particleTexIN: texture_2d<f32>;\nvar particleTexINSampler: sampler;\nvar internalTex0: texture_2d<f32>;\nvar internalTex0Sampler: sampler;\nvar internalTex1: texture_2d<f32>;\nvar internalTex1Sampler: sampler;\nvar internalTex2: texture_2d<f32>;\nvar internalTex2Sampler: sampler;\nvar internalTex3: texture_2d<f32>;\nvar internalTex3Sampler: sampler;\nuniform emitterMatrix: mat3x3f;\nuniform emitterMatrixInv: mat3x3f;\nuniform emitterScale: vec3f;\nuniform emitterPos: vec3f;\nuniform frameRandom: vec3f;\nuniform localVelocityDivMult: vec3f;\nuniform velocityDivMult: vec3f;\nuniform delta: f32;\nuniform rate: f32;\nuniform rateDiv: f32;\nuniform lifetime: f32;\nuniform numParticles: f32;\nuniform rotSpeedDivMult: f32;\nuniform radialSpeedDivMult: f32;\nuniform seed: f32;\nuniform startAngle: f32;\nuniform startAngle2: f32;\nuniform initialVelocity: f32;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\nvar<private> inPos: vec3f;\nvar<private> inVel: vec3f;\nvar<private> inAngle: f32;\nvar<private> inShow: bool;\nvar<private> inLife: f32;\nvar<private> visMode: f32;\nvar<private> outPos: vec3f;\nvar<private> outVel: vec3f;\nvar<private> outAngle: f32;\nvar<private> outShow: bool;\nvar<private> outLife: f32;\n",particleUpdaterNoRespawnPS:"\n\tif (outLife >= uniform.lifetime) {\n\t\toutLife = outLife - max(uniform.lifetime, (uniform.numParticles - 1.0) * particleRate);\n\t\tvisMode = -1.0;\n\t}\n",particleUpdaterOnStopPS:"\n\tvisMode = select(visMode, -1.0, outLife < 0.0);\n",particleUpdaterRespawnPS:"\n\tif (outLife >= uniform.lifetime) {\n\t\tlet subtractAmount = max(uniform.lifetime, (uniform.numParticles - 1.0) * particleRate);\n\t\toutLife = outLife - subtractAmount;\n\t\tvisMode = 1.0;\n\t}\n\tvisMode = select(visMode, 1.0, outLife < 0.0);\n",particleUpdaterSpherePS:"\nuniform spawnBoundsSphere: f32;\nuniform spawnBoundsSphereInnerRatio: f32;\nfn calcSpawnPosition(inBounds: vec3f, rndFactor: f32) -> vec3f {\n\tlet rnd4: f32 = fract(rndFactor * 1000.0);\n\tlet norm: vec3f = normalize(inBounds.xyz - vec3f(0.5));\n\tlet r: f32 = rnd4 * (1.0 - uniform.spawnBoundsSphereInnerRatio) + uniform.spawnBoundsSphereInnerRatio;\n\t#ifndef LOCAL_SPACE\n\t\treturn uniform.emitterPos + norm * r * uniform.spawnBoundsSphere;\n\t#else\n\t\treturn norm * r * uniform.spawnBoundsSphere;\n\t#endif\n}\nfn addInitialVelocity(localVelocity: ptr<function, vec3f>, inBounds: vec3f) {\n\tlet initialVelOffset: vec3f = normalize(inBounds - vec3f(0.5)) * uniform.initialVelocity;\n\t*localVelocity = *localVelocity + initialVelOffset;\n}\n",particleUpdaterStartPS:"\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn unpack3NFloats(src: f32) -> vec3f {\n\tlet r = fract(src);\n\tlet g = fract(src * 256.0);\n\tlet b = fract(src * 65536.0);\n\treturn vec3f(r, g, b);\n}\nstruct TexLerpUnpackResult {\n\tresult: vec3f,\n\tunpacked: vec3f\n}\nfn tex1Dlod_lerp(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> TexLerpUnpackResult {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\tlet a = textureSampleLevel(tex, texSampler, tc, 0.0);\n\tlet b = textureSampleLevel(tex, texSampler, tc_next, 0.0);\n\tlet c = fract(tc.x * uniform.graphNumSamples);\n\tlet unpackedA = unpack3NFloats(a.w);\n\tlet unpackedB = unpack3NFloats(b.w);\n\tlet w_out = mix(unpackedA, unpackedB, c);\n\treturn TexLerpUnpackResult(mix(a.xyz, b.xyz, c), w_out);\n}\nconst HASHSCALE4: vec4f = vec4f(1031.0, 0.1030, 0.0973, 0.1099);\nfn hash41(p: f32) -> vec4f {\n\tvar p4 = fract(vec4f(p) * HASHSCALE4);\n\tp4 = p4 + dot(p4, p4.wzxy + 19.19);\n\treturn fract(vec4f((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\n@fragment\nfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tif (pcPosition.x > uniform.numParticles) {\n\t\tdiscard;\n\t\treturn output;\n\t}\n\treadInput(input.vUv0.x);\n\tvisMode = select(-1.0, 1.0, inShow);\n\tlet rndFactor = hash41(pcPosition.x + uniform.seed);\n\tlet particleRate = uniform.rate + uniform.rateDiv * rndFactor.x;\n\toutLife = inLife + uniform.delta;\n\tlet nlife = clamp(outLife / uniform.lifetime, 0.0, 1.0);\n\tlet lerpResult0 = tex1Dlod_lerp(internalTex0, internalTex0Sampler, vec2f(nlife, 0.0));\n\tvar localVelocity = lerpResult0.result;\n\tlet localVelocityDiv = lerpResult0.unpacked;\n\tlet lerpResult1 = tex1Dlod_lerp(internalTex1, internalTex1Sampler, vec2f(nlife, 0.0));\n\tvar velocity = lerpResult1.result;\n\tlet velocityDiv = lerpResult1.unpacked;\n\tlet lerpResult2 = tex1Dlod_lerp(internalTex2, internalTex2Sampler, vec2f(nlife, 0.0));\n\tlet params = lerpResult2.result;\n\tlet paramDiv = lerpResult2.unpacked;\n\tvar rotSpeed = params.x;\n\tlet rotSpeedDiv = paramDiv.y;\n\tlet lerpResult3 = tex1Dlod_lerp(internalTex3, internalTex3Sampler, vec2f(nlife, 0.0));\n\tlet radialParams = lerpResult3.result;\n\tlet radialParamDiv = lerpResult3.unpacked;\n\tlet radialSpeed = radialParams.x;\n\tlet radialSpeedDiv = radialParamDiv.y;\n\tlet respawn = inLife <= 0.0 || outLife >= uniform.lifetime;\n\tinPos = select(inPos, calcSpawnPosition(rndFactor.xyz, rndFactor.x), respawn);\n\tinAngle = select(inAngle, mix(uniform.startAngle, uniform.startAngle2, rndFactor.x), respawn);\n\t#ifndef LOCAL_SPACE\n\t\tvar radialVel: vec3f = inPos - uniform.emitterPos;\n\t#else\n\t\tvar radialVel: vec3f = inPos;\n\t#endif\n\tradialVel = select(vec3f(0.0), radialSpeed * normalize(radialVel), dot(radialVel, radialVel) > 1.0E-8);\n\tradialVel = radialVel + (radialSpeedDiv * vec3f(2.0) - vec3f(1.0)) * uniform.radialSpeedDivMult * rndFactor.xyz;\n\tlocalVelocity = localVelocity + (localVelocityDiv * vec3f(2.0) - vec3f(1.0)) * uniform.localVelocityDivMult * rndFactor.xyz;\n\tvelocity = velocity + (velocityDiv * vec3f(2.0) - vec3f(1.0)) * uniform.velocityDivMult * rndFactor.xyz;\n\trotSpeed = rotSpeed + (rotSpeedDiv * 2.0 - 1.0) * uniform.rotSpeedDivMult * rndFactor.y;\n\taddInitialVelocity(&localVelocity, rndFactor.xyz);\n\t#ifndef LOCAL_SPACE\n\t\toutVel = uniform.emitterMatrix * localVelocity + (radialVel + velocity) * uniform.emitterScale;\n\t#else\n\t\toutVel = (localVelocity + radialVel) / uniform.emitterScale + uniform.emitterMatrixInv * velocity;\n\t#endif\n\toutPos = inPos + outVel * uniform.delta;\n\toutAngle = inAngle + rotSpeed * uniform.delta;\n",particle_billboardVS:"\n\tlet rotationResult = rotateWithMatrix(quadXY, inAngle);\n\tlet rotatedQuadXY = rotationResult.rotatedVec;\n\trotMatrix = rotationResult.matrix;\n\tvar localPos = billboard(particlePos, rotatedQuadXY);\n",particle_blendAddPS:"\n\tdBlendModeFogFactor = 0.0;\n\trgb = rgb * saturate(gammaCorrectInput(max(a, 0.0)));\n\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) {\n\t\tdiscard;\n\t}\t\n",particle_blendMultiplyPS:"\n\trgb = mix(vec3f(1.0), rgb, a);\n\tif ((rgb.r + rgb.g + rgb.b) > 2.99) {\n\t\tdiscard;\n\t}\n",particle_blendNormalPS:"\n\tif (a < 0.01) {\n\t\tdiscard;\n\t}\n",particle_cpuVS:"\nattribute particle_vertexData: vec4f;\nattribute particle_vertexData2: vec4f;\nattribute particle_vertexData3: vec4f;\nattribute particle_vertexData4: f32;\n#ifndef USE_MESH\n\tattribute particle_vertexData5: vec2f;\n#else\n\tattribute particle_vertexData5: vec4f;\n#endif\nuniform matrix_viewProjection: mat4x4f;\nuniform matrix_model: mat4x4f;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nuniform matrix_normal: mat3x3f;\nuniform matrix_viewInverse: mat4x4f;\nuniform numParticles: f32;\nuniform lifetime: f32;\nuniform stretch: f32;\nuniform seed: f32;\nuniform wrapBounds: vec3f;\nuniform emitterScale: vec3f;\nuniform faceTangent: vec3f;\nuniform faceBinorm: vec3f;\n#ifdef PARTICLE_GPU\n\tvar internalTex0: texture_2d<f32>;\n\tvar internalTex0Sampler: sampler;\n\tvar internalTex1: texture_2d<f32>;\n\tvar internalTex1Sampler: sampler;\n\tvar internalTex2: texture_2d<f32>;\n\tvar internalTex2Sampler: sampler;\n#endif\nuniform emitterPos: vec3f;\nvarying texCoordsAlphaLife: vec4f;\nstruct RotateResult {\n\trotatedVec: vec2f,\n\tmatrix: mat2x2f\n}\nfn rotateWithMatrix(quadXY: vec2f, pRotation: f32) -> RotateResult {\n\tlet c = cos(pRotation);\n\tlet s = sin(pRotation);\n\tlet m = mat2x2f(vec2f(c, -s), vec2f(s, c));\n\treturn RotateResult(m * quadXY, m);\n}\nfn billboard(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = -uniform.matrix_viewInverse[0].xyz * quadXY.x + -uniform.matrix_viewInverse[1].xyz * quadXY.y;\n\treturn pos;\n}\nfn customFace(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = uniform.faceTangent * quadXY.x + uniform.faceBinorm * quadXY.y;\n\treturn pos;\n}\nfn safeNormalize(v: vec2f) -> vec2f {\n\tlet l = length(v);\n\treturn select(v, v / l, l > 1e-06);\n}\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tvar particlePos = input.particle_vertexData.xyz;\n\tlet inPos = particlePos;\n\tlet vertPos = input.particle_vertexData3.xyz;\n\tvar inVel = vec3f(input.particle_vertexData2.w, input.particle_vertexData3.w, input.particle_vertexData5.x);\n\tlet id = floor(input.particle_vertexData4);\n\tlet rndFactor = fract(sin(id + 1.0 + uniform.seed));\n\tlet rndFactor3 = vec3f(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\t#ifdef LOCAL_SPACE\n\t\tlet modelRotation = mat3x3f(uniform.matrix_model[0].xyz, uniform.matrix_model[1].xyz, uniform.matrix_model[2].xyz);\n\t\tinVel = modelRotation * inVel;\n\t#endif\n\tlet velocityV = safeNormalize((mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz) * inVel).xy);\n\tlet quadXY = vertPos.xy;\n\t#ifdef USE_MESH\n\t\toutput.texCoordsAlphaLife = vec4f(input.particle_vertexData5.zw, input.particle_vertexData2.z, input.particle_vertexData.w);\n\t#else\n\t\toutput.texCoordsAlphaLife = vec4f(quadXY * -0.5 + 0.5, input.particle_vertexData2.z, input.particle_vertexData.w);\n\t#endif\n\tvar rotMatrix: mat2x2f;\n\tvar inAngle = input.particle_vertexData2.x;\n\tvar particlePosMoved = vec3f(0.0);\n\tlet meshLocalPos = input.particle_vertexData3.xyz;\n",particle_cpu_endVS:"\n\tlocalPos = localPos * input.particle_vertexData2.y * uniform.emitterScale;\n\tlocalPos = localPos + particlePos;\n\toutput.position = uniform.matrix_viewProjection * vec4f(localPos, 1.0);\n",particle_customFaceVS:"\n\tlet rotationResult = rotateWithMatrix(quadXY, inAngle);\n\tlet rotatedQuadXY = rotationResult.rotatedVec;\n\trotMatrix = rotationResult.matrix;\n\tvar localPos = customFace(particlePos, rotatedQuadXY);\n",particle_endPS:"\n\trgb = addFog(rgb);\n\trgb = toneMap(rgb);\n\trgb = gammaCorrectOutput(rgb);\n\toutput.color = vec4f(rgb, a);\n\treturn output;\n}\n",particle_endVS:"\n\tlocalPos = localPos * scale * uniform.emitterScale;\n\tlocalPos = localPos + particlePos;\n\t#ifdef SCREEN_SPACE\n\t\toutput.position = vec4f(localPos.x, localPos.y, 0.0, 1.0);\n\t#else\n\t\toutput.position = uniform.matrix_viewProjection * vec4f(localPos.xyz, 1.0);\n\t#endif\n",particle_halflambertPS:"\n\tvar negNormal: vec3f = normal * 0.5 + 0.5;\n\tvar posNormal: vec3f = -normal * 0.5 + 0.5;\n\tnegNormal = negNormal * negNormal;\n\tposNormal = posNormal * posNormal;\n",particle_initVS:"\nattribute particle_vertexData: vec4f;\n#if defined(USE_MESH)\n\t#if defined(USE_MESH_UV)\n\t\tattribute particle_uv: vec2f;\n\t#else\n\t\tvar<private> particle_uv: vec2f = vec2f(0.0, 0.0);\n\t#endif\n#endif\nuniform matrix_viewProjection: mat4x4f;\nuniform matrix_model: mat4x4f;\nuniform matrix_normal: mat3x3f;\nuniform matrix_viewInverse: mat4x4f;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nuniform numParticles: f32;\nuniform numParticlesPot: f32;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\nuniform stretch: f32;\nuniform wrapBounds: vec3f;\nuniform emitterScale: vec3f;\nuniform emitterPos: vec3f;\nuniform faceTangent: vec3f;\nuniform faceBinorm: vec3f;\nuniform rate: f32;\nuniform rateDiv: f32;\nuniform lifetime: f32;\nuniform deltaRandomnessStatic: f32;\nuniform scaleDivMult: f32;\nuniform alphaDivMult: f32;\nuniform seed: f32;\nuniform delta: f32;\nvar particleTexOUT: texture_2d<f32>;\nvar particleTexOUTSampler: sampler;\nvar particleTexIN: texture_2d<f32>;\nvar particleTexINSampler: sampler;\n#ifdef PARTICLE_GPU\n\tvar internalTex0: texture_2d<f32>;\n\tvar internalTex0Sampler: sampler;\n\tvar internalTex1: texture_2d<f32>;\n\tvar internalTex1Sampler: sampler;\n\tvar internalTex2: texture_2d<f32>;\n\tvar internalTex2Sampler: sampler;\n#endif\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nvarying texCoordsAlphaLife: vec4f;\nvar<private> inPos: vec3f;\nvar<private> inVel: vec3f;\nvar<private> inAngle: f32;\nvar<private> inShow: bool;\nvar<private> inLife: f32;\n",particle_lambertPS:"\n\tvar negNormal: vec3f = max(normal, vec3(0.0));\n\tvar posNormal: vec3f = max(-normal, vec3(0.0));\n",particle_lightingPS:"\n\tlet light: vec3f = negNormal.x * uniform.lightCube[0] + posNormal.x * uniform.lightCube[1] +\n\t\t\t\t\t   negNormal.y * uniform.lightCube[2] + posNormal.y * uniform.lightCube[3] +\n\t\t\t\t\t   negNormal.z * uniform.lightCube[4] + posNormal.z * uniform.lightCube[5];\n\trgb = rgb * light;\n",particle_localShiftVS:"\nparticlePos = (uniform.matrix_model * vec4f(particlePos, 1.0)).xyz;\n",particle_meshVS:"\nvar localPos = meshLocalPos;\nlet rotResultXY = rotateWithMatrix(localPos.xy, inAngle);\nlocalPos = vec3f(rotResultXY.rotatedVec, localPos.z);\nrotMatrix = rotResultXY.matrix;\nlet rotResultYZ = rotateWithMatrix(localPos.yz, inAngle);\nlocalPos = vec3f(localPos.x, rotResultYZ.rotatedVec);\nrotMatrix = rotResultYZ.matrix;\nbillboard(particlePos, quadXY);\n",particle_normalVS:"\noutput.Normal = normalize(localPos + uniform.matrix_viewInverse[2].xyz);\n",particle_normalMapPS:"\n\tlet sampledNormal: vec4f = textureSample(normalMap, normalMapSampler, vec2f(input.texCoordsAlphaLife.x, 1.0 - input.texCoordsAlphaLife.y));\n\tlet normalMap: vec3f = normalize(sampledNormal.xyz * 2.0 - 1.0);\n\tlet ParticleMat = mat3x3<f32>(ParticleMat0, ParticleMat1, ParticleMat2);\n\tlet normal: vec3f = ParticleMat * normalMap;\n",particle_pointAlongVS:"\n\tinAngle = atan2(velocityV.x, velocityV.y);\n",particle_simulationPS:'\n\t#include "particleUpdaterInitPS"\n\t#ifdef PACK8\n\t\t#include "particleInputRgba8PS"\n\t\t#include "particleOutputRgba8PS"\n\t#else\n\t\t#include "particleInputFloatPS"\n\t\t#include "particleOutputFloatPS"\n\t#endif\n\t#ifdef EMITTERSHAPE_BOX\n\t\t#include "particleUpdaterAABBPS"\n\t#else\n\t\t#include "particleUpdaterSpherePS"\n\t#endif\n\t#include "particleUpdaterStartPS"\n\t#ifdef RESPAWN\n\t\t#include "particleUpdaterRespawnPS"\n\t#endif\n\t#ifdef NO_RESPAWN\n\t\t#include "particleUpdaterNoRespawnPS"\n\t#endif\n\t#ifdef ON_STOP\n\t\t#include "particleUpdaterOnStopPS"\n\t#endif\n\t#include "particleUpdaterEndPS"\n',particle_shaderPS:'\n\t#if NORMAL != NONE\n\t\t#if NORMAL == VERTEX\n\t\t\tvarying Normal: vec3f;\n\t\t#endif\n\t\t#if NORMAL == MAP\n\t\t\tvarying ParticleMat0: vec3f;\n\t\t\tvarying ParticleMat1: vec3f;\n\t\t\tvarying ParticleMat2: vec3f;\n\t\t#endif\n\t\tuniform lightCube: array<vec3f, 6>;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying vDepth: f32;\n\t\t#include "screenDepthPS"\n\t#endif\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#include "fogPS"\n\t#if NORMAL == MAP\n\t\tvar normalMap: texture_2d<f32>;\n\t\tvar normalMapSampler: sampler;\n\t#endif\n\t#include "particlePS"\n\t#ifdef SOFT\n\t\t#include "particle_softPS"\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvar normal: vec3f = Normal;\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_normalMapPS"\n\t#endif\n\t#if NORMAL != NONE\n\t\t#ifdef HALF_LAMBERT\n\t\t\t#include "particle_halflambertPS"\n\t\t#else\n\t\t\t#include "particle_lambertPS"\n\t\t#endif\n\t\t#include "particle_lightingPS"\n\t#endif\n\t#if BLEND == NORMAL\n\t\t#include "particle_blendNormalPS"\n\t#elif BLEND == ADDITIVE\n\t\t#include "particle_blendAddPS"\n\t#elif BLEND == MULTIPLICATIVE\n\t\t#include "particle_blendMultiplyPS"\n\t#endif\n\t#include "particle_endPS"\n',particle_shaderVS:'\n\t#ifdef ANIMTEX\n\t\tuniform animTexTilesParams: vec2f;\n\t\tuniform animTexParams: vec4f;\n\t\tuniform animTexIndexParams: vec2f;\n\t#endif\n\t#if NORMAL == MAP\n\t\tvarying ParticleMat0: vec3f;\n\t\tvarying ParticleMat1: vec3f;\n\t\tvarying ParticleMat2: vec3f;\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvarying Normal: vec3f;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying vDepth: f32;\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_initVS"\n\t\t#ifdef PACK8\n\t\t\t#include "particleInputRgba8PS"\n\t\t#else\n\t\t\t#include  "particleInputFloatPS"\n\t\t#endif\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particleVS"\n\t#else\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particle_cpuVS"\n\t#endif\n\t#ifdef LOCAL_SPACE\n\t\t#include "particle_localShiftVS"\n\t#endif\n\t#ifdef ANIMTEX\n\t\t#ifdef ANIMTEX_LOOP\n\t\t\t#include "particleAnimFrameLoopVS"\n\t\t#else\n\t\t\t#include "particleAnimFrameClampVS"\n\t\t#endif\n\t\t#include "particleAnimTexVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#ifdef WRAP\n\t\t\t#include "particle_wrapVS"\n\t\t#endif\n\t#endif\n\t#ifdef ALIGN_TO_MOTION\n\t\t#include "particle_pointAlongVS"\n\t#endif\n\t#ifdef USE_MESH\n\t\t#include "particle_meshVS"\n\t#else\n\t\t#ifdef CUSTOM_FACE\n\t\t\t#include "particle_customFaceVS"\n\t\t#else\n\t\t\t#include "particle_billboardVS"\n\t\t#endif\n\t#endif\n\t#if NORMAL == VERTEX\n\t\t#include "particle_normalVS"\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_TBNVS"\n\t#endif\n\t#ifdef STRETCH\n\t\t#include "particle_stretchVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_endVS"\n\t#else\n\t\t#include "particle_cpu_endVS"\n\t#endif\n\t#ifdef SOFT\n\t\t#include "particle_softVS"\n\t#endif\n\treturn output;\n}\n',particle_softPS:"\n\tvar depth: f32 = getLinearScreenDepthFrag();\n\tvar particleDepth: f32 = vDepth;\n\tvar depthDiff: f32 = saturate(abs(particleDepth - depth) * uniform.softening);\n\ta = a * depthDiff;\n",particle_softVS:"\n\toutput.vDepth = getLinearDepth(localPos);\n",particle_stretchVS:"\n\tlet moveDir: vec3f = inVel * uniform.stretch;\n\tvar posPrev: vec3f = particlePos - moveDir;\n\tposPrev = posPrev + particlePosMoved;\n\tlet viewRotationTemp: mat3x3f = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet centerToVertexV: vec2f = normalize((viewRotationTemp * localPos).xy);\n\tlet interpolation: f32 = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n\tparticlePos = mix(particlePos, posPrev, interpolation);\n",particle_TBNVS:"\n\tlet rot3 = mat3x3f(\n\t\tvec3f(rotMatrix[0][0], rotMatrix[1][0], 0.0),\n\t\tvec3f(rotMatrix[0][1], rotMatrix[1][1], 0.0),\n\t\tvec3f(0.0, 0.0, 1.0)\n\t);\n\tlet viewBasis = mat3x3f(\n\t\t-uniform.matrix_viewInverse[0].xyz,\n\t\t-uniform.matrix_viewInverse[1].xyz,\n\t\tuniform.matrix_viewInverse[2].xyz\n\t);\n\tlet tempMat = viewBasis * rot3;\n\toutput.ParticleMat0 = tempMat[0];\n\toutput.ParticleMat1 = tempMat[1];\n\toutput.ParticleMat2 = tempMat[2];\n",particle_wrapVS:"\n\tlet origParticlePos: vec3f = particlePos;\n\tparticlePos = particlePos - uniform.matrix_model[3].xyz;\n\tparticlePos = (particlePos % uniform.wrapBounds) - uniform.wrapBounds * 0.5;\n\tparticlePos = particlePos + uniform.matrix_model[3].xyz;\n\tparticlePosMoved = particlePos - origParticlePos;\n"},xc=["enabled","autoPlay","numParticles","lifetime","rate","rate2","startAngle","startAngle2","loop","preWarm","lighting","halfLambert","intensity","depthWrite","noFog","depthSoftening","sort","blendType","stretch","alignToMotion","emitterShape","emitterExtents","emitterExtentsInner","emitterRadius","emitterRadiusInner","initialVelocity","wrap","wrapBounds","localSpace","screenSpace","colorMapAsset","normalMapAsset","mesh","meshAsset","renderAsset","orientation","particleNormal","localVelocityGraph","localVelocityGraph2","velocityGraph","velocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2","scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","colorMap","normalMap","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animSpeed","animLoop","layers"];class Tc extends Rr{constructor(t){super(t),this.id="particlesystem",this.ComponentType=gc,this.DataType=vc,this.schema=xc,this.propertyTypes={emitterExtents:"vec3",emitterExtentsInner:"vec3",particleNormal:"vec3",wrapBounds:"vec3",localVelocityGraph:"curveset",localVelocityGraph2:"curveset",velocityGraph:"curveset",velocityGraph2:"curveset",colorGraph:"curveset",colorGraph2:"curveset",alphaGraph:"curve",alphaGraph2:"curve",rotationSpeedGraph:"curve",rotationSpeedGraph2:"curve",radialSpeedGraph:"curve",radialSpeedGraph2:"curve",scaleGraph:"curve",scaleGraph2:"curve"},this.on("beforeremove",this.onBeforeRemove,this),this.app.systems.on("update",this.onUpdate,this),B.W.get(t.graphicsDevice,x.BzK).add(Sc),B.W.get(t.graphicsDevice,x.g80).add(yc)}initializeComponentData(t,e,s){const i={};s=[];const n=this.propertyTypes;(e.mesh instanceof Kn.V||"number"==typeof e.mesh)&&(e.meshAsset=e.mesh,delete e.mesh);for(const r in e){if(e.hasOwnProperty(r)&&(s.push(r),i[r]=e[r]),"vec3"===n[r])Array.isArray(i[r])&&(i[r]=new l.e(i[r][0],i[r][1],i[r][2]));else if("curve"===n[r]){if(!(i[r]instanceof fh)){const t=i[r].type;i[r]=new fh(i[r].keys),i[r].type=t}}else if("curveset"===n[r]&&!(i[r]instanceof ph)){const t=i[r].type;i[r]=new ph(i[r].keys),i[r].type=t}i.layers&&Array.isArray(i.layers)&&(i.layers=i.layers.slice(0))}super.initializeComponentData(t,i,s)}cloneComponent(t,e){const s=t.particlesystem.data,i=this.schema,n={};for(let r=0,a=i.length;r<a;r++){const t=i[r];let e=s[t];e instanceof l.e||e instanceof fh||e instanceof ph?(e=e.clone(),n[t]=e):"layers"===t?n.layers=s.layers.slice(0):null!=e&&(n[t]=e)}return this.addComponent(e,n)}onUpdate(t){const e=this.store,s=this.app.stats.particles,i=this.app.scene.layers;for(let n=0;n<i.layerList.length;n++)i.layerList[n].requiresLightCube=!1;for(const n in e)if(e.hasOwnProperty(n)){const r=e[n],a=r.entity,o=r.data;if(o.enabled&&a.enabled){const e=a.particlesystem.emitter;if(!e?.meshInstance.visible)continue;if(e.lighting){const t=o.layers;for(let e=0;e<t.length;e++){const s=i.getLayerById(t[e]);s&&(s.requiresLightCube=!0)}}if(!o.paused){let i=0;if(e.simTime+=t,e.simTime>=e.fixedTimeStep&&(i=Math.floor(e.simTime/e.fixedTimeStep),e.simTime-=i*e.fixedTimeStep),i){i=Math.min(i,e.maxSubSteps);for(let t=0;t<i;t++)e.addTime(e.fixedTimeStep,!1);s._updatesPerFrame+=i,s._frameTime+=e._addTimeTime,e._addTimeTime=0}e.finishFrame()}}}}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}class wc extends gs.p{constructor(t,e){super(),this.skin=t,this.skinInstance=e}}class bc{static{this._skinInstanceCache=new Map}static createCachedSkinInstance(t,e,s){let i=bc.getCachedSkinInstance(t,e);return i||(i=new Hs(t),i.resolve(e,s),bc.addCachedSkinInstance(t,e,i)),i}static getCachedSkinInstance(t,e){let s=null;const i=bc._skinInstanceCache.get(e);if(i){const e=i.find(e=>e.skin===t);e&&(e.incRefCount(),s=e.skinInstance)}return s}static addCachedSkinInstance(t,e,s){let i=bc._skinInstanceCache.get(e);i||(i=[],bc._skinInstanceCache.set(e,i));let n=i.find(e=>e.skin===t);n||(n=new wc(t,s),i.push(n)),n.incRefCount()}static removeCachedSkinInstance(t){if(t){const e=t.rootBone;if(e){const s=bc._skinInstanceCache.get(e);if(s){const i=s.findIndex(e=>e.skinInstance===t);if(i>=0){const n=s[i];n.decRefCount(),0===n.refCount&&(s.splice(i,1),s.length||bc._skinInstanceCache.delete(e),t&&(t.destroy(),n.skinInstance=null))}}}}}}class Ec{constructor(t,e,s,i,n){this._evtLoadById=null,this._evtUnloadById=null,this._evtAddById=null,this._evtRemoveById=null,this._evtLoadByUrl=null,this._evtAddByUrl=null,this._evtRemoveByUrl=null,this.propertyName=t,this.parent=e,this._scope=n,this._registry=s,this.id=null,this.url=null,this.asset=null,this._onAssetLoad=i.load,this._onAssetAdd=i.add,this._onAssetRemove=i.remove,this._onAssetUnload=i.unload}set id(t){if(this.url)throw Error("Can't set id and url");this._unbind(),this._id=t,this.asset=this._registry.get(this._id),this._bind()}get id(){return this._id}set url(t){if(this.id)throw Error("Can't set id and url");this._unbind(),this._url=t,this.asset=this._registry.getByUrl(this._url),this._bind()}get url(){return this._url}_bind(){this.id&&(this._onAssetLoad&&(this._evtLoadById=this._registry.on(`load:${this.id}`,this._onLoad,this)),this._onAssetAdd&&(this._evtAddById=this._registry.once(`add:${this.id}`,this._onAdd,this)),this._onAssetRemove&&(this._evtRemoveById=this._registry.on(`remove:${this.id}`,this._onRemove,this)),this._onAssetUnload&&(this._evtUnloadById=this._registry.on(`unload:${this.id}`,this._onUnload,this))),this.url&&(this._onAssetLoad&&(this._evtLoadByUrl=this._registry.on(`load:url:${this.url}`,this._onLoad,this)),this._onAssetAdd&&(this._evtAddByUrl=this._registry.once(`add:url:${this.url}`,this._onAdd,this)),this._onAssetRemove&&(this._evtRemoveByUrl=this._registry.on(`remove:url:${this.url}`,this._onRemove,this)))}_unbind(){this.id&&(this._evtLoadById?.off(),this._evtLoadById=null,this._evtAddById?.off(),this._evtAddById=null,this._evtRemoveById?.off(),this._evtRemoveById=null,this._evtUnloadById?.off(),this._evtUnloadById=null),this.url&&(this._evtLoadByUrl?.off(),this._evtLoadByUrl=null,this._evtAddByUrl?.off(),this._evtAddByUrl=null,this._evtRemoveByUrl?.off(),this._evtRemoveByUrl=null)}_onLoad(t){this._onAssetLoad.call(this._scope,this.propertyName,this.parent,t)}_onAdd(t){this.asset=t,this._onAssetAdd.call(this._scope,this.propertyName,this.parent,t)}_onRemove(t){this._onAssetRemove.call(this._scope,this.propertyName,this.parent,t),this.asset=null}_onUnload(t){this._onAssetUnload.call(this._scope,this.propertyName,this.parent,t)}}class Ac extends Ir{constructor(t,e){super(t,e),this._type="asset",this._castShadows=!0,this._receiveShadows=!0,this._castShadowsLightmap=!0,this._lightmapped=!1,this._lightmapSizeMultiplier=1,this.isStatic=!1,this._batchGroupId=-1,this._layers=[F.uEK],this._renderStyle=F.OZy,this._meshInstances=[],this._customAabb=null,this._area=null,this._materialReferences=[],this._rootBone=null,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._evtSetMeshes=null,this._assetReference=new Ec("asset",this,t.app.assets,{add:this._onRenderAssetAdded,load:this._onRenderAssetLoad,remove:this._onRenderAssetRemove,unload:this._onRenderAssetUnload},this),this._material=t.defaultMaterial,e.on("remove",this.onRemoveChild,this),e.on("removehierarchy",this.onRemoveChild,this),e.on("insert",this.onInsertChild,this),e.on("inserthierarchy",this.onInsertChild,this)}set renderStyle(t){this._renderStyle!==t&&(this._renderStyle=t,pt._prepareRenderStyleForArray(this._meshInstances,t))}get renderStyle(){return this._renderStyle}set customAabb(t){this._customAabb=t;const e=this._meshInstances;if(e)for(let s=0;s<e.length;s++)e[s].setCustomAabb(this._customAabb)}get customAabb(){return this._customAabb}set type(t){if(this._type!==t&&(this._area=null,this._type=t,this.destroyMeshInstances(),"asset"!==t)){let e=this._material;e&&e!==this.system.defaultMaterial||(e=this._materialReferences[0]&&this._materialReferences[0].asset&&this._materialReferences[0].asset.resource);const s=oh(this.system.app.graphicsDevice,t);this._area=s.area,this.meshInstances=[new pt(s.mesh,e||this.system.defaultMaterial,this.entity)]}}get type(){return this._type}set meshInstances(t){if(this.destroyMeshInstances(),this._meshInstances=t,this._meshInstances){const t=this._meshInstances;for(let e=0;e<t.length;e++)t[e].node||(t[e].node=this.entity),t[e].castShadow=this._castShadows,t[e].receiveShadow=this._receiveShadows,t[e].renderStyle=this._renderStyle,t[e].setLightmapped(this._lightmapped),t[e].setCustomAabb(this._customAabb);this.enabled&&this.entity.enabled&&this.addToLayers()}}get meshInstances(){return this._meshInstances}set lightmapped(t){if(t!==this._lightmapped){this._lightmapped=t;const e=this._meshInstances;if(e)for(let s=0;s<e.length;s++)e[s].setLightmapped(t)}}get lightmapped(){return this._lightmapped}set castShadows(t){if(this._castShadows!==t){const e=this._meshInstances;if(e){const s=this.layers,i=this.system.app.scene;if(this._castShadows&&!t)for(let t=0;t<s.length;t++){const s=i.layers.getLayerById(this.layers[t]);s&&s.removeShadowCasters(e)}for(let n=0;n<e.length;n++)e[n].castShadow=t;if(!this._castShadows&&t)for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);n&&n.addShadowCasters(e)}}this._castShadows=t}}get castShadows(){return this._castShadows}set receiveShadows(t){if(this._receiveShadows!==t){this._receiveShadows=t;const e=this._meshInstances;if(e)for(let s=0;s<e.length;s++)e[s].receiveShadow=t}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(t){this._castShadowsLightmap=t}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(t){this._lightmapSizeMultiplier=t}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(t){const e=this.system.app.scene.layers;let s;if(this._meshInstances)for(let i=0;i<this._layers.length;i++)s=e.getLayerById(this._layers[i]),s&&s.removeMeshInstances(this._meshInstances);this._layers.length=0;for(let i=0;i<t.length;i++)this._layers[i]=t[i];if(this.enabled&&this.entity.enabled&&this._meshInstances)for(let i=0;i<this._layers.length;i++)s=e.getLayerById(this._layers[i]),s&&s.addMeshInstances(this._meshInstances)}get layers(){return this._layers}set batchGroupId(t){this._batchGroupId!==t&&(this.entity.enabled&&this._batchGroupId>=0&&this.system.app.batcher?.remove(Vs.RENDER,this.batchGroupId,this.entity),this.entity.enabled&&t>=0&&this.system.app.batcher?.insert(Vs.RENDER,t,this.entity),t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled&&this.addToLayers(),this._batchGroupId=t)}get batchGroupId(){return this._batchGroupId}set material(t){if(this._material!==t&&(this._material=t,this._meshInstances&&"asset"!==this._type))for(let e=0;e<this._meshInstances.length;e++)this._meshInstances[e].material=t}get material(){return this._material}set materialAssets(t=[]){if(this._materialReferences.length>t.length){for(let e=t.length;e<this._materialReferences.length;e++)this._materialReferences[e].id=null;this._materialReferences.length=t.length}for(let e=0;e<t.length;e++)if(this._materialReferences[e]||this._materialReferences.push(new Ec(e,this,this.system.app.assets,{add:this._onMaterialAdded,load:this._onMaterialLoad,remove:this._onMaterialRemove,unload:this._onMaterialUnload},this)),t[e]){const s=t[e]instanceof Kn.V?t[e].id:t[e];this._materialReferences[e].id!==s&&(this._materialReferences[e].id=s),this._materialReferences[e].asset&&this._onMaterialAdded(e,this,this._materialReferences[e].asset)}else this._materialReferences[e].id=null,this._meshInstances[e]&&(this._meshInstances[e].material=this.system.defaultMaterial)}get materialAssets(){return this._materialReferences.map(t=>t.id)}set asset(t){const e=t instanceof Kn.V?t.id:t;this._assetReference.id!==e&&(this._assetReference.asset&&this._assetReference.asset.resource&&this._onRenderAssetRemove(),this._assetReference.id=e,this._assetReference.asset&&this._onRenderAssetAdded())}get asset(){return this._assetReference.id}assignAsset(t){const e=t instanceof Kn.V?t.id:t;this._assetReference.id=e}set rootBone(t){if(this._rootBone!==t){const e="string"==typeof t;if(this._rootBone&&e&&this._rootBone.getGuid()===t)return;this._rootBone&&this._clearSkinInstances(),t instanceof Rt.t?this._rootBone=t:e?(this._rootBone=this.system.app.getEntityFromIndex(t)||null,this._rootBone):this._rootBone=null,this._rootBone&&this._cloneSkinInstances()}}get rootBone(){return this._rootBone}destroyMeshInstances(){const t=this._meshInstances;if(t){this.removeFromLayers(),this._clearSkinInstances();for(let e=0;e<t.length;e++)t[e].destroy();this._meshInstances.length=0}}addToLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);s&&s.addMeshInstances(this._meshInstances)}}removeFromLayers(){if(this._meshInstances&&this._meshInstances.length){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);s&&s.removeMeshInstances(this._meshInstances)}}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){this._meshInstances&&this.enabled&&this.entity.enabled&&this.addToLayers()}onRemove(){this.destroyMeshInstances(),this.asset=null,this.materialAsset=null,this._assetReference.id=null;for(let t=0;t<this._materialReferences.length;t++)this._materialReferences[t].id=null;this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)<0||t.addMeshInstances(this._meshInstances)}onLayerRemoved(t){this.layers.indexOf(t.id)<0||t.removeMeshInstances(this._meshInstances)}onEnable(){const t=this.system.app,e=t.scene,s=e.layers;this._rootBone&&this._cloneSkinInstances(),this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this.onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this));const i="asset"===this._type;this._meshInstances&&this._meshInstances.length?this.addToLayers():i&&this.asset&&this._onRenderAssetAdded();for(let n=0;n<this._materialReferences.length;n++)this._materialReferences[n].asset&&this.system.app.assets.load(this._materialReferences[n].asset);this._batchGroupId>=0&&t.batcher?.insert(Vs.RENDER,this.batchGroupId,this.entity)}onDisable(){const t=this.system.app,e=t.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,this._rootBone&&this._clearSkinInstances(),e&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this._batchGroupId>=0&&t.batcher?.remove(Vs.RENDER,this.batchGroupId,this.entity),this.removeFromLayers()}hide(){if(this._meshInstances)for(let t=0;t<this._meshInstances.length;t++)this._meshInstances[t].visible=!1}show(){if(this._meshInstances)for(let t=0;t<this._meshInstances.length;t++)this._meshInstances[t].visible=!0}_onRenderAssetAdded(){this._assetReference.asset&&(this._assetReference.asset.resource?this._onRenderAssetLoad():this.enabled&&this.entity.enabled&&this.system.app.assets.load(this._assetReference.asset))}_onRenderAssetLoad(){if(this.destroyMeshInstances(),this._assetReference.asset){const t=this._assetReference.asset.resource;this._evtSetMeshes?.off(),this._evtSetMeshes=t.on("set:meshes",this._onSetMeshes,this),t.meshes&&this._onSetMeshes(t.meshes)}}_onSetMeshes(t){this._cloneMeshes(t)}_clearSkinInstances(){for(let t=0;t<this._meshInstances.length;t++){const e=this._meshInstances[t];bc.removeCachedSkinInstance(e.skinInstance),e.skinInstance=null}}_cloneSkinInstances(){if(this._meshInstances.length&&this._rootBone instanceof Rt.t)for(let t=0;t<this._meshInstances.length;t++){const e=this._meshInstances[t],s=e.mesh;s.skin&&!e.skinInstance&&(e.skinInstance=bc.createCachedSkinInstance(s.skin,this._rootBone,this.entity))}}_cloneMeshes(t){if(t&&t.length){const e=[];for(let s=0;s<t.length;s++){const i=t[s],n=this._materialReferences[s]&&this._materialReferences[s].asset&&this._materialReferences[s].asset.resource,r=new pt(i,n||this.system.defaultMaterial,this.entity);e.push(r),i.morph&&(r.morphInstance=new Ya(i.morph))}this.meshInstances=e,this._cloneSkinInstances()}}_onRenderAssetUnload(){"asset"===this._type&&this.destroyMeshInstances()}_onRenderAssetRemove(){this._evtSetMeshes?.off(),this._evtSetMeshes=null,this._onRenderAssetUnload()}_onMaterialAdded(t,e,s){s.resource?this._onMaterialLoad(t,e,s):this.enabled&&this.entity.enabled&&this.system.app.assets.load(s)}_updateMainMaterial(t,e){0===t&&(this.material=e)}_onMaterialLoad(t,e,s){this._meshInstances[t]&&(this._meshInstances[t].material=s.resource),this._updateMainMaterial(t,s.resource)}_onMaterialRemove(t,e,s){this._meshInstances[t]&&(this._meshInstances[t].material=this.system.defaultMaterial),this._updateMainMaterial(t,this.system.defaultMaterial)}_onMaterialUnload(t,e,s){this._meshInstances[t]&&(this._meshInstances[t].material=this.system.defaultMaterial),this._updateMainMaterial(t,this.system.defaultMaterial)}resolveDuplicatedEntityReferenceProperties(t,e){t.rootBone&&(this.rootBone=e[t.rootBone.getGuid()])}}class Cc{constructor(){this.enabled=!0}}const Pc=["enabled"],Dc=["material","meshInstances","asset","materialAssets","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","renderStyle","type","layers","isStatic","batchGroupId","rootBone"];class Lc extends Rr{constructor(t){super(t),this.id="render",this.ComponentType=Ac,this.DataType=Cc,this.schema=Pc,this.defaultMaterial=(0,st.h)(t.graphicsDevice),this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){null!==e.batchGroupId&&void 0!==e.batchGroupId||(e.batchGroupId=-1),e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<Dc.length;i++)e.hasOwnProperty(Dc[i])&&(t[Dc[i]]=e[Dc[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new y(new l.e(e.aabbCenter),new l.e(e.aabbHalfExtents))),super.initializeComponentData(t,e,Pc)}cloneComponent(t,e){const s={};for(let a=0;a<Dc.length;a++)s[Dc[a]]=t.render[Dc[a]];s.enabled=t.render.enabled,delete s.meshInstances;const i=this.addComponent(e,s),n=t.render.meshInstances,r=n.map(t=>t.mesh);i._onSetMeshes(r);for(let a=0;a<n.length;a++)i.meshInstances[a].material=n[a].material;return t.render.customAabb&&(i.customAabb=t.render.customAabb.clone()),i}onRemove(t,e){e.onRemove()}}Ir._buildAccessors(Ac.prototype,Pc);class Mc{constructor(t,e){this._pool=[],this._count=0,this._constructor=t,this._resize(e)}_resize(t){if(t>this._pool.length)for(let e=this._pool.length;e<t;e++)this._pool[e]=new this._constructor}allocate(){return this._count>=this._pool.length&&this._resize(2*this._pool.length),this._pool[this._count++]}freeAll(){this._count=0}}let Ic,Rc,Fc,Oc;const Nc=new St.k,kc=new St.k,Bc=new l.e;class Uc extends Ir{static{this.EVENT_CONTACT="contact"}static{this.EVENT_COLLISIONSTART="collisionstart"}static{this.EVENT_COLLISIONEND="collisionend"}static{this.EVENT_TRIGGERENTER="triggerenter"}static{this.EVENT_TRIGGERLEAVE="triggerleave"}static{this.order=-1}static onLibraryLoaded(){"undefined"!=typeof Ammo&&(Ic=new Ammo.btTransform,Rc=new Ammo.btVector3,Fc=new Ammo.btVector3,Oc=new Ammo.btQuaternion)}static onAppDestroy(){Ammo.destroy(Ic),Ammo.destroy(Rc),Ammo.destroy(Fc),Ammo.destroy(Oc),Ic=null,Rc=null,Fc=null,Oc=null}set angularDamping(t){this._angularDamping!==t&&(this._angularDamping=t,this._body&&this._body.setDamping(this._linearDamping,t))}get angularDamping(){return this._angularDamping}set angularFactor(t){this._angularFactor.equals(t)||(this._angularFactor.copy(t),this._body&&this._type===so&&(Rc.setValue(t.x,t.y,t.z),this._body.setAngularFactor(Rc)))}get angularFactor(){return this._angularFactor}set angularVelocity(t){this._body&&this._type===so&&(this._body.activate(),Rc.setValue(t.x,t.y,t.z),this._body.setAngularVelocity(Rc),this._angularVelocity.copy(t))}get angularVelocity(){if(this._body&&this._type===so){const t=this._body.getAngularVelocity();this._angularVelocity.set(t.x(),t.y(),t.z())}return this._angularVelocity}set body(t){this._body!==t&&(this._body=t,t&&this._simulationEnabled&&t.activate())}get body(){return this._body}set friction(t){this._friction!==t&&(this._friction=t,this._body&&this._body.setFriction(t))}get friction(){return this._friction}set group(t){this._group!==t&&(this._group=t,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}get group(){return this._group}set linearDamping(t){this._linearDamping!==t&&(this._linearDamping=t,this._body&&this._body.setDamping(t,this._angularDamping))}get linearDamping(){return this._linearDamping}set linearFactor(t){this._linearFactor.equals(t)||(this._linearFactor.copy(t),this._body&&this._type===so&&(Rc.setValue(t.x,t.y,t.z),this._body.setLinearFactor(Rc)))}get linearFactor(){return this._linearFactor}set linearVelocity(t){this._body&&this._type===so&&(this._body.activate(),Rc.setValue(t.x,t.y,t.z),this._body.setLinearVelocity(Rc),this._linearVelocity.copy(t))}get linearVelocity(){if(this._body&&this._type===so){const t=this._body.getLinearVelocity();this._linearVelocity.set(t.x(),t.y(),t.z())}return this._linearVelocity}set mask(t){this._mask!==t&&(this._mask=t,this.enabled&&this.entity.enabled&&(this.disableSimulation(),this.enableSimulation()))}get mask(){return this._mask}set mass(t){if(this._mass!==t&&(this._mass=t,this._body&&this._type===so)){const e=this.enabled&&this.entity.enabled;e&&this.disableSimulation(),this._body.getCollisionShape().calculateLocalInertia(t,Rc),this._body.setMassProps(t,Rc),this._body.updateInertiaTensor(),e&&this.enableSimulation()}}get mass(){return this._mass}set restitution(t){this._restitution!==t&&(this._restitution=t,this._body&&this._body.setRestitution(t))}get restitution(){return this._restitution}set rollingFriction(t){this._rollingFriction!==t&&(this._rollingFriction=t,this._body&&this._body.setRollingFriction(t))}get rollingFriction(){return this._rollingFriction}set type(t){if(this._type!==t){switch(this._type=t,this.disableSimulation(),t){case so:this._group=1,this._mask=65535;break;case io:this._group=4,this._mask=65535;break;default:this._group=2,this._mask=no}this.createBody()}}get type(){return this._type}createBody(){const t=this.entity;let e;if(t.collision&&(e=t.collision.shape,t.trigger&&(t.trigger.destroy(),delete t.trigger)),e){this._body&&(this.system.removeBody(this._body),this.system.destroyBody(this._body),this._body=null);const s=this._type===so?this._mass:0;this._getEntityTransform(Ic);const i=this.system.createBody(s,e,Ic);if(i.setRestitution(this._restitution),i.setFriction(this._friction),i.setRollingFriction(this._rollingFriction),i.setDamping(this._linearDamping,this._angularDamping),this._type===so){const t=this._linearFactor;Rc.setValue(t.x,t.y,t.z),i.setLinearFactor(Rc);const e=this._angularFactor;Rc.setValue(e.x,e.y,e.z),i.setAngularFactor(Rc)}else this._type===io&&(i.setCollisionFlags(2|i.getCollisionFlags()),i.setActivationState(4));i.entity=t,this.body=i,this.enabled&&t.enabled&&this.enableSimulation()}}isActive(){return!!this._body&&this._body.isActive()}activate(){this._body&&this._body.activate()}enableSimulation(){const t=this.entity;if(t.collision&&t.collision.enabled&&!this._simulationEnabled){const e=this._body;if(e){switch(this.system.addBody(e,this._group,this._mask),this._type){case so:this.system._dynamic.push(this),e.forceActivationState(1),this.syncEntityToBody();break;case io:this.system._kinematic.push(this),e.forceActivationState(4);break;case eo:e.forceActivationState(1),this.syncEntityToBody()}"compound"===t.collision.type&&this.system._compounds.push(t.collision),e.activate(),this._simulationEnabled=!0}}}disableSimulation(){const t=this._body;if(t&&this._simulationEnabled){const e=this.system;let s=e._compounds.indexOf(this.entity.collision);s>-1&&e._compounds.splice(s,1),s=e._dynamic.indexOf(this),s>-1&&e._dynamic.splice(s,1),s=e._kinematic.indexOf(this),s>-1&&e._kinematic.splice(s,1),e.removeBody(t),t.forceActivationState(5),this._simulationEnabled=!1}}applyForce(t,e,s,i,n,r){const a=this._body;a&&(a.activate(),t instanceof l.e?Rc.setValue(t.x,t.y,t.z):Rc.setValue(t,e,s),e instanceof l.e?Fc.setValue(e.x,e.y,e.z):void 0!==i?Fc.setValue(i,n,r):Fc.setValue(0,0,0),a.applyForce(Rc,Fc))}applyTorque(t,e,s){const i=this._body;i&&(i.activate(),t instanceof l.e?Rc.setValue(t.x,t.y,t.z):Rc.setValue(t,e,s),i.applyTorque(Rc))}applyImpulse(t,e,s,i,n,r){const a=this._body;a&&(a.activate(),t instanceof l.e?Rc.setValue(t.x,t.y,t.z):Rc.setValue(t,e,s),e instanceof l.e?Fc.setValue(e.x,e.y,e.z):void 0!==i?Fc.setValue(i,n,r):Fc.setValue(0,0,0),a.applyImpulse(Rc,Fc))}applyTorqueImpulse(t,e,s){const i=this._body;i&&(i.activate(),t instanceof l.e?Rc.setValue(t.x,t.y,t.z):Rc.setValue(t,e,s),i.applyTorqueImpulse(Rc))}isStatic(){return this._type===eo}isStaticOrKinematic(){return this._type===eo||this._type===io}isKinematic(){return this._type===io}_getEntityTransform(t){const e=this.entity,s=e.collision;if(s){const t=s.getShapePosition(),e=s.getShapeRotation();Rc.setValue(t.x,t.y,t.z),Oc.setValue(e.x,e.y,e.z,e.w)}else{const t=e.getPosition(),s=e.getRotation();Rc.setValue(t.x,t.y,t.z),Oc.setValue(s.x,s.y,s.z,s.w)}t.setOrigin(Rc),t.setRotation(Oc)}syncEntityToBody(){const t=this._body;if(t){if(this._getEntityTransform(Ic),t.setWorldTransform(Ic),this._type===io){const e=t.getMotionState();e&&e.setWorldTransform(Ic)}t.activate()}}_updateDynamic(){const t=this._body;if(t.isActive()){const e=t.getMotionState();if(e){const t=this.entity;e.getWorldTransform(Ic);const s=Ic.getOrigin(),i=Ic.getRotation(),n=t.collision;if(n&&n._hasOffset){const e=n.data.linearOffset,r=n.data.angularOffset,a=kc.copy(r).invert(),o=Nc.set(i.x(),i.y(),i.z(),i.w()).mul(a);o.transformVector(e,Bc),t.setPosition(s.x()-Bc.x,s.y()-Bc.y,s.z()-Bc.z),t.setRotation(o)}else t.setPosition(s.x(),s.y(),s.z()),t.setRotation(i.x(),i.y(),i.z(),i.w())}}}_updateKinematic(){const t=this._body.getMotionState();t&&(this._getEntityTransform(Ic),t.setWorldTransform(Ic))}teleport(t,e,s,i,n,r){t instanceof l.e?this.entity.setPosition(t):this.entity.setPosition(t,e,s),e instanceof St.k?this.entity.setRotation(e):e instanceof l.e?this.entity.setEulerAngles(e):void 0!==i&&this.entity.setEulerAngles(i,n,r),this.syncEntityToBody()}onEnable(){this._body||this.createBody(),this.enableSimulation()}onDisable(){this.disableSimulation()}constructor(...t){super(...t),this._angularDamping=0,this._angularFactor=new l.e(1,1,1),this._angularVelocity=new l.e,this._body=null,this._friction=.5,this._group=2,this._linearDamping=0,this._linearFactor=new l.e(1,1,1),this._linearVelocity=new l.e,this._mask=no,this._mass=1,this._restitution=0,this._rollingFriction=0,this._simulationEnabled=!1,this._type=eo}}class zc{constructor(){this.enabled=!0}}let Vc,Gc;class Hc{constructor(t,e,s,i){this.entity=t,this.point=e,this.normal=s,this.hitFraction=i}}class Wc{constructor(t,e,s){0!==arguments.length?(this.a=t,this.b=e,this.impulse=s.impulse,this.localPointA=s.localPoint,this.localPointB=s.localPointOther,this.pointA=s.point,this.pointB=s.pointOther,this.normal=s.normal):(this.a=null,this.b=null,this.impulse=0,this.localPointA=new l.e,this.localPointB=new l.e,this.pointA=new l.e,this.pointB=new l.e,this.normal=new l.e)}}class Xc{constructor(t=new l.e,e=new l.e,s=new l.e,i=new l.e,n=new l.e,r=0){this.localPoint=t,this.localPointOther=e,this.point=s,this.pointOther=i,this.normal=n,this.impulse=r}}class $c{constructor(t,e){this.other=t,this.contacts=e}}const qc=["enabled"];class jc extends Rr{static{this.EVENT_CONTACT="contact"}constructor(t){super(t),this.maxSubSteps=10,this.fixedTimeStep=1/60,this.gravity=new l.e(0,-9.81,0),this._gravityFloat32=new Float32Array(3),this._dynamic=[],this._kinematic=[],this._triggers=[],this._compounds=[],this.id="rigidbody",this._stats=t.stats.frame,this.ComponentType=Uc,this.DataType=zc,this.contactPointPool=null,this.contactResultPool=null,this.singleContactResultPool=null,this.schema=qc,this.collisions={},this.frameCollisions={},this.on("beforeremove",this.onBeforeRemove,this)}onLibraryLoaded(){if("undefined"!=typeof Ammo){if(this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration,this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration),this.overlappingPairCache=new Ammo.btDbvtBroadphase,this.solver=new Ammo.btSequentialImpulseConstraintSolver,this.dynamicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.overlappingPairCache,this.solver,this.collisionConfiguration),this.dynamicsWorld.setInternalTickCallback){const t=Ammo.addFunction(this._checkForCollisions.bind(this),"vif");this.dynamicsWorld.setInternalTickCallback(t)}Vc=new Ammo.btVector3,Gc=new Ammo.btVector3,Uc.onLibraryLoaded(),this.contactPointPool=new Mc(Xc,1),this.contactResultPool=new Mc($c,1),this.singleContactResultPool=new Mc(Wc,1),this.app.systems.on("update",this.onUpdate,this)}else this.app.systems.off("update",this.onUpdate,this)}initializeComponentData(t,e,s){const i=["mass","linearDamping","angularDamping","linearFactor","angularFactor","friction","rollingFriction","restitution","type","group","mask"];for(const n of i)if(e.hasOwnProperty(n)){const s=e[n];Array.isArray(s)?t[n]=new l.e(s[0],s[1],s[2]):t[n]=s}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.rigidbody,i={enabled:s.enabled,mass:s.mass,linearDamping:s.linearDamping,angularDamping:s.angularDamping,linearFactor:[s.linearFactor.x,s.linearFactor.y,s.linearFactor.z],angularFactor:[s.angularFactor.x,s.angularFactor.y,s.angularFactor.z],friction:s.friction,rollingFriction:s.rollingFriction,restitution:s.restitution,type:s.type,group:s.group,mask:s.mask};return this.addComponent(e,i)}onBeforeRemove(t,e){e.enabled&&(e.enabled=!1),e.body&&(this.destroyBody(e.body),e.body=null)}addBody(t,e,s){void 0!==e&&void 0!==s?this.dynamicsWorld.addRigidBody(t,e,s):this.dynamicsWorld.addRigidBody(t)}removeBody(t){this.dynamicsWorld.removeRigidBody(t)}createBody(t,e,s){const i=new Ammo.btVector3(0,0,0);0!==t&&e.calculateLocalInertia(t,i);const n=new Ammo.btDefaultMotionState(s),r=new Ammo.btRigidBodyConstructionInfo(t,n,e,i),a=new Ammo.btRigidBody(r);return Ammo.destroy(r),Ammo.destroy(i),a}destroyBody(t){const e=t.getMotionState();e&&Ammo.destroy(e),Ammo.destroy(t)}raycastFirst(t,e,s={}){if(s.filterTags||s.filterCallback)return s.sort=!0,this.raycastAll(t,e,s)[0]||null;let i=null;Vc.setValue(t.x,t.y,t.z),Gc.setValue(e.x,e.y,e.z);const n=new Ammo.ClosestRayResultCallback(Vc,Gc);if("number"==typeof s.filterCollisionGroup&&n.set_m_collisionFilterGroup(s.filterCollisionGroup),"number"==typeof s.filterCollisionMask&&n.set_m_collisionFilterMask(s.filterCollisionMask),this.dynamicsWorld.rayTest(Vc,Gc,n),n.hasHit()){const t=n.get_m_collisionObject(),e=Ammo.castObject(t,Ammo.btRigidBody);if(e){const t=n.get_m_hitPointWorld(),s=n.get_m_hitNormalWorld();i=new Hc(e.entity,new l.e(t.x(),t.y(),t.z()),new l.e(s.x(),s.y(),s.z()),n.get_m_closestHitFraction())}}return Ammo.destroy(n),i}raycastAll(t,e,s={}){const i=[];Vc.setValue(t.x,t.y,t.z),Gc.setValue(e.x,e.y,e.z);const n=new Ammo.AllHitsRayResultCallback(Vc,Gc);if("number"==typeof s.filterCollisionGroup&&n.set_m_collisionFilterGroup(s.filterCollisionGroup),"number"==typeof s.filterCollisionMask&&n.set_m_collisionFilterMask(s.filterCollisionMask),this.dynamicsWorld.rayTest(Vc,Gc,n),n.hasHit()){const t=n.get_m_collisionObjects(),e=n.get_m_hitPointWorld(),r=n.get_m_hitNormalWorld(),a=n.get_m_hitFractions(),o=t.size();for(let n=0;n<o;n++){const o=Ammo.castObject(t.at(n),Ammo.btRigidBody);if(o&&o.entity){if(s.filterTags&&!o.entity.tags.has(...s.filterTags)||s.filterCallback&&!s.filterCallback(o.entity))continue;const t=e.at(n),h=r.at(n),c=new Hc(o.entity,new l.e(t.x(),t.y(),t.z()),new l.e(h.x(),h.y(),h.z()),a.at(n));i.push(c)}}s.sort&&i.sort((t,e)=>t.hitFraction-e.hitFraction)}return Ammo.destroy(n),i}_storeCollision(t,e){let s=!1;const i=t.getGuid();return this.collisions[i]=this.collisions[i]||{others:[],entity:t},this.collisions[i].others.indexOf(e)<0&&(this.collisions[i].others.push(e),s=!0),this.frameCollisions[i]=this.frameCollisions[i]||{others:[],entity:t},this.frameCollisions[i].others.push(e),s}_createContactPointFromAmmo(t){const e=t.get_m_localPointA(),s=t.get_m_localPointB(),i=t.getPositionWorldOnA(),n=t.getPositionWorldOnB(),r=t.get_m_normalWorldOnB(),a=this.contactPointPool.allocate();return a.localPoint.set(e.x(),e.y(),e.z()),a.localPointOther.set(s.x(),s.y(),s.z()),a.point.set(i.x(),i.y(),i.z()),a.pointOther.set(n.x(),n.y(),n.z()),a.normal.set(r.x(),r.y(),r.z()),a.impulse=t.getAppliedImpulse(),a}_createReverseContactPointFromAmmo(t){const e=t.get_m_localPointA(),s=t.get_m_localPointB(),i=t.getPositionWorldOnA(),n=t.getPositionWorldOnB(),r=t.get_m_normalWorldOnB(),a=this.contactPointPool.allocate();return a.localPointOther.set(e.x(),e.y(),e.z()),a.localPoint.set(s.x(),s.y(),s.z()),a.pointOther.set(i.x(),i.y(),i.z()),a.point.set(n.x(),n.y(),n.z()),a.normal.set(r.x(),r.y(),r.z()),a.impulse=t.getAppliedImpulse(),a}_createSingleContactResult(t,e,s){const i=this.singleContactResultPool.allocate();return i.a=t,i.b=e,i.localPointA=s.localPoint,i.localPointB=s.localPointOther,i.pointA=s.point,i.pointB=s.pointOther,i.normal=s.normal,i.impulse=s.impulse,i}_createContactResult(t,e){const s=this.contactResultPool.allocate();return s.other=t,s.contacts=e,s}_cleanOldCollisions(){for(const t in this.collisions)if(this.collisions.hasOwnProperty(t)){const e=this.frameCollisions[t],s=this.collisions[t],i=s.entity,n=i.collision,r=i.rigidbody,a=s.others;let o=a.length;for(;o--;){const t=a[o];(!e||e.others.indexOf(t)<0)&&(a.splice(o,1),i.trigger?(n&&n.fire("triggerleave",t),t.rigidbody&&t.rigidbody.fire("triggerleave",i)):t.trigger||(r&&r.fire("collisionend",t),n&&n.fire("collisionend",t)))}0===a.length&&delete this.collisions[t]}}_hasContactEvent(t){const e=t.collision;if(e&&(e.hasEvent("collisionstart")||e.hasEvent("collisionend")||e.hasEvent("contact")))return!0;const s=t.rigidbody;return s&&(s.hasEvent("collisionstart")||s.hasEvent("collisionend")||s.hasEvent("contact"))}_checkForCollisions(t,e){const s=Ammo.wrapPointer(t,Ammo.btDynamicsWorld).getDispatcher(),i=s.getNumManifolds();this.frameCollisions={};for(let n=0;n<i;n++){const t=s.getManifoldByIndexInternal(n),e=t.getBody0(),i=t.getBody1(),r=Ammo.castObject(e,Ammo.btRigidBody),a=Ammo.castObject(i,Ammo.btRigidBody),o=r.entity,l=a.entity;if(!o||!l)continue;const h=r.getCollisionFlags(),c=a.getCollisionFlags(),d=t.getNumContacts(),u=[],f=[];let p;if(d>0)if(4&h||4&c){const t=o.collision&&(o.collision.hasEvent("triggerenter")||o.collision.hasEvent("triggerleave")),e=l.collision&&(l.collision.hasEvent("triggerenter")||l.collision.hasEvent("triggerleave")),s=o.rigidbody&&(o.rigidbody.hasEvent("triggerenter")||o.rigidbody.hasEvent("triggerleave")),i=l.rigidbody&&(l.rigidbody.hasEvent("triggerenter")||l.rigidbody.hasEvent("triggerleave"));t&&(p=this._storeCollision(o,l),!p||4&c||o.collision.fire("triggerenter",l)),e&&(p=this._storeCollision(l,o),!p||4&h||l.collision.fire("triggerenter",o)),s&&(p||(p=this._storeCollision(l,o)),p&&o.rigidbody.fire("triggerenter",l)),i&&(p||(p=this._storeCollision(o,l)),p&&l.rigidbody.fire("triggerenter",o))}else{const e=this._hasContactEvent(o),s=this._hasContactEvent(l),i=this.hasEvent("contact");if(i||e||s){for(let n=0;n<d;n++){const r=t.getContactPoint(n),a=this._createContactPointFromAmmo(r);if(e||s){u.push(a);const t=this._createReverseContactPointFromAmmo(r);f.push(t)}if(i){const t=this._createSingleContactResult(o,l,a);this.fire("contact",t)}}if(e){const t=this._createContactResult(l,u);p=this._storeCollision(o,l),o.collision&&(o.collision.fire("contact",t),p&&o.collision.fire("collisionstart",t)),o.rigidbody&&(o.rigidbody.fire("contact",t),p&&o.rigidbody.fire("collisionstart",t))}if(s){const t=this._createContactResult(o,f);p=this._storeCollision(l,o),l.collision&&(l.collision.fire("contact",t),p&&l.collision.fire("collisionstart",t)),l.rigidbody&&(l.rigidbody.fire("contact",t),p&&l.rigidbody.fire("collisionstart",t))}}}}this._cleanOldCollisions(),this.contactPointPool.freeAll(),this.contactResultPool.freeAll(),this.singleContactResultPool.freeAll()}onUpdate(t){let e,s;this._gravityFloat32[0]=this.gravity.x,this._gravityFloat32[1]=this.gravity.y,this._gravityFloat32[2]=this.gravity.z;const i=this.dynamicsWorld.getGravity();i.x()===this._gravityFloat32[0]&&i.y()===this._gravityFloat32[1]&&i.z()===this._gravityFloat32[2]||(i.setValue(this.gravity.x,this.gravity.y,this.gravity.z),this.dynamicsWorld.setGravity(i));const n=this._triggers;for(e=0,s=n.length;e<s;e++)n[e].updateTransform();const r=this._compounds;for(e=0,s=r.length;e<s;e++)r[e]._updateCompound();const a=this._kinematic;for(e=0,s=a.length;e<s;e++)a[e]._updateKinematic();this.dynamicsWorld.stepSimulation(t,this.maxSubSteps,this.fixedTimeStep);const o=this._dynamic;for(e=0,s=o.length;e<s;e++)o[e]._updateDynamic();this.dynamicsWorld.setInternalTickCallback||this._checkForCollisions(Ammo.getPointer(this.dynamicsWorld),t)}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this),"undefined"!=typeof Ammo&&(Ammo.destroy(this.dynamicsWorld),Ammo.destroy(this.solver),Ammo.destroy(this.overlappingPairCache),Ammo.destroy(this.dispatcher),Ammo.destroy(this.collisionConfiguration),Ammo.destroy(Vc),Ammo.destroy(Gc),this.dynamicsWorld=null,this.solver=null,this.overlappingPairCache=null,this.dispatcher=null,this.collisionConfiguration=null,Vc=null,Gc=null,Uc.onAppDestroy())}}Ir._buildAccessors(Uc.prototype,qc);class Yc{push(t,e){if(this._index[t])throw Error(`Key already in index ${t}`);const s=this._list.push(e)-1;this._index[t]=s}has(t){return void 0!==this._index[t]}get(t){const e=this._index[t];return void 0!==e?this._list[e]:null}remove(t){const e=this._index[t];if(void 0!==e){for(t in this._list.splice(e,1),delete this._index[t],this._index){const s=this._index[t];s>e&&(this._index[t]=s-1)}return!0}return!1}list(){return this._list}clear(){this._list.length=0;for(const t in this._index)delete this._index[t]}constructor(){this._list=[],this._index={}}}const Kc="none",Zc=new o.$;class Qc extends Ir{constructor(t,e){super(t,e),this._resolution=new Jt.Z(640,320),this._referenceResolution=new Jt.Z(640,320),this._scaleMode=Kc,this.scale=1,this._scaleBlend=.5,this._priority=0,this._screenSpace=!1,this.cull=this._screenSpace,this._screenMatrix=new o.$,this._elements=new Set,t.app.graphicsDevice.on("resizecanvas",this._onResize,this)}syncDrawOrder(){this.system.queueDrawOrderSync(this.entity.getGuid(),this._processDrawOrderSync,this)}_recurseDrawOrderSync(t,e){if(!(t instanceof as.w))return e;if(t.element){const s=t.element.drawOrder;t.element.drawOrder=e++,t.element._batchGroupId>=0&&s!==t.element.drawOrder&&this.system.app.batcher?.markGroupDirty(t.element._batchGroupId)}t.particlesystem&&(t.particlesystem.drawOrder=e++);const s=t.children;for(let i=0;i<s.length;i++)e=this._recurseDrawOrderSync(s[i],e);return e}_processDrawOrderSync(){this._recurseDrawOrderSync(this.entity,1),this.fire("syncdraworder")}_calcProjectionMatrix(){const t=this._resolution.x/this.scale,e=this._resolution.y/this.scale,s=t,i=-e;this._screenMatrix.setOrtho(0,s,i,0,1,-1),this._screenSpace||(Zc.setScale(.5*t,.5*e,1),this._screenMatrix.mul2(Zc,this._screenMatrix))}_updateScale(){this.scale=this._calcScale(this._resolution,this.referenceResolution)}_calcScale(t,e){const s=Math.log2((t.x||1)/e.x),i=Math.log2((t.y||1)/e.y);return Math.pow(2,s*(1-this._scaleBlend)+i*this._scaleBlend)}_onResize(t,e){this._screenSpace&&(this._resolution.set(t,e),this.resolution=this._resolution)}_bindElement(t){this._elements.add(t)}_unbindElement(t){this._elements.delete(t)}onRemove(){this.system.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.fire("remove"),this._elements.forEach(t=>t._onScreenRemove()),this._elements.clear(),this.off()}set resolution(t){this._screenSpace?this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height):this._resolution.set(t.x,t.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:resolution",this._resolution),this._elements.forEach(t=>t._onScreenResize(this._resolution))}get resolution(){return this._resolution}set referenceResolution(t){this._referenceResolution.set(t.x,t.y),this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:referenceresolution",this._resolution),this._elements.forEach(t=>t._onScreenResize(this._resolution))}get referenceResolution(){return this._scaleMode===Kc?this._resolution:this._referenceResolution}set screenSpace(t){this._screenSpace=t,this._screenSpace&&this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height),this.resolution=this._resolution,this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:screenspace",this._screenSpace),this._elements.forEach(t=>t._onScreenSpaceChange())}get screenSpace(){return this._screenSpace}set scaleMode(t){t!==Kc&&"blend"!==t&&(t=Kc),this._screenSpace||t===Kc||(t=Kc),this._scaleMode=t,this.resolution=this._resolution,this.fire("set:scalemode",this._scaleMode)}get scaleMode(){return this._scaleMode}set scaleBlend(t){this._scaleBlend=t,this._updateScale(),this._calcProjectionMatrix(),this.entity._dirtyLocal||this.entity._dirtifyLocal(),this.fire("set:scaleblend",this._scaleBlend),this._elements.forEach(t=>t._onScreenResize(this._resolution))}get scaleBlend(){return this._scaleBlend}set priority(t){t>255&&(t=255),this._priority!==t&&(this._priority=t,this.syncDrawOrder())}get priority(){return this._priority}}class Jc{constructor(){this.enabled=!0}}const td=["enabled"];class ed extends Rr{constructor(t){super(t),this.id="screen",this.ComponentType=Qc,this.DataType=Jc,this.schema=td,this.windowResolution=new Jt.Z,this._drawOrderSyncQueue=new Yc,this.app.graphicsDevice.on("resizecanvas",this._onResize,this),this.app.systems.on("update",this._onUpdate,this),this.on("beforeremove",this.onRemoveComponent,this)}initializeComponentData(t,e,s){void 0!==e.priority&&(t.priority=e.priority),void 0!==e.screenSpace&&(t.screenSpace=e.screenSpace),t.cull=t.screenSpace,void 0!==e.scaleMode&&(t.scaleMode=e.scaleMode),void 0!==e.scaleBlend&&(t.scaleBlend=e.scaleBlend),void 0!==e.resolution&&(e.resolution instanceof Jt.Z?t._resolution.copy(e.resolution):t._resolution.set(e.resolution[0],e.resolution[1]),t.resolution=t._resolution),void 0!==e.referenceResolution&&(e.referenceResolution instanceof Jt.Z?t._referenceResolution.copy(e.referenceResolution):t._referenceResolution.set(e.referenceResolution[0],e.referenceResolution[1]),t.referenceResolution=t._referenceResolution),t.syncDrawOrder(),super.initializeComponentData(t,e,td)}destroy(){super.destroy(),this.app.graphicsDevice.off("resizecanvas",this._onResize,this),this.app.systems.off("update",this._onUpdate,this)}_onUpdate(t){const e=this.store;for(const s in e)e[s].entity.screen.update&&e[s].entity.screen.update(t)}_onResize(t,e){this.windowResolution.x=t,this.windowResolution.y=e}cloneComponent(t,e){const s=t.screen;return this.addComponent(e,{enabled:s.enabled,screenSpace:s.screenSpace,scaleMode:s.scaleMode,scaleBlend:s.scaleBlend,priority:s.priority,resolution:s.resolution.clone(),referenceResolution:s.referenceResolution.clone()})}onRemoveComponent(t,e){e.onRemove()}processDrawOrderSyncQueue(){const t=this._drawOrderSyncQueue.list();for(let e=0;e<t.length;e++){const s=t[e];s.callback.call(s.scope)}this._drawOrderSyncQueue.clear()}queueDrawOrderSync(t,e,s){this._drawOrderSyncQueue.list().length||this.app.once("prerender",this.processDrawOrderSyncQueue,this),this._drawOrderSyncQueue.has(t)||this._drawOrderSyncQueue.push(t,{callback:e,scope:s})}}Ir._buildAccessors(Qc.prototype,td);class sd{constructor(t,e){this.origin=new l.e,this.direction=l.e.FORWARD.clone(),t&&this.origin.copy(t),e&&this.direction.copy(e)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.set(t.origin,t.direction)}clone(){return new this.constructor(this.origin,this.direction)}}const id=new Jt.Z,nd=new l.e,rd=new sd,ad=new yt,od=new l.e,ld=new l.e,hd=new St.k,cd={x:"y",y:"x"};class dd extends r.J{static{this.EVENT_DRAGSTART="drag:start"}static{this.EVENT_DRAGEND="drag:end"}static{this.EVENT_DRAGMOVE="drag:move"}constructor(t,e){if(super(),!(t&&t instanceof vl))throw new Error("Element was null or not an ElementComponent");if(e&&"x"!==e&&"y"!==e)throw new Error(`Unrecognized axis: ${e}`);this._element=t,this._app=t.system.app,this._axis=e||null,this._enabled=!0,this._dragScale=new l.e,this._dragStartMousePosition=new l.e,this._dragStartHandlePosition=new l.e,this._deltaMousePosition=new l.e,this._deltaHandlePosition=new l.e,this._isDragging=!1,this._toggleLifecycleListeners("on")}_toggleLifecycleListeners(t){this._element[t]("mousedown",this._onMouseDownOrTouchStart,this),this._element[t]("touchstart",this._onMouseDownOrTouchStart,this),this._element[t]("selectstart",this._onMouseDownOrTouchStart,this)}_toggleDragListeners(t){const e="on"===t;this._hasDragListeners&&e||(this._app.mouse&&(this._element[t]("mousemove",this._onMove,this),this._element[t]("mouseup",this._onMouseUpOrTouchEnd,this)),i.i.touch&&(this._element[t]("touchmove",this._onMove,this),this._element[t]("touchend",this._onMouseUpOrTouchEnd,this),this._element[t]("touchcancel",this._onMouseUpOrTouchEnd,this)),this._element[t]("selectmove",this._onMove,this),this._element[t]("selectend",this._onMouseUpOrTouchEnd,this),this._hasDragListeners=e)}_onMouseDownOrTouchStart(t){if(this._element&&!this._isDragging&&this.enabled){this._dragCamera=t.camera,this._calculateDragScale();const e=this._screenToLocal(t);e&&(this._toggleDragListeners("on"),this._isDragging=!0,this._dragStartMousePosition.copy(e),this._dragStartHandlePosition.copy(this._element.entity.getLocalPosition()),this.fire("drag:start"))}}_onMouseUpOrTouchEnd(){this._isDragging&&(this._isDragging=!1,this._toggleDragListeners("off"),this.fire("drag:end"))}_screenToLocal(t){return t.inputSource?rd.set(t.inputSource.getOrigin(),t.inputSource.getDirection()):(this._determineInputPosition(t),this._chooseRayOriginAndDirection()),od.copy(this._element.entity.forward).mulScalar(-1),ad.setFromPointNormal(this._element.entity.getPosition(),od),ad.intersectsRay(rd,ld)?(hd.copy(this._element.entity.getRotation()).invert().transformVector(ld,ld),ld.mul(this._dragScale),ld):null}_determineInputPosition(t){const e=this._app.graphicsDevice.maxPixelRatio;void 0!==t.x&&void 0!==t.y?(id.x=t.x*e,id.y=t.y*e):t.changedTouches?(id.x=t.changedTouches[0].x*e,id.y=t.changedTouches[0].y*e):console.warn("Could not determine position from input event")}_chooseRayOriginAndDirection(){this._element.screen&&this._element.screen.screen.screenSpace?(rd.origin.set(id.x,-id.y,0),rd.direction.copy(l.e.FORWARD)):(nd.copy(this._dragCamera.screenToWorld(id.x,id.y,1)),rd.origin.copy(this._dragCamera.entity.getPosition()),rd.direction.copy(nd).sub(rd.origin).normalize())}_calculateDragScale(){let t=this._element.entity.parent;const e=this._element.screen&&this._element.screen.screen,s=e&&e.screenSpace,i=s?e.scale:1,n=this._dragScale;for(n.set(i,i,i);t&&(n.mul(t.getLocalScale()),t=t.parent,!s||!t.screen););n.x=1/n.x,n.y=1/n.y,n.z=0}_onMove(t){const{_element:e,_deltaMousePosition:s,_deltaHandlePosition:i,_axis:n}=this;if(e&&this._isDragging&&this.enabled&&e.enabled&&e.entity.enabled){const r=this._screenToLocal(t);if(r){if(s.sub2(r,this._dragStartMousePosition),i.add2(this._dragStartHandlePosition,s),n){const t=e.entity.getLocalPosition(),s=cd[n];i[s]=t[s]}e.entity.setLocalPosition(i),this.fire("drag:move",i)}}}destroy(){this._toggleLifecycleListeners("off"),this._toggleDragListeners("off")}set enabled(t){this._enabled=t}get enabled(){return this._enabled}get isDragging(){return this._isDragging}}const ud=new Jt.Z;class fd extends Ir{static{this.EVENT_SETSCROLL="set:scroll"}constructor(t,e){super(t,e),this._viewportEntity=null,this._contentEntity=null,this._horizontalScrollbarEntity=null,this._verticalScrollbarEntity=null,this._evtElementRemove=null,this._evtViewportElementRemove=null,this._evtViewportResize=null,this._evtContentEntityElementAdd=null,this._evtContentElementRemove=null,this._evtContentResize=null,this._evtHorizontalScrollbarAdd=null,this._evtHorizontalScrollbarRemove=null,this._evtHorizontalScrollbarValue=null,this._evtVerticalScrollbarAdd=null,this._evtVerticalScrollbarRemove=null,this._evtVerticalScrollbarValue=null,this._scrollbarUpdateFlags={},this._scrollbarEntities={},this._prevContentSizes={},this._prevContentSizes[F.SzJ]=null,this._prevContentSizes[F.Yns]=null,this._scroll=new Jt.Z,this._velocity=new l.e,this._dragStartPosition=new l.e,this._disabledContentInput=!1,this._disabledContentInputEntities=[],this._toggleLifecycleListeners("on"),this._toggleElementListeners("on")}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set horizontal(t){this._setValue("horizontal",t)}get horizontal(){return this.data.horizontal}set vertical(t){this._setValue("vertical",t)}get vertical(){return this.data.vertical}set scrollMode(t){this._setValue("scrollMode",t)}get scrollMode(){return this.data.scrollMode}set bounceAmount(t){this._setValue("bounceAmount",t)}get bounceAmount(){return this.data.bounceAmount}set friction(t){this._setValue("friction",t)}get friction(){return this.data.friction}set dragThreshold(t){this._setValue("dragThreshold",t)}get dragThreshold(){return this.data.dragThreshold}set useMouseWheel(t){this._setValue("useMouseWheel",t)}get useMouseWheel(){return this.data.useMouseWheel}set mouseWheelSensitivity(t){this._setValue("mouseWheelSensitivity",t)}get mouseWheelSensitivity(){return this.data.mouseWheelSensitivity}set horizontalScrollbarVisibility(t){this._setValue("horizontalScrollbarVisibility",t)}get horizontalScrollbarVisibility(){return this.data.horizontalScrollbarVisibility}set verticalScrollbarVisibility(t){this._setValue("verticalScrollbarVisibility",t)}get verticalScrollbarVisibility(){return this.data.verticalScrollbarVisibility}set viewportEntity(t){if(this._viewportEntity===t)return;const e="string"==typeof t;this._viewportEntity&&e&&this._viewportEntity.getGuid()===t||(this._viewportEntity&&this._viewportEntityUnsubscribe(),t instanceof Rt.t?this._viewportEntity=t:this._viewportEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._viewportEntity&&this._viewportEntitySubscribe(),this._viewportEntity?this.data.viewportEntity=this._viewportEntity.getGuid():e&&t&&(this.data.viewportEntity=t))}get viewportEntity(){return this._viewportEntity}set contentEntity(t){if(this._contentEntity===t)return;const e="string"==typeof t;this._contentEntity&&e&&this._contentEntity.getGuid()===t||(this._contentEntity&&this._contentEntityUnsubscribe(),t instanceof Rt.t?this._contentEntity=t:this._contentEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._contentEntity&&this._contentEntitySubscribe(),this._contentEntity?this.data.contentEntity=this._contentEntity.getGuid():e&&t&&(this.data.contentEntity=t))}get contentEntity(){return this._contentEntity}set horizontalScrollbarEntity(t){if(this._horizontalScrollbarEntity===t)return;const e="string"==typeof t;this._horizontalScrollbarEntity&&e&&this._horizontalScrollbarEntity.getGuid()===t||(this._horizontalScrollbarEntity&&this._horizontalScrollbarEntityUnsubscribe(),t instanceof Rt.t?this._horizontalScrollbarEntity=t:this._horizontalScrollbarEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._scrollbarEntities[F.SzJ]=this._horizontalScrollbarEntity,this._horizontalScrollbarEntity&&this._horizontalScrollbarEntitySubscribe(),this._horizontalScrollbarEntity?this.data.horizontalScrollbarEntity=this._horizontalScrollbarEntity.getGuid():e&&t&&(this.data.horizontalScrollbarEntity=t))}get horizontalScrollbarEntity(){return this._horizontalScrollbarEntity}set verticalScrollbarEntity(t){if(this._verticalScrollbarEntity===t)return;const e="string"==typeof t;this._verticalScrollbarEntity&&e&&this._verticalScrollbarEntity.getGuid()===t||(this._verticalScrollbarEntity&&this._verticalScrollbarEntityUnsubscribe(),t instanceof Rt.t?this._verticalScrollbarEntity=t:this._verticalScrollbarEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._scrollbarEntities[F.Yns]=this._verticalScrollbarEntity,this._verticalScrollbarEntity&&this._verticalScrollbarEntitySubscribe(),this._verticalScrollbarEntity?this.data.verticalScrollbarEntity=this._verticalScrollbarEntity.getGuid():e&&t&&(this.data.verticalScrollbarEntity=t))}get verticalScrollbarEntity(){return this._verticalScrollbarEntity}set scroll(t){this._onSetScroll(t.x,t.y)}get scroll(){return this._scroll}_setValue(t,e){const s=this.data,i=s[t];s[t]=e,this.fire("set",t,i,e)}_toggleLifecycleListeners(t){this[t]("set_horizontal",this._onSetHorizontalScrollingEnabled,this),this[t]("set_vertical",this._onSetVerticalScrollingEnabled,this),this.entity[t]("element:add",this._onElementComponentAdd,this)}_toggleElementListeners(t){if(this.entity.element){if("on"===t&&this._hasElementListeners)return;this.entity.element[t]("resize",this._syncAll,this),this.entity.element[t]("mousewheel",this._onMouseWheel,this),this._hasElementListeners="on"===t}}_onElementComponentAdd(t){this._evtElementRemove=this.entity.element.once("beforeremove",this._onElementComponentRemove,this),this._toggleElementListeners("on")}_onElementComponentRemove(t){this._evtElementRemove?.off(),this._evtElementRemove=null,this._toggleElementListeners("off")}_viewportEntitySubscribe(){this._evtViewportEntityElementAdd=this._viewportEntity.on("element:add",this._onViewportElementGain,this),this._viewportEntity.element&&this._onViewportElementGain()}_viewportEntityUnsubscribe(){this._evtViewportEntityElementAdd?.off(),this._evtViewportEntityElementAdd=null,this._viewportEntity?.element&&this._onViewportElementLose()}_viewportEntityElementSubscribe(){const t=this._viewportEntity.element;this._evtViewportElementRemove=t.once("beforeremove",this._onViewportElementLose,this),this._evtViewportResize=t.on("resize",this._syncAll,this)}_viewportEntityElementUnsubscribe(){this._evtViewportElementRemove?.off(),this._evtViewportElementRemove=null,this._evtViewportResize?.off(),this._evtViewportResize=null}_onViewportElementGain(){this._viewportEntityElementSubscribe(),this._syncAll()}_onViewportElementLose(){this._viewportEntityElementUnsubscribe()}_contentEntitySubscribe(){this._evtContentEntityElementAdd=this._contentEntity.on("element:add",this._onContentElementGain,this),this._contentEntity.element&&this._onContentElementGain()}_contentEntityUnsubscribe(){this._evtContentEntityElementAdd?.off(),this._evtContentEntityElementAdd=null,this._contentEntity?.element&&this._onContentElementLose()}_contentEntityElementSubscribe(){const t=this._contentEntity.element;this._evtContentElementRemove=t.once("beforeremove",this._onContentElementLose,this),this._evtContentResize=t.on("resize",this._syncAll,this)}_contentEntityElementUnsubscribe(){this._evtContentElementRemove?.off(),this._evtContentElementRemove=null,this._evtContentResize?.off(),this._evtContentResize=null}_onContentElementGain(){this._contentEntityElementSubscribe(),this._destroyDragHelper(),this._contentDragHelper=new dd(this._contentEntity.element),this._contentDragHelper.on("drag:start",this._onContentDragStart,this),this._contentDragHelper.on("drag:end",this._onContentDragEnd,this),this._contentDragHelper.on("drag:move",this._onContentDragMove,this),this._prevContentSizes[F.SzJ]=null,this._prevContentSizes[F.Yns]=null,this._syncAll()}_onContentElementLose(){this._contentEntityElementUnsubscribe(),this._destroyDragHelper()}_onContentDragStart(){this._contentEntity&&this.enabled&&this.entity.enabled&&this._dragStartPosition.copy(this._contentEntity.getLocalPosition())}_onContentDragEnd(){this._prevContentDragPosition=null,this._enableContentInput()}_onContentDragMove(t){if(this._contentEntity&&this.enabled&&this.entity.enabled&&(this._wasDragged=!0,this._setScrollFromContentPosition(t),this._setVelocityFromContentPositionDelta(t),!this._disabledContentInput)){const e=t.x-this._dragStartPosition.x,s=t.y-this._dragStartPosition.y;(Math.abs(e)>this.dragThreshold||Math.abs(s)>this.dragThreshold)&&this._disableContentInput()}}_horizontalScrollbarEntitySubscribe(){this._evtHorizontalScrollbarAdd=this._horizontalScrollbarEntity.on("scrollbar:add",this._onHorizontalScrollbarGain,this),this._horizontalScrollbarEntity.scrollbar&&this._onHorizontalScrollbarGain()}_verticalScrollbarEntitySubscribe(){this._evtVerticalScrollbarAdd=this._verticalScrollbarEntity.on("scrollbar:add",this._onVerticalScrollbarGain,this),this._verticalScrollbarEntity.scrollbar&&this._onVerticalScrollbarGain()}_horizontalScrollbarEntityUnsubscribe(){this._evtHorizontalScrollbarAdd?.off(),this._evtHorizontalScrollbarAdd=null,this._horizontalScrollbarEntity.scrollbar&&this._onHorizontalScrollbarLose()}_verticalScrollbarEntityUnsubscribe(){this._evtVerticalScrollbarAdd?.off(),this._evtVerticalScrollbarAdd=null,this._verticalScrollbarEntity.scrollbar&&this._onVerticalScrollbarLose()}_onSetHorizontalScrollbarValue(t){!this._scrollbarUpdateFlags[F.SzJ]&&this.enabled&&this.entity.enabled&&this._onSetScroll(t,null)}_onSetVerticalScrollbarValue(t){!this._scrollbarUpdateFlags[F.Yns]&&this.enabled&&this.entity.enabled&&this._onSetScroll(null,t)}_onHorizontalScrollbarGain(){const t=this._horizontalScrollbarEntity?.scrollbar;this._evtHorizontalScrollbarRemove=t.on("beforeremove",this._onHorizontalScrollbarLose,this),this._evtHorizontalScrollbarValue=t.on("set:value",this._onSetHorizontalScrollbarValue,this),this._syncScrollbarEnabledState(F.SzJ),this._syncScrollbarPosition(F.SzJ)}_onVerticalScrollbarGain(){const t=this._verticalScrollbarEntity?.scrollbar;this._evtVerticalScrollbarRemove=t.on("beforeremove",this._onVerticalScrollbarLose,this),this._evtVerticalScrollbarValue=t.on("set:value",this._onSetVerticalScrollbarValue,this),this._syncScrollbarEnabledState(F.Yns),this._syncScrollbarPosition(F.Yns)}_onHorizontalScrollbarLose(){this._evtHorizontalScrollbarRemove?.off(),this._evtHorizontalScrollbarRemove=null,this._evtHorizontalScrollbarValue?.off(),this._evtHorizontalScrollbarValue=null}_onVerticalScrollbarLose(){this._evtVerticalScrollbarRemove?.off(),this._evtVerticalScrollbarRemove=null,this._evtVerticalScrollbarValue?.off(),this._evtVerticalScrollbarValue=null}_onSetHorizontalScrollingEnabled(){this._syncScrollbarEnabledState(F.SzJ)}_onSetVerticalScrollingEnabled(){this._syncScrollbarEnabledState(F.Yns)}_onSetScroll(t,e,s){!1!==s&&this._velocity.set(0,0,0);const i=this._updateAxis(t,"x",F.SzJ),n=this._updateAxis(e,"y",F.Yns);(i||n)&&this.fire("set:scroll",this._scroll)}_updateAxis(t,e,s){const i=null!==t&&Math.abs(t-this._scroll[e])>1e-5;return(i||this._isDragging()||0===t)&&(this._scroll[e]=this._determineNewScrollValue(t,e,s),this._syncContentPosition(s),this._syncScrollbarPosition(s)),i}_determineNewScrollValue(t,e,s){if(!this._getScrollingEnabled(s))return this._scroll[e];switch(this.scrollMode){case 0:return a.D.clamp(t,0,this._getMaxScrollValue(s));case 1:return this._setVelocityFromOvershoot(t,e,s),t;case 2:return t;default:return console.warn(`Unhandled scroll mode:${this.scrollMode}`),t}}_syncAll(){this._syncContentPosition(F.SzJ),this._syncContentPosition(F.Yns),this._syncScrollbarPosition(F.SzJ),this._syncScrollbarPosition(F.Yns),this._syncScrollbarEnabledState(F.SzJ),this._syncScrollbarEnabledState(F.Yns)}_syncContentPosition(t){if(!this._contentEntity)return;const e=this._getAxis(t),s=this._getSign(t),i=this._prevContentSizes[t],n=this._getContentSize(t);if(null!==i&&Math.abs(i-n)>1e-4){const s=this._getMaxOffset(t,i),r=this._getMaxOffset(t,n);this._scroll[e]=0===r?1:a.D.clamp(this._scroll[e]*s/r,0,1)}const r=this._scroll[e]*this._getMaxOffset(t),o=this._contentEntity.getLocalPosition();o[e]=r*s,this._contentEntity.setLocalPosition(o),this._prevContentSizes[t]=n}_syncScrollbarPosition(t){const e=this._scrollbarEntities[t];if(!e?.scrollbar)return;const s=this._getAxis(t);this._scrollbarUpdateFlags[t]=!0,e.scrollbar.value=this._scroll[s],e.scrollbar.handleSize=this._getScrollbarHandleSize(s,t),this._scrollbarUpdateFlags[t]=!1}_syncScrollbarEnabledState(t){const e=this._scrollbarEntities[t];if(!e)return;const s=this._getScrollingEnabled(t),i=this._getScrollbarVisibility(t);switch(i){case 0:return void(e.enabled=s);case 1:return void(e.enabled=s&&this._contentIsLargerThanViewport(t));default:console.warn(`Unhandled scrollbar visibility:${i}`),e.enabled=s}}_contentIsLargerThanViewport(t){return this._getContentSize(t)>this._getViewportSize(t)}_contentPositionToScrollValue(t){const e=this._getMaxOffset(F.SzJ),s=this._getMaxOffset(F.Yns);return ud.x=0===e?0:t.x/e,ud.y=0===s?0:t.y/-s,ud}_getMaxOffset(t,e){e=void 0===e?this._getContentSize(t):e;const s=this._getViewportSize(t);return e<s?-this._getViewportSize(t):s-e}_getMaxScrollValue(t){return this._contentIsLargerThanViewport(t)?1:0}_getScrollbarHandleSize(t,e){const s=this._getViewportSize(e),i=this._getContentSize(e);if(Math.abs(i)<.001)return 1;const n=Math.min(s/i,1),r=this._toOvershoot(this._scroll[t],e);return 0===r?n:n/(1+Math.abs(r))}_getViewportSize(t){return this._getSize(t,this._viewportEntity)}_getContentSize(t){return this._getSize(t,this._contentEntity)}_getSize(t,e){return e?.element?e.element[this._getCalculatedDimension(t)]:0}_getScrollingEnabled(t){return t===F.SzJ?this.horizontal:t===F.Yns?this.vertical:void 0}_getScrollbarVisibility(t){return t===F.SzJ?this.horizontalScrollbarVisibility:t===F.Yns?this.verticalScrollbarVisibility:void 0}_getSign(t){return t===F.SzJ?1:-1}_getAxis(t){return t===F.SzJ?"x":"y"}_getCalculatedDimension(t){return t===F.SzJ?"calculatedWidth":"calculatedHeight"}_destroyDragHelper(){this._contentDragHelper&&this._contentDragHelper.destroy()}onUpdate(){this._contentEntity&&(this._updateVelocity(),this._syncScrollbarEnabledState(F.SzJ),this._syncScrollbarEnabledState(F.Yns))}_updateVelocity(){if(!this._isDragging()){if(1===this.scrollMode&&(this._hasOvershoot("x",F.SzJ)&&this._setVelocityFromOvershoot(this.scroll.x,"x",F.SzJ),this._hasOvershoot("y",F.Yns)&&this._setVelocityFromOvershoot(this.scroll.y,"y",F.Yns)),Math.abs(this._velocity.x)>1e-4||Math.abs(this._velocity.y)>1e-4){const t=this._contentEntity.getLocalPosition();t.x+=this._velocity.x,t.y+=this._velocity.y,this._contentEntity.setLocalPosition(t),this._setScrollFromContentPosition(t)}this._velocity.x*=1-this.friction,this._velocity.y*=1-this.friction}}_hasOvershoot(t,e){return Math.abs(this._toOvershoot(this.scroll[t],e))>.001}_toOvershoot(t,e){const s=this._getMaxScrollValue(e);return t<0?t:t>s?t-s:0}_setVelocityFromOvershoot(t,e,s){const i=this._toOvershoot(t,s)*this._getMaxOffset(s)*this._getSign(s);Math.abs(i)>0&&(this._velocity[e]=-i/(50*this.bounceAmount+1))}_setVelocityFromContentPositionDelta(t){this._prevContentDragPosition?(this._velocity.sub2(t,this._prevContentDragPosition),this._prevContentDragPosition.copy(t)):(this._velocity.set(0,0,0),this._prevContentDragPosition=t.clone())}_setScrollFromContentPosition(t){let e=this._contentPositionToScrollValue(t);this._isDragging()&&(e=this._applyScrollValueTension(e)),this._onSetScroll(e.x,e.y,!1)}_applyScrollValueTension(t){let e=this._getMaxScrollValue(F.SzJ),s=this._toOvershoot(t.x,F.SzJ);return s>0?t.x=e+1*Math.log10(1+s):s<0&&(t.x=-1*Math.log10(1-s)),e=this._getMaxScrollValue(F.Yns),s=this._toOvershoot(t.y,F.Yns),s>0?t.y=e+1*Math.log10(1+s):s<0&&(t.y=-1*Math.log10(1-s)),t}_isDragging(){return this._contentDragHelper&&this._contentDragHelper.isDragging}_setScrollbarComponentsEnabled(t){this._horizontalScrollbarEntity?.scrollbar&&(this._horizontalScrollbarEntity.scrollbar.enabled=t),this._verticalScrollbarEntity?.scrollbar&&(this._verticalScrollbarEntity.scrollbar.enabled=t)}_setContentDraggingEnabled(t){this._contentDragHelper&&(this._contentDragHelper.enabled=t)}_onMouseWheel(t){if(!this.useMouseWheel||!this._contentEntity?.element)return;const e=t.event,s=e.deltaX/this._contentEntity.element.calculatedWidth*this.mouseWheelSensitivity.x,i=e.deltaY/this._contentEntity.element.calculatedHeight*this.mouseWheelSensitivity.y,n=a.D.clamp(this._scroll.x+s,0,this._getMaxScrollValue(F.SzJ)),r=a.D.clamp(this._scroll.y+i,0,this._getMaxScrollValue(F.Yns));this.scroll=new Jt.Z(n,r)}_enableContentInput(){for(;this._disabledContentInputEntities.length;){const t=this._disabledContentInputEntities.pop();t.element&&(t.element.useInput=!0)}this._disabledContentInput=!1}_disableContentInput(){const t=e=>{e.element&&e.element.useInput&&(this._disabledContentInputEntities.push(e),e.element.useInput=!1);const s=e.children;for(let i=0,n=s.length;i<n;i++)t(s[i])};if(this._contentEntity){const e=this._contentEntity.children;for(let s=0,i=e.length;s<i;s++)t(e[s])}this._disabledContentInput=!0}onEnable(){this._setScrollbarComponentsEnabled(!0),this._setContentDraggingEnabled(!0),this._syncAll()}onDisable(){this._setScrollbarComponentsEnabled(!1),this._setContentDraggingEnabled(!1)}onRemove(){this._toggleLifecycleListeners("off"),this._toggleElementListeners("off"),this._destroyDragHelper()}resolveDuplicatedEntityReferenceProperties(t,e){t.viewportEntity&&(this.viewportEntity=e[t.viewportEntity.getGuid()]),t.contentEntity&&(this.contentEntity=e[t.contentEntity.getGuid()]),t.horizontalScrollbarEntity&&(this.horizontalScrollbarEntity=e[t.horizontalScrollbarEntity.getGuid()]),t.verticalScrollbarEntity&&(this.verticalScrollbarEntity=e[t.verticalScrollbarEntity.getGuid()])}}class pd{constructor(){this.enabled=!0,this.dragThreshold=10,this.useMouseWheel=!0,this.mouseWheelSensitivity=new Jt.Z(1,1),this.horizontalScrollbarVisibility=0,this.verticalScrollbarVisibility=0,this.viewportEntity=null,this.contentEntity=null,this.horizontalScrollbarEntity=null,this.verticalScrollbarEntity=null}}const md=[{name:"enabled",type:"boolean"},{name:"horizontal",type:"boolean"},{name:"vertical",type:"boolean"},{name:"scrollMode",type:"number"},{name:"bounceAmount",type:"number"},{name:"friction",type:"number"},{name:"dragThreshold",type:"number"},{name:"useMouseWheel",type:"boolean"},{name:"mouseWheelSensitivity",type:"vec2"},{name:"horizontalScrollbarVisibility",type:"number"},{name:"verticalScrollbarVisibility",type:"number"}];class _d extends Rr{constructor(t){super(t),this.id="scrollview",this.ComponentType=fd,this.DataType=pd,this.schema=md,this.on("beforeremove",this._onRemoveComponent,this),this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){void 0===e.dragThreshold&&(e.dragThreshold=10),void 0===e.useMouseWheel&&(e.useMouseWheel=!0),void 0===e.mouseWheelSensitivity&&(e.mouseWheelSensitivity=new Jt.Z(1,1)),super.initializeComponentData(t,e,md),t.viewportEntity=e.viewportEntity,t.contentEntity=e.contentEntity,t.horizontalScrollbarEntity=e.horizontalScrollbarEntity,t.verticalScrollbarEntity=e.verticalScrollbarEntity}onUpdate(t){const e=this.store;for(const s in e){const t=e[s].entity,i=t.scrollview;i.enabled&&t.enabled&&i.onUpdate()}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}class gd extends Ir{static{this.EVENT_SETVALUE="set:value"}constructor(t,e){super(t,e),this._handleEntity=null,this._evtHandleEntityElementAdd=null,this._evtHandleEntityChanges=[],this._toggleLifecycleListeners("on")}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set orientation(t){this._setValue("orientation",t)}get orientation(){return this.data.orientation}set value(t){this._setValue("value",t)}get value(){return this.data.value}set handleSize(t){this._setValue("handleSize",t)}get handleSize(){return this.data.handleSize}set handleEntity(t){if(this._handleEntity===t)return;const e="string"==typeof t;this._handleEntity&&e&&this._handleEntity.getGuid()===t||(this._handleEntity&&this._handleEntityUnsubscribe(),t instanceof Rt.t?this._handleEntity=t:this._handleEntity=e&&this.system.app.getEntityFromIndex(t)||null,this._handleEntity&&this._handleEntitySubscribe(),this._handleEntity?this.data.handleEntity=this._handleEntity.getGuid():e&&t&&(this.data.handleEntity=t))}get handleEntity(){return this._handleEntity}_setValue(t,e){const s=this.data,i=s[t];s[t]=e,this.fire("set",t,i,e)}_toggleLifecycleListeners(t){this[t]("set_value",this._onSetValue,this),this[t]("set_handleSize",this._onSetHandleSize,this),this[t]("set_orientation",this._onSetOrientation,this)}_handleEntitySubscribe(){this._evtHandleEntityElementAdd=this._handleEntity.on("element:add",this._onHandleElementGain,this),this._handleEntity.element&&this._onHandleElementGain()}_handleEntityUnsubscribe(){this._evtHandleEntityElementAdd?.off(),this._evtHandleEntityElementAdd=null,this._handleEntity?.element&&this._onHandleElementLose()}_handleEntityElementSubscribe(){const t=this._handleEntity.element,e=this._evtHandleEntityChanges;e.push(t.once("beforeremove",this._onHandleElementLose,this)),e.push(t.on("set:anchor",this._onSetHandleAlignment,this)),e.push(t.on("set:margin",this._onSetHandleAlignment,this)),e.push(t.on("set:pivot",this._onSetHandleAlignment,this))}_handleEntityElementUnsubscribe(){for(let t=0;t<this._evtHandleEntityChanges.length;t++)this._evtHandleEntityChanges[t].off();this._evtHandleEntityChanges.length=0}_onHandleElementGain(){this._handleEntityElementSubscribe(),this._destroyDragHelper(),this._handleDragHelper=new dd(this._handleEntity.element,this._getAxis()),this._handleDragHelper.on("drag:move",this._onHandleDrag,this),this._updateHandlePositionAndSize()}_onHandleElementLose(){this._handleEntityElementUnsubscribe(),this._destroyDragHelper()}_onHandleDrag(t){this._handleEntity&&this.enabled&&this.entity.enabled&&(this.value=this._handlePositionToScrollValue(t[this._getAxis()]))}_onSetValue(t,e,s){Math.abs(s-e)>1e-5&&(this.data.value=a.D.clamp(s,0,1),this._updateHandlePositionAndSize(),this.fire("set:value",this.data.value))}_onSetHandleSize(t,e,s){Math.abs(s-e)>1e-5&&(this.data.handleSize=a.D.clamp(s,0,1),this._updateHandlePositionAndSize())}_onSetHandleAlignment(){this._updateHandlePositionAndSize()}_onSetOrientation(t,e,s){s!==e&&this._handleEntity?.element&&(this._handleEntity.element[this._getOppositeDimension()]=0)}_updateHandlePositionAndSize(){const t=this._handleEntity,e=t?.element;if(t){const e=t.getLocalPosition();e[this._getAxis()]=this._getHandlePosition(),t.setLocalPosition(e)}e&&(e[this._getDimension()]=this._getHandleLength())}_handlePositionToScrollValue(t){return t*this._getSign()/this._getUsableTrackLength()}_scrollValueToHandlePosition(t){return t*this._getSign()*this._getUsableTrackLength()}_getUsableTrackLength(){return Math.max(this._getTrackLength()-this._getHandleLength(),.001)}_getTrackLength(){return this.entity.element?this.orientation===F.SzJ?this.entity.element.calculatedWidth:this.entity.element.calculatedHeight:0}_getHandleLength(){return this._getTrackLength()*this.handleSize}_getHandlePosition(){return this._scrollValueToHandlePosition(this.value)}_getSign(){return this.orientation===F.SzJ?1:-1}_getAxis(){return this.orientation===F.SzJ?"x":"y"}_getDimension(){return this.orientation===F.SzJ?"width":"height"}_getOppositeDimension(){return this.orientation===F.SzJ?"height":"width"}_destroyDragHelper(){this._handleDragHelper&&this._handleDragHelper.destroy()}_setHandleDraggingEnabled(t){this._handleDragHelper&&(this._handleDragHelper.enabled=t)}onEnable(){this._setHandleDraggingEnabled(!0)}onDisable(){this._setHandleDraggingEnabled(!1)}onRemove(){this._destroyDragHelper(),this._toggleLifecycleListeners("off")}resolveDuplicatedEntityReferenceProperties(t,e){t.handleEntity&&(this.handleEntity=e[t.handleEntity.getGuid()])}}class vd{constructor(){this.enabled=!0,this.orientation=F.SzJ,this.value=0,this.handleSize=0,this.handleEntity=null}}const Sd=[{name:"enabled",type:"boolean"},{name:"orientation",type:"number"},{name:"value",type:"number"},{name:"handleSize",type:"number"}];class yd extends Rr{constructor(t){super(t),this.id="scrollbar",this.ComponentType=gd,this.DataType=vd,this.schema=Sd,this.on("add",this._onAddComponent,this),this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,Sd),t.handleEntity=e.handleEntity}_onAddComponent(t){t.fire("scrollbar:add")}_onRemoveComponent(t,e){e.onRemove()}}function xd(){return!("undefined"==typeof AudioContext&&"undefined"==typeof webkitAudioContext)}const Td="linear";function wd(t,e){return t%e||0}class bd extends r.J{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}constructor(t,e,s){super(),this.source=null,this._manager=t,this._volume=void 0!==s.volume?a.D.clamp(Number(s.volume)||0,0,1):1,this._pitch=void 0!==s.pitch?Math.max(.01,Number(s.pitch)||0):1,this._loop=!(void 0===s.loop||!s.loop),this._sound=e,this._state=2,this._suspended=!1,this._suspendEndEvent=0,this._suspendInstanceEvents=!1,this._playWhenLoaded=!0,this._startTime=Math.max(0,Number(s.startTime)||0),this._duration=Math.max(0,Number(s.duration)||0),this._startOffset=null,this._onPlayCallback=s.onPlay,this._onPauseCallback=s.onPause,this._onResumeCallback=s.onResume,this._onStopCallback=s.onStop,this._onEndCallback=s.onEnd,xd()?(this._startedAt=0,this._currentTime=0,this._currentOffset=0,this._inputNode=null,this._connectorNode=null,this._firstNode=null,this._lastNode=null,this._waitingContextSuspension=!1,this._initializeNodes(),this._endedHandler=this._onEnded.bind(this)):(this._isReady=!1,this._loadedMetadataHandler=this._onLoadedMetadata.bind(this),this._timeUpdateHandler=this._onTimeUpdate.bind(this),this._endedHandler=this._onEnded.bind(this),this._createSource())}set currentTime(t){if(!(t<0))if(0===this._state){const e=this._suspendInstanceEvents;this._suspendInstanceEvents=!0,this.stop(),this._startOffset=t,this.play(),this._suspendInstanceEvents=e}else this._startOffset=t,this._currentTime=t}get currentTime(){return null!==this._startOffset?this._startOffset:1===this._state?this._currentTime:2!==this._state&&this.source?(this._updateCurrentTime(),this._currentTime):0}set duration(t){this._duration=Math.max(0,Number(t)||0);const e=0===this._state;this.stop(),e&&this.play()}get duration(){return this._sound?this._duration?wd(this._duration,this._sound.duration):this._sound.duration:0}get isPaused(){return 1===this._state}get isPlaying(){return 0===this._state}get isStopped(){return 2===this._state}get isSuspended(){return this._suspended}set loop(t){this._loop=!!t,this.source&&(this.source.loop=this._loop)}get loop(){return this._loop}set pitch(t){this._currentOffset=this.currentTime,this._startedAt=this._manager.context.currentTime,this._pitch=Math.max(Number(t)||0,.01),this.source&&(this.source.playbackRate.value=this._pitch)}get pitch(){return this._pitch}set sound(t){this._sound=t,2!==this._state?this.stop():this._createSource()}get sound(){return this._sound}set startTime(t){this._startTime=Math.max(0,Number(t)||0);const e=0===this._state;this.stop(),e&&this.play()}get startTime(){return this._startTime}set volume(t){t=a.D.clamp(t,0,1),this._volume=t,this.gain&&(this.gain.gain.value=t*this._manager.volume)}get volume(){return this._volume}_onPlay(){this.fire("play"),this._onPlayCallback&&this._onPlayCallback(this)}_onPause(){this.fire("pause"),this._onPauseCallback&&this._onPauseCallback(this)}_onResume(){this.fire("resume"),this._onResumeCallback&&this._onResumeCallback(this)}_onStop(){this.fire("stop"),this._onStopCallback&&this._onStopCallback(this)}_onEnded(){this._suspendEndEvent>0?this._suspendEndEvent--:(this.fire("end"),this._onEndCallback&&this._onEndCallback(this),this.stop())}_onManagerVolumeChange(){this.volume=this._volume}_onManagerSuspend(){0!==this._state||this._suspended||(this._suspended=!0,this.pause())}_onManagerResume(){this._suspended&&(this._suspended=!1,this.resume())}_initializeNodes(){this.gain=this._manager.context.createGain(),this._inputNode=this.gain,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)}play(){return 2!==this._state&&this.stop(),this._state=0,this._playWhenLoaded=!1,!this._waitingContextSuspension&&(this._manager.suspended?(this._manager.once("resume",this._playAudioImmediate,this),this._waitingContextSuspension=!0,!1):(this._playAudioImmediate(),!0))}_playAudioImmediate(){if(this._waitingContextSuspension=!1,0!==this._state)return;this.source||this._createSource();let t=wd(this._startOffset,this.duration);t=wd(this._startTime+t,this._sound.duration),this._startOffset=null,this._duration?this.source.start(0,t,this._duration):this.source.start(0,t),this._startedAt=this._manager.context.currentTime,this._currentTime=0,this._currentOffset=t,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._suspendInstanceEvents||this._onPlay()}pause(){return this._playWhenLoaded=!1,0===this._state&&(this._state=1,this._waitingContextSuspension||(this._updateCurrentTime(),this._suspendEndEvent++,this.source.stop(0),this.source=null,this._startOffset=null,this._suspendInstanceEvents||this._onPause()),!0)}resume(){if(1!==this._state)return!1;let t=this.currentTime;return this._state=0,this._waitingContextSuspension||(this.source||this._createSource(),null!==this._startOffset&&(t=wd(this._startOffset,this.duration),t=wd(this._startTime+t,this._sound.duration),this._startOffset=null),this._duration?this.source.start(0,t,this._duration):this.source.start(0,t),this._startedAt=this._manager.context.currentTime,this._currentOffset=t,this.volume=this._volume,this.loop=this._loop,this.pitch=this._pitch,this._playWhenLoaded=!1,this._suspendInstanceEvents||this._onResume()),!0}stop(){if(this._playWhenLoaded=!1,2===this._state)return!1;const t=0===this._state;return this._state=2,this._waitingContextSuspension||(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._startedAt=0,this._currentTime=0,this._currentOffset=0,this._startOffset=null,this._suspendEndEvent++,t&&this.source&&this.source.stop(0),this.source=null,this._suspendInstanceEvents||this._onStop()),!0}setExternalNodes(t,e){if(!t)return void console.error("The firstNode must be a valid Audio Node");e||(e=t);const s=this._manager.context.destination;this._firstNode!==t&&(this._firstNode?this._connectorNode.disconnect(this._firstNode):this._connectorNode.disconnect(s),this._firstNode=t,this._connectorNode.connect(t)),this._lastNode!==e&&(this._lastNode&&this._lastNode.disconnect(s),this._lastNode=e,this._lastNode.connect(s))}clearExternalNodes(){const t=this._manager.context.destination;this._firstNode&&(this._connectorNode.disconnect(this._firstNode),this._firstNode=null),this._lastNode&&(this._lastNode.disconnect(t),this._lastNode=null),this._connectorNode.connect(t)}getExternalNodes(){return[this._firstNode,this._lastNode]}_createSource(){if(!this._sound)return null;const t=this._manager.context;return this._sound.buffer&&(this.source=t.createBufferSource(),this.source.buffer=this._sound.buffer,this.source.connect(this._inputNode),this.source.onended=this._endedHandler,this.source.loopStart=wd(this._startTime,this.source.buffer.duration),this._duration&&(this.source.loopEnd=Math.max(this.source.loopStart,wd(this._startTime+this._duration,this.source.buffer.duration)))),this.source}_updateCurrentTime(){this._currentTime=wd((this._manager.context.currentTime-this._startedAt)*this._pitch+this._currentOffset,this.duration)}_onManagerDestroy(){this.source&&0===this._state&&(this.source.stop(0),this.source=null)}}xd()||(Object.assign(bd.prototype,{play:function(){return 2!==this._state&&this.stop(),!(!this.source&&!this._createSource())&&(this.volume=this._volume,this.pitch=this._pitch,this.loop=this._loop,this.source.play(),this._state=0,this._playWhenLoaded=!1,this._manager.on("volumechange",this._onManagerVolumeChange,this),this._manager.on("suspend",this._onManagerSuspend,this),this._manager.on("resume",this._onManagerResume,this),this._manager.on("destroy",this._onManagerDestroy,this),this._manager.suspended&&this._onManagerSuspend(),this._suspendInstanceEvents||this._onPlay(),!0)},pause:function(){return!(!this.source||0!==this._state)&&(this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=1,this._startOffset=null,this._suspendInstanceEvents||this._onPause(),!0)},resume:function(){return!(!this.source||1!==this._state)&&(this._state=0,this._playWhenLoaded=!1,this.source.paused&&(this.source.play(),this._suspendInstanceEvents||this._onResume()),!0)},stop:function(){return!(!this.source||2===this._state)&&(this._manager.off("volumechange",this._onManagerVolumeChange,this),this._manager.off("suspend",this._onManagerSuspend,this),this._manager.off("resume",this._onManagerResume,this),this._manager.off("destroy",this._onManagerDestroy,this),this._suspendEndEvent++,this.source.pause(),this._playWhenLoaded=!1,this._state=2,this._startOffset=null,this._suspendInstanceEvents||this._onStop(),!0)},setExternalNodes:function(){},clearExternalNodes:function(){},getExternalNodes:function(){return[null,null]},_onLoadedMetadata:function(){this.source.removeEventListener("loadedmetadata",this._loadedMetadataHandler),this._isReady=!0;let t=wd(this._startOffset,this.duration);t=wd(this._startTime+t,this._sound.duration),this._startOffset=null,this.source.currentTime=t},_createSource:function(){return this._sound&&this._sound.audio&&(this._isReady=!1,this.source=this._sound.audio.cloneNode(!0),this.source.addEventListener("loadedmetadata",this._loadedMetadataHandler),this.source.addEventListener("timeupdate",this._timeUpdateHandler),this.source.onended=this._endedHandler),this.source},_onTimeUpdate:function(){this._duration&&this.source.currentTime>wd(this._startTime+this._duration,this.source.duration)&&(this.loop?this.source.currentTime=wd(this._startTime,this.source.duration):(this.source.removeEventListener("timeupdate",this._timeUpdateHandler),this.source.pause(),this._onEnded()))},_onManagerDestroy:function(){this.source&&this.source.pause()}}),Object.defineProperty(bd.prototype,"volume",{get:function(){return this._volume},set:function(t){t=a.D.clamp(t,0,1),this._volume=t,this.source&&(this.source.volume=t*this._manager.volume)}}),Object.defineProperty(bd.prototype,"pitch",{get:function(){return this._pitch},set:function(t){this._pitch=Math.max(Number(t)||0,.01),this.source&&(this.source.playbackRate=this._pitch)}}),Object.defineProperty(bd.prototype,"sound",{get:function(){return this._sound},set:function(t){this.stop(),this._sound=t}}),Object.defineProperty(bd.prototype,"currentTime",{get:function(){return null!==this._startOffset?this._startOffset:2!==this._state&&this.source?this.source.currentTime-this._startTime:0},set:function(t){t<0||(this._startOffset=t,this.source&&this._isReady&&(this.source.currentTime=wd(this._startTime+wd(t,this.duration),this._sound.duration),this._startOffset=null))}}));class Ed extends bd{constructor(t,e,s={}){super(t,e,s),this._position=new l.e,this._velocity=new l.e,s.position&&(this.position=s.position),this.maxDistance=void 0!==s.maxDistance?Number(s.maxDistance):1e4,this.refDistance=void 0!==s.refDistance?Number(s.refDistance):1,this.rollOffFactor=void 0!==s.rollOffFactor?Number(s.rollOffFactor):1,this.distanceModel=void 0!==s.distanceModel?s.distanceModel:Td}_initializeNodes(){this.gain=this._manager.context.createGain(),this.panner=this._manager.context.createPanner(),this.panner.connect(this.gain),this._inputNode=this.panner,this._connectorNode=this.gain,this._connectorNode.connect(this._manager.context.destination)}set position(t){this._position.copy(t);const e=this.panner;"positionX"in e?(e.positionX.value=t.x,e.positionY.value=t.y,e.positionZ.value=t.z):e.setPosition&&e.setPosition(t.x,t.y,t.z)}get position(){return this._position}set velocity(t){this._velocity.copy(t)}get velocity(){return this._velocity}set maxDistance(t){this.panner.maxDistance=t}get maxDistance(){return this.panner.maxDistance}set refDistance(t){this.panner.refDistance=t}get refDistance(){return this.panner.refDistance}set rollOffFactor(t){this.panner.rolloffFactor=t}get rollOffFactor(){return this.panner.rolloffFactor}set distanceModel(t){this.panner.distanceModel=t}get distanceModel(){return this.panner.distanceModel}}if(!xd()){let t=new l.e;const e=function(e,s,i,n,r,o){t=t.sub2(e,s);const l=t.length();if(l<i)return 1;if(l>n)return 0;let h=0;return o===Td?h=1-r*(l-i)/(n-i):"inverse"===o?h=i/(i+r*(l-i)):"exponential"===o&&(h=Math.pow(l/i,-r)),a.D.clamp(h,0,1)};Object.defineProperty(Ed.prototype,"position",{get:function(){return this._position},set:function(t){if(this._position.copy(t),this.source){const t=this._manager.listener.getPosition(),s=e(t,this._position,this.refDistance,this.maxDistance,this.rollOffFactor,this.distanceModel),i=this.volume;this.source.volume=i*s*this._manager.volume}}}),Object.defineProperty(Ed.prototype,"maxDistance",{get:function(){return this._maxDistance},set:function(t){this._maxDistance=t}}),Object.defineProperty(Ed.prototype,"refDistance",{get:function(){return this._refDistance},set:function(t){this._refDistance=t}}),Object.defineProperty(Ed.prototype,"rollOffFactor",{get:function(){return this._rollOffFactor},set:function(t){this._rollOffFactor=t}}),Object.defineProperty(Ed.prototype,"distanceModel",{get:function(){return this._distanceModel},set:function(t){this._distanceModel=t}})}const Ad={volume:0,pitch:0,loop:!1,startTime:0,duration:0,position:new l.e,maxDistance:0,refDistance:0,rollOffFactor:0,distanceModel:0,onPlay:null,onPause:null,onResume:null,onStop:null,onEnd:null};class Cd extends r.J{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOAD="load"}constructor(t,e="Untitled",s={}){super(),this.instances=[],this._component=t,this._assets=t.system.app.assets,this._manager=t.system.manager,this.name=e,this._volume=void 0!==s.volume?a.D.clamp(Number(s.volume)||0,0,1):1,this._pitch=void 0!==s.pitch?Math.max(.01,Number(s.pitch)||0):1,this._loop=!(void 0===s.loop||!s.loop),this._duration=s.duration>0?s.duration:null,this._startTime=Math.max(0,Number(s.startTime)||0),this._overlap=!!s.overlap,this._autoPlay=!!s.autoPlay,this._firstNode=null,this._lastNode=null,this._asset=s.asset,this._asset instanceof Kn.V&&(this._asset=this._asset.id),this._onInstancePlayHandler=this._onInstancePlay.bind(this),this._onInstancePauseHandler=this._onInstancePause.bind(this),this._onInstanceResumeHandler=this._onInstanceResume.bind(this),this._onInstanceStopHandler=this._onInstanceStop.bind(this),this._onInstanceEndHandler=this._onInstanceEnd.bind(this)}play(){if(this.overlap||this.stop(),!this.isLoaded&&!this._hasAsset())return;const t=this._createInstance();if(this.instances.push(t),this.isLoaded)t.play();else{const e=function(e){const s=t._playWhenLoaded;t.sound=e,s&&t.play()};this.off("load",e),this.once("load",e),this.load()}return t}pause(){let t=!1;const e=this.instances;for(let s=0,i=e.length;s<i;s++)e[s].pause()&&(t=!0);return t}resume(){let t=!1;const e=this.instances;for(let s=0,i=e.length;s<i;s++)e[s].resume()&&(t=!0);return t}stop(){let t=!1;const e=this.instances;let s=e.length;for(;s--;)e[s].stop(),t=!0;return e.length=0,t}load(){if(!this._hasAsset())return;const t=this._assets.get(this._asset);return t?(t.off("remove",this._onAssetRemoved,this),t.on("remove",this._onAssetRemoved,this),t.resource?void this.fire("load",t.resource):(t.off("load",this._onAssetLoad,this),t.once("load",this._onAssetLoad,this),void this._assets.load(t))):(this._assets.off(`add:${this._asset}`,this._onAssetAdd,this),void this._assets.once(`add:${this._asset}`,this._onAssetAdd,this))}setExternalNodes(t,e){if(t){if(e||(e=t),this._firstNode=t,this._lastNode=e,!this._overlap){const s=this.instances;for(let i=0,n=s.length;i<n;i++)s[i].setExternalNodes(t,e)}}else console.error("The firstNode must have a valid AudioNode")}clearExternalNodes(){if(this._firstNode=null,this._lastNode=null,!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++)t[e].clearExternalNodes()}}getExternalNodes(){return[this._firstNode,this._lastNode]}_hasAsset(){return null!=this._asset}_createInstance(){let t=null;const e=this._component;let s=null;if(this._hasAsset()){const t=this._assets.get(this._asset);t&&(s=t.resource)}const i=Ad;return i.volume=this._volume*e.volume,i.pitch=this._pitch*e.pitch,i.loop=this._loop,i.startTime=this._startTime,i.duration=this._duration,i.onPlay=this._onInstancePlayHandler,i.onPause=this._onInstancePauseHandler,i.onResume=this._onInstanceResumeHandler,i.onStop=this._onInstanceStopHandler,i.onEnd=this._onInstanceEndHandler,e.positional?(i.position.copy(e.entity.getPosition()),i.maxDistance=e.maxDistance,i.refDistance=e.refDistance,i.rollOffFactor=e.rollOffFactor,i.distanceModel=e.distanceModel,t=new Ed(this._manager,s,i)):t=new bd(this._manager,s,i),this._firstNode&&t.setExternalNodes(this._firstNode,this._lastNode),t}_onInstancePlay(t){this.fire("play",t),this._component.fire("play",this,t)}_onInstancePause(t){this.fire("pause",t),this._component.fire("pause",this,t)}_onInstanceResume(t){this.fire("resume",t),this._component.fire("resume",this,t)}_onInstanceStop(t){const e=this.instances.indexOf(t);-1!==e&&this.instances.splice(e,1),this.fire("stop",t),this._component.fire("stop",this,t)}_onInstanceEnd(t){const e=this.instances.indexOf(t);-1!==e&&this.instances.splice(e,1),this.fire("end",t),this._component.fire("end",this,t)}_onAssetAdd(t){this.load()}_onAssetLoad(t){this.load()}_onAssetRemoved(t){t.off("remove",this._onAssetRemoved,this),this._assets.off(`add:${t.id}`,this._onAssetAdd,this),this.stop()}updatePosition(t){const e=this.instances;for(let s=0,i=e.length;s<i;s++)e[s].position=t}set asset(t){const e=this._asset;if(e){this._assets.off(`add:${e}`,this._onAssetAdd,this);const t=this._assets.get(e);t&&t.off("remove",this._onAssetRemoved,this)}this._asset=t,this._asset instanceof Kn.V&&(this._asset=this._asset.id),this._hasAsset()&&this._component.enabled&&this._component.entity.enabled&&this.load()}get asset(){return this._asset}set autoPlay(t){this._autoPlay=!!t}get autoPlay(){return this._autoPlay}set duration(t){if(this._duration=Math.max(0,Number(t)||0)||null,!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++)t[e].duration=this._duration}}get duration(){let t=0;if(this._hasAsset()){const e=this._assets.get(this._asset);t=e?.resource?e.resource.duration:0}return null!=this._duration?this._duration%(t||1):t}get isLoaded(){if(this._hasAsset()){const t=this._assets.get(this._asset);if(t)return!!t.resource}return!1}get isPaused(){const t=this.instances,e=t.length;if(0===e)return!1;for(let s=0;s<e;s++)if(!t[s].isPaused)return!1;return!0}get isPlaying(){const t=this.instances;for(let e=0,s=t.length;e<s;e++)if(t[e].isPlaying)return!0;return!1}get isStopped(){const t=this.instances;for(let e=0,s=t.length;e<s;e++)if(!t[e].isStopped)return!1;return!0}set loop(t){this._loop=!!t;const e=this.instances;for(let s=0,i=e.length;s<i;s++)e[s].loop=this._loop}get loop(){return this._loop}set overlap(t){this._overlap=!!t}get overlap(){return this._overlap}set pitch(t){if(this._pitch=Math.max(Number(t)||0,.01),!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++)t[e].pitch=this.pitch*this._component.pitch}}get pitch(){return this._pitch}set startTime(t){if(this._startTime=Math.max(0,Number(t)||0),!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++)t[e].startTime=this._startTime}}get startTime(){return this._startTime}set volume(t){if(this._volume=a.D.clamp(Number(t)||0,0,1),!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++)t[e].volume=this._volume*this._component.volume}}get volume(){return this._volume}}class Pd extends Ir{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}_updateSoundInstances(t,e,s){const i=this._slots;for(const n in i){const r=i[n];if(!r.overlap){const i=r.instances;for(let n=0,a=i.length;n<a;n++)i[n][t]=s?r[t]*e:e}}}set distanceModel(t){this._distanceModel=t,this._updateSoundInstances("distanceModel",t,!1)}get distanceModel(){return this._distanceModel}set maxDistance(t){this._maxDistance=t,this._updateSoundInstances("maxDistance",t,!1)}get maxDistance(){return this._maxDistance}set refDistance(t){this._refDistance=t,this._updateSoundInstances("refDistance",t,!1)}get refDistance(){return this._refDistance}set rollOffFactor(t){this._rollOffFactor=t,this._updateSoundInstances("rollOffFactor",t,!1)}get rollOffFactor(){return this._rollOffFactor}set pitch(t){this._pitch=t,this._updateSoundInstances("pitch",t,!0)}get pitch(){return this._pitch}set volume(t){this._volume=t,this._updateSoundInstances("volume",t,!0)}get volume(){return this._volume}set positional(t){this._positional=t;const e=this._slots;for(const s in e){const t=e[s];if(!t.overlap){const e=t.instances;for(let s=e.length-1;s>=0;s--){const i=e[s].isPlaying||e[s].isSuspended,n=e[s].currentTime;i&&e[s].stop();const r=t._createInstance();i&&(r.play(),r.currentTime=n),e.push(r)}}}}get positional(){return this._positional}set slots(t){const e=this._slots;if(e)for(const i in e)e[i].stop();const s={};for(const i in t)t[i]instanceof Cd?s[t[i].name]=t[i]:t[i].name&&(s[t[i].name]=new Cd(this,t[i].name,t[i]));this._slots=s,this.enabled&&this.entity.enabled&&this.onEnable()}get slots(){return this._slots}onEnable(){if(this.system._inTools)return;const t=this._slots,e=this._playingBeforeDisable;for(const s in t){const i=t[s];i.autoPlay&&i.isStopped?i.play():e[s]?i.resume():i.isLoaded||i.load()}}onDisable(){const t=this._slots,e={};for(const s in t)t[s].overlap||t[s].isPlaying&&(t[s].pause(),e[s]=!0);this._playingBeforeDisable=e}onRemove(){this.off()}addSlot(t,e){const s=this._slots;if(s[t])return null;const i=new Cd(this,t,e);return s[t]=i,i.autoPlay&&this.enabled&&this.entity.enabled&&i.play(),i}removeSlot(t){const e=this._slots;e[t]&&(e[t].stop(),delete e[t])}slot(t){return this._slots[t]}_getSlotProperty(t,e){if(!this.enabled||!this.entity.enabled)return;const s=this._slots[t];return s?s[e]:void 0}isPlaying(t){return this._getSlotProperty(t,"isPlaying")||!1}isLoaded(t){return this._getSlotProperty(t,"isLoaded")||!1}isPaused(t){return this._getSlotProperty(t,"isPaused")||!1}isStopped(t){return this._getSlotProperty(t,"isStopped")||!1}play(t){if(!this.enabled||!this.entity.enabled)return null;const e=this._slots[t];return e?e.play():null}pause(t){const e=this._slots;if(t){const s=e[t];if(!s)return;s.pause()}else for(const s in e)e[s].pause()}resume(t){const e=this._slots;if(t){const s=e[t];if(!s)return;s.isPaused&&s.resume()}else for(const s in e)e[s].resume()}stop(t){const e=this._slots;if(t){const s=e[t];if(!s)return;s.stop()}else for(const s in e)e[s].stop()}constructor(...t){super(...t),this._volume=1,this._pitch=1,this._positional=!0,this._refDistance=1,this._maxDistance=1e4,this._rollOffFactor=1,this._distanceModel=Td,this._slots={},this._playingBeforeDisable={}}}class Dd{constructor(){this.enabled=!0}}const Ld=["enabled"];class Md extends Rr{constructor(t){super(t),this.id="sound",this.ComponentType=Pd,this.DataType=Dd,this.schema=Ld,this.manager=t.soundManager,this.app.systems.on("update",this.onUpdate,this),this.on("beforeremove",this.onBeforeRemove,this)}set volume(t){this.manager.volume=t}get volume(){return this.manager.volume}get context(){return xd()?this.manager.context:null}initializeComponentData(t,e,s){s=["volume","pitch","positional","refDistance","maxDistance","rollOffFactor","distanceModel","slots"];for(let i=0;i<s.length;i++)e.hasOwnProperty(s[i])&&(t[s[i]]=e[s[i]]);super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.sound,i=s.slots,n={};for(const a in i){const t=i[a];n[a]={name:t.name,volume:t.volume,pitch:t.pitch,loop:t.loop,duration:t.duration,startTime:t.startTime,overlap:t.overlap,autoPlay:t.autoPlay,asset:t.asset}}const r={distanceModel:s.distanceModel,enabled:s.enabled,maxDistance:s.maxDistance,pitch:s.pitch,positional:s.positional,refDistance:s.refDistance,rollOffFactor:s.rollOffFactor,slots:n,volume:s.volume};return this.addComponent(e,r)}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const t=e[s].entity;if(t.enabled){const e=t.sound;if(e.enabled&&e.positional){const s=t.getPosition(),i=e.slots;for(const t in i)i[t].updatePosition(s)}}}}onBeforeRemove(t,e){const s=e.slots;for(const i in s)s[i].overlap||s[i].stop();e.onRemove()}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this)}}Ir._buildAccessors(Pd.prototype,Ld);const Id="simple",Rd="animated";class Fd extends r.J{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOOP="loop"}constructor(t,e){super(),this._evtSetMeshes=null,this._component=t,this._frame=0,this._sprite=null,this._spriteAsset=null,this.spriteAsset=e.spriteAsset,this.name=e.name,this.fps=e.fps||0,this.loop=e.loop||!1,this._playing=!1,this._paused=!1,this._time=0}get duration(){if(this._sprite){const t=this.fps||Number.MIN_VALUE;return this._sprite.frameKeys.length/Math.abs(t)}return 0}set frame(t){this._setFrame(t);const e=this.fps||Number.MIN_VALUE;this._setTime(this._frame/e)}get frame(){return this._frame}get isPaused(){return this._paused}get isPlaying(){return this._playing}set sprite(t){if(this._sprite&&(this._evtSetMeshes?.off(),this._evtSetMeshes=null,this._sprite.off("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.off("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.off("set:texture",this._onSpriteMeshesChange,this)),this._sprite=t,this._sprite&&(this._evtSetMeshes=this._sprite.on("set:meshes",this._onSpriteMeshesChange,this),this._sprite.on("set:pixelsPerUnit",this._onSpritePpuChanged,this),this._sprite.on("set:atlas",this._onSpriteMeshesChange,this),this._sprite.atlas&&this._sprite.atlas.on("set:texture",this._onSpriteMeshesChange,this)),this._component.currentClip===this){let e;t&&t.atlas?(t.atlas.texture&&(e=this._component._meshInstance,e&&(e.setParameter("texture_emissiveMap",t.atlas.texture),e.setParameter("texture_opacityMap",t.atlas.texture)),this._component.enabled&&this._component.entity.enabled&&this._component._showModel()),this.time&&this.fps?this.time=this.time:this.frame=this.frame):(e=this._component._meshInstance,e&&(e.deleteParameter("texture_emissiveMap"),e.deleteParameter("texture_opacityMap")),this._component._hideModel())}}get sprite(){return this._sprite}set spriteAsset(t){const e=this._component.system.app.assets;let s=t;if(t instanceof Kn.V&&(s=t.id),this._spriteAsset!==s){if(this._spriteAsset){const t=e.get(this._spriteAsset);t&&this._unbindSpriteAsset(t)}if(this._spriteAsset=s,this._spriteAsset){const t=e.get(this._spriteAsset);t?this._bindSpriteAsset(t):(this.sprite=null,e.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this))}else this.sprite=null}}get spriteAsset(){return this._spriteAsset}set time(t){this._setTime(t),this._sprite?this.frame=Math.min(this._sprite.frameKeys.length-1,Math.floor(this._time*Math.abs(this.fps))):this.frame=0}get time(){return this._time}_onSpriteAssetAdded(t){this._component.system.app.assets.off(`add:${t.id}`,this._onSpriteAssetAdded,this),this._spriteAsset===t.id&&this._bindSpriteAsset(t)}_bindSpriteAsset(t){t.on("load",this._onSpriteAssetLoad,this),t.on("remove",this._onSpriteAssetRemove,this),t.resource?this._onSpriteAssetLoad(t):this._component.system.app.assets.load(t)}_unbindSpriteAsset(t){t&&(t.off("load",this._onSpriteAssetLoad,this),t.off("remove",this._onSpriteAssetRemove,this),t.resource&&!t.resource.atlas&&this._component.system.app.assets.off(`load:${t.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this))}_onSpriteAssetLoad(t){if(t.resource)if(t.resource.atlas)this.sprite=t.resource;else{const e=t.data.textureAtlasAsset,s=this._component.system.app.assets;s.off(`load:${e}`,this._onTextureAtlasLoad,this),s.once(`load:${e}`,this._onTextureAtlasLoad,this)}else this.sprite=null}_onTextureAtlasLoad(t){const e=this._spriteAsset;e instanceof Kn.V?this._onSpriteAssetLoad(e):this._onSpriteAssetLoad(this._component.system.app.assets.get(e))}_onSpriteAssetRemove(t){this.sprite=null}_onSpriteMeshesChange(){this._component.currentClip===this&&this._component._showFrame(this.frame)}_onSpritePpuChanged(){this._component.currentClip===this&&this.sprite.renderMode!==F.hA3&&this._component._showFrame(this.frame)}_update(t){if(0===this.fps)return;if(!this._playing||this._paused||!this._sprite)return;const e=this.fps<0?-1:1,s=this._time+t*this._component.speed*e,i=this.duration,n=s>i||s<0;this._setTime(s);let r=this.frame;r=this._sprite?Math.floor(this._sprite.frameKeys.length*this._time/i):0,r!==this._frame&&this._setFrame(r),n&&(this.loop?(this.fire("loop"),this._component.fire("loop",this)):(this._playing=!1,this._paused=!1,this.fire("end"),this._component.fire("end",this)))}_setTime(t){this._time=t;const e=this.duration;this._time<0?this.loop?this._time=this._time%e+e:this._time=0:this._time>e&&(this.loop?this._time%=e:this._time=e)}_setFrame(t){this._sprite?this._frame=a.D.clamp(t,0,this._sprite.frameKeys.length-1):this._frame=t,this._component.currentClip===this&&this._component._showFrame(this._frame)}_destroy(){if(this._spriteAsset){const t=this._component.system.app.assets;this._unbindSpriteAsset(t.get(this._spriteAsset))}this._sprite&&(this.sprite=null),this._spriteAsset&&(this.spriteAsset=null)}play(){this._playing||(this._playing=!0,this._paused=!1,this.frame=0,this.fire("play"),this._component.fire("play",this))}pause(){this._playing&&!this._paused&&(this._paused=!0,this.fire("pause"),this._component.fire("pause",this))}resume(){this._paused&&(this._paused=!1,this.fire("resume"),this._component.fire("resume",this))}stop(){this._playing&&(this._playing=!1,this._paused=!1,this._time=0,this.frame=0,this.fire("stop"),this._component.fire("stop",this))}}const Od="texture_emissiveMap",Nd="texture_opacityMap",kd="material_emissive",Bd="material_opacity";class Ud extends Ir{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOOP="loop"}constructor(t,e){super(t,e),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._type=Id,this._material=t.defaultMaterial,this._color=new p.Q(1,1,1,1),this._colorUniform=new Float32Array(3),this._speed=1,this._flipX=!1,this._flipY=!1,this._width=1,this._height=1,this._drawOrder=0,this._layers=[F.uEK],this._outerScale=new Jt.Z(1,1),this._outerScaleUniform=new Float32Array(2),this._innerOffset=new w.Z,this._innerOffsetUniform=new Float32Array(4),this._atlasRect=new w.Z,this._atlasRectUniform=new Float32Array(4),this._batchGroupId=-1,this._batchGroup=null,this._node=new Rt.t,this._model=new Ka,this._model.graph=this._node,this._meshInstance=null,e.addChild(this._model.graph),this._model._entity=e,this._updateAabbFunc=this._updateAabb.bind(this),this._addedModel=!1,this._autoPlayClip=null,this._clips={},this._defaultClip=new Fd(this,{name:this.entity.name,fps:0,loop:!1,spriteAsset:null}),this._currentClip=this._defaultClip}set type(t){this._type!==t&&(this._type=t,this._type===Id?(this.stop(),this._currentClip=this._defaultClip,this.enabled&&this.entity.enabled&&(this._currentClip.frame=this.frame,this._currentClip.sprite?this._showModel():this._hideModel())):this._type===Rd&&(this.stop(),this._autoPlayClip&&this._tryAutoPlay(),this._currentClip&&this._currentClip.isPlaying&&this.enabled&&this.entity.enabled?this._showModel():this._hideModel()))}get type(){return this._type}set frame(t){this._currentClip.frame=t}get frame(){return this._currentClip.frame}set spriteAsset(t){this._defaultClip.spriteAsset=t}get spriteAsset(){return this._defaultClip._spriteAsset}set sprite(t){this._currentClip.sprite=t}get sprite(){return this._currentClip.sprite}set material(t){this._material=t,this._meshInstance&&(this._meshInstance.material=t)}get material(){return this._material}set color(t){this._color.r=t.r,this._color.g=t.g,this._color.b=t.b,this._meshInstance&&(this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(kd,this._colorUniform))}get color(){return this._color}set opacity(t){this._color.a=t,this._meshInstance&&this._meshInstance.setParameter(Bd,t)}get opacity(){return this._color.a}set clips(t){if(t){for(const e in this._clips){let s=!1;for(const i in t)if(t[i].name===e){s=!0,this._clips[e].fps=t[i].fps,this._clips[e].loop=t[i].loop,t[i].hasOwnProperty("sprite")?this._clips[e].sprite=t[i].sprite:t[i].hasOwnProperty("spriteAsset")&&(this._clips[e].spriteAsset=t[i].spriteAsset);break}s||this.removeClip(e)}for(const e in t)this._clips[t[e].name]||this.addClip(t[e]);this._autoPlayClip&&this._tryAutoPlay(),this._currentClip&&this._currentClip.sprite||this._hideModel()}else for(const e in this._clips)this.removeClip(e)}get clips(){return this._clips}get currentClip(){return this._currentClip}set speed(t){this._speed=t}get speed(){return this._speed}set flipX(t){this._flipX!==t&&(this._flipX=t,this._updateTransform())}get flipX(){return this._flipX}set flipY(t){this._flipY!==t&&(this._flipY=t,this._updateTransform())}get flipY(){return this._flipY}set width(t){t!==this._width&&(this._width=t,this._outerScale.x=this._width,!this.sprite||this.sprite.renderMode!==F.jZy&&this.sprite.renderMode!==F.FCf||this._updateTransform())}get width(){return this._width}set height(t){t!==this._height&&(this._height=t,this._outerScale.y=this.height,!this.sprite||this.sprite.renderMode!==F.jZy&&this.sprite.renderMode!==F.FCf||this._updateTransform())}get height(){return this._height}set batchGroupId(t){if(this._batchGroupId===t)return;const e=this._batchGroupId;this._batchGroupId=t,this.entity.enabled&&e>=0&&this.system.app.batcher?.remove(Vs.SPRITE,e,this.entity),this.entity.enabled&&t>=0?this.system.app.batcher?.insert(Vs.SPRITE,t,this.entity):e>=0&&this._currentClip&&this._currentClip.sprite&&this.enabled&&this.entity.enabled&&this._showModel()}get batchGroupId(){return this._batchGroupId}set autoPlayClip(t){this._autoPlayClip=t instanceof Fd?t.name:t,this._tryAutoPlay()}get autoPlayClip(){return this._autoPlayClip}set drawOrder(t){this._drawOrder=t,this._meshInstance&&(this._meshInstance.drawOrder=t)}get drawOrder(){return this._drawOrder}set layers(t){this._addedModel&&this._hideModel(),this._layers=t,this._meshInstance&&this.enabled&&this.entity.enabled&&this._showModel()}get layers(){return this._layers}get aabb(){return this._meshInstance?this._meshInstance.aabb:null}onEnable(){const t=this.system.app,e=t.scene,s=e.layers;this._evtLayersChanged=e.on("set:layers",this._onLayersChanged,this),s&&(this._evtLayerAdded=s.on("add",this._onLayerAdded,this),this._evtLayerRemoved=s.on("remove",this._onLayerRemoved,this)),this._showModel(),this._autoPlayClip&&this._tryAutoPlay(),this._batchGroupId>=0&&t.batcher?.insert(Vs.SPRITE,this._batchGroupId,this.entity)}onDisable(){const t=this.system.app,e=t.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,e&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this.stop(),this._hideModel(),this._batchGroupId>=0&&t.batcher?.remove(Vs.SPRITE,this._batchGroupId,this.entity)}onDestroy(){this._currentClip=null,this._defaultClip&&(this._defaultClip._destroy(),this._defaultClip=null);for(const t in this._clips)this._clips[t]._destroy();this._clips=null,this._hideModel(),this._model=null,this._node?.remove(),this._node=null,this._meshInstance&&(this._meshInstance.material=null,this._meshInstance.mesh=null,this._meshInstance=null)}_showModel(){if(this._addedModel)return;if(!this._meshInstance)return;const t=[this._meshInstance];for(let e=0,s=this._layers.length;e<s;e++){const s=this.system.app.scene.layers.getLayerById(this._layers[e]);s&&s.addMeshInstances(t)}this._addedModel=!0}_hideModel(){if(!this._addedModel||!this._meshInstance)return;const t=[this._meshInstance];for(let e=0,s=this._layers.length;e<s;e++){const s=this.system.app.scene.layers.getLayerById(this._layers[e]);s&&s.removeMeshInstances(t)}this._addedModel=!1}_showFrame(t){if(!this.sprite)return;const e=this.sprite.meshes[t];if(!e)return void(this._meshInstance&&(this._meshInstance.mesh=null,this._meshInstance.visible=!1));let s;if(s=this.sprite.renderMode===F.FCf?this.system.default9SlicedMaterialSlicedMode:this.sprite.renderMode===F.jZy?this.system.default9SlicedMaterialTiledMode:this.system.defaultMaterial,this._meshInstance||(this._meshInstance=new pt(e,this._material,this._node),this._meshInstance.castShadow=!1,this._meshInstance.receiveShadow=!1,this._meshInstance.drawOrder=this._drawOrder,this._model.meshInstances.push(this._meshInstance),this._colorUniform[0]=this._color.r,this._colorUniform[1]=this._color.g,this._colorUniform[2]=this._color.b,this._meshInstance.setParameter(kd,this._colorUniform),this._meshInstance.setParameter(Bd,this._color.a),this.enabled&&this.entity.enabled&&this._showModel()),this._meshInstance.material!==s&&(this._meshInstance.material=s),this._meshInstance.mesh!==e&&(this._meshInstance.mesh=e,this._meshInstance.visible=!0,this._meshInstance._aabbVer=-1),this.sprite.atlas&&this.sprite.atlas.texture?(this._meshInstance.setParameter(Od,this.sprite.atlas.texture),this._meshInstance.setParameter(Nd,this.sprite.atlas.texture)):(this._meshInstance.deleteParameter(Od),this._meshInstance.deleteParameter(Nd)),!this.sprite.atlas||this.sprite.renderMode!==F.FCf&&this.sprite.renderMode!==F.jZy)this._meshInstance._updateAabbFunc=null;else{this._meshInstance._updateAabbFunc=this._updateAabbFunc;const e=this.sprite.atlas.frames[this.sprite.frameKeys[t]];if(e){const t=2/e.rect.z,s=2/e.rect.w;this._innerOffset.set(e.border.x*t,e.border.y*s,e.border.z*t,e.border.w*s);const i=this.sprite.atlas.texture;this._atlasRect.set(e.rect.x/i.width,e.rect.y/i.height,e.rect.z/i.width,e.rect.w/i.height)}else this._innerOffset.set(0,0,0,0);this._innerOffsetUniform[0]=this._innerOffset.x,this._innerOffsetUniform[1]=this._innerOffset.y,this._innerOffsetUniform[2]=this._innerOffset.z,this._innerOffsetUniform[3]=this._innerOffset.w,this._meshInstance.setParameter("innerOffset",this._innerOffsetUniform),this._atlasRectUniform[0]=this._atlasRect.x,this._atlasRectUniform[1]=this._atlasRect.y,this._atlasRectUniform[2]=this._atlasRect.z,this._atlasRectUniform[3]=this._atlasRect.w,this._meshInstance.setParameter("atlasRect",this._atlasRectUniform)}this._updateTransform()}_updateTransform(){let t=this.flipX?-1:1,e=this.flipY?-1:1,s=0,i=0;if(this.sprite&&(this.sprite.renderMode===F.FCf||this.sprite.renderMode===F.jZy)){let n=1,r=1;if(this.sprite.atlas){const t=this.sprite.atlas.frames[this.sprite.frameKeys[this.frame]];t&&(n=t.rect.z,r=t.rect.w,s=(.5-t.pivot.x)*this._width,i=(.5-t.pivot.y)*this._height)}const o=n/this.sprite.pixelsPerUnit,l=r/this.sprite.pixelsPerUnit;this._outerScale.set(Math.max(this._width,this._innerOffset.x*o),Math.max(this._height,this._innerOffset.y*l)),t*=o,e*=l,this._outerScale.x/=o,this._outerScale.y/=l,t*=a.D.clamp(this._width/(this._innerOffset.x*o),1e-4,1),e*=a.D.clamp(this._height/(this._innerOffset.y*l),1e-4,1),this._meshInstance&&(this._outerScaleUniform[0]=this._outerScale.x,this._outerScaleUniform[1]=this._outerScale.y,this._meshInstance.setParameter("outerScale",this._outerScaleUniform))}this._node.setLocalScale(t,e,1),this._node.setLocalPosition(s,i,0)}_updateAabb(t){return t.center.set(0,0,0),t.halfExtents.set(.5*this._outerScale.x,.5*this._outerScale.y,.001),t.setFromTransformedAabb(t,this._node.getWorldTransform()),t}_tryAutoPlay(){if(!this._autoPlayClip)return;if(this.type!==Rd)return;const t=this._clips[this._autoPlayClip];!t||t.isPlaying||this._currentClip&&this._currentClip.isPlaying||this.enabled&&this.entity.enabled&&this.play(t.name)}_onLayersChanged(t,e){t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this),this.enabled&&this.entity.enabled&&this._showModel()}_onLayerAdded(t){this.layers.indexOf(t.id)<0||this._addedModel&&this.enabled&&this.entity.enabled&&this._meshInstance&&t.addMeshInstances([this._meshInstance])}_onLayerRemoved(t){if(!this._meshInstance)return;this.layers.indexOf(t.id)<0||t.removeMeshInstances([this._meshInstance])}removeModelFromLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);e&&e.removeMeshInstances([this._meshInstance])}}addClip(t){const e=new Fd(this,{name:t.name,fps:t.fps,loop:t.loop,spriteAsset:t.spriteAsset});return this._clips[t.name]=e,e.name&&e.name===this._autoPlayClip&&this._tryAutoPlay(),e}removeClip(t){delete this._clips[t]}clip(t){return this._clips[t]}play(t){const e=this._clips[t],s=this._currentClip;return s&&s!==e&&(s._playing=!1),this._currentClip=e,this._currentClip&&(this._currentClip=e,this._currentClip.play()),e}pause(){this._currentClip!==this._defaultClip&&this._currentClip.isPlaying&&this._currentClip.pause()}resume(){this._currentClip!==this._defaultClip&&this._currentClip.isPaused&&this._currentClip.resume()}stop(){this._currentClip!==this._defaultClip&&this._currentClip.stop()}}class zd{constructor(){this.enabled=!0}}const Vd=["enabled"];class Gd extends Rr{constructor(t){super(t),this.id="sprite",this.ComponentType=Ud,this.DataType=zd,this.schema=Vd,this._defaultTexture=null,this._defaultMaterial=null,this._default9SlicedMaterialSlicedMode=null,this._default9SlicedMaterialTiledMode=null,this.app.systems.on("update",this.onUpdate,this),this.on("beforeremove",this.onBeforeRemove,this)}set defaultMaterial(t){this._defaultMaterial=t}get defaultMaterial(){if(!this._defaultMaterial){const t=new Q.g(this.app.graphicsDevice,{width:1,height:1,format:x.Mb4,name:"sprite"}),e=new Uint8Array(t.lock());e[0]=e[1]=e[2]=e[3]=255,t.unlock();const s=new Xe;s.diffuse.set(0,0,0),s.emissive.set(1,1,1),s.emissiveMap=t,s.opacityMap=t,s.opacityMapChannel="a",s.useLighting=!1,s.useTonemap=!1,s.useFog=!1,s.useSkybox=!1,s.blendType=F.bYZ,s.depthWrite=!1,s.pixelSnap=!1,s.cull=x.pLF,s.update(),this._defaultTexture=t,this._defaultMaterial=s}return this._defaultMaterial}set default9SlicedMaterialSlicedMode(t){this._default9SlicedMaterialSlicedMode=t}get default9SlicedMaterialSlicedMode(){if(!this._default9SlicedMaterialSlicedMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=F.FCf,t.update(),this._default9SlicedMaterialSlicedMode=t}return this._default9SlicedMaterialSlicedMode}set default9SlicedMaterialTiledMode(t){this._default9SlicedMaterialTiledMode=t}get default9SlicedMaterialTiledMode(){if(!this._default9SlicedMaterialTiledMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=F.jZy,t.update(),this._default9SlicedMaterialTiledMode=t}return this._default9SlicedMaterialTiledMode}destroy(){super.destroy(),this.app.systems.off("update",this.onUpdate,this),this._defaultTexture&&(this._defaultTexture.destroy(),this._defaultTexture=null)}initializeComponentData(t,e,s){if(void 0!==e.enabled&&(t.enabled=e.enabled),t.type=e.type,e.layers&&Array.isArray(e.layers)&&(t.layers=e.layers.slice(0)),void 0!==e.drawOrder&&(t.drawOrder=e.drawOrder),void 0!==e.color&&(e.color instanceof p.Q?t.color.set(e.color.r,e.color.g,e.color.b,e.opacity??1):t.color.set(e.color[0],e.color[1],e.color[2],e.opacity??1),t.color=t.color),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.flipX&&(t.flipX=e.flipX),void 0!==e.flipY&&(t.flipY=e.flipY),void 0!==e.width&&(t.width=e.width),void 0!==e.height&&(t.height=e.height),void 0!==e.spriteAsset&&(t.spriteAsset=e.spriteAsset),e.sprite&&(t.sprite=e.sprite),void 0!==e.frame&&(t.frame=e.frame),e.clips)for(const i in e.clips)t.addClip(e.clips[i]);void 0!==e.speed&&(t.speed=e.speed),e.autoPlayClip&&(t.autoPlayClip=e.autoPlayClip),t.batchGroupId=void 0===e.batchGroupId||null===e.batchGroupId?-1:e.batchGroupId,super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.sprite;return this.addComponent(e,{enabled:s.enabled,type:s.type,spriteAsset:s.spriteAsset,sprite:s.sprite,width:s.width,height:s.height,frame:s.frame,color:s.color.clone(),opacity:s.opacity,flipX:s.flipX,flipY:s.flipY,speed:s.speed,clips:s.clips,autoPlayClip:s.autoPlayClip,batchGroupId:s.batchGroupId,drawOrder:s.drawOrder,layers:s.layers.slice(0)})}onUpdate(t){const e=this.store;for(const s in e)if(e.hasOwnProperty(s)){const i=e[s];if(i.data.enabled&&i.entity.enabled){const e=i.entity.sprite;e._currentClip&&e._currentClip._update(t)}}}onBeforeRemove(t,e){e.onDestroy()}}Ir._buildAccessors(Ud.prototype,Vd);class Hd extends Ir{static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_STATE="state"}static{this.EVENT_REMOVE="remove"}constructor(t,e){super(t,e),this._oldState=!0,this._size=new l.e,this.on("set_enabled",this._onSetEnabled,this)}set size(t){t instanceof l.e?this._size.copy(t):t instanceof Array&&t.length>=3&&this.size.set(t[0],t[1],t[2])}get size(){return this._size}onEnable(){this._checkState()}onDisable(){this._checkState()}_onSetEnabled(t,e,s){this._checkState()}_checkState(){const t=this.enabled&&this.entity.enabled;t!==this._oldState&&(this._oldState=t,this.fire("enable"),this.fire("state",this.enabled))}_onBeforeRemove(){this.fire("remove")}}class Wd{constructor(){this.enabled=!0}}const Xd=["enabled"];class $d extends Rr{constructor(t){super(t),this.id="zone",this.ComponentType=Hd,this.DataType=Wd,this.schema=Xd,this.on("beforeremove",this._onBeforeRemove,this)}initializeComponentData(t,e,s){t.enabled=!e.hasOwnProperty("enabled")||!!e.enabled,e.size&&(e.size instanceof l.e?t.size.copy(e.size):e.size instanceof Array&&e.size.length>=3&&t.size.set(e.size[0],e.size[1],e.size[2]))}cloneComponent(t,e){const s={enabled:t.zone.enabled,size:t.zone.size};return this.addComponent(e,s)}_onBeforeRemove(t,e){e._onBeforeRemove()}}Ir._buildAccessors(Hd.prototype,Xd);class qd{constructor(t,e){this.effect=t,this.inputTarget=e,this.outputTarget=null,this.name=t.constructor.name}}class jd{constructor(t,e){this.app=t,this.camera=e,this.destinationRenderTarget=null,this.effects=[],this.enabled=!1,this.depthTarget=null,e.on("set:rect",this.onCameraRectChanged,this)}_allocateColorBuffer(t,e){const s=this.camera.rect,i=this.destinationRenderTarget,n=this.app.graphicsDevice,r=Math.floor(s.z*(i?.width??n.width)),a=Math.floor(s.w*(i?.height??n.height));return new Q.g(n,{name:e,format:t,width:r,height:a,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6})}_createOffscreenTarget(t,e){const s=this.app.graphicsDevice,i=(this.destinationRenderTarget??s.backBuffer).isColorBufferSrgb(0),n=(e&&s.getRenderableHdrFormat([x.WBN,x.s7h],!0))??(i?x.Mb4:x.Lxj),r=`${this.camera.entity.name}-posteffect-${this.effects.length}`,a=this._allocateColorBuffer(n,r);return new T.O({colorBuffer:a,depth:t,stencil:t&&this.app.graphicsDevice.supportsStencil,samples:t?s.samples:1})}_resizeOffscreenTarget(t){const e=t.colorBuffer.format,s=t.colorBuffer.name;t.destroyFrameBuffers(),t.destroyTextureBuffers(),t._colorBuffer=this._allocateColorBuffer(e,s),t._colorBuffers=[t._colorBuffer]}_destroyOffscreenTarget(t){t.destroyTextureBuffers(),t.destroy()}addEffect(t){const e=this.effects,s=0===e.length,i=this._createOffscreenTarget(s,t.hdr),n=new qd(t,i);e.push(n),this._sourceTarget=n.inputTarget,e.length>1&&(e[e.length-2].outputTarget=n.inputTarget),this._newPostEffect=t,t.needsDepthBuffer&&this._requestDepthMap(),this.enable(),this._newPostEffect=void 0}removeEffect(t){let e=-1;for(let s=0,i=this.effects.length;s<i;s++)if(this.effects[s].effect===t){e=s;break}e>=0&&(e>0?this.effects[e-1].outputTarget=e+1<this.effects.length?this.effects[e+1].inputTarget:null:this.effects.length>1&&(this.effects[1].inputTarget._depth||(this._destroyOffscreenTarget(this.effects[1].inputTarget),this.effects[1].inputTarget=this._createOffscreenTarget(!0,this.effects[1].hdr),this._sourceTarget=this.effects[1].inputTarget),this.camera.renderTarget=this.effects[1].inputTarget),this._destroyOffscreenTarget(this.effects[e].inputTarget),this.effects.splice(e,1)),this.enabled&&t.needsDepthBuffer&&this._releaseDepthMap(),0===this.effects.length&&this.disable()}_requestDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++){const e=this.effects[t].effect;this._newPostEffect!==e&&(e.needsDepthBuffer&&this._requestDepthMap())}}_releaseDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++){this.effects[t].effect.needsDepthBuffer&&this._releaseDepthMap()}}_requestDepthMap(){const t=this.app.scene.layers.getLayerById(F.$9T);t&&(t.incrementCounter(),this.camera.requestSceneDepthMap(!0))}_releaseDepthMap(){const t=this.app.scene.layers.getLayerById(F.$9T);t&&(t.decrementCounter(),this.camera.requestSceneDepthMap(!1))}destroy(){for(let t=0,e=this.effects.length;t<e;t++)this.effects[t].inputTarget.destroy();this.effects.length=0,this.disable()}enable(){!this.enabled&&this.effects.length&&(this.enabled=!0,this._requestDepthMaps(),this.app.graphicsDevice.on("resizecanvas",this._onCanvasResized,this),this.destinationRenderTarget=this.camera.renderTarget,this.camera.renderTarget=this.effects[0].inputTarget,this.camera.onPostprocessing=()=>{if(this.enabled){let t=null;const e=this.effects.length;if(e)for(let s=0;s<e;s++){const i=this.effects[s];let n=i.outputTarget;s===e-1&&(t=this.camera.rect,this.destinationRenderTarget&&(n=this.destinationRenderTarget)),i.effect.render(i.inputTarget,n,t)}}})}disable(){this.enabled&&(this.enabled=!1,this.app.graphicsDevice.off("resizecanvas",this._onCanvasResized,this),this._releaseDepthMaps(),this._destroyOffscreenTarget(this._sourceTarget),this.camera.renderTarget=this.destinationRenderTarget,this.camera.onPostprocessing=null)}_onCanvasResized(t,e){const s=this.camera.rect,i=this.destinationRenderTarget;t=i?.width??t,e=i?.height??e,this.camera.camera.aspectRatio=t*s.z/(e*s.w),this.resizeRenderTargets()}resizeRenderTargets(){const t=this.app.graphicsDevice,e=this.destinationRenderTarget,s=e?.width??t.width,i=e?.height??t.height,n=this.camera.rect,r=Math.floor(n.z*s),a=Math.floor(n.w*i),o=this.effects;for(let l=0,h=o.length;l<h;l++){const t=o[l];t.inputTarget.width===r&&t.inputTarget.height===a||this._resizeOffscreenTarget(t.inputTarget)}}onCameraRectChanged(t,e,s){this.enabled&&this.resizeRenderTargets()}}class Yd extends Ir{constructor(t,e){super(t,e),this.onPostprocessing=null,this._renderSceneDepthMap=0,this._renderSceneColorMap=0,this._sceneDepthMapRequested=!1,this._sceneColorMapRequested=!1,this._priority=0,this._disablePostEffectsLayer=F.Qed,this._camera=new It,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._camera.node=e,this._postEffects=new jd(t.app,this)}setShaderPass(t){const e=k.get(this.system.app.graphicsDevice),s=t?e.allocate(t,{isForward:!0}):null;return this._camera.shaderPassInfo=s,s.index}getShaderPass(){return this._camera.shaderPassInfo?.name}set renderPasses(t){this._camera.renderPasses=t||[],this.dirtyLayerCompositionCameras(),this.system.app.scene.updateShaders=!0}get renderPasses(){return this._camera.renderPasses}get shaderParams(){return this._camera.shaderParams}set gammaCorrection(t){this.camera.shaderParams.gammaCorrection=t}get gammaCorrection(){return this.camera.shaderParams.gammaCorrection}set toneMapping(t){this.camera.shaderParams.toneMapping=t}get toneMapping(){return this.camera.shaderParams.toneMapping}set fog(t){this._camera.fogParams=t}get fog(){return this._camera.fogParams}set aperture(t){this._camera.aperture=t}get aperture(){return this._camera.aperture}set aspectRatio(t){this._camera.aspectRatio=t}get aspectRatio(){return this._camera.aspectRatio}set aspectRatioMode(t){this._camera.aspectRatioMode=t}get aspectRatioMode(){return this._camera.aspectRatioMode}set calculateProjection(t){this._camera.calculateProjection=t}get calculateProjection(){return this._camera.calculateProjection}set calculateTransform(t){this._camera.calculateTransform=t}get calculateTransform(){return this._camera.calculateTransform}get camera(){return this._camera}set clearColor(t){this._camera.clearColor=t}get clearColor(){return this._camera.clearColor}set clearColorBuffer(t){this._camera.clearColorBuffer=t,this.dirtyLayerCompositionCameras()}get clearColorBuffer(){return this._camera.clearColorBuffer}set clearDepthBuffer(t){this._camera.clearDepthBuffer=t,this.dirtyLayerCompositionCameras()}get clearDepthBuffer(){return this._camera.clearDepthBuffer}set clearStencilBuffer(t){this._camera.clearStencilBuffer=t,this.dirtyLayerCompositionCameras()}get clearStencilBuffer(){return this._camera.clearStencilBuffer}set cullFaces(t){this._camera.cullFaces=t}get cullFaces(){return this._camera.cullFaces}set disablePostEffectsLayer(t){this._disablePostEffectsLayer=t,this.dirtyLayerCompositionCameras()}get disablePostEffectsLayer(){return this._disablePostEffectsLayer}set farClip(t){this._camera.farClip=t}get farClip(){return this._camera.farClip}set flipFaces(t){this._camera.flipFaces=t}get flipFaces(){return this._camera.flipFaces}set fov(t){this._camera.fov=t}get fov(){return this._camera.fov}get frustum(){return this._camera.frustum}set frustumCulling(t){this._camera.frustumCulling=t}get frustumCulling(){return this._camera.frustumCulling}set horizontalFov(t){this._camera.horizontalFov=t}get horizontalFov(){return this._camera.horizontalFov}set layers(t){const e=this._camera.layers,s=this.system.app.scene;e.forEach(t=>{const e=s.layers.getLayerById(t);e?.removeCamera(this)}),this._camera.layers=t,this.enabled&&this.entity.enabled&&t.forEach(t=>{const e=s.layers.getLayerById(t);e?.addCamera(this)}),this.fire("set:layers")}get layers(){return this._camera.layers}get layersSet(){return this._camera.layersSet}set jitter(t){this._camera.jitter=t}get jitter(){return this._camera.jitter}set nearClip(t){this._camera.nearClip=t}get nearClip(){return this._camera.nearClip}set orthoHeight(t){this._camera.orthoHeight=t}get orthoHeight(){return this._camera.orthoHeight}get postEffects(){return this._postEffects}get postEffectsEnabled(){return this._postEffects.enabled}set priority(t){this._priority=t,this.dirtyLayerCompositionCameras()}get priority(){return this._priority}set projection(t){this._camera.projection=t}get projection(){return this._camera.projection}get projectionMatrix(){return this._camera.projectionMatrix}set rect(t){this._camera.rect=t,this.fire("set:rect",this._camera.rect)}get rect(){return this._camera.rect}set renderSceneColorMap(t){t&&!this._sceneColorMapRequested?(this.requestSceneColorMap(!0),this._sceneColorMapRequested=!0):this._sceneColorMapRequested&&(this.requestSceneColorMap(!1),this._sceneColorMapRequested=!1)}get renderSceneColorMap(){return this._renderSceneColorMap>0}set renderSceneDepthMap(t){t&&!this._sceneDepthMapRequested?(this.requestSceneDepthMap(!0),this._sceneDepthMapRequested=!0):this._sceneDepthMapRequested&&(this.requestSceneDepthMap(!1),this._sceneDepthMapRequested=!1)}get renderSceneDepthMap(){return this._renderSceneDepthMap>0}set renderTarget(t){this._camera.renderTarget=t,this.dirtyLayerCompositionCameras()}get renderTarget(){return this._camera.renderTarget}set scissorRect(t){this._camera.scissorRect=t}get scissorRect(){return this._camera.scissorRect}set sensitivity(t){this._camera.sensitivity=t}get sensitivity(){return this._camera.sensitivity}set shutter(t){this._camera.shutter=t}get shutter(){return this._camera.shutter}get viewMatrix(){return this._camera.viewMatrix}_enableDepthLayer(t){if(this.layers.find(t=>t===F.$9T)){const e=this.system.app.scene.layers.getLayerById(F.$9T);t?e?.incrementCounter():e?.decrementCounter()}else if(t)return!1;return!0}requestSceneColorMap(t){this._renderSceneColorMap+=t?1:-1,this._enableDepthLayer(t),this.camera._enableRenderPassColorGrab(this.system.app.graphicsDevice,this.renderSceneColorMap),this.system.app.scene.layers.markDirty()}requestSceneDepthMap(t){this._renderSceneDepthMap+=t?1:-1,this._enableDepthLayer(t),this.camera._enableRenderPassDepthGrab(this.system.app.graphicsDevice,this.system.app.renderer,this.renderSceneDepthMap),this.system.app.scene.layers.markDirty()}dirtyLayerCompositionCameras(){this.system.app.scene.layers._dirty=!0}screenToWorld(t,e,s,i){const n=this.system.app.graphicsDevice,{width:r,height:a}=n.clientRect;return this._camera.screenToWorld(t,e,s,r,a,i)}worldToScreen(t,e){const s=this.system.app.graphicsDevice,{width:i,height:n}=s.clientRect;return this._camera.worldToScreen(t,i,n,e)}onAppPrerender(){this._camera._viewMatDirty=!0,this._camera._viewProjMatDirty=!0}addCameraToLayers(){const t=this.layers;for(let e=0;e<t.length;e++){const s=this.system.app.scene.layers.getLayerById(t[e]);s&&s.addCamera(this)}}removeCameraFromLayers(){const t=this.layers;for(let e=0;e<t.length;e++){const s=this.system.app.scene.layers.getLayerById(t[e]);s&&s.removeCamera(this)}}onLayersChanged(t,e){this.addCameraToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)<0||t.addCamera(this)}onLayerRemoved(t){this.layers.indexOf(t.id)<0||t.removeCamera(this)}onEnable(){const t=this.system.app.scene,e=t.layers;this.system.addCamera(this),this._evtLayersChanged?.off(),this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this),e&&(this._evtLayerAdded?.off(),this._evtLayerAdded=e.on("add",this.onLayerAdded,this),this._evtLayerRemoved?.off(),this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addCameraToLayers(),this.postEffects.enable()}onDisable(){const t=this.system.app.scene.layers;this.postEffects.disable(),this.removeCameraFromLayers(),this._evtLayersChanged?.off(),this._evtLayersChanged=null,t&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this.system.removeCamera(this)}onRemove(){this.onDisable(),this.off(),this.camera.destroy()}calculateAspectRatio(t){const e=this.system.app.graphicsDevice,s=t?t.width:e.width,i=t?t.height:e.height;return s*this.rect.z/(i*this.rect.w)}frameUpdate(t){this.aspectRatioMode===F.LF5&&(this.aspectRatio=this.calculateAspectRatio(t))}startXr(t,e,s){this.system.app.xr.start(this,t,e,s)}endXr(t){this._camera.xr?this._camera.xr.end(t):t&&t(new Error("Camera is not in XR"))}copy(t){this.aperture=t.aperture,this.aspectRatio=t.aspectRatio,this.aspectRatioMode=t.aspectRatioMode,this.calculateProjection=t.calculateProjection,this.calculateTransform=t.calculateTransform,this.clearColor=t.clearColor,this.clearColorBuffer=t.clearColorBuffer,this.clearDepthBuffer=t.clearDepthBuffer,this.clearStencilBuffer=t.clearStencilBuffer,this.cullFaces=t.cullFaces,this.disablePostEffectsLayer=t.disablePostEffectsLayer,this.farClip=t.farClip,this.flipFaces=t.flipFaces,this.fov=t.fov,this.frustumCulling=t.frustumCulling,this.horizontalFov=t.horizontalFov,this.layers=t.layers,this.nearClip=t.nearClip,this.orthoHeight=t.orthoHeight,this.priority=t.priority,this.projection=t.projection,this.rect=t.rect,this.renderTarget=t.renderTarget,this.scissorRect=t.scissorRect,this.sensitivity=t.sensitivity,this.shutter=t.shutter}}class Kd{constructor(){this.enabled=!0}}const Zd=["enabled"];class Qd extends Rr{constructor(t){super(t),this.cameras=[],this.id="camera",this.ComponentType=Yd,this.DataType=Kd,this.schema=Zd,this.on("beforeremove",this.onBeforeRemove,this),this.app.on("prerender",this.onAppPrerender,this)}initializeComponentData(t,e,s){s=["aspectRatio","aspectRatioMode","calculateProjection","calculateTransform","clearColor","clearColorBuffer","clearDepthBuffer","clearStencilBuffer","renderSceneColorMap","renderSceneDepthMap","cullFaces","farClip","flipFaces","fog","fov","frustumCulling","horizontalFov","layers","renderTarget","nearClip","orthoHeight","projection","priority","rect","scissorRect","aperture","shutter","sensitivity","gammaCorrection","toneMapping"];for(let i=0;i<s.length;i++){const n=s[i];if(e.hasOwnProperty(n)){const s=e[n];switch(n){case"rect":case"scissorRect":Array.isArray(s)?t[n]=new w.Z(s[0],s[1],s[2],s[3]):t[n]=s;break;case"clearColor":Array.isArray(s)?t[n]=new p.Q(s[0],s[1],s[2],s[3]):t[n]=s;break;default:t[n]=s}}}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.camera;return this.addComponent(e,{aspectRatio:s.aspectRatio,aspectRatioMode:s.aspectRatioMode,calculateProjection:s.calculateProjection,calculateTransform:s.calculateTransform,clearColor:s.clearColor,clearColorBuffer:s.clearColorBuffer,clearDepthBuffer:s.clearDepthBuffer,clearStencilBuffer:s.clearStencilBuffer,renderSceneDepthMap:s.renderSceneDepthMap,renderSceneColorMap:s.renderSceneColorMap,cullFaces:s.cullFaces,enabled:s.enabled,farClip:s.farClip,flipFaces:s.flipFaces,fov:s.fov,frustumCulling:s.frustumCulling,horizontalFov:s.horizontalFov,layers:s.layers,renderTarget:s.renderTarget,nearClip:s.nearClip,orthoHeight:s.orthoHeight,projection:s.projection,priority:s.priority,rect:s.rect,scissorRect:s.scissorRect,aperture:s.aperture,sensitivity:s.sensitivity,shutter:s.shutter,gammaCorrection:s.gammaCorrection,toneMapping:s.toneMapping})}onBeforeRemove(t,e){this.removeCamera(e),e.onRemove()}onAppPrerender(){for(let t=0,e=this.cameras.length;t<e;t++)this.cameras[t].onAppPrerender()}addCamera(t){this.cameras.push(t),Cn(this.cameras)}removeCamera(t){const e=this.cameras.indexOf(t);e>=0&&(this.cameras.splice(e,1),Cn(this.cameras))}destroy(){this.app.off("prerender",this.onAppPrerender,this),super.destroy()}}Ir._buildAccessors(Yd.prototype,Zd);const Jd=new l.e,tu={bias:0,normalBias:0},eu=new p.Q,su={r:0,g:1,b:2,a:3},iu={directional:F.kxh,omni:F.dGk,point:F.dGk,spot:F.GyL},nu=[[new w.Z(0,0,1,1)],[new w.Z(0,0,.5,.5),new w.Z(0,.5,.5,.5)],[new w.Z(0,0,.5,.5),new w.Z(0,.5,.5,.5),new w.Z(.5,0,.5,.5)],[new w.Z(0,0,.5,.5),new w.Z(0,.5,.5,.5),new w.Z(.5,0,.5,.5),new w.Z(.5,.5,.5,.5)]],ru={rrr:1,ggg:2,bbb:4,aaa:8,rgb:7};let au=0;class ou{constructor(t,e,s){this.light=s,this.camera=t,this.shadowCamera=ki.createShadowCamera(s._shadowType,s._type,e),this.shadowMatrix=new o.$,this.shadowViewport=new w.Z(0,0,1,1),this.shadowScissor=new w.Z(0,0,1,1),this.projectionCompensation=0,this.face=e,this.visibleCasters=[],this.viewBindGroups=[]}destroy(){this.viewBindGroups.forEach(t=>{t.defaultUniformBuffer.destroy(),t.destroy()}),this.viewBindGroups.length=0}get shadowBuffer(){const t=this.shadowCamera.renderTarget;return t?this.light._isPcf?t.depthBuffer:t.colorBuffer:null}}class lu{constructor(t,e){this.layers=new Set,this.shadowDepthState=q.H.DEFAULT.clone(),this.clusteredFlags=0,this.clusteredData=new Uint32Array(3),this.clusteredData16=new Uint16Array(this.clusteredData.buffer),this._evtDeviceRestored=null,this.device=t,this.clusteredLighting=e,this.id=au++,this._evtDeviceRestored=t.on("devicerestored",this.onDeviceRestored,this),this._type=F.kxh,this._color=new p.Q(.8,.8,.8),this._intensity=1,this._affectSpecularity=!0,this._luminance=0,this._castShadows=!1,this._enabled=!1,this._mask=F.XjC,this.isStatic=!1,this.key=0,this.bakeDir=!0,this.bakeNumSamples=1,this.bakeArea=0,this.attenuationStart=10,this.attenuationEnd=10,this._falloffMode=F.$75,this._shadowType=F.Q_7,this._vsmBlurSize=11,this.vsmBlurMode=F.wAR,this.vsmBias=.0025,this._cookie=null,this.cookieIntensity=1,this._cookieFalloff=!0,this._cookieChannel="rgb",this._cookieTransform=null,this._cookieTransformUniform=new Float32Array(4),this._cookieOffset=null,this._cookieOffsetUniform=new Float32Array(2),this._cookieTransformSet=!1,this._cookieOffsetSet=!1,this._innerConeAngle=40,this._outerConeAngle=45,this.cascades=null,this._shadowMatrixPalette=null,this._shadowCascadeDistances=null,this.numCascades=1,this._cascadeBlend=0,this.cascadeDistribution=.5,this._shape=F.j06,this._colorLinear=new Float32Array(3),this._updateLinearColor(),this._position=new l.e(0,0,0),this._direction=new l.e(0,0,0),this._innerConeAngleCos=Math.cos(this._innerConeAngle*Math.PI/180),this._updateOuterAngle(this._outerConeAngle),this._usePhysicalUnits=void 0,this._shadowMap=null,this._shadowRenderParams=[],this._shadowCameraParams=[],this.shadowDistance=40,this._shadowResolution=1024,this._shadowBias=-5e-4,this._shadowIntensity=1,this._normalOffsetBias=0,this.shadowUpdateMode=F.M5l,this.shadowUpdateOverrides=null,this._isVsm=!1,this._isPcf=!0,this._softShadowParams=new Float32Array(4),this.shadowSamples=16,this.shadowBlockerSamples=16,this.penumbraSize=1,this.penumbraFalloff=1,this._cookieMatrix=null,this._atlasViewport=null,this.atlasViewportAllocated=!1,this.atlasVersion=0,this.atlasSlotIndex=0,this.atlasSlotUpdated=!1,this._node=null,this._renderData=[],this.visibleThisFrame=!1,this.maxScreenSize=0,this._updateShadowBias()}destroy(){this._evtDeviceRestored?.off(),this._evtDeviceRestored=null,this._destroyShadowMap(),this.releaseRenderData(),this._renderData=null}onDeviceRestored(){this.shadowUpdateMode===F.Jb9&&(this.shadowUpdateMode=F.e3T)}releaseRenderData(){if(this._renderData){for(let t=0;t<this._renderData.length;t++)this._renderData[t].destroy();this._renderData.length=0}}addLayer(t){this.layers.add(t)}removeLayer(t){this.layers.delete(t)}set shadowSamples(t){this._softShadowParams[0]=t}get shadowSamples(){return this._softShadowParams[0]}set shadowBlockerSamples(t){this._softShadowParams[1]=t}get shadowBlockerSamples(){return this._softShadowParams[1]}set shadowBias(t){this._shadowBias!==t&&(this._shadowBias=t,this._updateShadowBias())}get shadowBias(){return this._shadowBias}set numCascades(t){this.cascades&&this.numCascades===t||(this.cascades=nu[t-1],this._shadowMatrixPalette=new Float32Array(64),this._shadowCascadeDistances=new Float32Array(4),this._destroyShadowMap(),this.updateKey())}get numCascades(){return this.cascades.length}set cascadeBlend(t){this._cascadeBlend!==t&&(this._cascadeBlend=t,this.updateKey())}get cascadeBlend(){return this._cascadeBlend}set shadowMap(t){this._shadowMap!==t&&(this._destroyShadowMap(),this._shadowMap=t)}get shadowMap(){return this._shadowMap}set mask(t){this._mask!==t&&(this._mask=t,this.updateKey(),this.updateClusteredFlags())}get mask(){return this._mask}get numShadowFaces(){const t=this._type;return t===F.kxh?this.numCascades:t===F.dGk?6:1}set type(t){if(this._type===t)return;this._type=t,this._destroyShadowMap(),this._updateShadowBias(),this.updateKey(),this.updateClusteredFlags();const e=this._shadowType;this._shadowType=null,this.shadowUpdateOverrides=null,this.shadowType=e}get type(){return this._type}set shape(t){if(this._shape===t)return;this._shape=t,this._destroyShadowMap(),this.updateKey(),this.updateClusteredFlags();const e=this._shadowType;this._shadowType=null,this.shadowType=e}get shape(){return this._shape}set usePhysicalUnits(t){this._usePhysicalUnits!==t&&(this._usePhysicalUnits=t,this._updateLinearColor())}get usePhysicalUnits(){return this._usePhysicalUnits}set shadowType(t){if(this._shadowType===t)return;let e=F.$Tp.get(t);e||(t=F.Q_7);const s=this.device;t!==F.F3J||s.textureFloatRenderable||s.textureHalfFloatRenderable||(t=F.Q_7),this._type===F.dGk&&t!==F.sHg&&t!==F.Q_7&&t!==F.yzJ&&t!==F.y0b&&t!==F.F3J&&(t=F.Q_7),t!==F._Bn||s.textureFloatRenderable&&s.textureFloatFilterable||(t=F.au1),t!==F.au1||s.textureHalfFloatRenderable||(t=F.Q_7),e=F.$Tp.get(t),this._isVsm=e?.vsm??!1,this._isPcf=e?.pcf??!1,this._shadowType=t,this._destroyShadowMap(),this.updateKey()}get shadowType(){return this._shadowType}set enabled(t){this._enabled!==t&&(this._enabled=t,this.layersDirty())}get enabled(){return this._enabled}set castShadows(t){this._castShadows!==t&&(this._castShadows=t,this._destroyShadowMap(),this.layersDirty(),this.updateKey())}get castShadows(){return this._castShadows&&this._mask!==F.XEj&&0!==this._mask}set shadowIntensity(t){this._shadowIntensity!==t&&(this._shadowIntensity=t,this.updateKey())}get shadowIntensity(){return this._shadowIntensity}get bakeShadows(){return this._castShadows&&this._mask===F.XEj}set shadowResolution(t){this._shadowResolution!==t&&(t=this._type===F.dGk?Math.min(t,this.device.maxCubeMapSize):Math.min(t,this.device.maxTextureSize),this._shadowResolution=t,this._destroyShadowMap())}get shadowResolution(){return this._shadowResolution}set vsmBlurSize(t){this._vsmBlurSize!==t&&(t%2==0&&t++,this._vsmBlurSize=t)}get vsmBlurSize(){return this._vsmBlurSize}set normalOffsetBias(t){if(this._normalOffsetBias!==t){const e=!this._normalOffsetBias&&t||this._normalOffsetBias&&!t;this._normalOffsetBias=t,e&&this.updateKey()}}get normalOffsetBias(){return this._normalOffsetBias}set falloffMode(t){this._falloffMode!==t&&(this._falloffMode=t,this.updateKey(),this.updateClusteredFlags())}get falloffMode(){return this._falloffMode}set innerConeAngle(t){this._innerConeAngle!==t&&(this._innerConeAngle=t,this._innerConeAngleCos=Math.cos(t*Math.PI/180),this.updateClusterData(!1,!0),this._usePhysicalUnits&&this._updateLinearColor())}get innerConeAngle(){return this._innerConeAngle}set outerConeAngle(t){this._outerConeAngle!==t&&(this._outerConeAngle=t,this._updateOuterAngle(t),this._usePhysicalUnits&&this._updateLinearColor())}get outerConeAngle(){return this._outerConeAngle}set penumbraSize(t){this._penumbraSize=t,this._softShadowParams[2]=t}get penumbraSize(){return this._penumbraSize}set penumbraFalloff(t){this._softShadowParams[3]=t}get penumbraFalloff(){return this._softShadowParams[3]}_updateOuterAngle(t){const e=t*Math.PI/180;this._outerConeAngleCos=Math.cos(e),this._outerConeAngleSin=Math.sin(e),this.updateClusterData(!1,!0)}set intensity(t){this._intensity!==t&&(this._intensity=t,this._updateLinearColor())}get intensity(){return this._intensity}set affectSpecularity(t){this._type===F.kxh&&(this._affectSpecularity=t,this.updateKey())}get affectSpecularity(){return this._affectSpecularity}set luminance(t){this._luminance!==t&&(this._luminance=t,this._updateLinearColor())}get luminance(){return this._luminance}get cookieMatrix(){return this._cookieMatrix||(this._cookieMatrix=new o.$),this._cookieMatrix}get atlasViewport(){return this._atlasViewport||(this._atlasViewport=new w.Z(0,0,1,1)),this._atlasViewport}set cookie(t){this._cookie!==t&&(this._cookie=t,this.updateKey())}get cookie(){return this._cookie}set cookieFalloff(t){this._cookieFalloff!==t&&(this._cookieFalloff=t,this.updateKey())}get cookieFalloff(){return this._cookieFalloff}set cookieChannel(t){if(this._cookieChannel!==t){if(t.length<3){const e=t.charAt(t.length-1),s=3-t.length;for(let i=0;i<s;i++)t+=e}this._cookieChannel=t,this.updateKey(),this.updateClusteredFlags()}}get cookieChannel(){return this._cookieChannel}set cookieTransform(t){this._cookieTransform!==t&&(this._cookieTransform=t,this._cookieTransformSet=!!t,t&&!this._cookieOffset&&(this.cookieOffset=new Jt.Z,this._cookieOffsetSet=!1),this.updateKey())}get cookieTransform(){return this._cookieTransform}set cookieOffset(t){if(this._cookieOffset===t)return;!(!this._cookieTransformSet&&!t)&&!t&&this._cookieOffset?this._cookieOffset.set(0,0):this._cookieOffset=t,this._cookieOffsetSet=!!t,t&&!this._cookieTransform&&(this.cookieTransform=new w.Z(1,1,0,0),this._cookieTransformSet=!1),this.updateKey()}get cookieOffset(){return this._cookieOffset}beginFrame(){this.visibleThisFrame=this._type===F.kxh&&this._enabled,this.maxScreenSize=0,this.atlasViewportAllocated=!1,this.atlasSlotUpdated=!1}_destroyShadowMap(){if(this.releaseRenderData(),this._shadowMap&&(this._shadowMap.cached||this._shadowMap.destroy(),this._shadowMap=null),this.shadowUpdateMode===F.Jb9&&(this.shadowUpdateMode=F.e3T),this.shadowUpdateOverrides)for(let t=0;t<this.shadowUpdateOverrides.length;t++)this.shadowUpdateOverrides[t]===F.Jb9&&(this.shadowUpdateOverrides[t]=F.e3T)}getRenderData(t,e){for(let i=0;i<this._renderData.length;i++){const s=this._renderData[i];if(s.camera===t&&s.face===e)return s}const s=new ou(t,e,this);return this._renderData.push(s),s}clone(){const t=new lu(this.device,this.clusteredLighting);return t.type=this._type,t.setColor(this._color),t.intensity=this._intensity,t.affectSpecularity=this._affectSpecularity,t.luminance=this._luminance,t.castShadows=this.castShadows,t._enabled=this._enabled,t.attenuationStart=this.attenuationStart,t.attenuationEnd=this.attenuationEnd,t.falloffMode=this._falloffMode,t.shadowType=this._shadowType,t.vsmBlurSize=this._vsmBlurSize,t.vsmBlurMode=this.vsmBlurMode,t.vsmBias=this.vsmBias,t.shadowUpdateMode=this.shadowUpdateMode,t.mask=this.mask,this.shadowUpdateOverrides&&(t.shadowUpdateOverrides=this.shadowUpdateOverrides.slice()),t.innerConeAngle=this._innerConeAngle,t.outerConeAngle=this._outerConeAngle,t.numCascades=this.numCascades,t.cascadeDistribution=this.cascadeDistribution,t.cascadeBlend=this._cascadeBlend,t.shape=this._shape,t.shadowDepthState.copy(this.shadowDepthState),t.shadowBias=this.shadowBias,t.normalOffsetBias=this._normalOffsetBias,t.shadowResolution=this._shadowResolution,t.shadowDistance=this.shadowDistance,t.shadowIntensity=this.shadowIntensity,t.shadowSamples=this.shadowSamples,t.shadowBlockerSamples=this.shadowBlockerSamples,t.penumbraSize=this.penumbraSize,t.penumbraFalloff=this.penumbraFalloff,t}static getLightUnitConversion(t,e=Math.PI/4,s=0){switch(t){case F.GyL:{const t=Math.cos(e),i=Math.cos(s);return 2*Math.PI*(1-i+(i-t)/2)}case F.dGk:return 4*Math.PI;case F.kxh:return 1}}_getUniformBiasValues(t){const e=t.shadowCamera._farClip;switch(this._type){case F.dGk:tu.bias=this.shadowBias,tu.normalBias=this._normalOffsetBias;break;case F.GyL:this._isVsm?tu.bias=-2e-4:tu.bias=20*this.shadowBias,tu.normalBias=this._isVsm?this.vsmBias/(this.attenuationEnd/7):this._normalOffsetBias;break;case F.kxh:this._isVsm?tu.bias=-2e-4:tu.bias=this.shadowBias/e*100,tu.normalBias=this._isVsm?this.vsmBias/(e/7):this._normalOffsetBias}return tu}getColor(){return this._color}getBoundingSphere(t){if(this._type===F.GyL){const e=this.attenuationEnd,s=this._outerConeAngle,i=this._outerConeAngleCos,n=this._node;Jd.copy(n.up),s>45?(t.radius=e*this._outerConeAngleSin,Jd.mulScalar(-e*i)):(t.radius=e/(2*i),Jd.mulScalar(-t.radius)),t.center.add2(n.getPosition(),Jd)}else this._type===F.dGk&&(t.center=this._node.getPosition(),t.radius=this.attenuationEnd)}getBoundingBox(t){if(this._type===F.GyL){const e=this.attenuationEnd,s=this._outerConeAngle,i=this._node,n=Math.abs(Math.sin(s*a.D.DEG_TO_RAD)*e);t.center.set(0,.5*-e,0),t.halfExtents.set(n,.5*e,n),t.setFromTransformedAabb(t,i.getWorldTransform(),!0)}else this._type===F.dGk&&(t.center.copy(this._node.getPosition()),t.halfExtents.set(this.attenuationEnd,this.attenuationEnd,this.attenuationEnd))}_updateShadowBias(){if(this._type!==F.dGk||this.clusteredLighting){const t=-1e3*this.shadowBias;this.shadowDepthState.depthBias=t,this.shadowDepthState.depthBiasSlope=t}else this.shadowDepthState.depthBias=0,this.shadowDepthState.depthBiasSlope=0}_updateLinearColor(){let t=this._intensity;this._usePhysicalUnits&&(t=this._luminance/lu.getLightUnitConversion(this._type,this._outerConeAngle*a.D.DEG_TO_RAD,this._innerConeAngle*a.D.DEG_TO_RAD));const e=this._color,s=this._colorLinear;t>=1?eu.linear(e).mulScalar(t):eu.copy(e).mulScalar(t).linear(),s[0]=eu.r,s[1]=eu.g,s[2]=eu.b,this.updateClusterData(!0)}setColor(){1===arguments.length?this._color.set(arguments[0].r,arguments[0].g,arguments[0].b):3===arguments.length&&this._color.set(arguments[0],arguments[1],arguments[2]),this._updateLinearColor()}layersDirty(){this.layers.forEach(t=>{t.hasLight(this)&&t.markLightsDirty()})}updateKey(){let t=this._type<<29|this._shadowType<<25|this._falloffMode<<23|(0!==this._normalOffsetBias?1:0)<<22|(this._cookie?1:0)<<21|(this._cookieFalloff?1:0)<<20|su[this._cookieChannel.charAt(0)]<<18|(this._cookieTransform?1:0)<<12|this._shape<<10|(this.numCascades>0?1:0)<<9|(this._cascadeBlend>0?1:0)<<8|(this.affectSpecularity?1:0)<<7|this.mask<<6|(this._castShadows?1:0)<<3;3===this._cookieChannel.length&&(t|=su[this._cookieChannel.charAt(1)]<<16,t|=su[this._cookieChannel.charAt(2)]<<14),t!==this.key&&this.layersDirty(),this.key=t}updateClusteredFlags(){const t=!!(this.mask&F.XjC),e=!!(this.mask&F.beI);this.clusteredFlags=(this.type===F.GyL?1:0)<<30|(3&this._shape)<<28|(1&this._falloffMode)<<27|(ru[this._cookieChannel]??0)<<23|(t?1:0)<<22|(e?1:0)<<21}getClusteredFlags(t,e){return this.clusteredFlags|255&(t?Math.floor(255*this.shadowIntensity):0)|(255&(e?Math.floor(255*this.cookieIntensity):0))<<8}updateClusterData(t,e){const{clusteredData16:s}=this,i=vt.float2Half;t&&(s[0]=i(a.D.clamp(this._colorLinear[0]/F.rpD,0,65504)),s[1]=i(a.D.clamp(this._colorLinear[1]/F.rpD,0,65504)),s[2]=i(a.D.clamp(this._colorLinear[2]/F.rpD,0,65504))),e&&(s[4]=i(this._innerConeAngleCos),s[5]=i(this._outerConeAngleCos))}}class hu{constructor(){this.enabled=!0,this.type="directional",this.color=new p.Q(1,1,1),this.intensity=1,this.luminance=0,this.shape=F.j06,this.affectSpecularity=!0,this.castShadows=!1,this.shadowDistance=40,this.shadowIntensity=1,this.shadowResolution=1024,this.shadowBias=.05,this.numCascades=1,this.cascadeBlend=0,this.bakeNumSamples=1,this.bakeArea=0,this.cascadeDistribution=.5,this.normalOffsetBias=0,this.range=10,this.innerConeAngle=40,this.outerConeAngle=45,this.falloffMode=F.$75,this.shadowType=F.Q_7,this.vsmBlurSize=11,this.vsmBlurMode=F.wAR,this.vsmBias=.0025,this.cookieAsset=null,this.cookie=null,this.cookieIntensity=1,this.cookieFalloff=!0,this.cookieChannel="rgb",this.cookieAngle=0,this.cookieScale=null,this.cookieOffset=null,this.shadowUpdateMode=F.M5l,this.mask=1,this.affectDynamic=!0,this.affectLightmapped=!1,this.bake=!1,this.bakeDir=!0,this.isStatic=!1,this.layers=[F.uEK],this.penumbraSize=1,this.penumbraFalloff=1,this.shadowSamples=16,this.shadowBlockerSamples=16}}const cu=Object.keys(new hu);class du extends Ir{get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t,function(t,e){this.onSetEnabled(null,e,t)})}get enabled(){return this.data.enabled}set light(t){this._setValue("light",t)}get light(){return this.data.light}set type(t){this._setValue("type",t,function(t,e){this.system.changeType(this,e,t),this.refreshProperties()})}get type(){return this.data.type}set color(t){this._setValue("color",t,function(t,e){this.light.setColor(t)},!0)}get color(){return this.data.color}set intensity(t){this._setValue("intensity",t,function(t,e){this.light.intensity=t})}get intensity(){return this.data.intensity}set luminance(t){this._setValue("luminance",t,function(t,e){this.light.luminance=t})}get luminance(){return this.data.luminance}set shape(t){this._setValue("shape",t,function(t,e){this.light.shape=t})}get shape(){return this.data.shape}set affectSpecularity(t){this._setValue("affectSpecularity",t,function(t,e){this.light.affectSpecularity=t})}get affectSpecularity(){return this.data.affectSpecularity}set castShadows(t){this._setValue("castShadows",t,function(t,e){this.light.castShadows=t})}get castShadows(){return this.data.castShadows}set shadowDistance(t){this._setValue("shadowDistance",t,function(t,e){this.light.shadowDistance=t})}get shadowDistance(){return this.data.shadowDistance}set shadowIntensity(t){this._setValue("shadowIntensity",t,function(t,e){this.light.shadowIntensity=t})}get shadowIntensity(){return this.data.shadowIntensity}set shadowResolution(t){this._setValue("shadowResolution",t,function(t,e){this.light.shadowResolution=t})}get shadowResolution(){return this.data.shadowResolution}set shadowBias(t){this._setValue("shadowBias",t,function(t,e){this.light.shadowBias=-.01*a.D.clamp(t,0,1)})}get shadowBias(){return this.data.shadowBias}set numCascades(t){this._setValue("numCascades",t,function(t,e){this.light.numCascades=a.D.clamp(Math.floor(t),1,4)})}get numCascades(){return this.data.numCascades}set cascadeBlend(t){this._setValue("cascadeBlend",t,function(t,e){this.light.cascadeBlend=a.D.clamp(t,0,1)})}get cascadeBlend(){return this.data.cascadeBlend}set bakeNumSamples(t){this._setValue("bakeNumSamples",t,function(t,e){this.light.bakeNumSamples=a.D.clamp(Math.floor(t),1,255)})}get bakeNumSamples(){return this.data.bakeNumSamples}set bakeArea(t){this._setValue("bakeArea",t,function(t,e){this.light.bakeArea=a.D.clamp(t,0,180)})}get bakeArea(){return this.data.bakeArea}set cascadeDistribution(t){this._setValue("cascadeDistribution",t,function(t,e){this.light.cascadeDistribution=a.D.clamp(t,0,1)})}get cascadeDistribution(){return this.data.cascadeDistribution}set normalOffsetBias(t){this._setValue("normalOffsetBias",t,function(t,e){this.light.normalOffsetBias=a.D.clamp(t,0,1)})}get normalOffsetBias(){return this.data.normalOffsetBias}set range(t){this._setValue("range",t,function(t,e){this.light.attenuationEnd=t})}get range(){return this.data.range}set innerConeAngle(t){this._setValue("innerConeAngle",t,function(t,e){this.light.innerConeAngle=t})}get innerConeAngle(){return this.data.innerConeAngle}set outerConeAngle(t){this._setValue("outerConeAngle",t,function(t,e){this.light.outerConeAngle=t})}get outerConeAngle(){return this.data.outerConeAngle}set falloffMode(t){this._setValue("falloffMode",t,function(t,e){this.light.falloffMode=t})}get falloffMode(){return this.data.falloffMode}set shadowType(t){this._setValue("shadowType",t,function(t,e){this.light.shadowType=t})}get shadowType(){return this.data.shadowType}set vsmBlurSize(t){this._setValue("vsmBlurSize",t,function(t,e){this.light.vsmBlurSize=t})}get vsmBlurSize(){return this.data.vsmBlurSize}set vsmBlurMode(t){this._setValue("vsmBlurMode",t,function(t,e){this.light.vsmBlurMode=t})}get vsmBlurMode(){return this.data.vsmBlurMode}set vsmBias(t){this._setValue("vsmBias",t,function(t,e){this.light.vsmBias=a.D.clamp(t,0,1)})}get vsmBias(){return this.data.vsmBias}set cookieAsset(t){this._setValue("cookieAsset",t,function(t,e){if(!this._cookieAssetId||!(t instanceof Kn.V&&t.id===this._cookieAssetId||t===this._cookieAssetId))if(this.onCookieAssetRemove(),this._cookieAssetId=null,t instanceof Kn.V)this.data.cookieAsset=t.id,this._cookieAssetId=t.id,this.onCookieAssetAdd(t);else if("number"==typeof t){this._cookieAssetId=t;const e=this.system.app.assets.get(t);e?this.onCookieAssetAdd(e):(this._cookieAssetAdd=!0,this.system.app.assets.on(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this))}})}get cookieAsset(){return this.data.cookieAsset}set cookie(t){this._setValue("cookie",t,function(t,e){this.light.cookie=t})}get cookie(){return this.data.cookie}set cookieIntensity(t){this._setValue("cookieIntensity",t,function(t,e){this.light.cookieIntensity=a.D.clamp(t,0,1)})}get cookieIntensity(){return this.data.cookieIntensity}set cookieFalloff(t){this._setValue("cookieFalloff",t,function(t,e){this.light.cookieFalloff=t})}get cookieFalloff(){return this.data.cookieFalloff}set cookieChannel(t){this._setValue("cookieChannel",t,function(t,e){this.light.cookieChannel=t})}get cookieChannel(){return this.data.cookieChannel}set cookieAngle(t){this._setValue("cookieAngle",t,function(t,e){if(0!==t||null!==this.cookieScale){this._cookieMatrix||(this._cookieMatrix=new w.Z);let e=1,s=1;this.cookieScale&&(e=this.cookieScale.x,s=this.cookieScale.y);const i=Math.cos(t*a.D.DEG_TO_RAD),n=Math.sin(t*a.D.DEG_TO_RAD);this._cookieMatrix.set(i/e,-n/e,n/s,i/s),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null})}get cookieAngle(){return this.data.cookieAngle}set cookieScale(t){this._setValue("cookieScale",t,function(t,e){if(null!==t||0!==this.cookieAngle){this._cookieMatrix||(this._cookieMatrix=new w.Z);const e=t.x,s=t.y,i=Math.cos(this.cookieAngle*a.D.DEG_TO_RAD),n=Math.sin(this.cookieAngle*a.D.DEG_TO_RAD);this._cookieMatrix.set(i/e,-n/e,n/s,i/s),this.light.cookieTransform=this._cookieMatrix}else this.light.cookieTransform=null},!0)}get cookieScale(){return this.data.cookieScale}set cookieOffset(t){this._setValue("cookieOffset",t,function(t,e){this.light.cookieOffset=t},!0)}get cookieOffset(){return this.data.cookieOffset}set shadowUpdateMode(t){this._setValue("shadowUpdateMode",t,function(t,e){this.light.shadowUpdateMode=t},!0)}get shadowUpdateMode(){return this.data.shadowUpdateMode}set mask(t){this._setValue("mask",t,function(t,e){this.light.mask=t})}get mask(){return this.data.mask}set affectDynamic(t){this._setValue("affectDynamic",t,function(t,e){t?this.light.mask|=F.XjC:this.light.mask&=-2,this.light.layersDirty()})}get affectDynamic(){return this.data.affectDynamic}set affectLightmapped(t){this._setValue("affectLightmapped",t,function(t,e){t?(this.light.mask|=F.beI,this.bake&&(this.light.mask&=-5)):(this.light.mask&=-3,this.bake&&(this.light.mask|=F.XEj))})}get affectLightmapped(){return this.data.affectLightmapped}set bake(t){this._setValue("bake",t,function(t,e){t?(this.light.mask|=F.XEj,this.affectLightmapped&&(this.light.mask&=-3)):(this.light.mask&=-5,this.affectLightmapped&&(this.light.mask|=F.beI)),this.light.layersDirty()})}get bake(){return this.data.bake}set bakeDir(t){this._setValue("bakeDir",t,function(t,e){this.light.bakeDir=t})}get bakeDir(){return this.data.bakeDir}set isStatic(t){this._setValue("isStatic",t,function(t,e){this.light.isStatic=t})}get isStatic(){return this.data.isStatic}set layers(t){this._setValue("layers",t,function(t,e){for(let s=0;s<e.length;s++){const t=this.system.app.scene.layers.getLayerById(e[s]);t&&(t.removeLight(this),this.light.removeLayer(t))}for(let s=0;s<t.length;s++){const e=this.system.app.scene.layers.getLayerById(t[s]);e&&(this.enabled&&this.entity.enabled&&(e.addLight(this),this.light.addLayer(e)))}})}get layers(){return this.data.layers}set shadowUpdateOverrides(t){this.light.shadowUpdateOverrides=t}get shadowUpdateOverrides(){return this.light.shadowUpdateOverrides}set shadowSamples(t){this.light.shadowSamples=t}get shadowSamples(){return this.light.shadowSamples}set shadowBlockerSamples(t){this.light.shadowBlockerSamples=t}get shadowBlockerSamples(){return this.light.shadowBlockerSamples}set penumbraSize(t){this.light.penumbraSize=t}get penumbraSize(){return this.light.penumbraSize}set penumbraFalloff(t){this.light.penumbraFalloff=t}get penumbraFalloff(){return this.light.penumbraFalloff}_setValue(t,e,s,i){const n=this.data,r=n[t];(i||r!==e)&&(n[t]=e,s&&s.call(this,e,r))}addLightToLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);e&&(e.addLight(this),this.light.addLayer(e))}}removeLightFromLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);e&&(e.removeLight(this),this.light.removeLayer(e))}}onLayersChanged(t,e){this.enabled&&this.entity.enabled&&this.addLightToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)>=0&&this.enabled&&this.entity.enabled&&(t.addLight(this),this.light.addLayer(t))}onLayerRemoved(t){this.layers.indexOf(t.id)>=0&&(t.removeLight(this),this.light.removeLayer(t))}refreshProperties(){for(let t=0;t<cu.length;t++){const e=cu[t];this[e]=this[e]}this.enabled&&this.entity.enabled&&this.onEnable()}onCookieAssetSet(){let t=!1;"cubemap"!==this._cookieAsset.type||this._cookieAsset.loadFaces||(this._cookieAsset.loadFaces=!0,t=!0),this._cookieAsset.resource&&!t||this.system.app.assets.load(this._cookieAsset),this._cookieAsset.resource&&this.onCookieAssetLoad()}onCookieAssetAdd(t){this._cookieAssetId===t.id&&(this._cookieAsset=t,this.light.enabled&&this.onCookieAssetSet(),this._cookieAsset.on("load",this.onCookieAssetLoad,this),this._cookieAsset.on("remove",this.onCookieAssetRemove,this))}onCookieAssetLoad(){this._cookieAsset&&this._cookieAsset.resource&&(this.cookie=this._cookieAsset.resource)}onCookieAssetRemove(){this._cookieAssetId&&(this._cookieAssetAdd&&(this.system.app.assets.off(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this),this._cookieAssetAdd=!1),this._cookieAsset&&(this._cookieAsset.off("load",this.onCookieAssetLoad,this),this._cookieAsset.off("remove",this.onCookieAssetRemove,this),this._cookieAsset=null),this.cookie=null)}onEnable(){const t=this.system.app.scene,e=t.layers;this.light.enabled=!0,this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this),e&&(this._evtLayerAdded=e.on("add",this.onLayerAdded,this),this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)),this.enabled&&this.entity.enabled&&this.addLightToLayers(),this._cookieAsset&&!this.cookie&&this.onCookieAssetSet()}onDisable(){const t=this.system.app.scene.layers;this.light.enabled=!1,this._evtLayersChanged?.off(),this._evtLayersChanged=null,t&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this.removeLightFromLayers()}onRemove(){this.onDisable(),this.light.destroy(),this.cookieAsset=null}constructor(...t){super(...t),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._cookieAsset=null,this._cookieAssetId=null,this._cookieAssetAdd=!1,this._cookieMatrix=null}}class uu extends Rr{constructor(t){super(t),this.id="light",this.ComponentType=du,this.DataType=hu,this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e){const s={...e};s.type||(s.type=t.data.type),t.data.type=s.type,s.layers&&Array.isArray(s.layers)&&(s.layers=s.layers.slice(0)),s.color&&Array.isArray(s.color)&&(s.color=new p.Q(s.color[0],s.color[1],s.color[2])),s.cookieOffset&&s.cookieOffset instanceof Array&&(s.cookieOffset=new Jt.Z(s.cookieOffset[0],s.cookieOffset[1])),s.cookieScale&&s.cookieScale instanceof Array&&(s.cookieScale=new Jt.Z(s.cookieScale[0],s.cookieScale[1])),s.enable&&(console.warn("WARNING: enable: Property is deprecated. Set enabled property instead."),s.enabled=s.enable),s.shape||(s.shape=F.j06);const i=new lu(this.app.graphicsDevice,this.app.scene.clusteredLightingEnabled);i.type=iu[s.type],i._node=t.entity,t.data.light=i,super.initializeComponentData(t,s,cu)}_onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.light,i=[];let n;for(let r=0;r<cu.length;r++)n=cu[r],"light"!==n&&(s[n]&&s[n].clone?i[n]=s[n].clone():i[n]=s[n]);return this.addComponent(e,i)}changeType(t,e,s){e!==s&&(t.light.type=iu[s])}}class fu{constructor(t){this.items=[],this.length=0,this.loopIndex=-1,this._sortBy=t.sortBy,this._sortHandler=this._doSort.bind(this)}_binarySearch(t){let e=0,s=this.items.length-1;const i=t[this._sortBy];let n,r;for(;e<=s;)n=Math.floor((e+s)/2),r=this.items[n][this._sortBy],r<=i?e=n+1:r>i&&(s=n-1);return e}_doSort(t,e){const s=this._sortBy;return t[s]-e[s]}insert(t){const e=this._binarySearch(t);this.items.splice(e,0,t),this.length++,this.loopIndex>=e&&this.loopIndex++}append(t){this.items.push(t),this.length++}remove(t){const e=this.items.indexOf(t);e<0||(this.items.splice(e,1),this.length--,this.loopIndex>=e&&this.loopIndex--)}sort(){const t=this.loopIndex>=0?this.items[this.loopIndex]:null;this.items.sort(this._sortHandler),null!==t&&(this.loopIndex=this.items.indexOf(t))}}const pu=["x","y","z","w"],mu=[void 0,void 0,Jt.Z,l.e,w.Z];function _u(t,e,s,i){switch(e.type){case"boolean":return!!s;case"number":if("number"==typeof s)return s;if("string"==typeof s){const t=parseInt(s,10);return isNaN(t)?null:t}return"boolean"==typeof s?0+s:null;case"json":{const i={};if(Array.isArray(e.schema)){s&&"object"==typeof s||(s={});for(let n=0;n<e.schema.length;n++){const r=e.schema[n];if(r.name)if(r.array){i[r.name]=[];const e=Array.isArray(s[r.name])?s[r.name]:[];for(let s=0;s<e.length;s++)i[r.name].push(_u(t,r,e[s]))}else{const e=s.hasOwnProperty(r.name)?s[r.name]:r.default;i[r.name]=_u(t,r,e)}}}return i}case"asset":return s instanceof Kn.V?s:"number"==typeof s?t.assets.get(s)||null:"string"==typeof s&&t.assets.get(parseInt(s,10))||null;case"entity":return s instanceof Rt.t?s:"string"==typeof s?t.getEntityFromIndex(s):null;case"rgb":case"rgba":if(s instanceof p.Q)return i instanceof p.Q?(i.copy(s),i):s.clone();if(s instanceof Array&&s.length>=3&&s.length<=4){for(let t=0;t<s.length;t++)if("number"!=typeof s[t])return null;return i||(i=new p.Q),i.r=s[0],i.g=s[1],i.b=s[2],i.a=3===s.length?1:s[3],i}return"string"==typeof s&&/#(?:[0-9a-f]{2}){3,4}/i.test(s)?(i||(i=new p.Q),i.fromString(s),i):null;case"vec2":case"vec3":case"vec4":{const t=parseInt(e.type.slice(3),10),n=mu[t];if(s instanceof n)return i instanceof n?(i.copy(s),i):s.clone();if(s instanceof Array&&s.length===t){for(let t=0;t<s.length;t++)if("number"!=typeof s[t])return null;i||(i=new n);for(let e=0;e<t;e++)i[pu[e]]=s[e];return i}return null}case"curve":if(s){let t;if(s instanceof fh||s instanceof ph)t=s.clone();else{t=new(s.keys[0]instanceof Array?ph:fh)(s.keys),t.type=s.type}return t}}return s}function gu(t,e,s,i){return e.array?s.map((s,n)=>_u(t,e,s,i?i[n]:null)):_u(t,e,s,i)}function vu(t,e,s,i){if(s)for(const n in e){const r=e[n],a=s[n];void 0!==a&&(i[n]=gu(t,r,a,i[n]))}}class Su{static{this.assignAttributesToScript=vu}static{this.attributeToValue=gu}constructor(t){this.scriptType=t,this.index={}}static{this.reservedNames=new Set(["app","entity","enabled","_enabled","_enabledOld","_destroyed","__attributes","__attributesRaw","__scriptType","__executionOrder","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"])}add(t,e){this.index[t]||Su.reservedNames.has(t)||(this.index[t]=e,Object.defineProperty(this.scriptType.prototype,t,{get:function(){return this.__attributes[t]},set:function(s){const i="attr",n=`attr:${t}`,r=this.__attributes[t];let a=r;if(r&&"json"!==e.type&&"entity"!==e.type&&r.clone&&(this.hasEvent(i)||this.hasEvent(n))&&(a=r.clone()),e.array){if(this.__attributes[t]=[],s)for(let o=0,l=s.length;o<l;o++)this.__attributes[t].push(_u(this.app,e,s[o],r?r[o]:null))}else this.__attributes[t]=_u(this.app,e,s,r);this.fire(i,t,this.__attributes[t],a),this.fire(n,this.__attributes[t],a)}}))}remove(t){return!!this.index[t]&&(delete this.index[t],delete this.scriptType.prototype[t],!0)}has(t){return!!this.index[t]}get(t){return this.index[t]||null}}var yu=s(73273),xu=s(85169);class Tu extends xu.e{constructor(t){super(t),this.initScriptType(t)}static get attributes(){return this.hasOwnProperty("__attributes")||(this.__attributes=new Su(this)),this.__attributes}initScript(t){xu.e.prototype.initScript.call(this,t),this.__attributes={},this.__attributesRaw=t.attributes||{}}initScriptType(t){this.initScript(t)}__initializeAttributes(t){if(t||this.__attributesRaw){for(const t in this.__scriptType.attributes.index)this.__attributesRaw&&this.__attributesRaw.hasOwnProperty(t)?this[t]=this.__attributesRaw[t]:this.__attributes.hasOwnProperty(t)||(this.__scriptType.attributes.index[t].hasOwnProperty("default")?this[t]=this.__scriptType.attributes.index[t].default:this[t]=null);this.__attributesRaw=null}}static extend(t){for(const e in t)t.hasOwnProperty(e)&&(this.prototype[e]=t[e])}}class wu extends Ir{static{this.EVENT_CREATE="create"}static{this.EVENT_DESTROY="destroy"}static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_STATE="state"}static{this.EVENT_MOVE="move"}static{this.EVENT_ERROR="error"}constructor(t,e){super(t,e),this._attributeDataMap=new Map,this._scripts=[],this._updateList=new fu({sortBy:"__executionOrder"}),this._postUpdateList=new fu({sortBy:"__executionOrder"}),this._scriptsIndex={},this._destroyedScripts=[],this._destroyed=!1,this._scriptsData=null,this._oldState=!0,this._enabled=!0,this._beingEnabled=!1,this._isLoopingThroughScripts=!1,this._executionOrder=-1,this.on("set_enabled",this._onSetEnabled,this)}set scripts(t){this._scriptsData=t;for(const e in t){if(!t.hasOwnProperty(e))continue;const s=this._scriptsIndex[e];if(s){if("boolean"==typeof t[e].enabled&&(s.once("preInitialize",()=>{this.initializeAttributes(s)}),s.enabled=!!t[e].enabled),"object"==typeof t[e].attributes)for(const i in t[e].attributes)if(!Su.reservedNames.has(i)){if(!s.__attributes.hasOwnProperty(i)){const t=this.system.app.scripts.get(e);t&&t.attributes.add(i,{})}s[i]=t[e].attributes[i]}}else console.log(this.order)}}get scripts(){return this._scripts}set enabled(t){const e=this._enabled;this._enabled=t,this.fire("set","enabled",e,t)}get enabled(){return this._enabled}onEnable(){this._beingEnabled=!0,this._checkState(),this.entity._beingEnabled||this.onPostStateChange(),this._beingEnabled=!1}onDisable(){this._checkState()}onPostStateChange(){const t=this._beginLooping();for(let e=0,s=this.scripts.length;e<s;e++){const t=this.scripts[e];t._initialized&&!t._postInitialized&&t.enabled&&(t._postInitialized=!0,t.postInitialize&&this._scriptMethod(t,yu.k5))}this._endLooping(t)}_beginLooping(){const t=this._isLoopingThroughScripts;return this._isLoopingThroughScripts=!0,t}_endLooping(t){this._isLoopingThroughScripts=t,this._isLoopingThroughScripts||this._removeDestroyedScripts()}_onSetEnabled(t,e,s){this._beingEnabled=!0,this._checkState(),this._beingEnabled=!1}_checkState(){const t=this.enabled&&this.entity.enabled;if(t===this._oldState)return;this._oldState=t,this.fire(t?"enable":"disable"),this.fire("state",t),t?this.system._addComponentToEnabled(this):this.system._removeComponentFromEnabled(this);const e=this._beginLooping();for(let s=0,i=this.scripts.length;s<i;s++){const t=this.scripts[s];t.once("preInitialize",()=>{this.initializeAttributes(t)}),t.enabled=t._enabled}this._endLooping(e)}_onBeforeRemove(){this.fire("remove");const t=this._beginLooping();for(let e=0;e<this.scripts.length;e++){const t=this.scripts[e];t&&this.destroy(t.__scriptType.__name)}this._endLooping(t)}_removeDestroyedScripts(){const t=this._destroyedScripts.length;if(t){for(let e=0;e<t;e++){const t=this._destroyedScripts[e];this._removeScriptInstance(t)}this._destroyedScripts.length=0,this._resetExecutionOrder(0,this._scripts.length)}}_onInitializeAttributes(){for(let t=0,e=this.scripts.length;t<e;t++){const e=this.scripts[t];this.initializeAttributes(e)}}initializeAttributes(t){if(t instanceof Tu)t.__initializeAttributes();else{const e=t.__scriptType.__name,s=this._attributeDataMap.get(e);if(!s)return;const i=this.system.app.scripts?.getSchema(e);vu(this.system.app,i.attributes,s,t)}}_scriptMethod(t,e,s){t[e](s)}_onInitialize(){const t=this._scripts,e=this._beginLooping();for(let s=0,i=t.length;s<i;s++){const e=t[s];!e._initialized&&e.enabled&&(e._initialized=!0,e.initialize&&this._scriptMethod(e,yu.$x))}this._endLooping(e)}_onPostInitialize(){this.onPostStateChange()}_onUpdate(t){const e=this._updateList;if(!e.length)return;const s=this._beginLooping();for(e.loopIndex=0;e.loopIndex<e.length;e.loopIndex++){const s=e.items[e.loopIndex];s.enabled&&this._scriptMethod(s,yu.Wx,t)}this._endLooping(s)}_onPostUpdate(t){const e=this._postUpdateList;if(!e.length)return;const s=this._beginLooping();for(e.loopIndex=0;e.loopIndex<e.length;e.loopIndex++){const s=e.items[e.loopIndex];s.enabled&&this._scriptMethod(s,yu.ZP,t)}this._endLooping(s)}_insertScriptInstance(t,e,s){-1===e?(this._scripts.push(t),t.__executionOrder=s,t.update&&this._updateList.append(t),t.postUpdate&&this._postUpdateList.append(t)):(this._scripts.splice(e,0,t),t.__executionOrder=e,this._resetExecutionOrder(e+1,s+1),t.update&&this._updateList.insert(t),t.postUpdate&&this._postUpdateList.insert(t))}_removeScriptInstance(t){const e=this._scripts.indexOf(t);return-1===e||(this._scripts.splice(e,1),t.update&&this._updateList.remove(t),t.postUpdate&&this._postUpdateList.remove(t)),e}_resetExecutionOrder(t,e){for(let s=t;s<e;s++)this._scripts[s].__executionOrder=s}_resolveEntityScriptAttribute(t,e,s,i,n,r){if(t.array){const t=s.length;if(!t)return;const a=s.slice();for(let e=0;e<t;e++){const t=a[e]instanceof as.w?a[e].getGuid():a[e];r[t]&&(a[e]=i?r[t].getGuid():r[t])}n[e]=a}else{if(s instanceof as.w)s=s.getGuid();else if("string"!=typeof s)return;r[s]&&(n[e]=r[s])}}has(t){if("string"==typeof t)return!!this._scriptsIndex[t];if(!t)return!1;const e=t,s=e.__name,i=this._scriptsIndex[s];return(i&&i.instance)instanceof e}get(t){if("string"==typeof t){const e=this._scriptsIndex[t];return e?e.instance:null}if(!t)return null;const e=t,s=e.__name,i=this._scriptsIndex[s],n=i&&i.instance;return n instanceof e?n:null}create(t,e={}){const s=this;let i=t,n=t;if("string"==typeof i)i=this.system.app.scripts.get(i);else if(i){const t=(0,xu.t)(i),e=(r=t)[0].toLowerCase()+r.substring(1);i.prototype instanceof Tu||i.scriptName,i.__name??=i.scriptName??e,n=i.__name}var r;if(i){if(!this._scriptsIndex[n]||!this._scriptsIndex[n].instance){const t=new i({app:this.system.app,entity:this.entity,enabled:!e.hasOwnProperty("enabled")||e.enabled,attributes:e.attributes||{}});e.properties&&"object"==typeof e.properties&&Object.assign(t,e.properties),t instanceof Tu||!e.attributes||this._attributeDataMap.set(n,{...e.attributes});const r=this._scripts.length;let a=-1;return"number"==typeof e.ind&&-1!==e.ind&&r>e.ind&&(a=e.ind),this._insertScriptInstance(t,a,r),this._scriptsIndex[n]={instance:t,onSwap:function(){s.swap(n)}},this[n]=t,e.preloading||this.initializeAttributes(t),this.fire("create",n,t),this.fire(`create:${n}`,t),this.system.app.scripts.on(`swap:${n}`,this._scriptsIndex[n].onSwap),e.preloading||(t.enabled&&!t._initialized&&(t._initialized=!0,t.initialize&&this._scriptMethod(t,yu.$x)),t.enabled&&!t._postInitialized&&(t._postInitialized=!0,t.postInitialize&&this._scriptMethod(t,yu.k5))),t}}else this._scriptsIndex[n]={awaiting:!0,ind:this._scripts.length};return null}destroy(t){let e=t,s=t;"string"==typeof s?s=this.system.app.scripts.get(s):s&&(e=s.__name);const i=this._scriptsIndex[e];if(delete this._scriptsIndex[e],!i)return!1;this._attributeDataMap.delete(e);const n=i.instance;if(n&&!n._destroyed)if(n.enabled=!1,n._destroyed=!0,this._isLoopingThroughScripts)this._destroyedScripts.push(n);else{const t=this._removeScriptInstance(n);t>=0&&this._resetExecutionOrder(t,this._scripts.length)}return this.system.app.scripts.off(`swap:${e}`,i.onSwap),delete this[e],this.fire("destroy",e,n||null),this.fire(`destroy:${e}`,n||null),n&&n.fire("destroy"),!0}swap(t){let e=t,s=t;"string"==typeof s?s=this.system.app.scripts.get(s):s&&(e=s.__name);const i=this._scriptsIndex[e];if(!i||!i.instance)return!1;const n=i.instance,r=this._scripts.indexOf(n),a=new s({app:this.system.app,entity:this.entity,enabled:n.enabled,attributes:n.__attributes});return!!a.swap&&(this.initializeAttributes(a),this._scripts[r]=a,this._scriptsIndex[e].instance=a,this[e]=a,a.__executionOrder=r,n.update&&this._updateList.remove(n),n.postUpdate&&this._postUpdateList.remove(n),a.update&&this._updateList.insert(a),a.postUpdate&&this._postUpdateList.insert(a),this._scriptMethod(a,yu.qK,n),this.fire("swap",e,a),this.fire(`swap:${e}`,a),!0)}resolveDuplicatedEntityReferenceProperties(t,e){const s=this.entity.script;for(const i in t._scriptsIndex){const n=this.system.app.scripts.get(i);if(!n)continue;const r=t._scriptsIndex[i];if(!r||!r.instance)continue;const a=s[i].__attributesRaw??s._attributeDataMap.get(i),o=s[i].__attributes;if(!a&&!o)continue;const l=!!a,h=r.instance.__attributes??s._attributeDataMap.get(i);for(const t in h){if(!h[t])continue;const s=n.attributes?.get(t)??this.system.app.scripts.getSchema(i)?.attributes?.[t];if(s)if("entity"===s.type)this._resolveEntityScriptAttribute(s,t,h[t],l,a||o,e);else if("json"===s.type&&Array.isArray(s.schema)){const i=h[t],n=a?a[t]:o[t];for(let t=0;t<s.schema.length;t++){const r=s.schema[t];if("entity"===r.type)if(s.array)for(let t=0;t<i.length;t++)this._resolveEntityScriptAttribute(r,r.name,i[t][r.name],l,n[t],e);else this._resolveEntityScriptAttribute(r,r.name,i[r.name],l,n,e)}}}}}move(t,e){const s=this._scripts.length;if(e>=s||e<0)return!1;let i=t,n=t;"string"!=typeof n?n=t.__name:i=null;const r=this._scriptsIndex[n];if(!r||!r.instance)return!1;const a=r.instance;if(i&&!(a instanceof i))return!1;const o=this._scripts.indexOf(a);return-1!==o&&o!==e&&(this._scripts.splice(e,0,this._scripts.splice(o,1)[0]),this._resetExecutionOrder(0,s),this._updateList.sort(),this._postUpdateList.sort(),this.fire("move",n,a,e,o),this.fire(`move:${n}`,a,e,o),!0)}}class bu{constructor(){this.enabled=!0}}let Eu=0;class Au extends Rr{constructor(t){super(t),this.id="script",this.ComponentType=wu,this.DataType=bu,this._components=new fu({sortBy:"_executionOrder"}),this._enabledComponents=new fu({sortBy:"_executionOrder"}),this.preloading=!0,this.on("beforeremove",this._onBeforeRemove,this),this.app.systems.on("initialize",this._onInitialize,this),this.app.systems.on("postInitialize",this._onPostInitialize,this),this.app.systems.on("update",this._onUpdate,this),this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e){if(t._executionOrder=Eu++,this._components.append(t),Eu>Number.MAX_SAFE_INTEGER&&this._resetExecutionOrder(),t.enabled=!e.hasOwnProperty("enabled")||!!e.enabled,t.enabled&&t.entity.enabled&&this._enabledComponents.append(t),e.hasOwnProperty("order")&&e.hasOwnProperty("scripts")){t._scriptsData=e.scripts;for(let s=0;s<e.order.length;s++)t.create(e.order[s],{enabled:e.scripts[e.order[s]].enabled,attributes:e.scripts[e.order[s]].attributes,preloading:this.preloading})}}cloneComponent(t,e){const s=[],i={};for(let r=0;r<t.script._scripts.length;r++){const e=t.script._scripts[r],n=e.__scriptType.__name;s.push(n);const a=t.script._attributeDataMap?.get(n)||{};for(const t in e.__attributes)a[t]=e.__attributes[t];i[n]={enabled:e._enabled,attributes:a}}for(const r in t.script._scriptsIndex)r.awaiting&&s.splice(r.ind,0,r);const n={enabled:t.script.enabled,order:s,scripts:i};return this.addComponent(e,n)}_resetExecutionOrder(){Eu=0;for(let t=0,e=this._components.length;t<e;t++)this._components.items[t]._executionOrder=Eu++}_callComponentMethod(t,e,s){for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++)t.items[t.loopIndex][e](s)}_onInitialize(){this.preloading=!1,this._callComponentMethod(this._components,"_onInitializeAttributes"),this._callComponentMethod(this._enabledComponents,"_onInitialize")}_onPostInitialize(){this._callComponentMethod(this._enabledComponents,"_onPostInitialize")}_onUpdate(t){this._callComponentMethod(this._enabledComponents,"_onUpdate",t)}_onPostUpdate(t){this._callComponentMethod(this._enabledComponents,"_onPostUpdate",t)}_addComponentToEnabled(t){this._enabledComponents.insert(t)}_removeComponentFromEnabled(t){this._enabledComponents.remove(t)}_onBeforeRemove(t,e){this._components.items.indexOf(e)>=0&&e._onBeforeRemove(),this._removeComponentFromEnabled(e),this._components.remove(e)}destroy(){super.destroy(),this.app.systems.off("initialize",this._onInitialize,this),this.app.systems.off("postInitialize",this._onPostInitialize,this),this.app.systems.off("update",this._onUpdate,this),this.app.systems.off("postUpdate",this._onPostUpdate,this)}}class Cu{constructor(t){this.texture=null,this.rt=null,this.intervalsDataTexture=null,this.shader=null,this.device=t}destroy(){this.texture?.destroy(),this.texture=null,this.rt?.destroy(),this.rt=null,this.intervalsDataTexture?.destroy(),this.intervalsDataTexture=null,this.shader=null}getShader(){return this.shader||(this.shader=V.createShader(this.device,{uniqueName:"GSplatIntervalsShader",attributes:{aPosition:x.JYe},vertexChunk:"quadVS",fragmentGLSL:"\nprecision highp usampler2D;\nuniform usampler2D uIntervalsTexture;\nuniform int uNumIntervals;\nuniform int uTextureWidth;\nuniform int uActiveSplats;\nivec2 getCoordFromIndex(int index, int textureWidth) {\n\treturn ivec2(index % textureWidth, index / textureWidth);\n}\nvoid main() {\n\tivec2 coord = ivec2(gl_FragCoord.xy);\n\tint targetIndex = coord.y * uTextureWidth + coord.x;\n\t\n\tif (targetIndex >= uActiveSplats) {\n\t\tgl_FragColor = 0u;\n\t\treturn;\n\t}\n\t\n\tint left = 0;\n\tint right = uNumIntervals - 1;\n\tint intervalIndex = 0;\n\t\n\twhile (left <= right) {\n\t\tint mid = (left + right) / 2;\n\t\t\n\t\tint textureWidth = textureSize(uIntervalsTexture, 0).x;\n\t\tivec2 intervalCoord = getCoordFromIndex(mid, textureWidth);\n\t\tuvec2 intervalData = texelFetch(uIntervalsTexture, intervalCoord, 0).rg;\n\t\t\n\t\tuint accumulatedSum = intervalData.g;\n\t\t\n\t\tif (uint(targetIndex) < accumulatedSum) {\n\t\t\tintervalIndex = mid;\n\t\t\tright = mid - 1;\n\t\t} else {\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\t\n\tint textureWidth = textureSize(uIntervalsTexture, 0).x;\n\tivec2 intervalCoord = getCoordFromIndex(intervalIndex, textureWidth);\n\tuvec2 intervalData = texelFetch(uIntervalsTexture, intervalCoord, 0).rg;\n\t\n\tuint intervalStart = intervalData.r;\n\tuint currentAccSum = intervalData.g;\n\t\n\tuint prevAccSum = 0u;\n\tif (intervalIndex > 0) {\n\t\tivec2 prevCoord = getCoordFromIndex(intervalIndex - 1, textureWidth);\n\t\tprevAccSum = texelFetch(uIntervalsTexture, prevCoord, 0).g;\n\t}\n\t\n\tuint offsetInInterval = uint(targetIndex) - prevAccSum;\n\tuint originalIndex = intervalStart + offsetInInterval;\n\t\n\tgl_FragColor = originalIndex;\n}\n",fragmentWGSL:"\nvar uIntervalsTexture: texture_2d<u32>;\nuniform uNumIntervals: i32;\nuniform uTextureWidth: i32;\nuniform uActiveSplats: i32;\nfn getCoordFromIndex(index: i32, textureWidth: i32) -> vec2i {\n\treturn vec2i(index % textureWidth, index / textureWidth);\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\t\n\tlet coord = vec2i(i32(input.position.x), i32(input.position.y));\n\tlet targetIndex = coord.y * uniform.uTextureWidth + coord.x;\n\t\n\tif (targetIndex >= uniform.uActiveSplats) {\n\t\toutput.color = 0u;\n\t\treturn output;\n\t}\n\t\n\tvar left = 0i;\n\tvar right = uniform.uNumIntervals - 1;\n\tvar intervalIndex = 0i;\n\t\n\twhile (left <= right) {\n\t\tlet mid = (left + right) / 2;\n\t\t\n\t\tlet textureWidth = i32(textureDimensions(uIntervalsTexture, 0).x);\n\t\tlet intervalCoord = getCoordFromIndex(mid, textureWidth);\n\t\tlet intervalData = textureLoad(uIntervalsTexture, intervalCoord, 0).rg;\n\t\t\n\t\tlet accumulatedSum = intervalData.g;\n\t\t\n\t\tif (u32(targetIndex) < accumulatedSum) {\n\t\t\tintervalIndex = mid;\n\t\t\tright = mid - 1;\n\t\t} else {\n\t\t\tleft = mid + 1;\n\t\t}\n\t}\n\t\n\tlet textureWidth = i32(textureDimensions(uIntervalsTexture, 0).x);\n\tlet intervalCoord = getCoordFromIndex(intervalIndex, textureWidth);\n\tlet intervalData = textureLoad(uIntervalsTexture, intervalCoord, 0).rg;\n\t\n\tlet intervalStart = intervalData.r;\n\tlet currentAccSum = intervalData.g;\n\t\n\tvar prevAccSum = 0u;\n\tif (intervalIndex > 0) {\n\t\tlet prevCoord = getCoordFromIndex(intervalIndex - 1, textureWidth);\n\t\tprevAccSum = textureLoad(uIntervalsTexture, prevCoord, 0).g;\n\t}\n\t\n\tlet offsetInInterval = u32(targetIndex) - prevAccSum;\n\tlet originalIndex = intervalStart + offsetInInterval;\n\t\n\toutput.color = originalIndex;\n\treturn output;\n}\n",fragmentOutputTypes:["uint"]})),this.shader}createTexture(t,e,s,i){return new Q.g(this.device,{name:t,width:s,height:i,format:e,cubemap:!1,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6})}update(t){if(!t||0===t.length)return 0;let e=0;for(let c=0;c<t.length;c+=2){const s=t[c];e+=t[c+1]-s}const s=this.device.maxTextureSize;let i=Math.ceil(Math.sqrt(e));i=Math.min(i,s);const n=Math.ceil(e/i);this.texture||(this.texture=this.createTexture("intervalsTexture",x.zc3,i,n)),this.rt||(this.rt=new T.O({colorBuffer:this.texture,depth:!1})),this.rt.width===i&&this.rt.height===n||this.rt.resize(i,n);const r=t.length/2,a=Math.ceil(Math.sqrt(r));this.intervalsDataTexture||(this.intervalsDataTexture=this.createTexture("intervalsData",x.EYT,a,a)),this.intervalsDataTexture.width!==a&&this.intervalsDataTexture.resize(a,a);const o=this.intervalsDataTexture.lock();let l=0;for(let c=0;c<r;c++){const e=t[2*c];l+=t[2*c+1]-e,o[2*c]=e,o[2*c+1]=l}this.intervalsDataTexture.unlock();const h=this.device.scope;return h.resolve("uIntervalsTexture").setValue(this.intervalsDataTexture),h.resolve("uNumIntervals").setValue(r),h.resolve("uTextureWidth").setValue(i),h.resolve("uActiveSplats").setValue(e),this.device.setCullMode(x.pLF),this.device.setBlendState(re.t.NOBLEND),this.device.setDepthState(q.H.NODEPTH),Z(this.device,this.rt,this.getShader()),e}}class Pu{constructor(t,e,s){this.activeSplats=0,this.intervals=[],this.lineStart=0,this.lineCount=0,this.padding=0,this.viewport=new w.Z,this.previousWorldTransform=new o.$,this.aabb=new y,this.device=t,this.resource=e,this.node=s.node,this.lodIndex=s.lodIndex,this.numSplats=e.centers.length/3,this.aabb.copy(s.aabb),this.intervalTexture=new Cu(t),this.updateIntervals(s.intervals)}destroy(){this.intervals.length=0,this.intervalTexture.destroy()}setLines(t,e,s,i){this.lineStart=t,this.lineCount=e,this.padding=s*e-i,this.viewport.set(0,t,s,e)}updateIntervals(t){const e=this.resource;if(this.intervals.length=0,this.activeSplats=e.numSplats,t.size>0){for(const e of t.values())this.intervals.push(e.x,e.y+1);this.activeSplats=this.intervalTexture.update(this.intervals)}}update(){const t=this.node.getWorldTransform(),e=!this.previousWorldTransform.equals(t);return e&&this.previousWorldTransform.copy(t),e}}function Du(){const t="undefined"!=typeof self&&self||require("node:worker_threads").parentPort,e=new Map;let s,i,n;const r=(s,r,a)=>{const{minDist:o,maxDist:l}=(t=>{let e=1/0,s=-1/0;for(let i=0;i<t.length;i++){const n=t[i],{transformedDirection:r,offset:a,scale:o,aabbMin:l,aabbMax:h}=n,c=r.x,d=r.y,u=r.z,f=((c>=0?l[0]:h[0])*c+(d>=0?l[1]:h[1])*d+(u>=0?l[2]:h[2])*u)*o+a,p=((c>=0?h[0]:l[0])*c+(d>=0?h[1]:l[1])*d+(u>=0?h[2]:l[2])*u)*o+a,m=Math.min(f,p),_=Math.max(f,p);m<e&&(e=m),_>s&&(s=_)}return e===1/0&&(e=0,s=0),{minDist:e,maxDist:s}})(s),h=a.totalUsedPixels,c=Math.max(10,Math.min(20,Math.round(Math.log2(h/4)))),d=2**c+1;i?.length!==h&&(i=new Uint32Array(h)),n&&n.length===d?n.fill(0):n=new Uint32Array(d);const u=l-o;((t,s,i,n,r,a)=>{const{ids:o,lineStarts:l,padding:h,intervals:c,textureSize:d}=a;for(let u=0;u<t.length;u++){const a=t[u],{transformedDirection:f,offset:p,scale:m}=a,_=f.x*m*i,g=f.y*m*i,v=f.z*m*i,S=(p-s)*i,y=o[u],x=e.get(y);x||console.error("UnifiedSortWorker: No centers found for id",y);let T=l[u]*d;const w=c[u].length>0?c[u]:[0,x.length/3];for(let t=0;t<w.length;t+=2){const e=3*w[t],s=3*w[t+1];for(let t=e;t<s;t+=3){const e=x[t],s=x[t+1],i=x[t+2],a=Math.floor(e*_+s*g+i*v+S);n[T++]=a,r[a]++}}const b=h[u];r[0]+=b,n.fill(0,T,T+b),T+=b}})(s,o,u<1e-6?0:1/u*2**c,i,n,a),((t,e,s,i,n)=>{for(let r=1;r<t;r++)e[r]+=e[r-1];for(let r=0;r<s;r++)n[--e[i[r]]]=r})(d,n,h,i,r);const f=h,p=[r.buffer],m={order:r.buffer,count:f,version:a.version};t.postMessage(m,p)};t.addEventListener("message",t=>{const i=t.data??t;switch(i.command){case"addCenters":e.set(i.id,new Float32Array(i.centers));break;case"removeCenters":e.delete(i.id);break;case"sort":{const t=new Uint32Array(i.order);r(i.sortParams,t,s);break}case"intervals":s=i}})}class Lu extends r.J{constructor(){super(),this.bufferLength=0,this.availableOrderData=[],this.jobsInFlight=0,this.hasNewVersion=!1,this.centersSet=new Set;const t=`(${Du.toString()})()`;"node"===i.i.environment?(this.worker=new Worker(t,{eval:!0}),this.worker.on("message",this.onSorted.bind(this))):(this.worker=new Worker(URL.createObjectURL(new Blob([t],{type:"application/javascript"}))),this.worker.addEventListener("message",this.onSorted.bind(this)))}onSorted(t){const e=t.data??t,s=new Uint32Array(e.order);this.jobsInFlight--,this.fire("sorted",e.count,e.version,s),s.length===this.bufferLength&&this.availableOrderData.push(s)}destroy(){this.worker.terminate(),this.worker=null}setCenters(t,e){if(e){if(!this.centersSet.has(t)){this.centersSet.add(t);const s=e.buffer.slice();this.worker.postMessage({command:"addCenters",id:t,centers:s},[s])}}else this.centersSet.has(t)&&(this.centersSet.delete(t),this.worker.postMessage({command:"removeCenters",id:t}))}setSortParameters(t){this.hasNewVersion=!0;const{textureSize:e}=t,s=e*e;s!==this.bufferLength&&(this.bufferLength=s,this.availableOrderData.length=0),this.worker.postMessage(t)}setSortParams(t){if(this.hasNewVersion||0===this.jobsInFlight){let e=this.availableOrderData.pop();e||(e=new Uint32Array(this.bufferLength)),this.jobsInFlight++,this.hasNewVersion=!1,this.worker.postMessage({command:"sort",sortParams:t,order:e.buffer},[e.buffer])}}}const Mu=new o.$;class Iu extends j.A{init(t){super.init(t),this.colorOps.clear=!1,this.depthStencilOps.clearDepth=!1}update(t,e){this.splats.length=0;for(let s=0;s<t.length;s++){const e=t[s];e.activeSplats>0&&this.splats.push(e)}return this.cameraNode=e,this.splats.length>0}execute(){const{device:t,splats:e,cameraNode:s}=this;t.setBlendState(re.t.NOBLEND),t.setCullMode(x.pLF),t.setDepthState(q.H.NODEPTH),t.setStencilState();const i=s.getWorldTransform(),n=Mu.copy(i).invert();t.scope.resolve("matrix_view").setValue(n.data);for(let r=0;r<e.length;r++)this.renderSplat(e[r])}renderSplat(t){const{device:e,resource:s}=t,i=e.scope,{intervals:n,activeSplats:r,lineStart:a,viewport:o,intervalTexture:l}=t,h=s.getWorkBufferRenderInfo(n.length>0,false);h.material.setParameters(e),i.resolve("uTransform").setValue(t.node.getWorldTransform().data),l.texture&&i.resolve("uIntervalsTexture").setValue(l.texture),i.resolve("uActiveSplats").setValue(r),i.resolve("uStartLine").setValue(a),i.resolve("uViewportWidth").setValue(o.z),i.resolve("matrix_model").setValue(t.node.getWorldTransform().data),h.quadRender.render(o)}destroy(){this.splats.length=0,super.destroy()}constructor(...t){super(...t),this.splats=[]}}let Ru=0;class Fu{constructor(t){this.id=Ru++,this.device=t,this.colorTexture=this.createTexture("splatColor",x.WBN,1,1),this.covATexture=this.createTexture("covA",x.WBN,1,1),this.covBTexture=this.createTexture("covB",x.WBN,1,1),this.centerTexture=this.createTexture("center",x.WBN,1,1),this.renderTarget=new T.O({name:`GsplatWorkBuffer-MRT-${this.id}`,colorBuffers:[this.colorTexture,this.centerTexture,this.covATexture,this.covBTexture],depth:!1,flipY:!0}),this.orderTexture=this.createTexture("SplatGlobalOrder",x.zc3,1,1),this.renderPass=new Iu(t),this.renderPass.init(this.renderTarget)}destroy(){this.renderPass?.destroy(),this.colorTexture?.destroy(),this.covATexture?.destroy(),this.covBTexture?.destroy(),this.centerTexture?.destroy(),this.orderTexture?.destroy(),this.renderTarget?.destroy()}get textureSize(){return this.orderTexture.width}setOrderData(t){this.orderTexture.width,this.orderTexture.height;t.length,this.orderTexture._levels[0]=t,this.orderTexture.upload()}createTexture(t,e,s,i){return new Q.g(this.device,{name:t,width:s,height:i,format:e,cubemap:!1,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6})}resize(t){this.renderTarget.resize(t,t),this.orderTexture.resize(t,t)}render(t,e){this.renderPass.update(t,e)&&this.renderPass.render()}}let Ou=0;const Nu=new Map;class ku{constructor(t,e,s){this.device=t,this.material=s;const i=new Map(s.defines),n=V.createShader(this.device,{uniqueName:`SplatCopyToWorkBuffer:${e}`,attributes:{vertex_position:x.JYe},vertexDefines:i,fragmentDefines:i,vertexChunk:"fullscreenQuadVS",fragmentGLSL:'\n#define GSPLAT_CENTER_NOPROJ\n#include "gsplatStructsVS"\n#include "gsplatCenterVS"\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#include "gsplatSourceFormatVS"\nuniform mat4 uTransform;\nuniform int uStartLine;\nuniform int uViewportWidth;\n#ifdef GSPLAT_LOD\n\tuniform usampler2D uIntervalsTexture;\n#endif\n#ifdef GSPLAT_COLORIZE\n\tuniform vec3 uLodColor;\n#endif\nuniform int uActiveSplats;\nvoid main(void) {\n\tivec2 localFragCoords = ivec2(int(gl_FragCoord.x), int(gl_FragCoord.y) - uStartLine);\n\tint targetIndex = localFragCoords.y * uViewportWidth + localFragCoords.x;\n\tif (targetIndex >= uActiveSplats) {\n\t\tpcFragColor0 = vec4(0.0);\n\t\tpcFragColor1 = vec4(0.0);\n\t\tpcFragColor2 = vec4(0.0);\n\t\tpcFragColor3 = vec4(0.0);\n\t} else {\n\t\t#ifdef GSPLAT_LOD\n\t\t\tint intervalsSize = int(textureSize(uIntervalsTexture, 0).x);\n\t\t\tivec2 intervalUV = ivec2(targetIndex % intervalsSize, targetIndex / intervalsSize);\n\t\t\tuint originalIndex = texelFetch(uIntervalsTexture, intervalUV, 0).r;\n\t\t#else\n\t\t\tuint originalIndex = uint(targetIndex);\n\t\t#endif\n\t\t\n\t\t#if defined(GSPLAT_SOGS_DATA) || defined(GSPLAT_COMPRESSED_DATA)\n\t\t\tuint srcSize = uint(textureSize(packedTexture, 0).x);\n\t\t#else\n\t\t\tuint srcSize = uint(textureSize(splatColor, 0).x);\n\t\t#endif\n\t\t\n\t\tSplatSource source;\n\t\tsource.id = uint(originalIndex);\n\t\tsource.uv = ivec2(source.id % srcSize, source.id / srcSize);\n\t\tvec3 modelCenter = readCenter(source);\n\t\tmodelCenter = (uTransform * vec4(modelCenter, 1.0)).xyz;\n\t\tSplatCenter center;\n\t\tinitCenter(modelCenter, center);\n\t\tvec3 covA, covB;\n\t\treadCovariance(source, covA, covB);\n\t\tmat3 C = mat3(\n\t\t\tcovA.x, covA.y, covA.z,\n\t\t\tcovA.y, covB.x, covB.y,\n\t\t\tcovA.z, covB.y, covB.z\n\t\t);\n\t\tmat3 linear = mat3(uTransform);\n\t\tmat3 Ct = linear * C * transpose(linear);\n\t\tcovA = Ct[0];\n\t\tcovB = vec3(Ct[1][1], Ct[1][2], Ct[2][2]);\n\t\tvec4 color = readColor(source);\n\t\t#if SH_BANDS > 0\n\t\t\tvec3 dir = normalize(center.view * mat3(center.modelView));\n\t\t\tvec3 sh[SH_COEFFS];\n\t\t\tfloat scale;\n\t\t\treadSHData(source, sh, scale);\n\t\t\tcolor.xyz += evalSH(sh, dir) * scale;\n\t\t#endif\n\t\t#ifdef GSPLAT_COLORIZE\n\t\t\tcolor.xyz *= uLodColor;\n\t\t#endif\n\t\tpcFragColor0 = color;\n\t\tpcFragColor1 = vec4(modelCenter, 1.0);\n\t\tpcFragColor2 = vec4(covA, 1.0);\n\t\tpcFragColor3 = vec4(covB, 1.0);\n\t}\n}\n',fragmentWGSL:'\n#define GSPLAT_CENTER_NOPROJ\n#include "gsplatStructsVS"\n#include "gsplatCenterVS"\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#include "gsplatSourceFormatVS"\nuniform uTransform: mat4x4f;\nuniform uStartLine: i32;\nuniform uViewportWidth: i32;\n#ifdef GSPLAT_LOD\n\tvar uIntervalsTexture: texture_2d<u32>;\n#endif\n#ifdef GSPLAT_COLORIZE\n\tuniform uLodColor: vec3f;\n#endif\nuniform uActiveSplats: i32;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\t\n\tlet localFragCoords = vec2i(i32(input.position.x), i32(input.position.y) - uniform.uStartLine);\n\tlet targetIndex = localFragCoords.y * uniform.uViewportWidth + localFragCoords.x;\n\t\n\tif (targetIndex >= uniform.uActiveSplats) {\n\t\toutput.color = vec4f(0.0);\n\t\toutput.color1 = vec4f(0.0);\n\t\toutput.color2 = vec4f(0.0);\n\t\toutput.color3 = vec4f(0.0);\n\t} else {\n\t\t#ifdef GSPLAT_LOD\n\t\t\tlet intervalsSize = i32(textureDimensions(uIntervalsTexture, 0).x);\n\t\t\tlet intervalUV = vec2i(targetIndex % intervalsSize, targetIndex / intervalsSize);\n\t\t\tlet originalIndex = textureLoad(uIntervalsTexture, intervalUV, 0).r;\n\t\t#else\n\t\t\tlet originalIndex = targetIndex;\n\t\t#endif\n\t\t\n\t\tvar srcSize: u32;\n\t\t#if defined(GSPLAT_SOGS_DATA) || defined(GSPLAT_COMPRESSED_DATA)\n\t\t\tsrcSize = u32(textureDimensions(packedTexture, 0).x);\n\t\t#else\n\t\t\tsrcSize = u32(textureDimensions(splatColor, 0).x);\n\t\t#endif\n\t\t\n\t\tvar source: SplatSource;\n\t\tsource.id = u32(originalIndex);\n\t\tsource.uv = vec2i(i32(source.id % srcSize), i32(source.id / srcSize));\n\t\tvar modelCenter = readCenter(&source);\n\t\tmodelCenter = (uniform.uTransform * vec4f(modelCenter, 1.0)).xyz;\n\t\tvar center: SplatCenter;\n\t\tinitCenter(modelCenter, &center);\n\t\tvar covA: vec3f;\n\t\tvar covB: vec3f;\n\t\treadCovariance(&source, &covA, &covB);\n\t\tlet C = mat3x3f(\n\t\t\tvec3f(covA.x, covA.y, covA.z),\n\t\t\tvec3f(covA.y, covB.x, covB.y),\n\t\t\tvec3f(covA.z, covB.y, covB.z)\n\t\t);\n\t\tlet linear = mat3x3f(uniform.uTransform[0].xyz, uniform.uTransform[1].xyz, uniform.uTransform[2].xyz);\n\t\tlet Ct = linear * C * transpose(linear);\n\t\tcovA = Ct[0];\n\t\tcovB = vec3f(Ct[1][1], Ct[1][2], Ct[2][2]);\n\t\tvar color = readColor(&source);\n\t\t#if SH_BANDS > 0\n\t\t\tlet dir = normalize(center.view * mat3x3f(center.modelView[0].xyz, center.modelView[1].xyz, center.modelView[2].xyz));\n\t\t\tvar sh: array<vec3f, SH_COEFFS>;\n\t\t\tvar scale: f32;\n\t\t\treadSHData(&source, &sh, &scale);\n\t\t\tcolor = vec4f(color.xyz + evalSH(&sh, dir) * scale, color.w);\n\t\t#endif\n\t\t#ifdef GSPLAT_COLORIZE\n\t\t\tcolor = vec4f(color.xyz * uniform.uLodColor, color.w);\n\t\t#endif\n\t\toutput.color = color;\n\t\toutput.color1 = vec4f(modelCenter, 1.0);\n\t\toutput.color2 = vec4f(covA, 1.0);\n\t\toutput.color3 = vec4f(covB, 1.0);\n\t}\n\t\n\treturn output;\n}\n'});this.quadRender=new $(n)}destroy(){this.material?.destroy(),this.quadRender?.destroy()}}class Bu{constructor(t,e){this.id=Ou++,this.workBufferRenderInfos=new Map,this.device=t,this.gsplatData=e,this.centers=new Float32Array(3*e.numSplats),e.getCenters(this.centers),this.aabb=new y,e.calcAabb(this.aabb),this.mesh=Bu.createMesh(t),this.instanceIndices=Bu.createInstanceIndices(t,e.numSplats),this.mesh.incRefCount(),this.mesh.aabb.copy(this.aabb)}destroy(){this.mesh?.destroy(),this.instanceIndices?.destroy(),this.workBufferRenderInfos.forEach(t=>t.destroy()),this.workBufferRenderInfos.clear()}getWorkBufferRenderInfo(t,e){this.configureMaterialDefines(Nu),t&&Nu.set("GSPLAT_LOD",""),e&&Nu.set("GSPLAT_COLORIZE","");const s=Array.from(Nu.entries()).map(([t,e])=>`${t}=${e}`).join(";");let i=this.workBufferRenderInfos.get(s);if(!i){const t=new Ln;this.configureMaterial(t),Nu.forEach((e,s)=>t.setDefine(s,e)),i=new ku(this.device,s,t),this.workBufferRenderInfos.set(s,i)}return Nu.clear(),i}static createMesh(t){const e=Bu.instanceSize,s=new Float32Array(12*e),i=new Uint32Array(6*e);for(let r=0;r<e;++r){s.set([-1,-1,r,1,-1,r,1,1,r,-1,1,r],12*r);const t=4*r;i.set([0+t,1+t,2+t,0+t,2+t,3+t],6*r)}const n=new Us(t);return n.setPositions(s,3),n.setIndices(i),n.update(),n}static createInstanceIndices(t,e){const s=Bu.instanceSize,i=Math.ceil(e/s)*s/s,n=new Uint32Array(i);for(let a=0;a<i;++a)n[a]=a*s;const r=new xs.y(t,[{semantic:x.pov,components:1,type:x.Bz3,asInt:!0}]);return new ys.R(t,r,i,{usage:x.y1K,data:n.buffer})}static get instanceSize(){return 128}get numSplats(){return this.gsplatData.numSplats}configureMaterial(t){}configureMaterialDefines(t){}evalTextureSize(t){return Jt.Z.ZERO}createTexture(t,e,s,i){return new Q.g(this.device,{name:t,width:s.x,height:s.y,format:e,cubemap:!1,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6,...i?{levels:[i]}:{}})}instantiate(){}}class Uu{constructor(t,e,s,i,n){this.maxNumSplats=0,this.instanceIndices=null,this.viewportParams=[0,0],this.device=t,this.node=e,this.cameraNode=s,this.layer=i,this.workBuffer=n,this._material=new Ln({uniqueName:"UnifiedSplatMaterial",vertexGLSL:'#include "gsplatVS"',fragmentGLSL:'#include "gsplatPS"',vertexWGSL:'#include "gsplatVS"',fragmentWGSL:'#include "gsplatPS"',attributes:{vertex_position:x.JYe,vertex_id_attrib:x.pov}}),this._material.setDefine("GSPLAT_WORKBUFFER_DATA",!0),this._material.setParameter("splatColor",n.colorTexture),this._material.setParameter("covA",n.covATexture),this._material.setParameter("covB",n.covBTexture),this._material.setParameter("center",n.centerTexture),this._material.setDefine("SH_BANDS","0"),this._material.setParameter("numSplats",0),this._material.setParameter("splatOrder",n.orderTexture),this._material.setParameter("alphaClip",.3),this._material.setDefine("DITHER_NONE",""),this._material.cull=x.pLF,this._material.blendType=F.bYZ,this._material.depthWrite=!1,this._material.update(),this.meshInstance=this.createMeshInstance(),i.addMeshInstances([this.meshInstance])}destroy(){this.layer.removeMeshInstances([this.meshInstance]),this._material.destroy(),this.meshInstance.destroy()}setNumSplats(t){this.meshInstance.instancingCount=Math.ceil(t/Bu.instanceSize),this._material.setParameter("numSplats",t),this.meshInstance.visible=t>0}setMaxNumSplats(t){this.maxNumSplats!==t&&(this.maxNumSplats=t,this.instanceIndices?.destroy(),this.instanceIndices=Bu.createInstanceIndices(this.device,t),this.meshInstance.setInstancing(this.instanceIndices,!0))}createMeshInstance(){const t=Bu.createMesh(this.device),e=this.workBuffer.textureSize,s=Bu.createInstanceIndices(this.device,e*e),i=new pt(t,this._material);i.node=this.node,i.setInstancing(s,!0),i.instancingCount=0;const n=this.cameraNode.camera;return i.isVisibleFunc=t=>n.camera===t,i}updateViewport(t){const e=t.camera,s=e.rect,i=e?.renderTarget,{width:n,height:r}=i??this.device,a=this.viewportParams;a[0]=n*s.z,a[1]=r*s.w;const o=e?.camera?.xr;o?.active&&2===o.views.list.length&&(a[0]*=.5),this._material.setParameter("viewport",a)}}class zu{constructor(t,e,s=0){this.intervals=new Map,this.lodIndex=0,this._aabb=new y,this.resource=t,this.node=e,this.lodIndex=s}set aabb(t){this._aabb.copy(t)}get aabb(){return this._aabb}}const Vu=new o.$,Gu=new l.e,Hu=[];class Wu{constructor(t,e,s){this.activePlacements=new Set,this.dirtyModifiedPlacements=!1,this.pending=new Set,this.pendingDecrements=new Map,this.previousPosition=new l.e,this.octree=t,this.placement=e,this.assetLoader=s,this.nodeLods=new Int32Array(t.nodes.length),this.nodeLods.fill(-1);const i=t.files.length;this.filePlacements=new Array(i).fill(null)}destroy(){this.pending.clear(),this.pendingDecrements.clear(),this.filePlacements.length=0}calculateNodeLod(t,e,s){const i=this.octree.nodes[e],n=t.distance(i.bounds.center),r=[2,4,6,8,10];for(let a=0;a<s;a++)if(n<r[a])return a;return s}updateLod(t){const e=t.getPosition(),s=this.placement.node.getWorldTransform();Vu.copy(s).invert();const i=Vu.transformPoint(e,Gu),n=this.octree.lodLevels-1,r=this.octree.nodes;for(let a=0;a<r.length;a++){const t=r[a],e=this.calculateNodeLod(i,a,n),s=this.nodeLods[a];if(e!==s){const i=this.pendingDecrements.get(a);void 0!==i&&(this.decrementFileRef(i,a),this.pendingDecrements.delete(a)),this.nodeLods[a]=e;const n=s>=0,r=e>=0;if(!n&&r){const s=t.lods[e].fileIndex;this.incrementFileRef(s,a,e)}else if(n&&!r){const e=t.lods[s].fileIndex;this.decrementFileRef(e,a)}else if(n&&r){const i=t.lods[e].fileIndex,n=t.lods[s].fileIndex;this.incrementFileRef(i,a,e);const r=this.filePlacements[i];r?.resource?this.decrementFileRef(n,a):this.pendingDecrements.set(a,n)}}}}incrementFileRef(t,e,s){if(-1===t)return;let i=this.filePlacements[t];if(!i&&(i=new zu(null,this.placement.node,s),this.filePlacements[t]=i,!this.addFilePlacement(t))){const e=this.octree.files[t];this.octree.ensureFileResource(e,this.assetLoader),this.pending.add(t)}const n=this.octree.nodes[e].lods[s],r=new Jt.Z(n.offset,n.offset+n.count-1);i.intervals.set(e,r),this.dirtyModifiedPlacements=!0}decrementFileRef(t,e){if(-1===t)return;const s=this.filePlacements[t];s&&(s.intervals.delete(e),this.dirtyModifiedPlacements=!0,0===s.intervals.size&&(s.resource&&this.activePlacements.delete(s),this.filePlacements[t]=null,this.pending.delete(t)))}addFilePlacement(t){const e=this.octree.files[t],s=this.octree.getFileResource(e);if(s){const e=this.filePlacements[t];if(e)return e.resource=s,e.aabb.copy(s.aabb),this.activePlacements.add(e),this.dirtyModifiedPlacements=!0,!0}return!1}testMoved(){const t=this.placement.node.getPosition();return t.distance(this.previousPosition)>1&&(this.previousPosition.copy(t),!0)}update(){if(this.pending.size){for(const t of this.pending){const e=this.octree.files[t];this.octree.ensureFileResource(e,this.assetLoader);const s=this.filePlacements[t];if(s&&s.intervals.size>0&&this.addFilePlacement(t)){Hu.push(t);for(const[t]of s.intervals){const e=this.pendingDecrements.get(t);void 0!==e&&(this.decrementFileRef(e,t),this.pendingDecrements.delete(t))}}}for(const t of Hu)this.pending.delete(t);Hu.length=0}const t=this.dirtyModifiedPlacements;return this.dirtyModifiedPlacements=!1,t}}const Xu=new l.e,$u=new l.e;class qu{constructor(t,e){this.bounds=new y,this.lods=t,Xu.set(e.min[0],e.min[1],e.min[2]),$u.set(e.max[0],e.max[1],e.max[2]),this.bounds.setMinMax(Xu,$u)}}class ju{constructor(t,e){this.fileResources=new Map,this.files=e.filenames,this.lodLevels=e.lodLevels,this.assetFileUrl=t,this.baseDir=Qs.A.getDirectory(t);const s=[];this._extractLeafNodes(e.tree,s),this.nodes=s.map(t=>{const e=[];for(let s=0;s<this.lodLevels;s++){const i=t.lods[s.toString()];i?e.push({file:this.files[i.file]||"",fileIndex:i.file,offset:i.offset||0,count:i.count||0}):e.push({file:"",fileIndex:-1,offset:0,count:0})}return new qu(e,t.bound)})}_extractLeafNodes(t,e){if(t.lods)e.push({lods:t.lods,bound:t.bound});else if(t.children)for(const s of t.children)this._extractLeafNodes(s,e)}getFullUrl(t){return Qs.A.join(this.baseDir,t)}getFileResource(t){return this.fileResources.get(t)}ensureFileResource(t,e){if(this.fileResources.has(t))return;const s=this.getFullUrl(t),i=e.getResource(s);i?this.fileResources.set(t,i):e.load(s)}}class Yu{constructor(t,e){this.aabb=new y,this.octree=new ju(t,e),this.aabb.setMinMax(new l.e(e.tree.bound.min),new l.e(e.tree.bound.max))}}class Ku{constructor(t,e,s){this.version=0,this.sortParametersSet=!1,this.sortedBefore=!1,this.splats=[],this.textureSize=0,this.totalUsedPixels=0,this.version=e,this.splats=s,this.estimateTextureSize(this.splats,t.maxTextureSize),this.assignLines(this.splats,this.textureSize)}estimateTextureSize(t,e){const s=e=>{let s=0;for(const i of t)if(s+=Math.ceil(i.activeSplats/e),s>e)return!1;return!0};let i=1,n=e,r=null;for(;i<=n;){const t=Math.floor((i+n)/2);s(t)?(r=t,n=t-1):i=t+1}return null===r?(this.textureSize=0,!1):(this.textureSize=r,!0)}destroy(){this.splats.forEach(t=>t.destroy()),this.splats.length=0}assignLines(t,e){if(0===t.length)return void(this.totalUsedPixels=0);let s=0;for(const i of t){const t=i.activeSplats,n=Math.ceil(t/e);i.setLines(s,n,e,t),s+=n}this.totalUsedPixels=s*e}}const Zu=new l.e,Qu=new l.e,Ju=new l.e,tf=new o.$,ef=new Set,sf=new Set,nf=[];class rf{constructor(t,e,s,i){this.node=new Rt.t("GSplatManager"),this.worldStates=new Map,this.lastWorldStateVersion=0,this.sortedVersion=0,this.lastCameraPos=new l.e(1/0,1/0,1/0),this.layerPlacements=[],this.layerPlacementsDirty=!1,this.octreeInstances=new Map,this.device=t,this.director=e,this.cameraNode=i,this.workBuffer=new Fu(t),this.renderer=new Uu(t,this.node,this.cameraNode,s,this.workBuffer),this.sorter=this.createSorter()}destroy(){this.workBuffer.destroy(),this.renderer.destroy(),this.sorter.destroy()}createSorter(){const t=new Lu;return t.on("sorted",(t,e,s)=>{this.onSorted(t,e,s)}),t}reconcile(t){ef.clear();for(const e of t)e.resource instanceof Yu?(this.octreeInstances.has(e)||this.octreeInstances.set(e,new Wu(e.resource.octree,e,this.director.assetLoader)),sf.add(e)):ef.add(e);for(const[e,s]of this.octreeInstances)sf.has(e)||(this.octreeInstances.delete(e),s.destroy());if(this.layerPlacementsDirty=this.layerPlacements.length!==ef.size,!this.layerPlacementsDirty)for(let e=0;e<this.layerPlacements.length;e++){const t=this.layerPlacements[e];if(!ef.has(t)){this.layerPlacementsDirty=!0;break}}this.layerPlacements.length=0;for(const e of ef)this.layerPlacements.push(e);ef.clear(),sf.clear()}updateWorldState(){for(const[,t]of this.octreeInstances)this.layerPlacementsDirty||=t.update();if(this.layerPlacementsDirty||0===this.worldStates.size){this.lastWorldStateVersion++;const t=[];for(const s of this.layerPlacements){const e=new Pu(this.device,s.resource,s);t.push(e)}for(const[,s]of this.octreeInstances)s.activePlacements.forEach(e=>{t.push(new Pu(this.device,e.resource,e))});t.forEach(t=>{this.sorter.setCenters(t.resource.id,t.resource.centers)});const e=new Ku(this.device,this.lastWorldStateVersion,t);this.worldStates.set(this.lastWorldStateVersion,e),this.layerPlacementsDirty=!1}}onSorted(t,e,s){this.sortedVersion=e;const i=this.worldStates.get(e-1);i&&(this.worldStates.delete(e-1),i.destroy());const n=this.worldStates.get(e);if(n){if(!n.sortedBefore){n.sortedBefore=!0;const t=n.textureSize;t!==this.workBuffer.textureSize&&(this.workBuffer.resize(t),this.renderer.setMaxNumSplats(t*t)),this.workBuffer.render(n.splats,this.cameraNode)}this.workBuffer.setOrderData(s),this.renderer.setNumSplats(t)}}update(t){let e=!1;for(const[,r]of this.octreeInstances)e||=r.testMoved();const s=this.cameraNode.getPosition();if(this.lastCameraPos.distance(s)>1||e){this.lastCameraPos.copy(s);for(const[,t]of this.octreeInstances)t.updateLod(this.cameraNode)}this.updateWorldState();const i=this.worldStates.get(this.lastWorldStateVersion);if(i){if(!i.sortParametersSet){i.sortParametersSet=!0;const t=this.prepareSortParameters(i);this.sorter.setSortParameters(t)}this.sort(i)}const n=this.worldStates.get(this.sortedVersion);n&&(n.splats.forEach(t=>{t.update()&&nf.push(t)}),nf.length>0&&(this.workBuffer.render(nf,this.cameraNode),nf.length=0))}sort(t){const e=this.cameraNode,s=e.getWorldTransform();s.getTranslation(Zu),s.getZ(Qu).normalize();const i=[];t.splats.forEach(t=>{const e=t.node.getWorldTransform();tf.copy(e).invert();const s=e.getScale().x,n=tf.transformVector(Qu).normalize();e.getTranslation(Ju);const r=Ju.sub(Zu).dot(Qu),a=t.aabb.getMin(),o=t.aabb.getMax();i.push({transformedDirection:n,offset:r,scale:s,modelMat:e.data.slice(),aabbMin:[a.x,a.y,a.z],aabbMax:[o.x,o.y,o.z]})}),this.sorter.setSortParams(i),this.renderer.updateViewport(e)}prepareSortParameters(t){return{command:"intervals",textureSize:t.textureSize,totalUsedPixels:t.totalUsedPixels,version:t.version,ids:t.splats.map(t=>t.resource.id),lineStarts:t.splats.map(t=>t.lineStart),padding:t.splats.map(t=>t.padding),intervals:t.splats.map(t=>t.intervals)}}}class af{constructor(t,e,s,i){this.gsplatManager=new rf(t,e,s,i)}destroy(){this.gsplatManager.destroy()}}class of{destroy(){this.layersMap.forEach(t=>t.destroy()),this.layersMap.clear()}removeLayerData(t){const e=this.layersMap.get(t);e&&(e.destroy(),this.layersMap.delete(t))}getLayerData(t,e,s,i){let n=this.layersMap.get(s);return n||(n=new af(t,e,s,i),this.layersMap.set(s,n)),n}constructor(){this.layersMap=new Map}}class lf{constructor(t,e,s){this.camerasMap=new Map,this.octrees=new Map,this.device=t,this.assetLoader=s,this.scene=e}getCameraData(t){let e=this.camerasMap.get(t);return e||(e=new of,this.camerasMap.set(t,e)),e}update(t){this.camerasMap.forEach((e,s)=>{t.camerasSet.has(s)?e.layersMap.forEach((t,i)=>{s.layersSet.has(i.id)&&i.enabled||(t.destroy(),e.layersMap.delete(i))}):(e.destroy(),this.camerasMap.delete(s))});const e=t.cameras;for(let s=0;s<e.length;s++){const i=e[s].camera;let n=this.camerasMap.get(i);const r=i.layers;for(let e=0;e<r.length;e++){const s=t.getLayerById(r[e]);if(s?.enabled&&(s.gsplatPlacementsDirty||!n)){const t=s.gsplatPlacements;if(0===t.length)n&&n.removeLayerData(s);else{n??=this.getCameraData(i);n.getLayerData(this.device,this,s,i.node).gsplatManager.reconcile(t)}}}n?.layersMap.forEach(t=>{t.gsplatManager.update(this.scene)})}for(let s=0;s<t.layerList.length;s++)t.layerList[s].gsplatPlacementsDirty=!1}}class hf extends j.A{execute(){this.executeCallback?.()}constructor(...t){super(...t),this.executeCallback=null}}const cf=new o.$,df=new l.e;class uf{constructor(t,e){this.prevDir=new l.e,this.updateMode="enable",this.device=t,this.gsplatInstance=e;const{resource:s}=e,i=new Map(B.W.get(t,t.isWebGPU?"wgsl":"glsl"));this.shader=V.createShader(t,{uniqueName:"gsplatResolveSH",vertexGLSL:"\n\tattribute vec2 vertex_position;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.0, 1.0);\n\t}\n",fragmentGLSL:'\n\t#include "gsplatEvalSHVS"\n\tvec4 packRgb(vec3 v) {\n\t\tuvec3 vb = uvec3(clamp(v, vec3(0.0), vec3(1.0)) * vec3(2047.0, 2047.0, 1023.0));\n\t\tuint bits = (vb.x << 21) | (vb.y << 10) | vb.z;\n\t\treturn vec4((uvec4(bits) >> uvec4(24, 16, 8, 0)) & uvec4(0xff)) / vec4(255.0);\n\t}\n\tuniform mediump vec3 dir;\n\tuniform mediump sampler2D centroids;\n\tuniform mediump float shN_mins;\n\tuniform mediump float shN_maxs;\n\tvoid main(void) {\n\t\tivec2 uv = ivec2(gl_FragCoord.xy) * ivec2(SH_COEFFS, 1);\n\t\tmediump vec3 coefficients[SH_COEFFS];\n\t\tfor (int i = 0; i < SH_COEFFS; i++) {\n\t\t\tvec3 s = texelFetch(centroids, ivec2(uv.x + i, uv.y), 0).xyz;\n\t\t\tcoefficients[i] = mix(vec3(shN_mins), vec3(shN_maxs), s);\n\t\t}\n\t\tgl_FragColor = packRgb(evalSH(coefficients, dir) * 0.25 + 0.5);\n\t}\n',vertexWGSL:"\n\tattribute vertex_position: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(vertex_position, 0.0, 1.0);\n\t\treturn output;\n\t}\n",fragmentWGSL:'\n\t#include "gsplatEvalSHVS"\n\tfn packRgb(v: vec3f) -> vec4f {\n\t\tlet vb = vec3u(clamp(v, vec3f(0.0), vec3f(1.0)) * vec3f(2047.0, 2047.0, 1023.0));\n\t\tlet bits = dot(vb, vec3u(1 << 21, 1 << 10, 1));\n\t\treturn vec4f((vec4u(bits) >> vec4u(24, 16, 8, 0)) & vec4u(0xff)) / vec4f(255.0);\n\t}\n\tuniform dir: vec3f;\n\tuniform shN_mins: f32;\n\tuniform shN_maxs: f32;\n\tvar centroids: texture_2d<f32>;\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar uv = vec2i(input.position.xy) * vec2i(SH_COEFFS, 1);\n\t\tvar coefficients: array<vec3f, SH_COEFFS>;\n\t\tfor (var i: i32 = 0; i < SH_COEFFS; i++) {\n\t\t\tlet s: vec3f = textureLoad(centroids, vec2i(uv.x + i, uv.y), 0).xyz;\n\t\t\tcoefficients[i] = mix(vec3f(uniform.shN_mins), vec3f(uniform.shN_maxs), s);\n\t\t}\n\t\toutput.color = packRgb(evalSH(&coefficients, uniform.dir) * 0.25 + 0.5);\n\t\treturn output;\n\t}\n',vertexIncludes:i,fragmentIncludes:i,fragmentDefines:new Map([["SH_BANDS",s.gsplatData.shBands.toString()]]),attributes:{vertex_position:x.JYe}}),this.texture=s.createTexture("centroids",x.Lxj,new Jt.Z(64,1024)),this.renderTarget=new T.O({colorBuffer:this.texture,depth:!1}),this.renderPass=new hf(t),this.renderPass.init(this.renderTarget,{}),this.renderPass.colorOps.clear=!0,this.quadRender=new $(this.shader);const{material:n}=e;n.setDefine("SH_BANDS","0");const{shaderChunks:r}=n;r.glsl.set("gsplatSogsColorVS","\n\tuniform mediump sampler2D sh0;\n\tuniform highp sampler2D sh_labels;\n\tuniform mediump sampler2D sh_result;\n\tuniform vec4 sh0_mins;\n\tuniform vec4 sh0_maxs;\n\tfloat SH_C0 = 0.28209479177387814;\n\tvec3 unpackRgb(vec4 v) {\n\t\tuvec4 uv = uvec4(v * 255.0);\n\t\tuint bits = (uv.x << 24) | (uv.y << 16) | (uv.z << 8) | uv.w;\n\t\tuvec3 vb = (uvec3(bits) >> uvec3(21, 10, 0)) & uvec3(0x7ffu, 0x7ffu, 0x3ffu);\n\t\treturn vec3(vb) / vec3(2047.0, 2047.0, 1023.0);\n\t}\n\tvec4 readColor(in SplatSource source) {\n\t\tvec4 baseSample = mix(sh0_mins, sh0_maxs, texelFetch(sh0, source.uv, 0));\n\t\tvec4 base = vec4(vec3(0.5) + baseSample.xyz * SH_C0, 1.0 / (1.0 + exp(-baseSample.w)));\n\t\tivec2 labelSample = ivec2(texelFetch(sh_labels, source.uv, 0).xy * 255.0);\n\t\tint n = labelSample.x + labelSample.y * 256;\n\t\tvec4 shSample = texelFetch(sh_result, ivec2(n % 64, n / 64), 0);\n\t\tvec3 sh = (unpackRgb(shSample) - vec3(0.5)) * 4.0;\n\t\treturn vec4(base.xyz + sh, base.w);\n\t}\n"),r.wgsl.set("gsplatSogsColorVS","\n\tvar sh0: texture_2d<f32>;\n\tvar sh_labels: texture_2d<f32>;\n\tvar sh_result: texture_2d<f32>;\n\tuniform sh0_mins: vec4f;\n\tuniform sh0_maxs: vec4f;\n\tconst SH_C0: f32 = 0.28209479177387814;\n\tfn unpackRgb(v: vec4f) -> vec3f {\n\t\tlet bits = dot(vec4u(v * 255.0), vec4u(1u << 24, 1u << 16, 1u << 8, 1u));\n\t\tlet vb = (vec3u(bits) >> vec3u(21, 10, 0)) & vec3u(0x7ffu, 0x7ffu, 0x3ffu);\n\t\treturn vec3f(vb) / vec3f(2047.0, 2047.0, 1023.0);\n\t}\n\tfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\t\tlet baseSample: vec4f = mix(uniform.sh0_mins, uniform.sh0_maxs, textureLoad(sh0, source.uv, 0));\n\t\tlet base = vec4f(vec3f(0.5) + baseSample.xyz * SH_C0, 1.0 / (1.0 + exp(-baseSample.w)));\n\t\tlet labelSample: vec2i = vec2i(textureLoad(sh_labels, source.uv, 0).xy * 255.0);\n\t\tlet n = labelSample.x + labelSample.y * 256;\n\t\tlet shSample: vec4f = textureLoad(sh_result, vec2i(n % 64, n / 64), 0);\n\t\tlet sh: vec3f = (unpackRgb(shSample) - vec3f(0.5)) * 4.0;\n\t\treturn vec4f(base.xyz + sh, base.w);\n\t}\n"),n.update(),t.scope.resolve("sh_result").setValue(this.texture)}destroy(){const{gsplatInstance:t}=this,{material:e}=t;e.setDefine("SH_BANDS",t.resource.gsplatData.shBands.toString());const{shaderChunks:s}=e;s.glsl.delete("gsplatSogsColorVS"),s.wgsl.delete("gsplatSogsColorVS"),e.update(),this.quadRender.destroy(),this.renderPass.destroy(),this.renderTarget.destroy(),this.texture.destroy(),this.shader.destroy()}render(t,e){const{prevDir:s,updateMode:i}=this;if("disable"===i)return;if(cf.invert(e),cf.transformVector(t.forward,df),df.normalize(),"enable"===i&&df.equalsApprox(s,.001))return;s.copy(df);this.renderPass.executeCallback=()=>{const{device:t}=this,{sh_centroids:e,meta:s}=this.gsplatInstance.resource.gsplatData;((t,e)=>{for(const s in e)t.resolve(s).setValue(e[s])})(t.scope,{dir:df.toArray(),centroids:e,shN_mins:s.shN.mins,shN_maxs:s.shN.maxs}),t.setCullMode(x.pLF),t.setDepthState(q.H.NODEPTH),t.setStencilState(null,null),t.setBlendState(re.t.NOBLEND),this.quadRender.render()},this.renderPass.render()}}function ff(){const t="undefined"!=typeof self&&self||require("node:worker_threads").parentPort;let e,s,i,n,r,a,o=!1;const l={x:0,y:0,z:0},h={x:0,y:0,z:0},c={x:0,y:0,z:0},d={x:0,y:0,z:0};let u,f;const p=32,m=new Array(p).fill(0),_=new Array(p).fill(0),g=new Array(p).fill(0);t.addEventListener("message",v=>{const S=v.data??v;if(S.order&&(e=new Uint32Array(S.order)),S.centers)if(s=new Float32Array(S.centers),o=!0,S.chunks){const t=new Float32Array(S.chunks);i=new Float32Array(S.chunks,0,4*t.length/6),c.x=t[0],c.y=t[1],c.z=t[2],d.x=t[3],d.y=t[4],d.z=t[5];for(let e=0;e<t.length/6;++e){const s=t[6*e+0],n=t[6*e+1],r=t[6*e+2],a=t[6*e+3],o=t[6*e+4],l=t[6*e+5];i[4*e+0]=.5*(s+a),i[4*e+1]=.5*(n+o),i[4*e+2]=.5*(r+l),i[4*e+3]=.5*Math.sqrt((a-s)**2+(o-n)**2+(l-r)**2),s<c.x&&(c.x=s),n<c.y&&(c.y=n),r<c.z&&(c.z=r),a>d.x&&(d.x=a),o>d.y&&(d.y=o),l>d.z&&(d.z=l)}}else{const t=s.length/3,e=Math.ceil(t/256);let n,r,a,o,l,h;i=new Float32Array(4*e),c.x=c.y=c.z=1/0,d.x=d.y=d.z=-1/0;for(let u=0;u<e;++u){n=r=a=1/0,o=l=h=-1/0;const e=256*u,f=Math.min(t,256*(u+1));for(let t=e;t<f;++t){const e=s[3*t+0],i=s[3*t+1],u=s[3*t+2],f=Number.isFinite(e),p=Number.isFinite(i),m=Number.isFinite(u);f||(s[3*t+0]=0),p||(s[3*t+1]=0),m||(s[3*t+2]=0),f&&p&&m&&(e<n?n=e:e>o&&(o=e),i<r?r=i:i>l&&(l=i),u<a?a=u:u>h&&(h=u),e<c.x?c.x=e:e>d.x&&(d.x=e),i<c.y?c.y=i:i>d.y&&(d.y=i),u<c.z?c.z=u:u>d.z&&(d.z=u))}i[4*u+0]=.5*(n+o),i[4*u+1]=.5*(r+l),i[4*u+2]=.5*(a+h),i[4*u+3]=.5*Math.sqrt((o-n)**2+(l-r)**2+(h-a)**2)}}S.hasOwnProperty("mapping")&&(n=S.mapping?new Uint32Array(S.mapping):null,o=!0),S.cameraPosition&&(r=S.cameraPosition),S.cameraDirection&&(a=S.cameraDirection),(()=>{if(!(e&&s&&0!==s.length&&r&&a))return;const v=r.x,S=r.y,y=r.z,x=a.x,T=a.y,w=a.z,b=.001;if(!o&&Math.abs(v-l.x)<b&&Math.abs(S-l.y)<b&&Math.abs(y-l.z)<b&&Math.abs(x-h.x)<b&&Math.abs(T-h.y)<b&&Math.abs(w-h.z)<b)return;let E,A;o=!1,l.x=v,l.y=S,l.z=y,h.x=x,h.y=T,h.z=w;for(let t=0;t<8;++t){const e=1&t?c.x:d.x,s=2&t?c.y:d.y,i=4&t?c.z:d.z,n=e*x+s*T+i*w;0===t?E=A=n:(E=Math.min(E,n),A=Math.max(A,n))}const C=s.length/3,P=2**Math.max(10,Math.min(20,Math.round(Math.log2(C/4))))+1;u?.length!==C&&(u=new Uint32Array(C)),f&&f.length===P?f.fill(0):f=new Uint32Array(P);const D=A-E;if(D<1e-6)for(let t=0;t<C;++t)u[t]=0,f[0]++;else{const t=i.length/4;m.fill(0);for(let s=0;s<t;++s){const t=i[4*s+0],e=i[4*s+1],n=i[4*s+2],r=i[4*s+3],a=t*x+e*T+n*w-E,o=Math.max(0,Math.floor((a-r)*p/D)),l=Math.min(p,Math.ceil((a+r)*p/D));for(let s=o;s<l;++s)m[s]++}const e=m.reduce((t,e)=>t+e,0);for(let s=0;s<p;++s)g[s]=m[s]/e*P>>>0;for(let s=0;s<p;++s)_[s]=0===s?0:_[s-1]+g[s-1];const n=D/p;let r=0;for(let i=0;i<C;++i){const t=s[r++],e=s[r++],a=s[r++],o=(t*x+e*T+a*w-E)/n,l=o>>>0,h=_[l]+g[l]*(o-l)>>>0;u[i]=h,f[h]++}}for(let t=1;t<P;t++)f[t]+=f[t-1];for(let t=0;t<C;t++){const s=u[t],i=--f[s];e[i]=t}const L=v*x+S*T+y*w,M=t=>{let i=3*e[t];return s[i++]*x+s[i++]*T+s[i]*w-L},I=M(C-1)>=0?(()=>{const t=((t,e,s)=>{for(;t<=e;){const i=e+t>>1,n=s(i);if(n>0)t=i+1;else{if(!(n<0))return i;e=i-1}}return~t})(0,C-1,t=>-M(t));return Math.min(C,Math.abs(t))})():C;if(n)for(let t=0;t<C;++t)e[t]=n[e[t]];t.postMessage({order:e.buffer,count:I},[e.buffer]),e=null})()})}class pf extends r.J{constructor(){super();const t=t=>{const e=t.data??t,s=e.order,i=this.orderTexture._levels[0].buffer;this.worker.postMessage({order:i},[i]),this.orderTexture._levels[0]=new Uint32Array(s),this.orderTexture.upload(),this.fire("updated",e.count)},e=`(${ff.toString()})()`;"node"===i.i.environment?(this.worker=new Worker(e,{eval:!0}),this.worker.on("message",t)):(this.worker=new Worker(URL.createObjectURL(new Blob([e],{type:"application/javascript"}))),this.worker.addEventListener("message",t))}destroy(){this.worker.terminate(),this.worker=null}init(t,e,s){this.orderTexture=t,this.centers=e.slice();const i=this.orderTexture.lock({mode:x.odD}).slice();this.orderTexture.unlock();for(let a=0;a<i.length;++a)i[a]=a;const n={order:i.buffer,centers:e.buffer,chunks:s?.buffer},r=[i.buffer,e.buffer].concat(s?[s.buffer]:[]);this.worker.postMessage(n,r)}setMapping(t){if(t){const e=new Float32Array(3*t.length);for(let s=0;s<t.length;++s){const i=3*t[s],n=3*s;e[n+0]=this.centers[i+0],e[n+1]=this.centers[i+1],e[n+2]=this.centers[i+2]}this.worker.postMessage({centers:e.buffer,mapping:t.buffer},[e.buffer,t.buffer])}else{const t=this.centers.slice();this.worker.postMessage({centers:t.buffer,mapping:null},[t.buffer])}}setCamera(t,e){this.worker.postMessage({cameraPosition:{x:t.x,y:t.y,z:t.z},cameraDirection:{x:e.x,y:e.y,z:e.z}})}}const mf=new o.$,_f=new St.k,gf=new y,vf=new y,Sf=new p.Q(1,1,0,.4),yf=.28209479177387814;class xf{constructor(t,e,s,i,n){const r=t.getProp("x"),a=t.getProp("y"),o=t.getProp("z"),l=t.getProp("rot_1"),h=t.getProp("rot_2"),c=t.getProp("rot_3"),d=t.getProp("rot_0"),u=t.getProp("scale_0"),f=t.getProp("scale_1"),p=t.getProp("scale_2"),m=t.getProp("f_dc_0"),_=t.getProp("f_dc_1"),g=t.getProp("f_dc_2"),v=t.getProp("opacity");this.read=t=>{e&&(e.x=r[t],e.y=a[t],e.z=o[t]),s&&s.set(l[t],h[t],c[t],d[t]),i&&i.set(Math.exp(u[t]),Math.exp(f[t]),Math.exp(p[t])),n&&n.set(.5+m[t]*yf,.5+_[t]*yf,.5+g[t]*yf,(t=>{if(t>0)return 1/(1+Math.exp(-t));const e=Math.exp(t);return e/(1+e)})(v[t]))}}}const Tf=(t,e,s)=>{_f.set(s.x,s.y,s.z,s.w).normalize(),t.setTRS(e,_f,l.e.ONE)};class wf{constructor(t,e=[]){this.elements=t,this.numSplats=this.getElement("vertex").count,this.comments=e}static calcSplatAabb(t,e,s,i){Tf(mf,e,s),gf.center.set(0,0,0),gf.halfExtents.set(2*i.x,2*i.y,2*i.z),t.setFromTransformedAabb(gf,mf)}getProp(t,e="vertex"){return this.getElement(e)?.properties.find(e=>e.name===t)?.storage}getElement(t){return this.elements.find(e=>e.name===t)}addProp(t,e){this.getElement("vertex").properties.push({type:"float",name:t,storage:e,byteSize:4})}createIter(t,e,s,i){return new xf(this,t,e,s,i)}calcAabb(t,e){let s,i,n,r,a,o,l=!0;const h=this.getProp("x"),c=this.getProp("y"),d=this.getProp("z"),u=this.getProp("scale_0"),f=this.getProp("scale_1"),p=this.getProp("scale_2");for(let m=0;m<this.numSplats;++m){if(e&&!e(m))continue;const t=h[m],_=c[m],g=d[m],v=Math.max(u[m],f[m],p[m]);if(!(isFinite(t)&&isFinite(_)&&isFinite(g)&&isFinite(v)))continue;const S=2*Math.exp(v);l?(l=!1,s=t-S,i=_-S,n=g-S,r=t+S,a=_+S,o=g+S):(s=Math.min(s,t-S),i=Math.min(i,_-S),n=Math.min(n,g-S),r=Math.max(r,t+S),a=Math.max(a,_+S),o=Math.max(o,g+S))}return l||(t.center.set(.5*(s+r),.5*(i+a),.5*(n+o)),t.halfExtents.set(.5*(r-s),.5*(a-i),.5*(o-n))),!l}calcAabbExact(t,e){const s=new l.e,i=new St.k,n=new l.e,r=this.createIter(s,i,n);let a=!0;for(let o=0;o<this.numSplats;++o)e&&!e(o)||(r.read(o),a?(a=!1,wf.calcSplatAabb(t,s,i,n)):(wf.calcSplatAabb(vf,s,i,n),t.add(vf)));return!a}getCenters(t){const e=this.getProp("x"),s=this.getProp("y"),i=this.getProp("z");for(let n=0;n<this.numSplats;++n)t[3*n+0]=e[n],t[3*n+1]=s[n],t[3*n+2]=i[n]}calcFocalPoint(t,e){const s=this.getProp("x"),i=this.getProp("y"),n=this.getProp("z"),r=this.getProp("scale_0"),a=this.getProp("scale_1"),o=this.getProp("scale_2");t.x=0,t.y=0,t.z=0;let l=0;for(let h=0;h<this.numSplats;++h){if(e&&!e(h))continue;const c=s[h],d=i[h],u=n[h];if(!isFinite(c)||!isFinite(d)||!isFinite(u))continue;const f=1/(1+Math.exp(Math.max(r[h],a[h],o[h])));t.x+=c*f,t.y+=d*f,t.z+=u*f,l+=f}t.mulScalar(1/l)}renderWireframeBounds(t,e){const s=new l.e,i=new St.k,n=new l.e,r=new l.e,a=new l.e,o=this.createIter(s,i,n);for(let l=0;l<this.numSplats;++l)o.read(l),Tf(mf,s,i),mf.mul2(e,mf),r.set(-2*n.x,-2*n.y,-2*n.z),a.set(2*n.x,2*n.y,2*n.z),t.immediate.drawWireAlignedBox(r,a,Sf,!0,t.defaultDrawLayer,mf)}get isCompressed(){return!1}get shBands(){return{9:1,24:2,45:3}[(()=>{for(let t=0;t<45;++t)if(!this.getProp(`f_rest_${t}`))return t;return 45})()]??0}calcMortonOrder(){const t=t=>{let e=t[0],s=t[0];for(let i=1;i<t.length;i++)t[i]<e&&(e=t[i]),t[i]>s&&(s=t[i]);return{min:e,max:s}},e=(t,e,s)=>{const i=t=>t=153391689&((t=51130563&((t=50393103&((t=4278190335&((t&=1023)^t<<16))^t<<8))^t<<4))^t<<2);return(i(s)<<2)+(i(e)<<1)+i(t)},s=this.getProp("x"),i=this.getProp("y"),n=this.getProp("z"),{min:r,max:a}=t(s),{min:o,max:l}=t(i),{min:h,max:c}=t(n),d=r===a?0:1024/(a-r),u=o===l?0:1024/(l-o),f=h===c?0:1024/(c-h),p=new Map;for(let v=0;v<this.numSplats;v++){const t=e(Math.min(1023,Math.floor((s[v]-r)*d)),Math.min(1023,Math.floor((i[v]-o)*u)),Math.min(1023,Math.floor((n[v]-h)*f))),a=p.get(t);a?a.push(v):p.set(t,[v])}const m=Array.from(p.keys()).sort((t,e)=>t-e),_=new Uint32Array(this.numSplats);let g=0;for(let v=0;v<m.length;++v){const t=p.get(m[v]);for(let e=0;e<t.length;++e)_[g++]=t[e]}return _}reorder(t){const e=new Map,s=s=>{const i=new s.constructor((t=>{if(e.has(t)){const s=e.get(t);return e.delete(t),s}return new ArrayBuffer(t)})(s.byteLength));for(let e=0;e<t.length;e++)i[e]=s[t[e]];var n;return n=s.buffer,e.set(n.byteLength,n),i};this.elements.forEach(t=>{t.properties.forEach(t=>{t.storage&&(t.storage=s(t.storage))})})}reorderData(){this.reorder(this.calcMortonOrder())}}const bf=.28209479177387814,Ef=t=>t.read(0,0,t.width,t.height,{mipLevel:0,face:0,immediate:!0}),Af=(t,e)=>{for(const s in e)t.resolve(s).setValue(e[s])};class Cf{constructor(t,e,s,i,n,r){const a=(t,e,s)=>t*(1-s)+e*s,{meta:o,shBands:l}=t,{means:h,scales:c,sh0:d,shN:u}=o,f=e&&t.means_l._levels[0],p=e&&t.means_u._levels[0],m=s&&t.quats._levels[0],_=i&&t.scales._levels[0],g=n&&t.sh0._levels[0],v=r&&t.sh_labels._levels[0],S=r&&t.sh_centroids._levels[0],y=2/Math.sqrt(2),x={1:3,2:8,3:15}[l]??0;this.read=l=>{if(e){const t=a(h.mins[0],h.maxs[0],((p[4*l+0]<<8)+f[4*l+0])/65535),s=a(h.mins[1],h.maxs[1],((p[4*l+1]<<8)+f[4*l+1])/65535),i=a(h.mins[2],h.maxs[2],((p[4*l+2]<<8)+f[4*l+2])/65535);e.x=Math.sign(t)*(Math.exp(Math.abs(t))-1),e.y=Math.sign(s)*(Math.exp(Math.abs(s))-1),e.z=Math.sign(i)*(Math.exp(Math.abs(i))-1)}if(s){const t=(m[4*l+0]/255-.5)*y,e=(m[4*l+1]/255-.5)*y,i=(m[4*l+2]/255-.5)*y,n=Math.sqrt(Math.max(0,1-(t*t+e*e+i*i)));switch(m[4*l+3]-252){case 0:s.set(t,e,i,n);break;case 1:s.set(n,e,i,t);break;case 2:s.set(e,n,i,t);break;case 3:s.set(e,i,n,t)}}if(i)if(2===o.version){const t=c.codebook[_[4*l+0]],e=c.codebook[_[4*l+1]],s=c.codebook[_[4*l+2]];i.set(t,e,s)}else{const t=a(c.mins[0],c.maxs[0],_[4*l+0]/255),e=a(c.mins[1],c.maxs[1],_[4*l+1]/255),s=a(c.mins[2],c.maxs[2],_[4*l+2]/255);i.set(t,e,s)}if(n)if(2===o.version){const t=d.codebook[g[4*l+0]],e=d.codebook[g[4*l+1]],s=d.codebook[g[4*l+2]],i=g[4*l+3]/255;n.set(.5+t*bf,.5+e*bf,.5+s*bf,i)}else{const t=a(d.mins[0],d.maxs[0],g[4*l+0]/255),e=a(d.mins[1],d.maxs[1],g[4*l+1]/255),s=a(d.mins[2],d.maxs[2],g[4*l+2]/255),i=a(d.mins[3],d.maxs[3],g[4*l+3]/255);n.set(.5+t*bf,.5+e*bf,.5+s*bf,1/(1+Math.exp(-i)))}if(r){const e=v[4*l+0]+(v[4*l+1]<<8),s=e%64*x,i=Math.floor(e/64);if(2===o.version)for(let n=0;n<3;++n)for(let e=0;e<x;++e)r[15*n+e]=u.codebook[S[4*(s+e)+n+i*t.sh_centroids.width*4]];else for(let n=0;n<3;++n)for(let e=0;e<x;++e)r[15*n+e]=a(u.mins,u.maxs,S[4*(s+e)+n+i*t.sh_centroids.width*4]/255)}}}}class Pf{destroy(){this.means_l?.destroy(),this.means_u?.destroy(),this.quats?.destroy(),this.scales?.destroy(),this.sh0?.destroy(),this.sh_centroids?.destroy(),this.sh_labels?.destroy(),this.packedTexture?.destroy(),this.packedSh0?.destroy(),this.packedShN?.destroy()}createIter(t,e,s,i,n){return new Cf(this,t,e,s,i,n)}calcAabb(t){const{mins:e,maxs:s}=this.meta.means,i=t=>Math.sign(t)*(Math.exp(Math.abs(t))-1);t.center.set(.5*(i(e[0])+i(s[0])),.5*(i(e[1])+i(s[1])),.5*(i(e[2])+i(s[2]))),t.halfExtents.set(.5*(i(s[0])-i(e[0])),.5*(i(s[1])-i(e[1])),.5*(i(s[2])-i(e[2])))}getCenters(t){const{meta:e,means_l:s,means_u:i,numSplats:n}=this,{means:r}=e,a=new Uint32Array(i._levels[0].buffer),o=new Uint32Array(s._levels[0].buffer),l=r.mins[0]/65535,h=r.mins[1]/65535,c=r.mins[2]/65535,d=r.maxs[0]/65535,u=r.maxs[1]/65535,f=r.maxs[2]/65535;for(let p=0;p<n;p++){const e=p,s=a[e],i=o[e],n=s<<8&65280|255&i,r=65280&s|i>>>8&255,m=s>>>8&65280|i>>>16&255,_=l*(65535-n)+d*n,g=h*(65535-r)+u*r,v=c*(65535-m)+f*m,S=_<0?-_:_,y=g<0?-g:g,x=v<0?-v:v;t[3*p]=(_<0?-1:1)*(Math.exp(S)-1),t[3*p+1]=(g<0?-1:1)*(Math.exp(y)-1),t[3*p+2]=(v<0?-1:1)*(Math.exp(x)-1)}}calcFocalPoint(t,e){t.set(0,0,0)}get isSogs(){return!0}get shBands(){return{192:1,512:2,960:3}[this.sh_centroids?.width]??0}async decompress(){const t=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3"],{shBands:e}=this,{means_l:s,means_u:i,quats:n,scales:r,sh0:a,sh_labels:o,sh_centroids:h}=this;if(s._levels[0]=await Ef(s),i._levels[0]=await Ef(i),n._levels[0]=await Ef(n),r._levels[0]=await Ef(r),a._levels[0]=await Ef(a),e>0){o._levels[0]=await Ef(o),h._levels[0]=await Ef(h);const e=[];for(let t=0;t<45;++t)e.push(`f_rest_${t}`);t.splice(t.indexOf("f_dc_0")+1,0,...e)}const c={};t.forEach(t=>{c[t]=new Float32Array(this.numSplats)});const d=new l.e,u=new St.k,f=new l.e,p=new w.Z,m=e>0?new Float32Array(45):null,_=this.createIter(d,u,f,p,m);for(let l=0;l<this.numSplats;++l)if(_.read(l),c.x[l]=d.x,c.y[l]=d.y,c.z[l]=d.z,c.rot_1[l]=u.x,c.rot_2[l]=u.y,c.rot_3[l]=u.z,c.rot_0[l]=u.w,c.scale_0[l]=f.x,c.scale_1[l]=f.y,c.scale_2[l]=f.z,c.f_dc_0[l]=(p.x-.5)/bf,c.f_dc_1[l]=(p.y-.5)/bf,c.f_dc_2[l]=(p.z-.5)/bf,c.opacity[l]=p.w<=0?-40:p.w>=1?40:-Math.log(1/p.w-1),m)for(let t=0;t<45;++t)c[`f_rest_${t}`][l]=m[t];return new wf([{name:"vertex",count:this.numSplats,properties:t.map(t=>({name:t,type:"float",byteSize:4,storage:c[t]}))}])}packGpuMemory(){const{meta:t,means_l:e,means_u:s,quats:i,scales:n,sh0:r,sh_labels:a,numSplats:o}=this,{device:l}=e,{scope:h}=l,c=2===t.version?"v2":"v1",d=V.createShader(l,{uniqueName:`GsplatSogsReorderShader-${c}`,attributes:{vertex_position:x.JYe},vertexChunk:"fullscreenQuadVS",fragmentGLSL:'\n#include "gsplatPackingPS"\nuniform highp sampler2D means_l;\nuniform highp sampler2D means_u;\nuniform highp sampler2D quats;\nuniform highp sampler2D scales;\nuniform highp sampler2D sh0;\nuniform highp sampler2D sh_labels;\nuniform highp uint numSplats;\n#ifdef REORDER_V1\n\tfloat sigmoid(float x) { return 1.0 / (1.0 + exp(-x)); }\n\tvec3 vmin(vec3 v) { return vec3(min(min(v.x, v.y), v.z)); }\n\tvec3 vmax(vec3 v) { return vec3(max(max(v.x, v.y), v.z)); }\n\tvec3 resolve(vec3 m, vec3 M, vec3 v) { return (mix(m, M, v) - vmin(m)) / (vmax(M) - vmin(m)); }\n\t\n\tuniform vec3 scalesMins;\n\tuniform vec3 scalesMaxs;\n\tuniform vec4 sh0Mins;\n\tuniform vec4 sh0Maxs;\n#else\n\tuniform vec4 scales_codebook[64];\n\tuniform vec4 sh0_codebook[64];\n#endif\nvoid main(void) {\n\tint w = int(textureSize(means_l, 0).x);\n\tivec2 uv = ivec2(gl_FragCoord.xy);\n\tif (uint(uv.x + uv.y * w) >= numSplats) {\n\t\tdiscard;\n\t}\n\tvec3 meansLSample   = texelFetch(means_l, uv, 0).xyz;\n\tvec3 meansUSample   = texelFetch(means_u, uv, 0).xyz;\n\tvec4 quatsSample\t= texelFetch(quats, uv, 0);\n\tvec3 scalesSample   = texelFetch(scales, uv, 0).xyz;\n\tvec4 sh0Sample\t  = texelFetch(sh0, uv, 0);\n\tvec2 shLabelsSample = texelFetch(sh_labels, uv, 0).xy;\n\t#ifdef REORDER_V1\n\t\tuint scale = pack101010(resolve(scalesMins, scalesMaxs, scalesSample));\n\t\tuint sh0 = pack111110(resolve(sh0Mins.xyz, sh0Maxs.xyz, sh0Sample.xyz));\n\t\tfloat alpha = sigmoid(mix(sh0Mins.w, sh0Maxs.w, sh0Sample.w));\n\t#else\n\t\tuint scale = pack101010(resolveCodebook(scalesSample, scales_codebook));\n\t\tuint sh0 = pack111110(resolveCodebook(sh0Sample.xyz, sh0_codebook));\n\t\tfloat alpha = sh0Sample.w;\n\t#endif\n\tuint qmode = uint(quatsSample.w * 255.0) - 252u;\n\tpcFragColor0 = uvec4(\n\t\tpack8888(vec4(meansLSample, shLabelsSample.x)),\n\t\tpack8888(vec4(meansUSample, shLabelsSample.y)),\n\t\tpack8888(vec4(quatsSample.xyz, alpha)),\n\t\t(scale << 2u) | qmode\n\t);\n\tpcFragColor1 = unpack8888(sh0);\n}\n',fragmentWGSL:'\n#include "gsplatPackingPS"\nvar means_l: texture_2d<f32>;\nvar means_u: texture_2d<f32>;\nvar quats: texture_2d<f32>;\nvar scales: texture_2d<f32>;\nvar sh0: texture_2d<f32>;\nvar sh_labels: texture_2d<f32>;\nuniform numSplats: u32;\n#ifdef REORDER_V1\n\tfn sigmoid(x: f32) -> f32 { return 1.0 / (1.0 + exp(-x)); }\n\tfn vmin(v: vec3f) -> vec3f { return vec3f(min(min(v.x, v.y), v.z)); }\n\tfn vmax(v: vec3f) -> vec3f { return vec3f(max(max(v.x, v.y), v.z)); }\n\tfn resolve(m: vec3f, M: vec3f, v: vec3f) -> vec3f { return (mix(m, M, v) - vmin(m)) / (vmax(M) - vmin(m)); }\n\tuniform scalesMins: vec3f;\n\tuniform scalesMaxs: vec3f;\n\tuniform sh0Mins: vec4f;\n\tuniform sh0Maxs: vec4f;\n#else\n\tuniform scales_codebook: array<vec4f, 64>;\n\tuniform sh0_codebook: array<vec4f, 64>;\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet w: u32 = textureDimensions(means_l, 0).x;\n\tlet uv: vec2<u32> = vec2<u32>(input.position.xy);\n\tif (uv.x + uv.y * w >= uniform.numSplats) {\n\t\tdiscard;\n\t\treturn output;\n\t}\n\tlet meansLSample: vec3<f32> = textureLoad(means_l, uv, 0).xyz;\n\tlet meansUSample: vec3<f32> = textureLoad(means_u, uv, 0).xyz;\n\tlet quatsSample: vec4<f32> = textureLoad(quats, uv, 0);\n\tlet scalesSample: vec3<f32> = textureLoad(scales, uv, 0).xyz;\n\tlet sh0Sample: vec4f = textureLoad(sh0, uv, 0);\n\tlet shLabelsSample: vec2<f32> = textureLoad(sh_labels, uv, 0).xy;\n\t#ifdef REORDER_V1\n\t\tlet scale = pack101010(resolve(uniform.scalesMins, uniform.scalesMaxs, scalesSample));\n\t\tlet sh0 = pack111110(resolve(uniform.sh0Mins.xyz, uniform.sh0Maxs.xyz, sh0Sample.xyz));\n\t\tlet alpha = sigmoid(mix(uniform.sh0Mins.w, uniform.sh0Maxs.w, sh0Sample.w));\n\t#else\n\t\tlet scale = pack101010(resolveCodebook(scalesSample, &uniform.scales_codebook));\n\t\tlet sh0 = pack111110(resolveCodebook(sh0Sample.xyz, &uniform.sh0_codebook));\n\t\tlet alpha = sh0Sample.w;\n\t#endif\n\tlet qmode = u32(quatsSample.w * 255.0) - 252u;\n\toutput.color = vec4u(\n\t\tpack8888(vec4f(meansLSample, shLabelsSample.x)),\n\t\tpack8888(vec4f(meansUSample, shLabelsSample.y)),\n\t\tpack8888(vec4f(quatsSample.xyz, alpha)),\n\t\t(scale << 2u) | qmode\n\t);\n\toutput.color1 = unpack8888(sh0);\n\treturn output;\n}\n',fragmentOutputTypes:["uvec4","vec4"],fragmentIncludes:new Map([["gsplatPackingPS",l.isWebGPU?br:yr]]),fragmentDefines:2===t.version?void 0:new Map([["REORDER_V1","1"]])}),u=new T.O({colorBuffers:[this.packedTexture,this.packedSh0],depth:!1,mipLevel:0});l.setCullMode(x.pLF),l.setBlendState(re.t.NOBLEND),l.setDepthState(q.H.NODEPTH),Af(h,{means_l:e,means_u:s,quats:i,scales:n,sh0:r,sh_labels:a??e,numSplats:o,"scales_codebook[0]":this.meta.scales.codebook,"sh0_codebook[0]":this.meta.sh0.codebook,scalesMins:t.scales.mins,scalesMaxs:t.scales.maxs,sh0Mins:t.sh0.mins,sh0Maxs:t.sh0.maxs}),Z(l,u,d),u.destroy()}packShMemory(){const{meta:t,sh_centroids:e}=this,{device:s}=e,{scope:i}=s,n=2===t.version?"v2":"v1",r=V.createShader(s,{uniqueName:`GsplatSogsReorderShShader-${n}`,attributes:{vertex_position:x.JYe},vertexChunk:"fullscreenQuadVS",fragmentGLSL:'\n#include "gsplatPackingPS"\nuniform highp sampler2D sh_centroids;\nuniform vec4 shN_codebook[64];\nvoid main(void) {\n\tivec2 uv = ivec2(gl_FragCoord.xy);\n\tvec3 shNSample = texelFetch(sh_centroids, uv, 0).xyz;\n#ifdef REORDER_V1\n\tpcFragColor0 = unpack8888(pack111110(shNSample));\n#else\n\tpcFragColor0 = unpack8888(pack111110(resolveCodebook(shNSample, shN_codebook)));\n#endif\n}\n',fragmentWGSL:'\n#include "gsplatPackingPS"\nvar sh_centroids: texture_2d<f32>;\nuniform shN_codebook: array<vec4f, 64>;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tvar uv = vec2i(input.position.xy);\n\tvar shNSample = textureLoad(sh_centroids, uv, 0).xyz;\n#ifdef REORDER_V1\n\toutput.color = unpack8888(pack111110(shNSample));\n#else\n\toutput.color = unpack8888(pack111110(resolveCodebook(shNSample, &uniform.shN_codebook)));\n#endif\n\treturn output;\n}\n',fragmentIncludes:new Map([["gsplatPackingPS",s.isWebGPU?br:yr]]),fragmentDefines:2===t.version?void 0:new Map([["REORDER_V1","1"]])}),a=new T.O({colorBuffer:this.packedShN,depth:!1,mipLevel:0});s.setCullMode(x.pLF),s.setBlendState(re.t.NOBLEND),s.setDepthState(q.H.NODEPTH),Af(i,{sh_centroids:e,"shN_codebook[0]":this.meta.shN.codebook}),Z(s,a,r),a.destroy()}async prepareGpuData(){const{device:t,height:e,width:s}=this.means_l;this.means_l._levels[0]=await Ef(this.means_l),this.means_u._levels[0]=await Ef(this.means_u),this.packedTexture=new Q.g(t,{name:"sogsPackedTexture",width:s,height:e,format:x.zbM,mipmaps:!1}),this.packedSh0=new Q.g(t,{name:"sogsPackedSh0",width:s,height:e,format:x.Lxj,mipmaps:!1}),this.packedShN=this.sh_centroids&&new Q.g(t,{name:"sogsPackedShN",width:this.sh_centroids.width,height:this.sh_centroids.height,format:x.Lxj,mipmaps:!1}),t.on("devicerestored",()=>{this.packGpuMemory(),this.packedShN&&this.packShMemory()}),this.packGpuMemory(),this.packedShN&&this.packShMemory()}reorderData(){return this.prepareGpuData()}}const Df=new o.$,Lf=new l.e,Mf=new l.e,If=[0,0];class Rf{constructor(t,e={}){this.options={},this.sorter=null,this.lastCameraPosition=new l.e,this.lastCameraDirection=new l.e,this.resolveSH=null,this.cameras=[],this.resource=t,this.orderTexture=t.createTexture("splatOrder",x.zc3,t.evalTextureSize(t.numSplats)),e.material?(this._material=e.material,this._material.setParameter("splatOrder",this.orderTexture)):(this._material=new Ln({uniqueName:"SplatMaterial",vertexGLSL:'#include "gsplatVS"',fragmentGLSL:'#include "gsplatPS"',vertexWGSL:'#include "gsplatVS"',fragmentWGSL:'#include "gsplatPS"',attributes:{vertex_position:x.JYe,vertex_id_attrib:x.pov}}),this.configureMaterial(this._material),this._material.update()),this.meshInstance=new pt(t.mesh,this._material),this.meshInstance.setInstancing(t.instanceIndices,!0),this.meshInstance.gsplatInstance=this,this.meshInstance.instancingCount=0;const s=t.centers.slice(),i=t.chunks?.slice();this.sorter=new pf,this.sorter.init(this.orderTexture,s,i),this.sorter.on("updated",t=>{this.meshInstance.instancingCount=Math.ceil(t/Bu.instanceSize),this.material.setParameter("numSplats",t)}),this.setHighQualitySH(e.highQualitySH??!1)}destroy(){this.resolveSH?.destroy(),this.material?.destroy(),this.meshInstance?.destroy(),this.sorter?.destroy()}set material(t){this._material!==t&&(this._material=t,this._material.setParameter("splatOrder",this.orderTexture),this.meshInstance&&(this.meshInstance.material=t))}get material(){return this._material}configureMaterial(t,e={}){this.resource.configureMaterial(t),t.setParameter("numSplats",0),t.setParameter("splatOrder",this.orderTexture),t.setParameter("alphaClip",.3),t.setDefine("DITHER_"+(e.dither?"BLUENOISE":"NONE"),""),t.cull=x.pLF,t.blendType=e.dither?F.RjB:F.bYZ,t.depthWrite=!!e.dither}updateViewport(t){const e=t?.camera,s=e?.renderTarget,{width:i,height:n}=s??this.resource.device;If[0]=i,If[1]=n;const r=e?.camera?.xr;r?.active&&2===r.views.list.length&&(If[0]*=.5),this.material.setParameter("viewport",If)}sort(t){if(this.sorter){const e=t.getWorldTransform();e.getTranslation(Lf),e.getZ(Mf);const s=this.meshInstance.node.getWorldTransform(),i=Df.invert(s);i.transformPoint(Lf,Lf),i.transformVector(Mf,Mf),Lf.equalsApprox(this.lastCameraPosition)&&Mf.equalsApprox(this.lastCameraDirection)||(this.lastCameraPosition.copy(Lf),this.lastCameraDirection.copy(Mf),this.sorter.setCamera(Lf,Mf))}this.updateViewport(t)}update(){if(this.cameras.length>0){const t=this.cameras[0];this.sort(t._node),this.resolveSH?.render(t._node,this.meshInstance.node.getWorldTransform()),this.cameras.length=0}}setHighQualitySH(t){const{resource:e}=this,{gsplatData:s}=e;s instanceof Pf&&s.shBands>0&&t===!!this.resolveSH&&(this.resolveSH?(this.resolveSH.destroy(),this.resolveSH=null):this.resolveSH=new uf(e.device,this))}}class Ff extends Ir{constructor(t,e){super(t,e),this._layers=[F.uEK],this._instance=null,this._placement=null,this._materialTmp=null,this._highQualitySH=!0,this._customAabb=null,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._castShadows=!1,this._unified=!1,this._assetReference=new Ec("asset",this,t.app.assets,{add:this._onGSplatAssetAdded,load:this._onGSplatAssetLoad,remove:this._onGSplatAssetRemove,unload:this._onGSplatAssetUnload},this),e.on("remove",this.onRemoveChild,this),e.on("removehierarchy",this.onRemoveChild,this),e.on("insert",this.onInsertChild,this),e.on("inserthierarchy",this.onInsertChild,this)}set customAabb(t){this._customAabb=t,this._instance?.meshInstance?.setCustomAabb(this._customAabb),this._placement&&this._customAabb&&(this._placement.aabb=this._customAabb)}get customAabb(){return this._customAabb}set instance(t){if(this.destroyInstance(),this._instance=t,this._instance){const t=this._instance.meshInstance;t.node||(t.node=this.entity),t.castShadow=this._castShadows,t.setCustomAabb(this._customAabb),this.enabled&&this.entity.enabled&&this.addToLayers()}}get instance(){return this._instance}set material(t){this._instance?this._instance.material=t:this._materialTmp=t}get material(){return this._instance?.material??this._materialTmp??null}set highQualitySH(t){t!==this._highQualitySH&&(this._highQualitySH=t,this._instance?.setHighQualitySH(t))}get highQualitySH(){return this._highQualitySH}set castShadows(t){if(this._castShadows!==t){const e=this.instance?.meshInstance;if(e){const s=this.layers,i=this.system.app.scene;if(this._castShadows&&!t)for(let t=0;t<s.length;t++){const s=i.layers.getLayerById(this.layers[t]);s&&s.removeShadowCasters([e])}if(e.castShadow=t,!this._castShadows&&t)for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);n&&n.addShadowCasters([e])}}this._castShadows=t}}get castShadows(){return this._castShadows}set unified(t){this.enabled&&this.entity.enabled||(this._unified=t,this._onGSplatAssetAdded())}get unified(){return this._unified}set layers(t){this.removeFromLayers(),this._layers.length=0;for(let e=0;e<t.length;e++)this._layers[e]=t[e];this.enabled&&this.entity.enabled&&this.addToLayers()}get layers(){return this._layers}set asset(t){const e=t instanceof Kn.V?t.id:t;this._assetReference.id!==e&&(this._assetReference.asset&&this._assetReference.asset.resource&&this._onGSplatAssetRemove(),this._assetReference.id=e,this._assetReference.asset&&this._onGSplatAssetAdded())}get asset(){return this._assetReference.id}destroyInstance(){this._placement&&(this.removeFromLayers(),this._placement=null),this._instance&&(this.removeFromLayers(),this._instance?.destroy(),this._instance=null)}addToLayers(){if(this._placement){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++)t.getLayerById(this._layers[e])?.addGSplatPlacement(this._placement);return}const t=this.instance?.meshInstance;if(t){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++)e.getLayerById(this._layers[s])?.addMeshInstances([t])}}removeFromLayers(){if(this._placement){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++)t.getLayerById(this._layers[e])?.removeGSplatPlacement(this._placement);return}const t=this.instance?.meshInstance;if(t){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++)e.getLayerById(this._layers[s])?.removeMeshInstances([t])}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){this.enabled&&this.entity.enabled&&(this._instance||this._placement)&&this.addToLayers()}onRemove(){this.destroyInstance(),this.asset=null,this._assetReference.id=null,this.entity.off("remove",this.onRemoveChild,this),this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addToLayers(),t.off("add",this.onLayerAdded,this),t.off("remove",this.onLayerRemoved,this),e.on("add",this.onLayerAdded,this),e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){this.layers.indexOf(t.id)<0||this._instance&&t.addMeshInstances(this._instance.meshInstance)}onLayerRemoved(t){this.layers.indexOf(t.id)<0||this._instance&&t.removeMeshInstances(this._instance.meshInstance)}onEnable(){const t=this.system.app.scene,e=t.layers;this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this),e&&(this._evtLayerAdded=e.on("add",this.onLayerAdded,this),this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)),this._instance||this._placement?this.addToLayers():this.asset&&this._onGSplatAssetAdded()}onDisable(){const t=this.system.app.scene.layers;this._evtLayersChanged?.off(),this._evtLayersChanged=null,t&&(this._evtLayerAdded?.off(),this._evtLayerAdded=null,this._evtLayerRemoved?.off(),this._evtLayerRemoved=null),this.removeFromLayers()}hide(){this._instance&&(this._instance.meshInstance.visible=!1)}show(){this._instance&&(this._instance.meshInstance.visible=!0)}_onGSplatAssetAdded(){this._assetReference.asset&&(this._assetReference.asset.resource?this._onGSplatAssetLoad():this.enabled&&this.entity.enabled&&this.system.app.assets.load(this._assetReference.asset))}_onGSplatAssetLoad(){this.destroyInstance();const t=this._assetReference.asset;this.unified?(this._placement=null,t&&(this._placement=new zu(t.resource,this.entity))):t&&(this.instance=new Rf(t.resource,{material:this._materialTmp,highQualitySH:this._highQualitySH}),this._materialTmp=null),t&&(this.customAabb=t.resource.aabb.clone())}_onGSplatAssetUnload(){this.destroyInstance()}_onGSplatAssetRemove(){this._onGSplatAssetUnload()}}class Of{constructor(){this.enabled=!0}}class Nf{load(t){}unload(t){}getResource(t){}}class kf extends Nf{constructor(t){super(),this._urlToAsset=new Map,this._registry=t}load(t){let e=this._urlToAsset.get(t);e||(e=this._registry.getByUrl(t),e||(e=new Kn.V(t,"gsplat",{url:t}),this._registry.add(e)),this._urlToAsset.set(t,e)),e.loaded||e.loading||this._registry.load(e)}unload(t){const e=this._urlToAsset.get(t);e&&(e.unload(),this._urlToAsset.delete(t))}getResource(t){const e=this._urlToAsset.get(t);return e?.resource}}const Bf=["enabled"],Uf=["unified","castShadows","material","highQualitySH","asset","layers"];class zf extends Rr{constructor(t){super(t),this.id="gsplat",this.ComponentType=Ff,this.DataType=Of,this.schema=Bf;const e=new kf(t.assets);t.renderer.gsplatDirector=new lf(t.graphicsDevice,t.scene,e),this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){e.layers&&e.layers.length&&(e.layers=e.layers.slice(0));for(let i=0;i<Uf.length;i++)e.hasOwnProperty(Uf[i])&&(t[Uf[i]]=e[Uf[i]]);e.aabbCenter&&e.aabbHalfExtents&&(t.customAabb=new y(new l.e(e.aabbCenter),new l.e(e.aabbHalfExtents))),super.initializeComponentData(t,e,Bf)}cloneComponent(t,e){const s=t.gsplat,i={};Uf.forEach(t=>{if("material"===t){const e=s[t];e&&(i[t]=e.clone())}else i[t]=s[t]}),i.enabled=s.enabled;const n=this.addComponent(e,i);return s.customAabb&&(n.customAabb=s.customAabb.clone()),n}onRemove(t,e){e.onRemove()}}Ir._buildAccessors(Ff.prototype,Bf);class Vf extends r.J{static{this.EVENT_SETMESHES="set:meshes"}set meshes(t){this.decRefMeshes(),this._meshes=t,this.incRefMeshes(),this.fire("set:meshes",t)}get meshes(){return this._meshes}destroy(){this.meshes=null}decRefMeshes(){this._meshes?.forEach((t,e)=>{t&&(t.decRefCount(),t.refCount<1&&(t.destroy(),this._meshes[e]=null))})}incRefMeshes(){this._meshes?.forEach(t=>{t?.incRefCount()})}constructor(...t){super(...t),this._meshes=null}}function Gf(t){const e=this;if(!e.resource)return;const s=t.resource,i=s.renders&&s.renders[e.data.renderIndex];i&&(e.resource.meshes=i.resource.meshes)}function Hf(t){const e=this;e.registry.off(`load:${t.id}`,Gf,e),e.registry.on(`load:${t.id}`,Gf,e),e.registry.off(`remove:${t.id}`,Wf,e),e.registry.once(`remove:${t.id}`,Wf,e),t.resource?Gf.call(e,t):e.registry.load(t)}function Wf(t){const e=this;e.registry.off(`load:${t.id}`,Gf,e),e.resource&&e.resource.destroy()}class Xf extends ir{constructor(t){super(t,"render"),this._registry=t.assets}open(t,e){return new Vf}patch(t,e){if(!t.data.containerAsset)return;const s=e.get(t.data.containerAsset);s?Hf.call(t,s):e.once(`add:${t.data.containerAsset}`,Hf,t)}}class $f{constructor(t,e,s,i){this.time=t,this.position=e,this.rotation=s,this.scale=i}}class qf{constructor(){this._name="",this._keys=[]}}class jf{constructor(){this.name="",this.duration=0,this._nodes=[],this._nodeDict={}}getNode(t){return this._nodeDict[t]}addNode(t){this._nodes.push(t),this._nodeDict[t._name]=t}get nodes(){return this._nodes}}class Yf extends gs.p{constructor(t,e,{preferHighPrecision:s=!1}={}){super(),this.device=e;const i=e;this.preferHighPrecision=s,this._targets=t.slice();const n=i.textureHalfFloatRenderable?x.WBN:void 0,r=i.textureFloatRenderable?x.s7h:void 0;this._renderTextureFormat=this.preferHighPrecision?r??n:n??r,this._renderTextureFormat=this._renderTextureFormat??x.bSO,this.intRenderFormat=(0,x.YfE)(this._renderTextureFormat),this._textureFormat=this.preferHighPrecision?x.s7h:x.WBN,this._init(),this._updateMorphFlags()}destroy(){this.vertexBufferIds?.destroy(),this.vertexBufferIds=null,this.targetsTexturePositions?.destroy(),this.targetsTexturePositions=null,this.targetsTextureNormals?.destroy(),this.targetsTextureNormals=null}get aabb(){if(!this._aabb){const t=new l.e,e=new l.e;for(let s=0;s<this._targets.length;s++){const i=this._targets[s].aabb;t.min(i.getMin()),e.max(i.getMax())}this._aabb=new y,this._aabb.setMinMax(t,e)}return this._aabb}get morphPositions(){return this._morphPositions}get morphNormals(){return this._morphNormals}_init(){this._initTextureBased();for(let t=0;t<this._targets.length;t++)this._targets[t]._postInit()}_findSparseSet(t,e,s){let i=1;const n=t[0].length;for(let r=0;r<n;r+=3){let n=!1;for(let e=0;e<t.length;e++){const s=t[e];if(0!==s[r]||0!==s[r+1]||0!==s[r+2]){n=!0;break}}n?(e.push(i),s.push(r/3),i++):e.push(0)}return i}_initTextureBased(){const t=[],e=[],s=this._targets;for(let m=0;m<s.length;m++){const i=s[m];i.options.deltaPositions&&(t.push(i.options.deltaPositions),e.push(!0)),i.options.deltaNormals&&(t.push(i.options.deltaNormals),e.push(!1))}const i=[],n=[],r=this._findSparseSet(t,i,n),a=this.device.maxTextureSize;let o=Math.ceil(Math.sqrt(r));o=Math.min(o,a);const l=Math.ceil(r/o);if(l>a)return;this.morphTextureWidth=o,this.morphTextureHeight=l;let h=!1;const c=vt.float2Half;this._textureFormat===x.WBN&&(h=!0);const d=[],u=[],f=o*l*4;for(let m=0;m<t.length;m++){const s=t[m],i=this._textureFormat===x.WBN?new Uint16Array(f):new Float32Array(f);if((e[m]?d:u).push(i),h)for(let t=0;t<n.length;t++){const e=3*n[t],r=4*t+4;i[r]=c(s[e]),i[r+1]=c(s[e+1]),i[r+2]=c(s[e+2])}else for(let t=0;t<n.length;t++){const e=3*n[t],r=4*t+4;i[r]=s[e],i[r+1]=s[e+1],i[r+2]=s[e+2]}}d.length>0&&(this.targetsTexturePositions=this._createTexture("MorphPositionsTexture",this._textureFormat,s.length,[d])),u.length>0&&(this.targetsTextureNormals=this._createTexture("MorphNormalsTexture",this._textureFormat,s.length,[u]));const p=[{semantic:x.FHg,components:1,type:x.Bz3,asInt:!0}];return this.vertexBufferIds=new ys.R(this.device,new xs.y(this.device,p,i.length),i.length,{data:new Uint32Array(i)}),!0}get targets(){return this._targets}_updateMorphFlags(){this._morphPositions=!1,this._morphNormals=!1;for(let t=0;t<this._targets.length;t++){const e=this._targets[t];e.morphPositions&&(this._morphPositions=!0),e.morphNormals&&(this._morphNormals=!0)}}_createTexture(t,e,s,i){return new Q.g(this.device,{levels:i,arrayLength:s,width:this.morphTextureWidth,height:this.morphTextureHeight,format:e,cubemap:!1,mipmaps:!1,minFilter:x.uhC,magFilter:x.uhC,addressU:x.vq6,addressV:x.vq6,name:t})}}class Kf{constructor(t){this.used=!1,this.options=t,this._name=t.name,this._defaultWeight=t.defaultWeight||0,this._aabb=t.aabb,this.deltaPositions=t.deltaPositions,this.morphPositions=!!t.deltaPositions,this.morphNormals=!!t.deltaNormals}get name(){return this._name}get defaultWeight(){return this._defaultWeight}get aabb(){return this._aabb||(this._aabb=new y,this.deltaPositions&&this._aabb.compute(this.deltaPositions)),this._aabb}clone(){return new Kf(this.options)}_postInit(){this.options.preserveData||(this.options=null),this.used=!0}}class Zf{constructor(t,e,s){this.device=t,this.inverseBindPose=e,this.boneNames=s}}class Qf{constructor(t,e,s,i){this._paths=t,this._input=e,this._output=s,this._interpolation=i}get paths(){return this._paths}get input(){return this._input}get output(){return this._output}get interpolation(){return this._interpolation}}class Jf{constructor(t,e){this._components=t,this._data=e}get components(){return this._components}get data(){return this._data}}var tp=s(18365);class ep{destroy(){this.renders&&this.renders.forEach(t=>{t.meshes=null})}}const sp=t=>/^data:[^\n\r,\u2028\u2029]*,.*$/i.test(t),ip=t=>{switch(t){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":default:return 3;case"VEC4":case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16}},np=t=>{switch(t){case 5120:return x.VSW;case 5121:return x.EUX;case 5122:return x.kF;case 5123:return x.rvO;case 5124:return x.uVx;case 5125:return x.Bz3;case 5126:return x.n$B;default:return 0}},rp=t=>{switch(t){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5124:case 5125:case 5126:return 4;default:return 0}},ap={POSITION:x.JYe,NORMAL:x.XF6,TANGENT:x.h3u,COLOR_0:x.F8$,JOINTS_0:x.aVd,WEIGHTS_0:x.Hn_,TEXCOORD_0:x.slc,TEXCOORD_1:x.zEd,TEXCOORD_2:x.GHH,TEXCOORD_3:x.z5t,TEXCOORD_4:x.GWP,TEXCOORD_5:x.NdR,TEXCOORD_6:x.GBD,TEXCOORD_7:x.zZp},op={[x.JYe]:0,[x.XF6]:1,[x.h3u]:2,[x.F8$]:3,[x.aVd]:4,[x.Hn_]:5,[x.slc]:6,[x.zEd]:7,[x.GHH]:8,[x.z5t]:9,[x.GWP]:10,[x.NdR]:11,[x.GBD]:12,[x.zZp]:13},lp=(t,e,s)=>{const i=(t=>{switch(t){case x.VSW:return t=>Math.max(t/127,-1);case x.EUX:return t=>t/255;case x.kF:return t=>Math.max(t/32767,-1);case x.rvO:return t=>t/65535;default:return t=>t}})(s),n=e.length;for(let r=0;r<n;++r)t[r]=i(e[r]);return t},hp=(t,e,s=!1)=>{const i=ip(t.type),n=(t=>{switch(t){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:return null}})(t.componentType);if(!n)return null;let r;if(t.sparse){const s=t.sparse,a={count:s.count,type:"SCALAR"},o=hp(Object.assign(a,s.indices),e,!0),l={count:s.count,type:t.type,componentType:t.componentType},h=hp(Object.assign(l,s.values),e,!0);if(t.hasOwnProperty("bufferView")){const s={bufferView:t.bufferView,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type};r=hp(s,e,!0).slice()}else r=new n(t.count*i);for(let t=0;t<s.count;++t){const e=o[t];for(let s=0;s<i;++s)r[e*i+s]=h[t*i+s]}}else if(t.hasOwnProperty("bufferView")){const a=e[t.bufferView];if(s&&a.hasOwnProperty("byteStride")){const e=i*n.BYTES_PER_ELEMENT,s=new ArrayBuffer(t.count*e),o=new Uint8Array(s);let l=0;for(let i=0;i<t.count;++i){let s=(t.byteOffset||0)+i*a.byteStride;for(let t=0;t<e;++t)o[l++]=a[s++]}r=new n(s)}else r=new n(a.buffer,a.byteOffset+(t.byteOffset||0),t.count*i)}else r=new n(t.count*i);return r},cp=(t,e)=>{const s=hp(t,e,!0);if(s instanceof Float32Array||!t.normalized)return s;const i=new Float32Array(s.length);return lp(i,s,np(t.componentType)),i},dp=t=>{let e=t.min,s=t.max;if(!e||!s)return null;if(t.normalized){const i=np(t.componentType);e=lp([],e,i),s=lp([],s,i)}return new y(new l.e(.5*(s[0]+e[0]),.5*(s[1]+e[1]),.5*(s[2]+e[2])),new l.e(.5*(s[0]-e[0]),.5*(s[1]-e[1]),.5*(s[2]-e[2])))},up=t=>{if(!t.hasOwnProperty("mode"))return x.Qpk;switch(t.mode){case 0:return x._AA;case 1:return x.EEU;case 2:return x.HsS;case 3:return x.PTM;case 4:default:return x.Qpk;case 5:return x.SF$;case 6:return x.zl$}},fp=(t,e)=>{const s=t[x.JYe];if(!s||3!==s.components)return;let i;if(s.size!==s.stride){const t=s.stride/x.sYG[s.type],e=new x.B8J[s.type](s.buffer,s.offset,s.count*t);i=new x.B8J[s.type](3*s.count);for(let n=0;n<s.count;++n)i[3*n+0]=e[n*t+0],i[3*n+1]=e[n*t+1],i[3*n+2]=e[n*t+2]}else i=new x.B8J[s.type](s.buffer,s.offset,3*s.count);const n=s.count;e||(e=(t=>{const e=new Uint16Array(t);for(let s=0;s<t;s++)e[s]=s;return e})(n));const r=Mn(i,e),a=new Float32Array(r.length);a.set(r),t[x.XF6]={buffer:a.buffer,size:12,offset:0,stride:12,count:n,components:3,type:x.n$B}},pp=t=>{const e=new Kn.V(`${t.name}_clone`,t.type,t.file,t.data,t.options);return e.loaded=!0,e.resource=(t=>{const e=new Q.g(t.device,t);return e._levels=(t=>{const e=[];for(let s=0;s<t._levels.length;++s){let i=[];if(t.cubemap)for(let e=0;e<6;++e)i.push(t._levels[s][e]);else i=t._levels[s];e.push(i)}return e})(t),e})(t.resource),t.registry.add(e),e},mp=(t,e,s,i,n,r)=>{const a={},o=[];for(const c in e)e.hasOwnProperty(c)&&ap.hasOwnProperty(c)&&(a[c]=e[c],o.push(`${c}:${e[c]}`));o.sort();const l=o.join();let h=r[l];if(!h){const o={};for(const t in a){const s=i[e[t]],r=hp(s,n),a=n[s.bufferView],l=ap[t],h=ip(s.type)*rp(s.componentType),c=a&&a.hasOwnProperty("byteStride")?a.byteStride:h;o[l]={buffer:r.buffer,size:h,offset:r.byteOffset,stride:c,count:s.count,components:ip(s.type),type:np(s.componentType),normalize:s.normalized}}o.hasOwnProperty(x.XF6)||fp(o,s),h=((t,e)=>{const s=e[x.JYe];if(!s)return null;const i=s.count,n=[];for(const g in e)if(e.hasOwnProperty(g)){const s={semantic:g,components:e[g].components,type:e[g].type,normalize:!!e[g].normalize};xs.y.isElementValid(t,s)||s.components++,n.push(s)}let r,a,o,l,h,c;n.sort((t,e)=>op[t.semantic]-op[e.semantic]);const d=new xs.y(t,n);let u=!0;for(r=0;r<d.elements.length;++r)if(h=d.elements[r],l=e[h.name],c=l.offset-s.offset,l.buffer!==s.buffer||l.stride!==h.stride||l.size!==h.size||c!==h.offset){u=!1;break}const f=new ys.R(t,d,i),p=f.lock(),m=new Uint32Array(p);let _;if(u)_=new Uint32Array(s.buffer,s.offset,i*f.format.size/4),m.set(_);else{let t,s;for(r=0;r<f.format.elements.length;++r){h=f.format.elements[r],t=h.stride/4,l=e[h.name],s=l.stride/4,_=new Uint32Array(l.buffer,l.offset,(l.count-1)*s+(l.size+3)/4);let n=0,c=h.offset/4;const d=Math.floor((l.size+3)/4);for(a=0;a<i;++a){for(o=0;o<d;++o)m[c+o]=_[n+o];n+=s,c+=t}}}return f.unlock(),f})(t,o),r[l]=h}return h},_p=(t,e,s,i,n,r,a,o,l)=>{const h=[];return e.primitives.forEach(c=>{if(c.extensions?.KHR_draco_mesh_compression)h.push(((t,e,s,i,n,r,a)=>{const o=new Us(t);o.aabb=dp(s[e.attributes.POSITION]);const l=[];for(const[h,c]of Object.entries(e.attributes)){const t=s[c],e=ap[h],i=np(t.componentType);l.push({semantic:e,components:ip(t.type),type:i,normalize:t.normalized??(e===x.F8$&&(i===x.EUX||i===x.rvO))})}if(a.push(new Promise((s,n)=>{const r=e.extensions.KHR_draco_mesh_compression;(0,tp.s)(i[r.bufferView].slice().buffer,(i,a)=>{if(i)console.log(i),n(i);else{const i={};for(const[t,e]of Object.entries(r.attributes))i[ap[t]]=a.attributes.indexOf(e);l.sort((t,e)=>i[t.semantic]-i[e.semantic]),e.attributes?.NORMAL||l.splice(1,0,{semantic:"NORMAL",components:3,type:x.n$B});const n=new xs.y(t,l),h=a.vertices.byteLength/n.size,c=h<=65535?x.c02:x.gpl,d=a.indices.byteLength/(h<=65535?2:4),u=new ys.R(t,n,h,{data:a.vertices}),f=new Ss(t,c,d,x.y1K,a.indices);o.vertexBuffer=u,o.indexBuffer[0]=f,o.primitive[0].type=up(e),o.primitive[0].base=0,o.primitive[0].count=f?d:h,o.primitive[0].indexed=!!f,s()}})})),e?.extensions?.KHR_materials_variants){const t=e.extensions.KHR_materials_variants,s={};t.mappings.forEach(t=>{t.variants.forEach(e=>{s[e]=t.material})}),n[o.id]=s}return r[o.id]=e.material,o})(t,c,s,i,r,a,l));else{let l=c.hasOwnProperty("indices")?hp(s[c.indices],i,!0):null;const d=mp(t,c.attributes,l,s,i,n),u=up(c),f=new Us(t);if(f.vertexBuffer=d,f.primitive[0].type=u,f.primitive[0].base=0,f.primitive[0].indexed=null!==l,null!==l){let e;e=l instanceof Uint8Array?x.zYw:l instanceof Uint16Array?x.c02:x.gpl,e===x.zYw&&t.isWebGPU&&(e=x.c02,l=new Uint16Array(l));const s=new Ss(t,e,l.length,x.y1K,l);f.indexBuffer[0]=s,f.primitive[0].count=l.length}else f.primitive[0].count=d.numVertices;if(c.hasOwnProperty("extensions")&&c.extensions.hasOwnProperty("KHR_materials_variants")){const t=c.extensions.KHR_materials_variants,e={};t.mappings.forEach(t=>{t.variants.forEach(s=>{e[s]=t.material})}),r[f.id]=e}a[f.id]=c.material;let p=s[c.attributes.POSITION];if(f.aabb=dp(p),c.hasOwnProperty("targets")){const n=[];c.targets.forEach((t,r)=>{const a={};t.hasOwnProperty("POSITION")&&(p=s[t.POSITION],a.deltaPositions=cp(p,i),a.aabb=dp(p)),t.hasOwnProperty("NORMAL")&&(p=s[t.NORMAL],a.deltaNormals=cp(p,i)),e.hasOwnProperty("extras")&&e.extras.hasOwnProperty("targetNames")?a.name=e.extras.targetNames[r]:a.name=r.toString(10),e.hasOwnProperty("weights")&&(a.defaultWeight=e.weights[r]),a.preserveData=o.morphPreserveData,n.push(new Kf(a))}),f.morph=new Yf(n,t,{preferHighPrecision:o.morphPreferHighPrecision})}h.push(f)}}),h},gp=(t,e,s)=>{let i;const n=t.texCoord;if(n)for(i=0;i<s.length;++i)e[`${s[i]}MapUv`]=n;const r=[0,0],o=[1,1],l=t.extensions?.KHR_texture_transform;if(l){const t=l.offset||r,n=l.scale||o,h=l.rotation?-l.rotation*a.D.RAD_TO_DEG:0,c=new Jt.Z(n[0],n[1]),d=new Jt.Z(t[0],1-n[1]-t[1]);for(i=0;i<s.length;++i)e[`${s[i]}MapTiling`]=c,e[`${s[i]}MapOffset`]=d,e[`${s[i]}MapRotation`]=h}},vp=(t,e,s)=>{let i,n;if(t.hasOwnProperty("diffuseFactor")?(i=t.diffuseFactor,e.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2)),e.opacity=i[3]):(e.diffuse.set(1,1,1),e.opacity=1),t.hasOwnProperty("diffuseTexture")){const i=t.diffuseTexture;n=s[i.index],e.diffuseMap=n,e.diffuseMapChannel="rgb",e.opacityMap=n,e.opacityMapChannel="a",gp(i,e,["diffuse","opacity"])}if(e.useMetalness=!1,t.hasOwnProperty("specularFactor")?(i=t.specularFactor,e.specular.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))):e.specular.set(1,1,1),t.hasOwnProperty("glossinessFactor")?e.gloss=t.glossinessFactor:e.gloss=1,t.hasOwnProperty("specularGlossinessTexture")){const i=t.specularGlossinessTexture;e.specularMap=e.glossMap=s[i.index],e.specularMapChannel="rgb",e.glossMapChannel="a",gp(i,e,["gloss","metalness"])}},Sp=(t,e,s)=>{if(t.hasOwnProperty("clearcoatFactor")?e.clearCoat=.25*t.clearcoatFactor:e.clearCoat=0,t.hasOwnProperty("clearcoatTexture")){const i=t.clearcoatTexture;e.clearCoatMap=s[i.index],e.clearCoatMapChannel="r",gp(i,e,["clearCoat"])}if(t.hasOwnProperty("clearcoatRoughnessFactor")?e.clearCoatGloss=t.clearcoatRoughnessFactor:e.clearCoatGloss=0,t.hasOwnProperty("clearcoatRoughnessTexture")){const i=t.clearcoatRoughnessTexture;e.clearCoatGlossMap=s[i.index],e.clearCoatGlossMapChannel="g",gp(i,e,["clearCoatGloss"])}if(t.hasOwnProperty("clearcoatNormalTexture")){const i=t.clearcoatNormalTexture;e.clearCoatNormalMap=s[i.index],gp(i,e,["clearCoatNormal"]),i.hasOwnProperty("scale")?e.clearCoatBumpiness=i.scale:e.clearCoatBumpiness=1}e.clearCoatGlossInvert=!0},yp=(t,e,s)=>{e.useLighting=!1,e.emissive.copy(e.diffuse),e.emissiveMap=e.diffuseMap,e.emissiveMapUv=e.diffuseMapUv,e.emissiveMapTiling.copy(e.diffuseMapTiling),e.emissiveMapOffset.copy(e.diffuseMapOffset),e.emissiveMapRotation=e.diffuseMapRotation,e.emissiveMapChannel=e.diffuseMapChannel,e.emissiveVertexColor=e.diffuseVertexColor,e.emissiveVertexColorChannel=e.diffuseVertexColorChannel,e.useLighting=!1,e.useSkybox=!1,e.diffuse.set(1,1,1),e.diffuseMap=null,e.diffuseVertexColor=!1},xp=(t,e,s)=>{if(e.useMetalnessSpecularColor=!0,t.hasOwnProperty("specularColorTexture")&&(e.specularMap=s[t.specularColorTexture.index],e.specularMapChannel="rgb",gp(t.specularColorTexture,e,["specular"])),t.hasOwnProperty("specularColorFactor")){const s=t.specularColorFactor;e.specular.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else e.specular.set(1,1,1);t.hasOwnProperty("specularFactor")?e.specularityFactor=t.specularFactor:e.specularityFactor=1,t.hasOwnProperty("specularTexture")&&(e.specularityFactorMapChannel="a",e.specularityFactorMap=s[t.specularTexture.index],gp(t.specularTexture,e,["specularityFactor"]))},Tp=(t,e,s)=>{t.hasOwnProperty("ior")&&(e.refractionIndex=1/t.ior)},wp=(t,e,s)=>{t.hasOwnProperty("dispersion")&&(e.dispersion=t.dispersion)},bp=(t,e,s)=>{e.blendType=F.i96,e.useDynamicRefraction=!0,t.hasOwnProperty("transmissionFactor")&&(e.refraction=t.transmissionFactor),t.hasOwnProperty("transmissionTexture")&&(e.refractionMapChannel="r",e.refractionMap=s[t.transmissionTexture.index],gp(t.transmissionTexture,e,["refraction"]))},Ep=(t,e,s)=>{if(e.useSheen=!0,t.hasOwnProperty("sheenColorFactor")){const s=t.sheenColorFactor;e.sheen.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else e.sheen.set(1,1,1);t.hasOwnProperty("sheenColorTexture")&&(e.sheenMap=s[t.sheenColorTexture.index],gp(t.sheenColorTexture,e,["sheen"])),e.sheenGloss=t.hasOwnProperty("sheenRoughnessFactor")?t.sheenRoughnessFactor:0,t.hasOwnProperty("sheenRoughnessTexture")&&(e.sheenGlossMap=s[t.sheenRoughnessTexture.index],e.sheenGlossMapChannel="a",gp(t.sheenRoughnessTexture,e,["sheenGloss"])),e.sheenGlossInvert=!0},Ap=(t,e,s)=>{if(e.blendType=F.i96,e.useDynamicRefraction=!0,t.hasOwnProperty("thicknessFactor")&&(e.thickness=t.thicknessFactor),t.hasOwnProperty("thicknessTexture")&&(e.thicknessMap=s[t.thicknessTexture.index],e.thicknessMapChannel="g",gp(t.thicknessTexture,e,["thickness"])),t.hasOwnProperty("attenuationDistance")&&(e.attenuationDistance=t.attenuationDistance),t.hasOwnProperty("attenuationColor")){const s=t.attenuationColor;e.attenuation.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}},Cp=(t,e,s)=>{t.hasOwnProperty("emissiveStrength")&&(e.emissiveIntensity=t.emissiveStrength)},Pp=(t,e,s)=>{e.useIridescence=!0,t.hasOwnProperty("iridescenceFactor")&&(e.iridescence=t.iridescenceFactor),t.hasOwnProperty("iridescenceTexture")&&(e.iridescenceMapChannel="r",e.iridescenceMap=s[t.iridescenceTexture.index],gp(t.iridescenceTexture,e,["iridescence"])),t.hasOwnProperty("iridescenceIor")&&(e.iridescenceRefractionIndex=t.iridescenceIor),t.hasOwnProperty("iridescenceThicknessMinimum")&&(e.iridescenceThicknessMin=t.iridescenceThicknessMinimum),t.hasOwnProperty("iridescenceThicknessMaximum")&&(e.iridescenceThicknessMax=t.iridescenceThicknessMaximum),t.hasOwnProperty("iridescenceThicknessTexture")&&(e.iridescenceThicknessMapChannel="g",e.iridescenceThicknessMap=s[t.iridescenceThicknessTexture.index],gp(t.iridescenceThicknessTexture,e,["iridescenceThickness"]))},Dp=(t,e,s)=>{if(e.enableGGXSpecular=!0,t.hasOwnProperty("anisotropyStrength")?e.anisotropyIntensity=t.anisotropyStrength:e.anisotropyIntensity=0,t.hasOwnProperty("anisotropyTexture")){const i=t.anisotropyTexture;e.anisotropyMap=s[i.index],gp(i,e,["anisotropy"])}t.hasOwnProperty("anisotropyRotation")?e.anisotropyRotation=t.anisotropyRotation*a.D.RAD_TO_DEG:e.anisotropyRotation=0},Lp=(t,e)=>{const s=new Xe;let i,n;if(t.hasOwnProperty("name")&&(s.name=t.name),s.occludeSpecular=F.aPl,s.diffuseVertexColor=!0,s.specularTint=!0,s.specularVertexColor=!0,s.specular.set(1,1,1),s.gloss=1,s.glossInvert=!0,s.useMetalness=!0,t.hasOwnProperty("pbrMetallicRoughness")){const r=t.pbrMetallicRoughness;if(r.hasOwnProperty("baseColorFactor")&&(i=r.baseColorFactor,s.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2)),s.opacity=i[3]),r.hasOwnProperty("baseColorTexture")){const t=r.baseColorTexture;n=e[t.index],s.diffuseMap=n,s.diffuseMapChannel="rgb",s.opacityMap=n,s.opacityMapChannel="a",gp(t,s,["diffuse","opacity"])}if(r.hasOwnProperty("metallicFactor")&&(s.metalness=r.metallicFactor),r.hasOwnProperty("roughnessFactor")&&(s.gloss=r.roughnessFactor),r.hasOwnProperty("metallicRoughnessTexture")){const t=r.metallicRoughnessTexture;s.metalnessMap=s.glossMap=e[t.index],s.metalnessMapChannel="b",s.glossMapChannel="g",gp(t,s,["gloss","metalness"])}}if(t.hasOwnProperty("normalTexture")){const i=t.normalTexture;s.normalMap=e[i.index],gp(i,s,["normal"]),i.hasOwnProperty("scale")&&(s.bumpiness=i.scale)}if(t.hasOwnProperty("occlusionTexture")){const i=t.occlusionTexture;s.aoMap=e[i.index],s.aoMapChannel="r",gp(i,s,["ao"])}if(t.hasOwnProperty("emissiveFactor")&&(i=t.emissiveFactor,s.emissive.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))),t.hasOwnProperty("emissiveTexture")){const i=t.emissiveTexture;s.emissiveMap=e[i.index],gp(i,s,["emissive"])}if(t.hasOwnProperty("alphaMode"))switch(t.alphaMode){case"MASK":s.blendType=F.RjB,t.hasOwnProperty("alphaCutoff")?s.alphaTest=t.alphaCutoff:s.alphaTest=.5;break;case"BLEND":s.blendType=F.i96,s.depthWrite=!1;break;default:s.blendType=F.RjB}else s.blendType=F.RjB;t.hasOwnProperty("doubleSided")?(s.twoSidedLighting=t.doubleSided,s.cull=t.doubleSided?x.pLF:x.K1r):(s.twoSidedLighting=!1,s.cull=x.K1r);const r={KHR_materials_clearcoat:Sp,KHR_materials_emissive_strength:Cp,KHR_materials_ior:Tp,KHR_materials_dispersion:wp,KHR_materials_iridescence:Pp,KHR_materials_pbrSpecularGlossiness:vp,KHR_materials_sheen:Ep,KHR_materials_specular:xp,KHR_materials_transmission:bp,KHR_materials_unlit:yp,KHR_materials_volume:Ap,KHR_materials_anisotropy:Dp};if(t.hasOwnProperty("extensions"))for(const a in t.extensions){const i=r[a];void 0!==i&&i(t.extensions[a],s,e)}return s.update(),s},Mp=new o.$,Ip=new l.e,Rp=(t,e,s)=>{const i=new Rt.t;if(t.hasOwnProperty("name")&&t.name.length>0?i.name=t.name:i.name=`node_${e}`,t.hasOwnProperty("matrix")&&(Mp.data.set(t.matrix),Mp.getTranslation(Ip),i.setLocalPosition(Ip),Mp.getEulerAngles(Ip),i.setLocalEulerAngles(Ip),Mp.getScale(Ip),i.setLocalScale(Ip)),t.hasOwnProperty("rotation")){const e=t.rotation;i.setLocalRotation(e[0],e[1],e[2],e[3])}if(t.hasOwnProperty("translation")){const e=t.translation;i.setLocalPosition(e[0],e[1],e[2])}if(t.hasOwnProperty("scale")){const e=t.scale;i.setLocalScale(e[0],e[1],e[2])}return t.hasOwnProperty("extensions")&&t.extensions.EXT_mesh_gpu_instancing&&s.set(t,{ext:t.extensions.EXT_mesh_gpu_instancing}),i},Fp=(t,e)=>{const s="orthographic"===t.type?F.RDY:F.$JG,i=s===F.RDY?t.orthographic:t.perspective,n={enabled:!1,projection:s,nearClip:i.znear,aspectRatioMode:F.LF5};i.zfar&&(n.farClip=i.zfar),s===F.RDY?(n.orthoHeight=.5*i.ymag,i.ymag&&(n.aspectRatioMode=F.E5o,n.aspectRatio=i.xmag/i.ymag)):(n.fov=i.yfov*a.D.RAD_TO_DEG,i.aspectRatio&&(n.aspectRatioMode=F.E5o,n.aspectRatio=i.aspectRatio));const r=new as.w(t.name);return r.addComponent("camera",n),r},Op=(t,e)=>{const s={enabled:!1,type:"point"===t.type?"omni":t.type,color:t.hasOwnProperty("color")?new p.Q(t.color):p.Q.WHITE,range:t.hasOwnProperty("range")?t.range:9999,falloffMode:F.NkS,intensity:t.hasOwnProperty("intensity")?a.D.clamp(t.intensity,0,2):1};t.hasOwnProperty("spot")&&(s.innerConeAngle=t.spot.hasOwnProperty("innerConeAngle")?t.spot.innerConeAngle*a.D.RAD_TO_DEG:0,s.outerConeAngle=t.spot.hasOwnProperty("outerConeAngle")?t.spot.outerConeAngle*a.D.RAD_TO_DEG:Math.PI/4),t.hasOwnProperty("intensity")&&(s.luminance=t.intensity*lu.getLightUnitConversion(iu[s.type],s.outerConeAngle,s.innerConeAngle));const i=new as.w(e.name);return i.rotateLocal(90,0,0),i.addComponent("light",s),i},Np=(t,e,s,i)=>{if(!e.hasOwnProperty("skins")||0===e.skins.length)return[];const n=new Map;return e.skins.map(r=>((t,e,s,i,n,r)=>{let a,l,h;const c=e.joints,d=c.length,u=[];if(e.hasOwnProperty("inverseBindMatrices")){const t=e.inverseBindMatrices,n=hp(s[t],i,!0),r=[];for(a=0;a<d;a++){for(l=0;l<16;l++)r[l]=n[16*a+l];h=new o.$,h.set(r),u.push(h)}}else for(a=0;a<d;a++)h=new o.$,u.push(h);const f=[];for(a=0;a<d;a++)f[a]=n[c[a]].name;const p=f.join("#");let m=r.get(p);return m||(m=new Zf(t,u,f),r.set(p,m)),m})(t,r,e.accessors,i,s,n))},kp=(t,e,s,i)=>{if(!t.hasOwnProperty("animations")||0===t.animations.length)return[];const n=i?.animation?.preprocess,r=i?.animation?.postprocess;return t.animations.map((i,a)=>{n&&n(i);const o=((t,e,s,i,n,r,a)=>{const o=t=>new Jf(ip(t.type),cp(t,i)),l={STEP:0,LINEAR:1,CUBICSPLINE:2},h={},c={},d={};let u,f=1;for(u=0;u<t.samplers.length;++u){const e=t.samplers[u];h.hasOwnProperty(e.input)||(h[e.input]=o(s[e.input])),c.hasOwnProperty(e.output)||(c[e.output]=o(s[e.output]));const i=e.hasOwnProperty("interpolation")&&l.hasOwnProperty(e.interpolation)?l[e.interpolation]:1,n={paths:[],input:e.input,output:e.output,interpolation:i};d[u]=n}const p=[],m={translation:"localPosition",rotation:"localRotation",scale:"localScale"},_=t=>{const e=[];for(;t;)e.unshift(t.name),t=t.parent;return e},g=(t,e,s)=>{const i=c[t.output];if(!i)return;let n;if(r&&r[e.mesh]){const t=r[e.mesh];t.hasOwnProperty("extras")&&t.extras.hasOwnProperty("targetNames")&&(n=t.extras.targetNames)}const a=i.data,o=a.length/h[t.input].data.length,l=a.length/o,p=4*l,m=new ArrayBuffer(p*o);for(let r=0;r<o;r++){const e=new Float32Array(m,p*r,l);for(let t=0;t<l;t++)e[t]=a[t*o+r];const i=new Jf(1,e),h=n?.[r]?`name.${n[r]}`:r;c[-f]=i;const _={paths:[{entityPath:s,component:"graph",propertyPath:[`weight.${h}`]}],input:t.input,output:-f,interpolation:t.interpolation};f++,d[`morphCurve-${u}-${r}`]=_}};for(u=0;u<t.channels.length;++u){const e=t.channels[u],s=e.target,i=d[e.sampler],r=n[s.node],o=a[s.node],l=_(r);s.path.startsWith("weights")?(g(i,o,l),d[e.sampler].morphCurve=!0):i.paths.push({entityPath:l,component:"graph",propertyPath:[m[s.path]]})}const v=[],S=[],y=[];for(const b in h)v.push(h[b]),h[b]=v.length-1;for(const b in c)S.push(c[b]),c[b]=S.length-1;for(const b in d){const t=d[b];t.morphCurve||(y.push(new Qf(t.paths,h[t.input],c[t.output],t.interpolation)),t.paths.length>0&&"localRotation"===t.paths[0].propertyPath[0]&&2!==t.interpolation&&p.push(y[y.length-1].output))}p.sort();let x,T=null;for(u=0;u<p.length;++u){const t=p[u];if(0===u||t!==T){if(x=S[t],4===x.components){const t=x.data,e=t.length-4;for(let s=0;s<e;s+=4)t[s+0]*t[s+4]+t[s+1]*t[s+5]+t[s+2]*t[s+6]+t[s+3]*t[s+7]<0&&(t[s+4]*=-1,t[s+5]*=-1,t[s+6]*=-1,t[s+7]*=-1)}T=t}}let w=0;for(u=0;u<v.length;u++)x=v[u]._data,w=Math.max(w,0===x.length?0:x[x.length-1]);return new Qr(t.hasOwnProperty("name")?t.name:`animation_${e}`,w,v,S,y)})(i,a,t.accessors,s,e,t.meshes,t.nodes);return r&&r(i,o),o})},Bp=async(t,e,s,i,n)=>{const r=n?.global?.preprocess,a=n?.global?.postprocess;r&&r(e),e.asset&&e.asset.generator;const h=new Map,c=((t,e,s)=>{if(!t.hasOwnProperty("nodes")||0===t.nodes.length)return[];const i=e?.node?.preprocess,n=e?.node?.process??Rp,r=e?.node?.postprocess,a=t.nodes.map((t,e)=>{i&&i(t);const a=n(t,e,s);return r&&r(t,a),a});for(let o=0;o<t.nodes.length;++o){const e=t.nodes[o];if(e.hasOwnProperty("children")){const t=a[o],s={};for(let i=0;i<e.children.length;++i){const n=a[e.children[i]];n.parent||(s.hasOwnProperty(n.name)?n.name+=s[n.name]++:s[n.name]=1,t.addChild(n))}}}return a})(e,n,h),d=((t,e)=>{const s=[],i=t.scenes.length;if(1===i&&1===t.scenes[0].nodes?.length){const i=t.scenes[0].nodes[0];s.push(e[i])}else for(let n=0;n<i;n++){const i=t.scenes[n];if(i.nodes){const t=new Rt.t(i.name);for(let s=0;s<i.nodes.length;s++){const n=e[i.nodes[s]];t.addChild(n)}s.push(t)}}return s})(e,c),u=((t,e,s)=>{let i=null;if(t.hasOwnProperty("nodes")&&t.hasOwnProperty("extensions")&&t.extensions.hasOwnProperty("KHR_lights_punctual")&&t.extensions.KHR_lights_punctual.hasOwnProperty("lights")){const n=t.extensions.KHR_lights_punctual.lights;if(n.length){const r=s?.light?.preprocess,a=s?.light?.process??Op,o=s?.light?.postprocess;t.nodes.forEach((t,s)=>{if(t.hasOwnProperty("extensions")&&t.extensions.hasOwnProperty("KHR_lights_punctual")&&t.extensions.KHR_lights_punctual.hasOwnProperty("light")){const l=t.extensions.KHR_lights_punctual.light,h=n[l];if(h){r&&r(h);const n=a(h,e[s]);o&&o(h,n),n&&(i||(i=new Map),i.set(t,n))}}})}}return i})(e,c,n),f=((t,e,s)=>{let i=null;if(t.hasOwnProperty("nodes")&&t.hasOwnProperty("cameras")&&t.cameras.length>0){const n=s?.camera?.preprocess,r=s?.camera?.process??Fp,a=s?.camera?.postprocess;t.nodes.forEach((s,o)=>{if(s.hasOwnProperty("camera")){const l=t.cameras[s.camera];if(l){n&&n(l);const t=r(l,e[o]);a&&a(l,t),t&&(i||(i=new Map),i.set(s,t))}}})}return i})(e,c,n),p=(t=>{if(!t.hasOwnProperty("extensions")||!t.extensions.hasOwnProperty("KHR_materials_variants"))return null;const e=t.extensions.KHR_materials_variants.variants,s={};for(let i=0;i<e.length;i++)s[e[i].name]=i;return s})(e),m=await Promise.all(s),{meshes:_,meshVariants:g,meshDefaultMaterials:v,promises:S}=((t,e,s,i)=>{const n={},r={},a={},o=[];return{meshes:!i.skipMeshes&&e?.meshes?.length&&e?.accessors?.length&&e?.bufferViews?.length?e.meshes.map(l=>_p(t,l,e.accessors,s,n,r,a,i,o)):[],meshVariants:r,meshDefaultMaterials:a,promises:o}})(t,e,m,n),y=kp(e,c,m,n);((t,e,s,i)=>{const n=e.accessors;s.forEach((t,e)=>{const s=t.ext.attributes;let r,a,h;if(s.hasOwnProperty("TRANSLATION")){const t=n[s.TRANSLATION];r=cp(t,i)}if(s.hasOwnProperty("ROTATION")){const t=n[s.ROTATION];a=cp(t,i)}if(s.hasOwnProperty("SCALE")){const t=n[s.SCALE];h=cp(t,i)}const c=(r?r.length/3:0)||(a?a.length/4:0)||(h?h.length/3:0);if(c){const e=new Float32Array(16*c),s=new l.e,i=new St.k,n=new l.e(1,1,1),d=new o.$;let u=0;for(let t=0;t<c;t++){const o=3*t;if(r&&s.set(r[o],r[o+1],r[o+2]),a){const e=4*t;i.set(a[e],a[e+1],a[e+2],a[e+3])}h&&n.set(h[o],h[o+1],h[o+2]),d.setTRS(s,i,n);for(let t=0;t<16;t++)e[u++]=d.data[t]}t.matrices=e}})})(0,e,h,m);const x=await Promise.all(i),T=((t,e,s)=>{if(!t.hasOwnProperty("materials")||0===t.materials.length)return[];const i=s?.material?.preprocess,n=s?.material?.process??Lp,r=s?.material?.postprocess;return t.materials.map(t=>{i&&i(t);const s=n(t,e);return r&&r(t,s),s})})(e,x.map(t=>t.resource),n),w=Np(t,e,c,m),b=[];for(let o=0;o<_.length;o++)b[o]=new Vf,b[o].meshes=_[o];((t,e,s)=>{t.nodes.forEach(t=>{t.hasOwnProperty("mesh")&&t.hasOwnProperty("skin")&&e[t.mesh].meshes.forEach(e=>{e.skin=s[t.skin]})})})(e,b,w);const E=new ep;return E.gltf=e,E.nodes=c,E.scenes=d,E.animations=y,E.textures=x,E.materials=T,E.variants=p,E.meshVariants=g,E.meshDefaultMaterials=v,E.renders=b,E.skins=w,E.lights=u,E.cameras=f,E.nodeInstancingMap=h,a&&a(e,E),await Promise.all(S),E};let Up=0;const zp=t=>t.extensions?.KHR_texture_basisu?.source??t.extensions?.EXT_texture_webp?.source??t.source,Vp=(t,e,s)=>{if(!t?.images?.length||!t?.textures?.length)return[];const i=s?.texture?.preprocess,n=s?.texture?.processAsync,r=s?.texture?.postprocess,a=new Set;return t.textures.map(s=>{let o;return i&&i(s),o=new Promise(n?(e,i)=>{n(s,t.images,(t,s)=>{t?i(t):e(s)})}:t=>{t(null)}),o=o.then(i=>{i=i??zp(s);const n=a.has(i);return a.add(i),e[i].then(e=>{const i=n?pp(e):e;return((t,e)=>{const s=(t,e)=>{switch(t){case 9728:return x.uhC;case 9729:return x.DrA;case 9984:return x.GLw;case 9985:return x.reG;case 9986:return x.hs2;case 9987:return x.qn_;default:return e}},i=(t,e)=>{switch(t){case 33071:return x.vq6;case 33648:return x.qoY;case 10497:return x.x3I;default:return e}};t&&(e=e??{},t.minFilter=s(e.minFilter,x.qn_),t.magFilter=s(e.magFilter,x.DrA),t.addressU=i(e.wrapS,x.x3I),t.addressV=i(e.wrapT,x.x3I))})(i.resource,(t.samplers??[])[s.sampler]),i})}),r&&(o=o.then(t=>(r(s,t),t))),o})},Gp=(t,e,s)=>{t&&t.toLowerCase().endsWith(".glb")||(()=>{const t=new Uint8Array(e);return 103===t[0]&&108===t[1]&&84===t[2]&&70===t[3]})()?((t,e)=>{const s=t instanceof ArrayBuffer?new DataView(t):new DataView(t.buffer,t.byteOffset,t.byteLength),i=s.getUint32(0,!0),n=s.getUint32(4,!0),r=s.getUint32(8,!0);if(1179937895!==i)return void e(`Invalid magic number found in glb header. Expected 0x46546C67, found 0x${i.toString(16)}`);if(2!==n)return void e(`Invalid version number found in glb header. Expected 2, found ${n}`);if(r<=0||r>s.byteLength)return void e(`Invalid length found in glb header. Found ${r}`);const a=[];let o=12;for(;o<r;){const t=s.getUint32(o,!0);o+t+8>s.byteLength&&e(`Invalid chunk length found in glb. Found ${t}`);const i=s.getUint32(o+4,!0),n=new Uint8Array(s.buffer,s.byteOffset+o+8,t);a.push({length:t,type:i,data:n}),o+=t+8}1===a.length||2===a.length?1313821514===a[0].type?a.length>1&&5130562!==a[1].type?e(`Invalid chunk type found in glb file. Expected 0x004E4942, found 0x${a[1].type.toString(16)}`):e(null,{gltfChunk:a[0].data,binaryChunk:2===a.length?a[1].data:null}):e(`Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x${a[0].type.toString(16)}`):e("Invalid number of chunks found in glb file.")})(e,s):s(null,{gltfChunk:e,binaryChunk:null})};class Hp{static parse(t,e,s,i,n,r,a){Gp(t,s,(t,s)=>{t?a(t):((t,e)=>{const s=JSON.parse((t=>{if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let s=0;s<t.length;s++)e+=String.fromCharCode(t[s]);return decodeURIComponent(escape(e))})(t));s.asset&&s.asset.version&&parseFloat(s.asset.version)<2?e(`Invalid gltf version. Expected version 2.0 or above but found version '${s.asset.version}'.`):e(null,s)})(s.gltfChunk,(t,o)=>{if(t)return void a(t);const l=((t,e,s,i)=>{if(!t.buffers||0===t.buffers.length)return[];const n=i?.buffer?.preprocess,r=i?.buffer?.processAsync,a=i?.buffer?.postprocess;return t.buffers.map((i,o)=>{let l;return n&&n(i),l=new Promise(r?(t,e)=>{r(i,(s,i)=>{s?e(s):t(i)})}:t=>{t(null)}),l=l.then(t=>{if(t)return t;if(i.hasOwnProperty("uri")){if(sp(i.uri)){const t=atob(i.uri.split(",")[1]),e=new Uint8Array(t.length);for(let s=0;s<t.length;s++)e[s]=t.charCodeAt(s);return e}return new Promise((t,e)=>{Js.L.get(dr._3.test(i.uri)?i.uri:Qs.A.join(s,i.uri),{cache:!0,responseType:"arraybuffer",retry:!1},(s,i)=>{s?e(s):t(new Uint8Array(i))})})}return e}),a&&(l=l.then(e=>(a(t.buffers[o],e),e))),l})})(o,s.binaryChunk,e,r),h=((t,e,s)=>{const i=[],n=s?.bufferView?.preprocess,r=s?.bufferView?.processAsync,a=s?.bufferView?.postprocess;if(!t.bufferViews?.length)return i;for(let o=0;o<t.bufferViews.length;++o){const s=t.bufferViews[o];let l;n&&n(s),l=new Promise(r?(t,i)=>{r(s,e,(e,s)=>{e?i(e):t(s)})}:t=>{t(null)}),l=l.then(t=>t||e[s.buffer].then(t=>new Uint8Array(t.buffer,t.byteOffset+(s.byteOffset||0),s.byteLength))),s.hasOwnProperty("byteStride")&&(l=l.then(t=>(t.byteStride=s.byteStride,t))),a&&(l=l.then(t=>(a(s,t),t))),i.push(l)}return i})(o,l,r),c=((t,e,s,i,n)=>{if(!t.images||0===t.images.length)return[];const r=n?.image?.preprocess,a=n?.image?.processAsync,o=n?.image?.postprocess,l={"image/png":"png","image/jpeg":"jpg","image/basis":"basis","image/ktx":"ktx","image/ktx2":"ktx2","image/vnd-ms.dds":"dds"},h=(t,e,s,n,r,a)=>new Promise((o,h)=>{const c=s=>{const c=`${t.name||"gltf-texture"}-${Up++}`,d={url:e||c};if(s&&(d.contents=s.slice(0).buffer),n){const t=l[n];t&&(d.filename=`${d.url}.${t}`)}const u={srgb:a},f=new Kn.V(c,"texture",d,u,r);f.on("load",t=>o(t)),f.on("error",t=>h(t)),i.add(f),i.load(f)};s?s.then(t=>c(t)):c(null)}),c=(t=>{const e=new Set;return t.hasOwnProperty("materials")&&t.materials.forEach(s=>{if(s.hasOwnProperty("pbrMetallicRoughness")){const i=s.pbrMetallicRoughness;if(i.hasOwnProperty("baseColorTexture")){const s=t.textures[i.baseColorTexture.index];e.add(zp(s))}}if(s.hasOwnProperty("emissiveTexture")){const i=t.textures[s.emissiveTexture.index];e.add(zp(i))}if(s.hasOwnProperty("extensions")){const i=s.extensions.KHR_materials_sheen;if(i&&i.hasOwnProperty("sheenColorTexture")){const s=t.textures[i.sheenColorTexture.index];e.add(zp(s))}const n=s.extensions.KHR_materials_pbrSpecularGlossiness;if(n&&n.hasOwnProperty("specularGlossinessTexture")){const s=t.textures[n.specularGlossinessTexture.index];e.add(zp(s))}const r=s.extensions.KHR_materials_specular;if(r&&r.hasOwnProperty("specularColorTexture")){const s=t.textures[r.specularColorTexture.index];e.add(zp(s))}}}),e})(t);return t.images.map((t,i)=>{let n;return r&&r(t),n=new Promise(a?(e,s)=>{a(t,(t,i)=>{t?s(t):e(i)})}:t=>{t(null)}),n=n.then(n=>{const r=c.has(i);return n||(t.hasOwnProperty("uri")?sp(t.uri)?h(t,t.uri,null,(a=t.uri).substring(a.indexOf(":")+1,a.indexOf(";")),null,r):h(t,dr._3.test(t.uri)?t.uri:Qs.A.join(s,t.uri),null,null,{crossOrigin:"anonymous"},r):t.hasOwnProperty("bufferView")&&t.hasOwnProperty("mimeType")?h(t,null,e[t.bufferView],t.mimeType,null,r):Promise.reject(new Error(`Invalid image found in gltf (neither uri or bufferView found). index=${i}`)));var a}),o&&(n=n.then(e=>(o(t,e),e))),n})})(o,h,e,n,r),d=Vp(o,c,r);Bp(i,o,h,d,r).then(t=>a(null,t)).catch(t=>a(t))})})}static createDefaultMaterial(){return Lp({name:"defaultGlbMaterial"},[])}}class Wp extends ir{constructor(t){super(t,"animation"),this.device=t.graphicsDevice,this.assets=t.assets}load(t,e,s){"string"==typeof t&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.load.startsWith("blob:")||t.load.startsWith("data:"))&&(".glb"===Qs.A.getExtension(t.original).toLowerCase()?i.responseType=Js.l.ResponseType.ARRAY_BUFFER:i.responseType=Js.l.ResponseType.JSON),Js.L.get(t.load,i,(i,n)=>{i?e(`Error loading animation resource: ${t.original} [${i}]`):".glb"===Qs.A.getExtension(t.original).toLowerCase()?Hp.parse("filename.glb","",n,this.device,this.assets,s?.options??{},(t,i)=>{if(t)e(t);else{const t=i.animations;if(s?.data?.events)for(let e=0;e<t.length;e++)t[e].events=new Zr(Object.values(s.data.events));i.destroy(),e(null,t)}}):e(null,this[`_parseAnimationV${n.animation.version}`](n))})}open(t,e,s){return e}_parseAnimationV3(t){const e=t.animation,s=new jf;s.name=e.name,s.duration=e.duration;for(let i=0;i<e.nodes.length;i++){const t=new qf,n=e.nodes[i];t._name=n.name;for(let e=0;e<n.keys.length;e++){const s=n.keys[e],i=s.time,r=s.pos,a=s.rot,o=s.scale,h=new l.e(r[0],r[1],r[2]),c=(new St.k).setFromEulerAngles(a[0],a[1],a[2]),d=new l.e(o[0],o[1],o[2]),u=new $f(i,h,c,d);t._keys.push(u)}s.addNode(t)}return s}_parseAnimationV4(t){const e=t.animation,s=new jf;s.name=e.name,s.duration=e.duration;for(let i=0;i<e.nodes.length;i++){const t=new qf,n=e.nodes[i];t._name=n.name;const r=n.defaults.p,a=n.defaults.r,o=n.defaults.s;for(let e=0;e<n.keys.length;e++){const s=n.keys[e],i=s.t,h=r||s.p,c=a||s.r,d=o||s.s,u=new l.e(h[0],h[1],h[2]),f=(new St.k).setFromEulerAngles(c[0],c[1],c[2]),p=new l.e(d[0],d[1],d[2]),m=new $f(i,u,f,p);t._keys.push(m)}s.addNode(t)}return s}}class Xp extends ir{constructor(t){super(t,"animclip")}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};t.load.startsWith("blob:")&&(s.responseType=Js.l.ResponseType.JSON),Js.L.get(t.load,s,(s,i)=>{s?e(`Error loading animation clip resource: ${t.original} [${s}]`):e(null,i)})}open(t,e){const s=e.name,i=e.duration,n=e.inputs.map(t=>new Jf(1,t)),r=e.outputs.map(t=>new Jf(t.components,t.data)),a=e.curves.map(t=>new Qf([t.path],t.inputIndex,t.outputIndex,t.interpolation));return new Qr(s,i,n,r,a)}}class $p extends ir{constructor(t){super(t,"animstategraph")}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};t.load.startsWith("blob:")&&(s.responseType=Js.l.ResponseType.JSON),Js.L.get(t.load,s,(s,i)=>{s?e(`Error loading animation state graph resource: ${t.original} [${s}]`):e(null,i)})}open(t,e){return new ba(e)}}class qp{constructor(t){t instanceof Audio?this.audio=t:this.buffer=t}get duration(){let t=0;return this.buffer?t=this.buffer.duration:this.audio&&(t=this.audio.duration),t||0}}const jp=function(){if("undefined"==typeof window)return!1;const t=window.navigator.userAgent,e=t.indexOf("MSIE ");if(e>0)return parseInt(t.substring(e+5,t.indexOf(".",e)),10);if(t.indexOf("Trident/")>0){const e=t.indexOf("rv:");return parseInt(t.substring(e+3,t.indexOf(".",e)),10)}return!1}(),Yp=[".ogg",".mp3",".wav",".mp4a",".m4a",".mp4",".aac",".opus"];class Kp extends ir{constructor(t){super(t,"audio"),this.manager=t.soundManager}_isSupported(t){const e=Qs.A.getExtension(t);return Yp.indexOf(e)>-1}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s=function(t){e(null,new qp(t))},i=function(s){let i=`Error loading audio url: ${t.original}`;s&&(i+=`: ${s.message||s}`),console.warn(i),e(i)};if(this._createSound){if(!this._isSupported(t.original))return void i(`Audio format for ${t.original} not supported`);this._createSound(t.load,s,i)}else i(null)}_createSound(t,e,s){if(xd()){const i=this.manager;if(!i.context)return void s("Audio manager has no audio context");const n={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.startsWith("blob:")||t.startsWith("data:"))&&(n.responseType=Js.l.ResponseType.ARRAY_BUFFER),Js.L.get(t,n,(t,n)=>{t?s(t):i.context.decodeAudioData(n,e,s)})}else{let n=null;try{n=new Audio}catch(i){return void s("No support for Audio element")}jp&&document.body.appendChild(n);const r=function(){n.removeEventListener("canplaythrough",r),jp&&document.body.removeChild(n),e(n)};n.onerror=function(){n.onerror=null,jp&&document.body.removeChild(n),s()},n.addEventListener("canplaythrough",r),n.src=t}}}class Zp extends ir{constructor(t){super(t,"binary")}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{responseType:Js.l.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading binary resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return t.buffer}}class Qp{constructor(t,e,s,i){const n=function(t,i,n){const r=Qp.createAsset(e.name,t,i,n);return s.add(r),r},r=[];for(let l=0;l<t.renders.length;++l)r.push(n("render",t.renders[l],l));const a=[];for(let l=0;l<t.materials.length;++l)a.push(n("material",t.materials[l],l));const o=[];for(let l=0;l<t.animations.length;++l)o.push(n("animation",t.animations[l],l));this.data=t,this._model=null,this._assetName=e.name,this._assets=s,this._defaultMaterial=i,this.renders=r,this.materials=a,this.textures=t.textures,this.animations=o}get model(){if(!this._model){const t=Qp.createModel(this.data,this._defaultMaterial),e=Qp.createAsset(this._assetName,"model",t,0);this._assets.add(e),this._model=e}return this._model}static createAsset(t,e,s,i){const n=new Kn.V(`${t}/${e}/${i}`,e,{url:""});return n.resource=s,n.loaded=!0,n}instantiateModelEntity(t){const e=new as.w(void 0,this._assets._loader._app);return e.addComponent("model",Object.assign({type:"asset",asset:this.model},t)),e}instantiateRenderEntity(t){const e=this._defaultMaterial,s=[],i=function(t,i,n,r,a,o,l,h){const c=a[n.id],d=void 0===c?e:r[c],u=new pt(n,d);n.morph&&(u.morphInstance=new Ya(n.morph)),l.hasOwnProperty("skin")&&s.push({meshInstance:u,rootBone:t,entity:i});const f=h.get(l);if(f){const t=f.matrices,e=xs.y.getDefaultInstancingFormat(n.device),s=new ys.R(n.device,e,t.length/16,{data:t});u.setInstancing(s),u.instancingData._destroyVertexBuffer=!0}return u},n=(e,s,r)=>{const a=new as.w(void 0,this._assets._loader._app);s._cloneInternal(a),e||(e=a);let o=null,l=null;for(let t=0;t<r.nodes.length;t++){if(r.nodes[t]===s){const s=r.gltf.nodes[t];if(s.hasOwnProperty("mesh")){const t=r.renders[s.mesh].meshes;l=this.renders[s.mesh];for(let n=0;n<t.length;n++){const l=t[n];if(l){const t=i(e,a,l,r.materials,r.meshDefaultMaterials,r.skins,s,r.nodeInstancingMap);o||(o=[]),o.push(t)}}}if(r.lights){const t=r.lights.get(s);t&&a.addChild(t.clone())}if(r.cameras){const t=r.cameras.get(s);t&&t.camera.system.cloneComponent(t,a)}}}o&&(a.addComponent("render",Object.assign({type:"asset",meshInstances:o},t)),a.render.assignAsset(l));const h=s.children;for(let t=0;t<h.length;t++){const s=n(e,h[t],r);a.addChild(s)}return a},r=[];for(const a of this.data.scenes)r.push(n(null,a,this.data));return s.forEach(t=>{t.meshInstance.skinInstance=bc.createCachedSkinInstance(t.meshInstance.mesh.skin,t.rootBone,t.entity),t.meshInstance.node.render.rootBone=t.rootBone}),Qp.createSceneHierarchy(r,as.w)}getMaterialVariants(){return this.data.variants?Object.keys(this.data.variants):[]}applyMaterialVariant(t,e){const s=e?this.data.variants[e]:null;if(void 0===s)return;const i=t.findComponents("render");for(let n=0;n<i.length;n++){const t=i[n];this._applyMaterialVariant(s,t.meshInstances)}}applyMaterialVariantInstances(t,e){const s=e?this.data.variants[e]:null;void 0!==s&&this._applyMaterialVariant(s,t)}_applyMaterialVariant(t,e){e.forEach(e=>{if(null===t)e.material=this._defaultMaterial;else{const s=this.data.meshVariants[e.mesh.id];s&&(e.material=this.data.materials[s[t]])}})}static createSceneHierarchy(t,e){let s=null;if(1===t.length)s=t[0];else{s=new e("SceneGroup");for(const e of t)s.addChild(e)}return s}static createModel(t,e){const s=function(s,i,n,r,a,o,l){const h=t.meshDefaultMaterials[i.id],c=void 0===h?e:a[h],d=new pt(i,c,o);if(i.morph){const t=new Ya(i.morph);d.morphInstance=t,s.morphInstances.push(t)}if(l.hasOwnProperty("skin")){const t=l.skin,e=n[t];i.skin=e;const a=r[t];d.skinInstance=a,s.skinInstances.push(a)}s.meshInstances.push(d)},i=new Ka,n=[];for(const r of t.skins){const t=new Hs(r);t.bones=r.bones,n.push(t)}i.graph=Qp.createSceneHierarchy(t.scenes,Rt.t);for(let r=0;r<t.nodes.length;r++){const e=t.nodes[r];if(e.root===i.graph){const a=t.gltf.nodes[r];if(a.hasOwnProperty("mesh")){const r=t.renders[a.mesh].meshes;for(let o=0;o<r.length;o++){const l=r[o];l&&s(i,l,t.skins,n,t.materials,e,a)}}}}return i}destroy(){const t=this._assets,e=function(e){t.remove(e),e.unload()},s=function(t){t.forEach(t=>{e(t)})};this.animations&&(s(this.animations),this.animations=null),this.textures&&(s(this.textures),this.textures=null),this.materials&&(s(this.materials),this.materials=null),this.renders&&(s(this.renders),this.renders=null),this._model&&(e(this._model),this._model=null),this.data=null,this.assets=null}}class Jp{constructor(t,e,s){this._device=t,this._assets=e,this._defaultMaterial=Hp.createDefaultMaterial(),this.maxRetries=s}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}load(t,e,s){Kn.V.fetchArrayBuffer(t.load,(i,n)=>{i?e(i):Hp.parse(this._getUrlWithoutParams(t.original),Qs.A.extractPath(t.load),n,this._device,s.registry,s.options,(t,i)=>{t?e(t):e(null,new Qp(i,s,this._assets,this._defaultMaterial))})},s,this.maxRetries)}open(t,e,s){return e}patch(t,e){}}class tm extends ir{constructor(t){super(t,"container"),this.glbContainerParser=new Jp(t.graphicsDevice,t.assets,0),this.parsers={}}set maxRetries(t){this.glbContainerParser.maxRetries=t;for(const e in this.parsers)this.parsers.hasOwnProperty(e)&&(this.parsers[e].maxRetries=t)}get maxRetries(){return this.glbContainerParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=t?Qs.A.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".",""):null;return this.parsers[e]||this.glbContainerParser}load(t,e,s){"string"==typeof t&&(t={load:t,original:t}),this._getParser(t.original).load(t,e,s)}open(t,e,s){return this._getParser(t).open(t,e,s)}}class em extends ir{constructor(t){super(t,"css"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading css resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),this.decoder.decode(t)}}class sm extends ir{constructor(t){super(t,"cubemap"),this._device=t.graphicsDevice,this._registry=t.assets,this._loader=t.loader}load(t,e,s){this.loadAssets(s,e)}open(t,e,s){return s?s.resource:null}patch(t,e){this.loadAssets(t,(s,i)=>{s&&(e.fire("error",t),e.fire(`error:${t.id}`,s,t),t.fire("error",t))})}getAssetIds(t){const e=[];if(e[0]=t.file,(t.loadFaces||!t.file)&&t.data&&t.data.textures)for(let s=0;s<6;++s)e[s+1]=t.data.textures[s];else e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=null;return e}compareAssetIds(t,e){return t&&e?parseInt(t,10)===t||"string"==typeof t?t===e:t.url===e.url:null!==t==(null!==e)}update(t,e,s){const i=t.data||{},n=t._handlerState.assets,r=t._resources;let a,o,l;const h=[null,null,null,null,null,null,null],c=function(){return i.hasOwnProperty("type")?i.type:i.hasOwnProperty("rgbm")?i.rgbm?x.fW0:x.s64:null};if(t.loaded&&s[0]===n[0])h[1]=r[1]||null,h[2]=r[2]||null,h[3]=r[3]||null,h[4]=r[4]||null,h[5]=r[5]||null,h[6]=r[6]||null;else if(s[0])if(a=s[0].resource,a.cubemap)for(l=0;l<6;++l)h[l+1]=new Q.g(this._device,{name:`${t.name}_prelitCubemap${a.width>>l}`,cubemap:!0,type:c()||a.type,width:a.width>>l,height:a.height>>l,format:a.format,levels:[a._levels[l]],addressU:x.vq6,addressV:x.vq6,mipmaps:0===l});else h[1]=a;const d=s.slice(1);if(t.loaded&&this.cmpArrays(d,n.slice(1)))h[0]=r[0]||null;else if(-1===d.indexOf(null)){const e=d.map(t=>t.resource),s=[];for(o=0;o<e[0]._levels.length;++o)s.push(e.map(t=>t._levels[o]));const n=e[0].format,r=new Q.g(this._device,{name:`${t.name}_faces`,cubemap:!0,type:c()||e[0].type,width:e[0].width,height:e[0].height,format:n===x.akF?x.Lxj:n,mipmaps:i.mipmaps??!0,levels:s,minFilter:i.hasOwnProperty("minFilter")?i.minFilter:e[0].minFilter,magFilter:i.hasOwnProperty("magFilter")?i.magFilter:e[0].magFilter,anisotropy:i.hasOwnProperty("anisotropy")?i.anisotropy:1,addressU:x.vq6,addressV:x.vq6});h[0]=r}if(!this.cmpArrays(h,r))for(t.resources=h,t._handlerState.assetIds=e,t._handlerState.assets=s,l=0;l<r.length;++l)null!==r[l]&&-1===h.indexOf(r[l])&&r[l].destroy();for(l=0;l<n.length;++l)null!==n[l]&&-1===s.indexOf(n[l])&&n[l].unload()}cmpArrays(t,e){if(t.length!==e.length)return!1;for(let s=0;s<t.length;++s)if(t[s]!==e[s])return!1;return!0}resolveId(t){const e=parseInt(t,10);return e===t||e.toString()===t?e:t}loadAssets(t,e){t.hasOwnProperty("_handlerState")||(t._handlerState={assetIds:[null,null,null,null,null,null,null],assets:[null,null,null,null,null,null,null]});const s=this,i=s.getAssetIds(t),n=[null,null,null,null,null,null,null],r=t._handlerState.assetIds,a=t._handlerState.assets,o=s._registry;let l=7;const h=function(r,a){n[r]=a,l--,0===l&&(s.update(t,i,n),e(null,t.resources))},c=function(t,s,i){e(s)},d=function(t,e){e.loaded?h(t,e):(o.once(`load:${e.id}`,h.bind(s,t)),o.once(`error:${e.id}`,c.bind(s,t)),e.loading||o.load(e))};let u;for(let f=0;f<7;++f){const e=this.resolveId(i[f]);if(e)if(s.compareAssetIds(e,r[f]))d(f,a[f]);else if(parseInt(e,10)===e)u=o.get(e),u?d(f,u):setTimeout(((t,e)=>{const s=o.get(e);s?d(t,s):c(0,`failed to find dependent cubemap asset=${e}`)}).bind(null,f,e));else{const s="string"==typeof e?{url:e,filename:e}:e,i=-1===s.url.search(".dds")?{type:"rgbp",addressu:"clamp",addressv:"clamp",mipmaps:!1}:null;u=new Kn.V(`${t.name}_part_${f}`,"texture",s,i),o.add(u),d(f,u)}else h(f,null)}}}class im extends ir{constructor(t){super(t,"folder")}load(t,e){e(null,null)}}class nm{constructor(t,e){this.type=e&&e.type||Go,this.em=1,this.textures=t,this.intensity=0,this._data=null,this.data=e}set data(t){if(this._data=t,t&&(void 0!==this._data.intensity&&(this.intensity=this._data.intensity),this._data.info||(this._data.info={}),(!this._data.version||this._data.version<2)&&(this._data.info.maps=[{width:this._data.info.width,height:this._data.info.height}],this._data.chars)))for(const e in this._data.chars)this._data.chars[e].map=0}get data(){return this._data}}function rm(t){return t.version<3&&(t.version<2&&(t.info.maps=t.info.maps||[{width:t.info.width,height:t.info.height}]),t.chars=Object.keys(t.chars||{}).reduce((e,s)=>{const i=t.chars[s],n=void 0!==i.letter?i.letter:zo.fromCodePoint(s);return t.version<2&&(i.map=i.map||0),e[n]=i,e},{}),t.version=3),t}class am extends ir{constructor(t){super(t,"font"),this._loader=t.loader,this.maxRetries=0}load(t,e,s){"string"==typeof t&&(t={load:t,original:t});const i=this;".json"===Qs.A.getExtension(t.original)?Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,n)=>{if(s)e(`Error loading font resource: ${t.original} [${s}]`);else{const s=rm(n);i._loadTextures(t.load.replace(".json",".png"),s,(t,i)=>{t?e(t):e(null,{data:s,textures:i})})}}):(s&&s.data&&(s.data=rm(s.data)),this._loadTextures(t.load,s&&s.data,e))}_loadTextures(t,e,s){const i=e.info.maps.length;let n=0,r=null;const a=new Array(i),o=this._loader,l=function(e){const l=function(t,o){if(!r){if(t)return r=t,void s(t);o.upload(),a[e]=o,n++,n===i&&s(null,a)}};0===e?o.load(t,"texture",l):o.load(t.replace(".png",`${e}.png`),"texture",l)};for(let h=0;h<i;h++)l(h)}open(t,e,s){let i;return i=e.textures?new nm(e.textures,e.data):new nm(e,null),i}patch(t,e){const s=t.resource;!s.data&&t.data?s.data=t.data:!t.data&&s.data&&(t.data=s.data),t.data&&(t.data=rm(t.data))}}const om=.28209479177387814;class lm{constructor(t,e,s,i,n,r){const a=(t,e)=>{const s=(1<<e)-1;return(t&s)/s},o=(t,e)=>{t.x=a(e>>>21,11),t.y=a(e>>>11,10),t.z=a(e,11)},l=(t,e,s)=>t*(1-s)+e*s,{chunkData:h,chunkSize:c,vertexData:d,shData0:u,shData1:f,shData2:p,shBands:m}=t,_=[3,8,15][m-1];this.read=t=>{const g=Math.floor(t/256)*c;var v,S;if(e&&(o(e,d[4*t+0]),e.x=l(h[g+0],h[g+3],e.x),e.y=l(h[g+1],h[g+4],e.y),e.z=l(h[g+2],h[g+5],e.z)),s&&((t,e)=>{const s=1/(.5*Math.sqrt(2)),i=(a(e>>>20,10)-.5)*s,n=(a(e>>>10,10)-.5)*s,r=(a(e,10)-.5)*s,o=Math.sqrt(1-(i*i+n*n+r*r));switch(e>>>30){case 0:t.set(i,n,r,o);break;case 1:t.set(o,n,r,i);break;case 2:t.set(n,o,r,i);break;case 3:t.set(n,r,o,i)}})(s,d[4*t+1]),i&&(o(i,d[4*t+2]),i.x=l(h[g+6],h[g+9],i.x),i.y=l(h[g+7],h[g+10],i.y),i.z=l(h[g+8],h[g+11],i.z)),n&&(v=n,S=d[4*t+3],v.x=a(S>>>24,8),v.y=a(S>>>16,8),v.z=a(S>>>8,8),v.w=a(S,8),c>12&&(n.x=l(h[g+12],h[g+15],n.x),n.y=l(h[g+13],h[g+16],n.y),n.z=l(h[g+14],h[g+17],n.z))),r&&m>0){const e=[u,f,p];for(let s=0;s<3;++s)for(let i=0;i<15;++i)r[15*s+i]=i<_?e[s][16*t+i]*(8/255)-4:0}}}}class hm{createIter(t,e,s,i,n){return new lm(this,t,e,s,i,n)}calcAabb(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;let n=Math.exp(Math.max(e[9],e[10],e[11])),r=e[0]-n,a=e[1]-n,o=e[2]-n,l=e[3]+n,h=e[4]+n,c=e[5]+n;for(let d=1;d<s;++d){const t=d*i;n=Math.exp(Math.max(e[t+9],e[t+10],e[t+11])),r=Math.min(r,e[t+0]-n),a=Math.min(a,e[t+1]-n),o=Math.min(o,e[t+2]-n),l=Math.max(l,e[t+3]+n),h=Math.max(h,e[t+4]+n),c=Math.max(c,e[t+5]+n)}return t.center.set(.5*(r+l),.5*(a+h),.5*(o+c)),t.halfExtents.set(.5*(l-r),.5*(h-a),.5*(c-o)),!0}getCenters(t){const{vertexData:e,chunkData:s,numChunks:i,chunkSize:n}=this;let r,a,o,l,h,c;for(let d=0;d<i;++d){const i=d*n;r=s[i+0],a=s[i+1],o=s[i+2],l=s[i+3],h=s[i+4],c=s[i+5];const u=Math.min(this.numSplats,256*(d+1));for(let s=256*d;s<u;++s){const i=e[4*s],n=(i>>>21)/2047,d=(i>>>11&1023)/1023,u=(2047&i)/2047;t[3*s+0]=(1-n)*r+n*l,t[3*s+1]=(1-d)*a+d*h,t[3*s+2]=(1-u)*o+u*c}}}getChunks(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;let n,r,a,o,l,h;for(let c=0;c<s;++c){const s=c*i;n=e[s+0],r=e[s+1],a=e[s+2],o=e[s+3],l=e[s+4],h=e[s+5],t[6*c+0]=n,t[6*c+1]=r,t[6*c+2]=a,t[6*c+3]=o,t[6*c+4]=l,t[6*c+5]=h}}calcFocalPoint(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;t.x=0,t.y=0,t.z=0;for(let n=0;n<s;++n){const s=n*i;t.x+=e[s+0]+e[s+3],t.y+=e[s+1]+e[s+4],t.z+=e[s+2]+e[s+5]}t.mulScalar(.5/s)}get isCompressed(){return!0}get numChunks(){return Math.ceil(this.numSplats/256)}get chunkSize(){return this.chunkData.length/this.numChunks}decompress(){const t=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3"],{shBands:e}=this;if(e>0){const e=[];for(let t=0;t<45;++t)e.push(`f_rest_${t}`);const s=Math.max(...["f_dc_0","f_dc_1","f_dc_2"].map(e=>t.indexOf(e)));t.splice(s+1,0,...e)}const s={};t.forEach(t=>{s[t]=new Float32Array(this.numSplats)});const i=new l.e,n=new St.k,r=new l.e,a=new w.Z,o=e>0?new Float32Array(45):null,h=this.createIter(i,n,r,a,o);for(let l=0;l<this.numSplats;++l)if(h.read(l),s.x[l]=i.x,s.y[l]=i.y,s.z[l]=i.z,s.rot_1[l]=n.x,s.rot_2[l]=n.y,s.rot_3[l]=n.z,s.rot_0[l]=n.w,s.scale_0[l]=r.x,s.scale_1[l]=r.y,s.scale_2[l]=r.z,s.f_dc_0[l]=(a.x-.5)/om,s.f_dc_1[l]=(a.y-.5)/om,s.f_dc_2[l]=(a.z-.5)/om,s.opacity[l]=a.w<=0?-40:a.w>=1?40:-Math.log(1/a.w-1),o)for(let t=0;t<45;++t)s[`f_rest_${t}`][l]=o[t];return new wf([{name:"vertex",count:this.numSplats,properties:t.map(t=>({name:t,type:"float",byteSize:4,storage:s[t]}))}],this.comments)}}class cm extends Bu{constructor(t,e){super(t,e);const{chunkData:s,chunkSize:i,numChunks:n,numSplats:r,vertexData:a,shBands:o}=e;this.chunks=new Float32Array(6*n),e.getChunks(this.chunks),this.packedTexture=this.createTexture("packedData",x.zbM,this.evalTextureSize(r),a);const l=this.evalTextureSize(n);l.x*=5,this.chunkTexture=this.createTexture("chunkData",x.s7h,l);const h=this.chunkTexture.lock();if(((t,e,s,i,n)=>{for(let r=0;r<n;++r)for(let n=0;n<i;++n)t[r*e+n]=s[r*i+n]})(h,20,s,i,n),12===i)for(let c=0;c<n;++c)h[20*c+15]=1,h[20*c+16]=1,h[20*c+17]=1;if(this.chunkTexture.unlock(),o>0){const t=this.evalTextureSize(r);this.shTexture0=this.createTexture("shTexture0",x.zbM,t,new Uint32Array(e.shData0.buffer)),this.shTexture1=this.createTexture("shTexture1",x.zbM,t,new Uint32Array(e.shData1.buffer)),this.shTexture2=this.createTexture("shTexture2",x.zbM,t,new Uint32Array(e.shData2.buffer))}else this.shTexture0=null,this.shTexture1=null,this.shTexture2=null}destroy(){this.packedTexture?.destroy(),this.chunkTexture?.destroy(),this.shTexture0?.destroy(),this.shTexture1?.destroy(),this.shTexture2?.destroy(),super.destroy()}configureMaterialDefines(t){t.set("GSPLAT_COMPRESSED_DATA",!0),t.set("SH_BANDS",this.shTexture0?3:0)}configureMaterial(t){this.configureMaterialDefines(t.defines),t.setParameter("packedTexture",this.packedTexture),t.setParameter("chunkTexture",this.chunkTexture),this.shTexture0&&(t.setParameter("shTexture0",this.shTexture0),t.setParameter("shTexture1",this.shTexture1),t.setParameter("shTexture2",this.shTexture2))}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t)),s=Math.ceil(t/e);return new Jt.Z(e,s)}}class dm extends Bu{constructor(t,e){super(t,e);const s=e.numSplats,i=this.evalTextureSize(s);this.colorTexture=this.createTexture("splatColor",x.WBN,i),this.transformATexture=this.createTexture("transformA",x.zbM,i),this.transformBTexture=this.createTexture("transformB",x.WBN,i),this.updateColorData(e),this.updateTransformData(e),this.shBands=e.shBands,this.shBands>0&&(this.sh1to3Texture=this.createTexture("splatSH_1to3",x.zbM,i),this.shBands>1&&(this.sh4to7Texture=this.createTexture("splatSH_4to7",x.zbM,i),this.shBands>2?(this.sh8to11Texture=this.createTexture("splatSH_8to11",x.zbM,i),this.sh12to15Texture=this.createTexture("splatSH_12to15",x.zbM,i)):this.sh8to11Texture=this.createTexture("splatSH_8to11",x.zc3,i)),this.updateSHData(e))}destroy(){this.colorTexture?.destroy(),this.transformATexture?.destroy(),this.transformBTexture?.destroy(),this.sh1to3Texture?.destroy(),this.sh4to7Texture?.destroy(),this.sh8to11Texture?.destroy(),this.sh12to15Texture?.destroy(),super.destroy()}configureMaterialDefines(t){t.set("SH_BANDS",this.shBands)}configureMaterial(t){this.configureMaterialDefines(t.defines),t.setParameter("splatColor",this.colorTexture),t.setParameter("transformA",this.transformATexture),t.setParameter("transformB",this.transformBTexture),this.sh1to3Texture&&t.setParameter("splatSH_1to3",this.sh1to3Texture),this.sh4to7Texture&&t.setParameter("splatSH_4to7",this.sh4to7Texture),this.sh8to11Texture&&t.setParameter("splatSH_8to11",this.sh8to11Texture),this.sh12to15Texture&&t.setParameter("splatSH_12to15",this.sh12to15Texture)}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t)),s=Math.ceil(t/e);return new Jt.Z(e,s)}updateColorData(t){const e=this.colorTexture;if(!e)return;const s=vt.float2Half,i=e.lock(),n=t.getProp("f_dc_0"),r=t.getProp("f_dc_1"),a=t.getProp("f_dc_2"),o=t.getProp("opacity"),l=.28209479177387814;for(let h=0;h<this.numSplats;++h){const t=n[h]*l+.5,e=r[h]*l+.5,c=a[h]*l+.5,d=1/(1+Math.exp(-o[h]));i[4*h+0]=s(t),i[4*h+1]=s(e),i[4*h+2]=s(c),i[4*h+3]=s(d)}e.unlock()}updateTransformData(t){const e=vt.float2Half;if(!this.transformATexture)return;const s=this.transformATexture.lock(),i=new Float32Array(s.buffer),n=this.transformBTexture.lock(),r=new l.e,a=new St.k,o=new l.e,h=t.createIter(r,a,o);for(let l=0;l<this.numSplats;l++)h.read(l),a.normalize(),a.w<0&&a.mulScalar(-1),i[4*l+0]=r.x,i[4*l+1]=r.y,i[4*l+2]=r.z,s[4*l+3]=e(a.x)|e(a.y)<<16,n[4*l+0]=e(o.x),n[4*l+1]=e(o.y),n[4*l+2]=e(o.z),n[4*l+3]=e(a.z);this.transformATexture.unlock(),this.transformBTexture.unlock()}updateSHData(t){const e=this.sh1to3Texture.lock(),s=this.sh4to7Texture?.lock(),i=this.sh8to11Texture?.lock(),n=this.sh12to15Texture?.lock(),r={1:3,2:8,3:15}[this.shBands],a=((t,e)=>{const s=[];for(let i=0;i<e;++i)s.push(t.getProp(`f_rest_${i}`));return s})(t,3*r),o=2047,l=new Float32Array(1),h=new Uint32Array(l.buffer),c=new Array(3*r).fill(0);for(let d=0;d<t.numSplats;++d){for(let e=0;e<r;++e)c[3*e]=a[e][d],c[3*e+1]=a[e+r][d],c[3*e+2]=a[e+2*r][d];let t=c[0];for(let e=1;e<3*r;++e)t=Math.max(t,Math.abs(c[e]));if(0!==t){for(let e=0;e<r;++e)c[3*e+0]=Math.max(0,Math.min(o,Math.floor((c[3*e+0]/t*.5+.5)*o+.5))),c[3*e+1]=Math.max(0,Math.min(1023,Math.floor(1023*(c[3*e+1]/t*.5+.5)+.5))),c[3*e+2]=Math.max(0,Math.min(o,Math.floor((c[3*e+2]/t*.5+.5)*o+.5)));l[0]=t,e[4*d+0]=h[0],e[4*d+1]=c[0]<<21|c[1]<<11|c[2],e[4*d+2]=c[3]<<21|c[4]<<11|c[5],e[4*d+3]=c[6]<<21|c[7]<<11|c[8],this.shBands>1&&(s[4*d+0]=c[9]<<21|c[10]<<11|c[11],s[4*d+1]=c[12]<<21|c[13]<<11|c[14],s[4*d+2]=c[15]<<21|c[16]<<11|c[17],s[4*d+3]=c[18]<<21|c[19]<<11|c[20],this.shBands>2?(i[4*d+0]=c[21]<<21|c[22]<<11|c[23],i[4*d+1]=c[24]<<21|c[25]<<11|c[26],i[4*d+2]=c[27]<<21|c[28]<<11|c[29],i[4*d+3]=c[30]<<21|c[31]<<11|c[32],n[4*d+0]=c[33]<<21|c[34]<<11|c[35],n[4*d+1]=c[36]<<21|c[37]<<11|c[38],n[4*d+2]=c[39]<<21|c[40]<<11|c[41],n[4*d+3]=c[42]<<21|c[43]<<11|c[44]):i[d]=c[21]<<21|c[22]<<11|c[23])}}this.sh1to3Texture.unlock(),this.sh4to7Texture?.unlock(),this.sh8to11Texture?.unlock(),this.sh12to15Texture?.unlock()}}const um=new Uint8Array([112,108,121,10]),fm=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]),pm=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]);class mm{constructor(t,e){this.head=0,this.tail=0,this.reader=t,this.progressFunc=e}async read(){const{value:t,done:e}=await this.reader.read();if(e)throw new Error("Stream finished before end of header");this.push(t),this.progressFunc?.(t.byteLength)}push(t){if(this.data){const e=this.tail-this.head,s=e+t.length;if(this.data.length>=s)this.head>0?(this.data.copyWithin(0,this.head,this.tail),this.data.set(t,e),this.head=0,this.tail=s):(this.data.set(t,this.tail),this.tail+=t.length);else{const i=new Uint8Array(s);this.head>0||this.tail<this.data.length?i.set(this.data.subarray(this.head,this.tail),0):i.set(this.data,0),i.set(t,e),this.data=i,this.view=new DataView(this.data.buffer),this.head=0,this.tail=s}}else this.data=t,this.view=new DataView(this.data.buffer),this.tail=t.length}compact(){this.head>0&&(this.data.copyWithin(0,this.head,this.tail),this.tail-=this.head,this.head=0)}get remaining(){return this.tail-this.head}getInt8(){const t=this.view.getInt8(this.head);return this.head++,t}getUint8(){const t=this.view.getUint8(this.head);return this.head++,t}getInt16(){const t=this.view.getInt16(this.head,!0);return this.head+=2,t}getUint16(){const t=this.view.getUint16(this.head,!0);return this.head+=2,t}getInt32(){const t=this.view.getInt32(this.head,!0);return this.head+=4,t}getUint32(){const t=this.view.getUint32(this.head,!0);return this.head+=4,t}getFloat32(){const t=this.view.getFloat32(this.head,!0);return this.head+=4,t}getFloat64(){const t=this.view.getFloat64(this.head,!0);return this.head+=8,t}}const _m=async(t,e=null,s=null)=>{const i=(t,e)=>{const s=t.length-e.length;let i,n;for(i=0;i<=s;++i){for(n=0;n<e.length&&t[i+n]===e[n];++n);if(n===e.length)return i}return-1},n=(t,e)=>{if(t.length<e.length)return!1;for(let s=0;s<e.length;++s)if(t[s]!==e[s])return!1;return!0},r=new mm(t,s);let a;for(;;){if(await r.read(),r.tail>=um.length&&!n(r.data,um))throw new Error("Invalid ply header");if(a=i(r.data,fm),-1!==a)break}const o=new TextDecoder("ascii").decode(r.data.subarray(0,a)).split("\n"),{elements:l,format:h,comments:c}=(t=>{const e=[],s=[];let i;for(let n=1;n<t.length;++n){const r=t[n].split(" ");switch(r[0]){case"comment":s.push(r.slice(1).join(" "));break;case"format":i=r[1];break;case"element":e.push({name:r[1],count:parseInt(r[2],10),properties:[]});break;case"property":if(!pm.has(r[1]))throw new Error(`Unrecognized property data type '${r[1]}' in ply header`);e[e.length-1].properties.push({type:r[1],name:r[2],storage:null,byteSize:pm.get(r[1]).BYTES_PER_ELEMENT});break;default:throw new Error(`Unrecognized header value '${r[0]}' in ply header`)}}return{elements:e,format:i,comments:s}})(o);if("binary_little_endian"!==h)throw new Error("Unsupported ply format");r.head=a+fm.length,r.compact();return await(async()=>(t=>{const e=["min_x","min_y","min_z","max_x","max_y","max_z","min_scale_x","min_scale_y","min_scale_z","max_scale_x","max_scale_y","max_scale_z","min_r","min_g","min_b","max_r","max_g","max_b"],s=["packed_position","packed_rotation","packed_scale","packed_color"],i=new Array(45).fill("").map((t,e)=>`f_rest_${e}`),n=()=>"chunk"===t[0].name&&t[0].properties.every((t,s)=>t.name===e[s]&&"float"===t.type)&&"vertex"===t[1].name&&t[1].properties.every((t,e)=>t.name===s[e]&&"uint"===t.type);return 2===t.length&&n()||3===t.length&&n()&&"sh"===t[2].name&&-1!==[9,24,45].indexOf(t[2].properties.length)&&t[2].properties.every((t,e)=>t.name===i[e]&&"uchar"===t.type)})(l)?await(async(t,e,s)=>{const i=new hm;i.comments=s;const n=e[0].count,r=e[0].properties.length,a=e[1].count,o=(t=>{const e=Math.ceil(Math.sqrt(t));return e*Math.ceil(t/e)})(a);i.numSplats=a,i.chunkData=new Float32Array(n*r),i.vertexData=new Uint32Array(4*o);const l=async(e,s)=>{const i=new Uint8Array(e);let n=0;for(;n<s;){for(;0===t.remaining;)await t.read();const e=Math.min(s-n,t.remaining),r=t.data;for(let s=0;s<e;++s)i[n++]=r[t.head++]}};if(await l(i.chunkData.buffer,n*r*4),await l(i.vertexData.buffer,4*a*4),3===e.length){const t=16*o,s=new Uint8Array(t),n=new Uint8Array(t),r=new Uint8Array(t),a=1024,h=e[2].properties.length/3,c=new Uint8Array(a*h*3);for(let e=0;e<i.numSplats;e+=a){const t=Math.min(a,i.numSplats-e);await l(c.buffer,t*h*3);for(let i=0;i<t;++i)for(let t=0;t<15;++t){const a=16*(e+i)+t;t<h?(s[a]=c[(3*i+0)*h+t],n[a]=c[(3*i+1)*h+t],r[a]=c[(3*i+2)*h+t]):(s[a]=127,n[a]=127,r[a]=127)}}i.shData0=s,i.shData1=n,i.shData2=r,i.shBands={3:1,8:2,15:3}[h]}else i.shBands=0;return i})(r,l,c):(l.forEach(t=>{t.properties.forEach(s=>{const i=pm.get(s.type);if(i){const n=!e||e(s.name)?new i(t.count):null;s.storage=n}})}),(t=>1===t.length&&"vertex"===t[0].name&&t[0].properties.every(t=>"float"===t.type))(l)?await(async(t,e,s)=>{const i=e[0],n=i.properties,r=n.length,a=n.map(t=>t.storage),o=n.reduce((t,e)=>t+e.byteSize,0);let l,h=0;const c=()=>{const e=t.data.buffer;l?.buffer!==e&&(l=new Float32Array(e,0,e.byteLength/4))};for(c();h<i.count;){for(;t.remaining<o;)await t.read(),c();const e=Math.min(i.count-h,Math.floor(t.remaining/o));for(let t=0;t<r;++t){const s=a[t];for(let i=0;i<e;++i)s[i+h]=l[i*r+t]}h+=e,t.head+=e*o}return new wf(e,s)})(r,l,c):await(async(t,e,s)=>{for(let i=0;i<e.length;++i){const s=e[i],n=s.properties.reduce((t,e)=>t+e.byteSize,0),r=s.properties.map(t=>{if(!t.storage)return e=>{e.head+=t.byteSize};switch(t.type){case"char":return(e,s)=>{t.storage[s]=e.getInt8()};case"uchar":return(e,s)=>{t.storage[s]=e.getUint8()};case"short":return(e,s)=>{t.storage[s]=e.getInt16()};case"ushort":return(e,s)=>{t.storage[s]=e.getUint16()};case"int":return(e,s)=>{t.storage[s]=e.getInt32()};case"uint":return(e,s)=>{t.storage[s]=e.getUint32()};case"float":return(e,s)=>{t.storage[s]=e.getFloat32()};case"double":return(e,s)=>{t.storage[s]=e.getFloat64()};default:throw new Error(`Unsupported property data type '${t.type}' in ply header`)}});let a=0;for(;a<s.count;){for(;t.remaining<n;)await t.read();const e=Math.min(s.count-a,Math.floor(t.remaining/n));for(let i=0;i<e;++i){for(let e=0;e<s.properties.length;++e)r[e](t,a);a++}}}return new wf(e,s)})(r,l,c)))()},gm=t=>!0;class vm{constructor(t,e){this.app=t,this.maxRetries=e}async load(t,e,s){try{const i=await(s.file?.contents??fetch(t.load));if(i&&i.body){const t=parseInt(i.headers.get("content-length")??"0",10);let n=0;const r=await _m(i.body.getReader(),s.data.elementFilter??gm,e=>{n+=e,s&&s.fire("progress",n,t)});s.fire("load:data",r),r.isCompressed||(s.data.reorder??1)&&r.reorderData();e(null,r.isCompressed&&!s.data.decompress?new cm(this.app.graphicsDevice,r):new dm(this.app.graphicsDevice,r.isCompressed?r.decompress():r))}else e("Error loading resource",null)}catch(i){e(i,null)}}open(t,e){return e}}class Sm extends Bu{destroy(){this.gsplatData.destroy(),super.destroy()}configureMaterialDefines(t){t.set("GSPLAT_SOGS_DATA",!0),t.set("SH_BANDS",this.gsplatData.shBands)}configureMaterial(t){const{gsplatData:e}=this,{meta:s}=e;this.configureMaterialDefines(t.defines),["packedTexture","packedSh0","packedShN"].forEach(s=>{e[s]&&t.setParameter(s,e[s])}),["means"].forEach(e=>{const i=s[e];i&&(t.setParameter(`${e}_mins`,i.mins),t.setParameter(`${e}_maxs`,i.maxs))}),2===s.version?["scales","sh0","shN"].forEach(e=>{const i=s[e];i&&(t.setParameter(`${e}_mins`,i.codebook[0]),t.setParameter(`${e}_maxs`,i.codebook[255]))}):(["scales","sh0"].forEach(e=>{const i=s[e];i&&(t.setParameter(`${e}_mins`,Math.min(...i.mins.slice(0,3))),t.setParameter(`${e}_maxs`,Math.max(...i.maxs.slice(0,3))))}),["shN"].forEach(e=>{const i=s[e];i&&(t.setParameter(`${e}_mins`,i.mins),t.setParameter(`${e}_maxs`,i.maxs))}))}evalTextureSize(t){return new Jt.Z(this.gsplatData.means_l.width,this.gsplatData.means_l.height)}}const ym=(t,e)=>{const s=new Map;e.forEach(e=>{const i=(i,n)=>{s.set(e,{loaded:i,total:n}),(()=>{let e=0,i=0;s.forEach(t=>{e+=t.loaded,i+=t.total}),t.fire("progress",e,i)})()},n=()=>{e.off("progress",i),e.off("load",n),e.off("error",n)};e.on("progress",i),e.on("load",n),e.on("error",n)})};class xm{constructor(t,e){this.app=t,this.maxRetries=e}async loadTextures(t,e,s,i){2!==i.version&&(i=(t=>{const e={version:1,count:t.means.shape[0],means:{mins:t.means.mins,maxs:t.means.maxs,files:t.means.files},scales:{mins:t.scales.mins,maxs:t.scales.maxs,files:t.scales.files},quats:{files:t.quats.files},sh0:{mins:t.sh0.mins,maxs:t.sh0.maxs,files:t.sh0.files}};return t.shN&&(e.shN={mins:t.shN.mins,maxs:t.shN.maxs,files:t.shN.files}),e})(i));const{assets:n}=this.app,r=["means","quats","scales","sh0","shN"],a={},o=[];r.forEach(e=>{const r=i[e]?.files??[];a[e]=r.map(e=>{const i=new Kn.V(e,"texture",{url:s.options?.mapUrl?.(e)??new URL(e,new URL(t.load,window.location.href).toString()).toString(),filename:e},{mipmaps:!1}),r=new Promise((t,e)=>{i.on("load",()=>t(null)),i.on("error",t=>e(t))});return n.add(i),o.push(r),i})});const l=r.map(t=>a[t]).flat();ym(s,l),l.forEach(t=>n.load(t)),await Promise.allSettled(o);const h=new Pf;h.meta=i,h.numSplats=i.count,h.means_l=a.means[0].resource,h.means_u=a.means[1].resource,h.quats=a.quats[0].resource,h.scales=a.scales[0].resource,h.sh0=a.sh0[0].resource,h.sh_centroids=a.shN?.[0]?.resource,h.sh_labels=a.shN?.[1]?.resource;const c=s.data?.decompress;c||await h.prepareGpuData();e(null,c?new dm(this.app.graphicsDevice,await h.decompress()):new Sm(this.app.graphicsDevice,h))}load(t,e,s){if(s.data?.means)this.loadTextures(t,e,s,s.data);else{"string"==typeof t&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries,responseType:Js.l.ResponseType.JSON};Js.L.get(t.load,i,(i,n)=>{i?e(`Error loading gsplat meta: ${t.original} [${i}]`):this.loadTextures(t,e,s,n)})}}}const Tm=async t=>{const e=new DecompressionStream("deflate-raw"),s=new Blob([t]).stream().pipeThrough(e),i=await new Response(s).arrayBuffer();return new Uint8Array(i)};class wm{constructor(t,e=3){this.app=t,this.maxRetries=e}load(t,e,s){const i=async t=>{const i=(t=>{const e=new DataView(t),s=t=>e.getUint16(t,!0),i=t=>e.getUint32(t,!0),n=e=>{const n=s(e+28),r=s(e+30),a=s(e+32);return{magic:i(e),compressionMethod:s(e+10),compressedSizeBytes:i(e+20),uncompressedSizeBytes:i(e+24),lfhOffsetBytes:i(e+42),filename:(new TextDecoder).decode(new Uint8Array(t,e+46,n)),recordSizeBytes:46+n+r+a}},r=t=>{const e=s(t+26),n=s(t+28);return{magic:i(t),offsetBytes:t+30+e+n}},a=(t=>({magic:i(t),numFiles:s(t+8),cdSizeBytes:i(t+12),cdOffsetBytes:i(t+16)}))(e.byteLength-22);if(101010256!==a.magic)throw new Error("Invalid zip file: EOCDR not found");if(4294967295===a.cdOffsetBytes||4294967295===a.cdSizeBytes)throw new Error("Invalid zip file: Zip64 not supported");const o=[];let l=a.cdOffsetBytes;for(let h=0;h<a.numFiles;h++){const e=n(l);if(33639248!==e.magic)throw new Error("Invalid zip file: CDR not found");const s=r(e.lfhOffsetBytes);if(67324752!==s.magic)throw new Error("Invalid zip file: LFH not found");o.push({filename:e.filename,compression:{0:"none",8:"deflate"}[e.compressionMethod]??"unknown",data:new Uint8Array(t,s.offsetBytes,e.compressedSizeBytes)}),l+=e.recordSizeBytes}return o})(t);for(const e of i)"deflate"===e.compression&&(e.data=await Tm(e.data));const n=i.find(t=>"meta.json"===t.filename);if(!n)return void e("Error: meta.json not found");let r;try{r=JSON.parse((new TextDecoder).decode(n.data))}catch(u){return void e(`Error parsing meta.json: ${u}`)}const a=["means","scales","quats","sh0","shN"].map(t=>r[t]?.files??[]).flat(),o={},l=[];for(const e of a){const t=i.find(t=>t.filename===e);let s;if(t)s=new Kn.V(e,"texture",{url:e,filename:e,contents:t.data},{mipmaps:!1});else{const t=new URL(e,new URL(e,window.location.href).toString()).toString();s=new Kn.V(e,"texture",{url:t,filename:e},{mipmaps:!1})}const n=new Promise((t,e)=>{s.on("load",()=>t(null)),s.on("error",t=>e(t))});this.app.assets.add(s),o[e]=s,l.push(n)}Object.values(o).forEach(t=>this.app.assets.load(t)),await Promise.allSettled(l);const h=new Pf;h.meta=r,h.numSplats=r.count,h.means_l=o[r.means.files[0]].resource,h.means_u=o[r.means.files[1]].resource,h.quats=o[r.quats.files[0]].resource,h.scales=o[r.scales.files[0]].resource,h.sh0=o[r.sh0.files[0]].resource,h.sh_centroids=o[r.shN?.files[0]]?.resource,h.sh_labels=o[r.shN?.files[1]]?.resource;const c=s.data?.decompress;c||await h.prepareGpuData();const d=c?new dm(this.app.graphicsDevice,await h.decompress()):new Sm(this.app.graphicsDevice,h);e(null,d)};Kn.V.fetchArrayBuffer(t.load,(t,s)=>{t?e(t):i(s)},s,this.maxRetries)}}class bm{constructor(t,e){this.app=t,this.maxRetries=e}load(t,e,s){"string"==typeof t&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries,responseType:Js.l.ResponseType.JSON};Js.L.get(t.load,i,(i,n)=>{if(i)e(`Error loading gsplat octree: ${t.original} [${i}]`);else{const t=new Yu(s.file.url,n);e(null,t)}})}}class Em extends ir{constructor(t){super(t,"gsplat"),this.parsers={ply:new vm(t,3),sog:new wm(t),json:new xm(t,3),octree:new bm(t,3)}}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=Qs.A.getBasename(this._getUrlWithoutParams(t)).toLowerCase();if("lod-meta.json"===e)return this.parsers.octree;const s=Qs.A.getExtension(e).replace(".","");return this.parsers[s]||this.parsers.ply}load(t,e,s){"string"==typeof t&&(t={load:t,original:t}),this._getParser(t.original).load(t,e,s)}open(t,e,s){return e}}class Am{static setCompressedPRS(t,e,s){const i=s.singleVecs;let n,r;const a=e.___1;a||(n=s.tripleVecs,r=e.___2);let o=a?a[0]:n[r];t.setLocalPosition(i[o],i[o+1],i[o+2]),o=a?a[1]:n[r+1],t.setLocalEulerAngles(i[o],i[o+1],i[o+2]),o=a?a[2]:n[r+2],t.setLocalScale(i[o],i[o+1],i[o+2])}static oneCharToKey(t,e){const s=t.charCodeAt(0)-e.fieldFirstCode;return e.fieldArray[s]}static multCharToKey(t,e){let s=0;for(let i=0;i<t.length;i++)s=s*e.fieldCodeBase+t.charCodeAt(i)-e.fieldFirstCode;return e.fieldArray[s]}}class Cm{constructor(t,e){this._node=t,this._data=e}run(){const t=Object.prototype.toString.call(this._node);return"[object Object]"===t?this._handleMap():"[object Array]"===t?this._handleArray():this._result=this._node,this._result}_handleMap(){this._result={};Object.keys(this._node).forEach(this._handleKey,this)}_handleKey(t){let e=t;const s=t.length;1===s?e=Am.oneCharToKey(t,this._data):2===s&&(e=Am.multCharToKey(t,this._data)),this._result[e]=new Cm(this._node[t],this._data).run()}_handleArray(){this._result=[],this._node.forEach(this._handleArElt,this)}_handleArElt(t){const e=new Cm(t,this._data).run();this._result.push(e)}}class Pm{constructor(t,e){this._app=t,this._isTemplate=e}parse(t){const e={};let s=null;const i=t.compressedFormat;i&&!t.entDecompressed&&(t.entDecompressed=!0,t.entities=new Cm(t.entities,i).run());for(const n in t.entities){const r=t.entities[n],a=this._createEntity(r,i);e[n]=a,null===r.parent&&(s=a)}for(const n in t.entities){const s=e[n],i=t.entities[n].children,r=i.length;for(let t=0;t<r;t++){const n=e[i[t]];n&&s.addChild(n)}}return this._openComponentData(s,t.entities),s}_createEntity(t,e){const s=new as.w(t.name,this._app);if(s.setGuid(t.resource_id),this._setPosRotScale(s,t,e),s._enabled=t.enabled??!0,this._isTemplate?s._template=!0:s._enabledInHierarchy=s._enabled,s.template=t.template,t.tags)for(let i=0;i<t.tags.length;i++)s.tags.add(t.tags[i]);return s}_setPosRotScale(t,e,s){if(s)Am.setCompressedPRS(t,e,s);else{const s=e.position,i=e.rotation,n=e.scale;t.setLocalPosition(s[0],s[1],s[2]),t.setLocalEulerAngles(i[0],i[1],i[2]),t.setLocalScale(n[0],n[1],n[2])}}_openComponentData(t,e){const s=this._app.systems.list;let i=s.length;const n=e[t.getGuid()];for(let a=0;a<i;a++){const e=s[a],i=n.components[e.id];i&&e.addComponent(t,i)}i=n.children.length;const r=t._children;for(let a=0;a<i;a++)r[a]&&(r[a]=this._openComponentData(r[a],e));return t}}class Dm{static load(t,e,s){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:e>0,maxRetries:e},(e,i)=>{if(e){let i=`Error while loading scene JSON ${t.original}`;e.message?(i+=`: ${e.message}`,e.stack&&(i+=`\n${e.stack}`)):i+=`: ${e}`,s(i)}else s(e,i)})}}class Lm extends ir{constructor(t){super(t,"hierarchy")}load(t,e){Dm.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=!0;const s=new Pm(this._app,!1).parse(e);return this._app.systems.script.preloading=!1,s}}class Mm extends ir{constructor(t){super(t,"html"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading html resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),this.decoder.decode(t)}}class Im extends ir{constructor(t){super(t,"json"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};t.load.startsWith("blob:")&&(s.responseType=Js.l.ResponseType.JSON),Js.L.get(t.load,s,(s,i)=>{s?e(`Error loading JSON resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),JSON.parse(this.decoder.decode(t))}}class Rm{constructor(){this.removeInvalid=!0,this.valid=!0,this.enumValidators={occludeSpecular:this._createEnumValidator([F.AvR,F.aPl,F.Nt9]),cull:this._createEnumValidator([x.pLF,x.K1r,x.CWw,x.AQ1]),blendType:this._createEnumValidator([F.Nit,F.dcX,F.i96,F.RjB,F.bYZ,F.$M5,F.HGq,F.LLJ,F.rZI,F.Z7c,F.HVe]),depthFunc:this._createEnumValidator([x.gaK,x.v1A,x.sTv,x.fsA,x.q3J,x.v_N,x.wGs,x.vpx])}}setInvalid(t,e){this.valid=!1,this.removeInvalid&&delete e[t]}validate(t){const e=ke,s=ze,i="path"===t.mappingFormat;for(const n in t){const r=e[n];if(r)if(r.startsWith("enum")){const e=r.split(":")[1];this.enumValidators[e]&&(this.enumValidators[e](t[n])||this.setInvalid(n,t))}else if("number"===r)"number"!=typeof t[n]&&this.setInvalid(n,t);else if("boolean"===r)"boolean"!=typeof t[n]&&this.setInvalid(n,t);else if("string"===r)"string"!=typeof t[n]&&this.setInvalid(n,t);else if("vec2"===r)t[n]instanceof Array&&2===t[n].length||this.setInvalid(n,t);else if("rgb"===r)t[n]instanceof Array&&3===t[n].length||this.setInvalid(n,t);else if("texture"===r)i?"string"!=typeof t[n]&&null!==t[n]&&(t[n]instanceof Q.g||this.setInvalid(n,t)):"number"!=typeof t[n]&&null!==t[n]&&(t[n]instanceof Q.g||this.setInvalid(n,t));else if("boundingbox"===r)t[n].center&&t[n].center instanceof Array&&3===t[n].center.length||this.setInvalid(n,t),t[n].halfExtents&&t[n].halfExtents instanceof Array&&3===t[n].halfExtents.length||this.setInvalid(n,t);else if("cubemap"===r)"number"!=typeof t[n]&&null!==t[n]&&void 0!==t[n]&&(t[n]instanceof Q.g&&t[n].cubemap||this.setInvalid(n,t));else if("chunks"===r){const e=Object.keys(t[n]);for(let s=0;s<e.length;s++)"string"!=typeof t[n][e[s]]&&this.setInvalid(e[s],t[n])}else console.error(`Unknown material type: ${r}`);else s[n]?delete t[n]:this.valid=!1}return t.validated=!0,this.valid}_createEnumValidator(t){return function(e){return t.indexOf(e)>=0}}}class Fm{constructor(){this._validator=null}parse(t){const e=this.migrate(t),s=this._validate(e),i=new Xe;return this.initialize(i,s),i}initialize(t,e){if(e.validated||(e=this._validate(e)),e.chunks&&e.chunks&&Object.keys(e.chunks).length>0){const s=t.shaderChunks.glsl;Object.entries(e.chunks).forEach(([t,e])=>s.set(t,e))}for(const s in e){const i=ke[s],n=e[s];if("vec2"===i)t[s]=new Jt.Z(n[0],n[1]);else if("rgb"===i)t[s]=new p.Q(n[0],n[1],n[2]);else if("texture"===i)n instanceof Q.g?t[s]=n:t[s]instanceof Q.g&&"number"==typeof n&&n>0||(t[s]=null);else if("cubemap"===i)n instanceof Q.g?t[s]=n:t[s]instanceof Q.g&&"number"==typeof n&&n>0||(t[s]=null),"cubeMap"!==s||n||(t.prefilteredCubemaps=null);else if("boundingbox"===i){const e=new l.e(n.center[0],n.center[1],n.center[2]),i=new l.e(n.halfExtents[0],n.halfExtents[1],n.halfExtents[2]);t[s]=new y(e,i)}else t[s]=e[s]}t.update()}migrate(t){let e;t.shader&&delete t.shader,t.mapping_format&&(t.mappingFormat=t.mapping_format,delete t.mapping_format);const s=[["bumpMapFactor","bumpiness"],["aoUvSet","aoMapUv"],["aoMapVertexColor","aoVertexColor"],["diffuseMapVertexColor","diffuseVertexColor"],["emissiveMapVertexColor","emissiveVertexColor"],["specularMapVertexColor","specularVertexColor"],["metalnessMapVertexColor","metalnessVertexColor"],["opacityMapVertexColor","opacityVertexColor"],["glossMapVertexColor","glossVertexColor"],["lightMapVertexColor","lightVertexColor"],["specularMapTint","specularTint"],["metalnessMapTint","metalnessTint"],["clearCoatGlossiness","clearCoatGloss"]];for(e=0;e<s.length;e++){const i=s[e][0],n=s[e][1];void 0!==t[i]&&(void 0===t[n]&&(t[n]=t[i]),delete t[i])}const i=["fresnelFactor","shadowSampleType"];for(e=0;e<i.length;e++){const s=i[e];t.hasOwnProperty(s)&&delete t[s]}return t}_validate(t){return t.validated||(this._validator||(this._validator=new Rm),this._validator.validate(t)),t}}var Om=s(17176);const Nm={aoMap:"white",aoDetailMap:"white",diffuseMap:"gray",diffuseDetailMap:"gray",specularMap:"gray",specularityFactorMap:"white",metalnessMap:"black",glossMap:"gray",sheenMap:"black",sheenGlossMap:"gray",clearCoatMap:"black",clearCoatGlossMap:"gray",clearCoatNormalMap:"normal",refractionMap:"white",emissiveMap:"gray",normalMap:"normal",normalDetailMap:"normal",heightMap:"gray",opacityMap:"gray",sphereMap:"gray",lightMap:"white",thicknessMap:"black",iridescenceMap:"black",iridescenceThicknessMap:"black",envAtlas:"black",anisotropyMap:"black"};class km extends ir{constructor(t){super(t,"material"),this._assets=t.assets,this._device=t.graphicsDevice,this._parser=new Fm}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e&&e(`Error loading material: ${t.original} [${s}]`):e&&(i._engine=!0,e(null,i))})}open(t,e){const s=this._parser.parse(e);return e._engine&&(s._data=e,delete e._engine),s}patch(t,e){t.resource._data&&(t._data=t.resource._data,delete t.resource._data),t.data.name=t.name,t.resource.name=t.name,this._bindAndAssignAssets(t,e),t.off("unload",this._onAssetUnload,this),t.on("unload",this._onAssetUnload,this)}_onAssetUnload(t){delete t.data.parameters,delete t.data.chunks,delete t.data.name}_assignTexture(t,e,s){e.resource[t]=s}_getPlaceholderTexture(t){const e=Nm[t];return(0,Om.L)(this._device,e)}_assignPlaceholderTexture(t,e){e.resource[t]=this._getPlaceholderTexture(t)}_onTextureLoad(t,e,s){this._assignTexture(t,e,s.resource),e.resource.update()}_onTextureAdd(t,e,s){this._assets.load(s)}_onTextureRemoveOrUnload(t,e,s){const i=e.resource;i&&e.resource[t]===s.resource&&(this._assignPlaceholderTexture(t,e),i.update())}_assignCubemap(t,e,s){if(e.resource[t]=s[0],"cubeMap"===t){const t=s.slice(1);t.every(t=>t)?e.resource.prefilteredCubemaps=t:t[0]&&(e.resource.envAtlas=t[0])}}_onCubemapLoad(t,e,s){this._assignCubemap(t,e,s.resources),this._parser.initialize(e.resource,e.data)}_onCubemapAdd(t,e,s){this._assets.load(s)}_onCubemapRemoveOrUnload(t,e,s){const i=e.resource;e.data.prefilteredCubeMap128===s.resources[1]&&(this._assignCubemap(t,e,[null,null,null,null,null,null,null]),i.update())}_bindAndAssignAssets(t,e){const s=this._parser.migrate(t.data),i=t.resource,n="path"===s.mappingFormat,r=Be;let a,o,l;for(a=0;a<r.length;a++){o=r[a],l=i._assetReferences[o];const h=s[o],c=i[o],d=c===this._getPlaceholderTexture(o),u=s.validated;!h||c&&u&&!d?l&&(n?l.url=null:l.id=null):(l||(l=new Ec(o,t,e,{load:this._onTextureLoad,add:this._onTextureAdd,remove:this._onTextureRemoveOrUnload,unload:this._onTextureRemoveOrUnload},this),i._assetReferences[o]=l),n?l.url=t.getAbsoluteUrl(h):l.id=h,l.asset&&(l.asset.resource?this._assignTexture(o,t,l.asset.resource):this._assignPlaceholderTexture(o,t),e.load(l.asset)))}const h=Ue;for(a=0;a<h.length;a++)o=h[a],l=i._assetReferences[o],s[o]&&!t.data.prefilteredCubeMap128&&(l||(l=new Ec(o,t,e,{load:this._onCubemapLoad,add:this._onCubemapAdd,remove:this._onCubemapRemoveOrUnload,unload:this._onCubemapRemoveOrUnload},this),i._assetReferences[o]=l),n?l.url=s[o]:l.id=s[o],l.asset&&(l.asset.loaded&&this._assignCubemap(o,t,l.asset.resources),e.load(l.asset)));this._parser.initialize(i,s)}}class Bm{constructor(t){this._device=t.device,this._defaultMaterial=t.defaultMaterial,this._assets=t.assets}parse(t,e,s){Hp.parse("filename.glb","",t,this._device,this._assets,s?.options??{},(t,s)=>{if(t)e(t);else{const t=Qp.createModel(s,this._defaultMaterial);s.destroy(),e(null,t)}})}}const Um={points:x._AA,lines:x.EEU,lineloop:x.HsS,linestrip:x.PTM,triangles:x.Qpk,trianglestrip:x.SF$,trianglefan:x.zl$},zm={int8:x.VSW,uint8:x.EUX,int16:x.kF,uint16:x.rvO,int32:x.uVx,uint32:x.Bz3,float32:x.n$B};class Vm{constructor(t){this._device=t.device,this._defaultMaterial=t.defaultMaterial}parse(t,e){const s=t.model;if(!s)return void e(null,null);if(s.version<=1)return void e("JsonModelParser#parse: Trying to parse unsupported model format.");const i=this._parseNodes(t),n=this._parseSkins(t,i),r=this._parseVertexBuffers(t),a=this._parseIndexBuffers(t,r),o=this._parseMorphs(t,i,r),l=this._parseMeshes(t,n.skins,o.morphs,r,a.buffer,a.data),h=this._parseMeshInstances(t,i,l,n.skins,n.instances,o.morphs,o.instances),c=new Ka;c.graph=i[0],c.meshInstances=h,c.skinInstances=n.instances,c.morphInstances=o.instances,c.getGraph().syncHierarchy(),e(null,c)}_parseNodes(t){const e=t.model,s=[];let i;for(i=0;i<e.nodes.length;i++){const t=e.nodes[i],n=new Rt.t(t.name);n.setLocalPosition(t.position[0],t.position[1],t.position[2]),n.setLocalEulerAngles(t.rotation[0],t.rotation[1],t.rotation[2]),n.setLocalScale(t.scale[0],t.scale[1],t.scale[2]),n.scaleCompensation=!!t.scaleCompensation,s.push(n)}for(i=1;i<e.parents.length;i++)s[e.parents[i]].addChild(s[i]);return s}_parseSkins(t,e){const s=t.model,i=[],n=[];let r,a;for(r=0;r<s.skins.length;r++){const t=s.skins[r],l=[];for(a=0;a<t.inverseBindMatrices.length;a++){const e=t.inverseBindMatrices[a];l[a]=(new o.$).set(e)}const h=new Zf(this._device,l,t.boneNames);i.push(h);const c=new Hs(h),d=[];for(a=0;a<h.boneNames.length;a++){const t=h.boneNames[a],s=e[0].findByName(t);d.push(s)}c.bones=d,n.push(c)}return{skins:i,instances:n}}_getMorphVertexCount(t,e,s){for(let i=0;i<t.meshes.length;i++){const n=t.meshes[i];if(n.morph===e){return s[n.vertices].numVertices}}}_parseMorphs(t,e,s){const i=t.model,n=[],r=[];let a,o,h,c,d,u;if(i.morphs){const t=function(t,e,s){const i=new Float32Array(3*s);for(let n=0;n<e.length;n++){const s=3*e[n];i[s]=t[3*n],i[s+1]=t[3*n+1],i[s+2]=t[3*n+2]}return i};for(a=0;a<i.morphs.length;a++){for(c=i.morphs[a].targets,u=[],h=this._getMorphVertexCount(i,a,s),o=0;o<c.length;o++){const e=c[o].aabb,s=e.min,i=e.max,n=new y(new l.e(.5*(i[0]+s[0]),.5*(i[1]+s[1]),.5*(i[2]+s[2])),new l.e(.5*(i[0]-s[0]),.5*(i[1]-s[1]),.5*(i[2]-s[2]))),r=c[o].indices;let a=c[o].deltaPositions,f=c[o].deltaNormals;r&&(a=t(a,r,h),f=t(f,r,h)),d=new Kf({deltaPositions:a,deltaNormals:f,name:c[o].name,aabb:n}),u.push(d)}const e=new Yf(u,this._device);n.push(e);const f=new Ya(e);r.push(f)}}return{morphs:n,instances:r}}_parseVertexBuffers(t){const e=t.model,s=[],i={position:x.JYe,normal:x.XF6,tangent:x.h3u,blendWeight:x.Hn_,blendIndices:x.aVd,color:x.F8$,texCoord0:x.slc,texCoord1:x.zEd,texCoord2:x.GHH,texCoord3:x.z5t,texCoord4:x.GWP,texCoord5:x.NdR,texCoord6:x.GBD,texCoord7:x.zZp};for(let n=0;n<e.vertices.length;n++){const t=e.vertices[n],r=[];for(const e in t){const s=t[e];r.push({semantic:i[e],components:s.components,type:zm[s.type],normalize:i[e]===x.F8$})}const a=new xs.y(this._device,r),o=t.position.data.length/t.position.components,l=new ys.R(this._device,a,o),h=new Os(l);for(let e=0;e<o;e++){for(const s in t){const n=t[s];switch(n.components){case 1:h.element[i[s]].set(n.data[e]);break;case 2:h.element[i[s]].set(n.data[2*e],1-n.data[2*e+1]);break;case 3:h.element[i[s]].set(n.data[3*e],n.data[3*e+1],n.data[3*e+2]);break;case 4:h.element[i[s]].set(n.data[4*e],n.data[4*e+1],n.data[4*e+2],n.data[4*e+3])}}h.next()}h.end(),s.push(l)}return s}_parseIndexBuffers(t,e){const s=t.model;let i,n=null,r=null,a=0;for(i=0;i<s.meshes.length;i++){const t=s.meshes[i];void 0!==t.indices&&(a+=t.indices.length)}let o=0;for(i=0;i<e.length;i++)o=Math.max(o,e[i].numVertices);return a>0&&(o>65535?(n=new Ss(this._device,x.gpl,a),r=new Uint32Array(n.lock())):(n=new Ss(this._device,x.c02,a),r=new Uint16Array(n.lock()))),{buffer:n,data:r}}_parseMeshes(t,e,s,i,n,r){const a=t.model,o=[];let h=0;for(let c=0;c<a.meshes.length;c++){const t=a.meshes[c],d=t.aabb,u=d.min,f=d.max,p=new y(new l.e(.5*(f[0]+u[0]),.5*(f[1]+u[1]),.5*(f[2]+u[2])),new l.e(.5*(f[0]-u[0]),.5*(f[1]-u[1]),.5*(f[2]-u[2]))),m=void 0!==t.indices,_=new Us(this._device);_.vertexBuffer=i[t.vertices],_.indexBuffer[0]=m?n:null,_.primitive[0].type=Um[t.type],_.primitive[0].base=m?t.base+h:t.base,_.primitive[0].count=t.count,_.primitive[0].indexed=m,_.skin=void 0!==t.skin?e[t.skin]:null,_.morph=void 0!==t.morph?s[t.morph]:null,_.aabb=p,m&&(r.set(t.indices,h),h+=t.indices.length),o.push(_)}return null!==n&&n.unlock(),o}_parseMeshInstances(t,e,s,i,n,r,a){const o=t.model,l=[];let h;for(h=0;h<o.meshInstances.length;h++){const t=o.meshInstances[h],c=e[t.node],d=s[t.mesh],u=new pt(d,this._defaultMaterial,c);if(d.skin){const t=i.indexOf(d.skin);u.skinInstance=n[t]}if(d.morph){const t=r.indexOf(d.morph);u.morphInstance=a[t]}l.push(u)}return l}}class Gm extends ir{constructor(t){super(t,"model"),this._parsers=[],this.device=t.graphicsDevice,this.assets=t.assets,this.defaultMaterial=(0,st.h)(this.device),this.addParser(new Vm(this),(t,e)=>".json"===Qs.A.getExtension(t)),this.addParser(new Bm(this),(t,e)=>".glb"===Qs.A.getExtension(t))}load(t,e,s){"string"==typeof t&&(t={load:t,original:t});const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};(t.load.startsWith("blob:")||t.load.startsWith("data:"))&&(".glb"===Qs.A.getExtension(t.original).toLowerCase()?i.responseType=Js.l.ResponseType.ARRAY_BUFFER:i.responseType=Js.l.ResponseType.JSON),Js.L.get(t.load,i,(i,n)=>{if(e)if(i)e(`Error loading model: ${t.original} [${i}]`);else{for(let i=0;i<this._parsers.length;i++){const r=this._parsers[i];if(r.decider(t.original,n))return void r.parser.parse(n,(t,s)=>{t?e(t):e(null,s)},s)}e("No parsers found")}})}open(t,e){return e}patch(t,e){if(!t.resource)return;const s=t.data,i=this;t.resource.meshInstances.forEach((n,r)=>{if(s.mapping){const a=function(t){t.resource?n.material=t.resource:(t.once("load",a),e.load(t)),t.once("remove",t=>{n.material===t.resource&&(n.material=i.defaultMaterial)})};if(!s.mapping[r])return void(n.material=i.defaultMaterial);const o=s.mapping[r].material,l=s.mapping[r].path;let h;if(void 0!==o)o?(h=e.get(o),h?a(h):e.once(`add:${o}`,a)):n.material=i.defaultMaterial;else if(l){const i=t.getAbsoluteUrl(s.mapping[r].path);h=e.getByUrl(i),h?a(h):e.once(`add:url:${i}`,a)}}})}addParser(t,e){this._parsers.push({parser:t,decider:e})}}class Hm extends ir{constructor(t){super(t,"scene")}load(t,e){Dm.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=!0;const s=new Pm(this._app,!1).parse(e),i=this._app.scene;return i.root=s,this._app.applySceneSettings(e.settings),this._app.systems.script.preloading=!1,i}}class Wm{static{this._types=[]}static push(t){Wm._types.push(t)}}const Xm=new Set(["system","entity","create","destroy","swap","move","data","scripts","_scripts","_scriptsIndex","_scriptsData","enabled","_oldState","onEnable","onDisable","onPostStateChange","_onSetEnabled","_checkState","_onBeforeRemove","_onInitializeAttributes","_onInitialize","_onPostInitialize","_onUpdate","_onPostUpdate","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]);const $m={};function qm(t,e,s){if("function"!=typeof t)throw new Error(`script class: '${t}' must be a constructor function (i.e. class).`);if(!(t.prototype instanceof xu.e))throw new Error(`script class: '${Tu.__getScriptName(t)}' does not extend pc.Script.`);if(e=e||t.__name||Tu.__getScriptName(t),Xm.has(e))throw new Error(`script name: '${e}' is reserved, please change script name`);t.__name=e;(s?s.scripts:Dr.getApplication().scripts).add(t),Wm.push(t)}Su.reservedNames.forEach((t,e,s)=>{$m[t]=1});const jm=t=>t[0].toLowerCase()+t.substring(1);class Ym extends ir{constructor(t){super(t,"script"),this._scripts={},this._cache={}}clearCache(){for(const t in this._cache){const e=this._cache[t],s=e.parentNode;s&&s.removeChild(e)}this._cache={}}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s=this;_r.app=this._app;const i=(t.load,(t,i,n)=>{if(t)e(t);else{const t={};for(let e=0;e<Wm._types.length;e++)t[Wm._types[e].name]=Wm._types[e];Wm._types.length=0,e(null,t,n);const r=i.split("&hash=")[0];delete s._loader._cache[rr.makeKey(r,"script")]}}),[n]=t.load.split("?");n.endsWith(".mjs")?this._loadModule(n,i):this._loadScript(t.load,i)}open(t,e){return e}patch(t,e){}_loadScript(t,e){const s=document.head,i=document.createElement("script");this._cache[t]=i,i.async=!1,i.addEventListener("error",t=>{e(`Script: ${t.target.src} failed to load`)},!1);let n=!1;i.onload=i.onreadystatechange=function(){n||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(n=!0,e(null,t,i))},i.src=t,s.appendChild(i)}_loadModule(t,e){const s=i.i.browser&&"null"!==window.location.origin?window.location.origin+window.location.pathname:"file:///home/runner/work/developer-site/developer-site/node_modules/playcanvas/build/playcanvas/src/framework/handlers/script.js",n=new URL(t,s);import(n.toString()).then(s=>{const i=n.pathname.split("/").pop(),r=this._app.assets.find(i,"script")?.data?.scripts;for(const t in s){const e=s[t];if(e.prototype instanceof xu.e){const t=jm(e.name);e.scriptName;const s=e.scriptName??t;qm(e,s),r&&this._app.scripts.addSchema(s,r[s])}}e(null,t,null)}).catch(t=>{e(t)})}}class Km extends ir{constructor(t){super(t,"shader"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading shader resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),this.decoder.decode(t)}}const Zm=[0,0,1,0,0,1,0,0,1,0,0,1],Qm=[0,1,3,2,3,1];class Jm extends r.J{constructor(t,e){super(),this._device=t,this._pixelsPerUnit=e&&void 0!==e.pixelsPerUnit?e.pixelsPerUnit:1,this._renderMode=e&&void 0!==e.renderMode?e.renderMode:F.hA3,this._atlas=e&&void 0!==e.atlas?e.atlas:null,this._frameKeys=e&&void 0!==e.frameKeys?e.frameKeys:null,this._meshes=[],this._updatingProperties=!1,this._meshesDirty=!1,this._atlas&&this._frameKeys&&this._createMeshes()}set frameKeys(t){this._frameKeys=t,this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:frameKeys",t)}get frameKeys(){return this._frameKeys}set atlas(t){t!==this._atlas&&(this._atlas&&(this._atlas.off("set:frames",this._onSetFrames,this),this._atlas.off("set:frame",this._onFrameChanged,this),this._atlas.off("remove:frame",this._onFrameRemoved,this)),this._atlas=t,this._atlas&&this._frameKeys&&(this._atlas.on("set:frames",this._onSetFrames,this),this._atlas.on("set:frame",this._onFrameChanged,this),this._atlas.on("remove:frame",this._onFrameRemoved,this),this._updatingProperties?this._meshesDirty=!0:this._createMeshes()),this.fire("set:atlas",t))}get atlas(){return this._atlas}set pixelsPerUnit(t){this._pixelsPerUnit!==t&&(this._pixelsPerUnit=t,this.fire("set:pixelsPerUnit",t),this._atlas&&this._frameKeys&&this.renderMode===F.hA3&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes()))}get pixelsPerUnit(){return this._pixelsPerUnit}set renderMode(t){if(this._renderMode===t)return;const e=this._renderMode;this._renderMode=t,this.fire("set:renderMode",t),e!==F.hA3&&t!==F.hA3||this._atlas&&this._frameKeys&&(this._updatingProperties?this._meshesDirty=!0:this._createMeshes())}get renderMode(){return this._renderMode}get meshes(){return this._meshes}_createMeshes(){const t=this._meshes.length;for(let i=0;i<t;i++){const t=this._meshes[i];t&&t.destroy()}const e=this._frameKeys.length;this._meshes=new Array(e);const s=this.renderMode===F.FCf||this._renderMode===F.jZy?this._create9SliceMesh:this._createSimpleMesh;for(let i=0;i<e;i++){const t=this._atlas.frames[this._frameKeys[i]];this._meshes[i]=t?s.call(this,t):null}this.fire("set:meshes")}_createSimpleMesh(t){const e=t.rect,s=this._atlas.texture.width,i=this._atlas.texture.height,n=e.z/this._pixelsPerUnit,r=e.w/this._pixelsPerUnit,a=t.pivot.x,o=t.pivot.y,l=[-a*n,-o*r,0,(1-a)*n,-o*r,0,(1-a)*n,(1-o)*r,0,-a*n,(1-o)*r,0],h=e.x/s,c=1-e.y/i,d=(e.x+e.z)/s,u=1-(e.y+e.w)/i,f=[h,c,d,c,d,u,h,u],p=new Rn;return p.positions=l,p.normals=Zm,p.uvs=f,p.indices=Qm,Us.fromGeometry(this._device,p)}_create9SliceMesh(){const t=Jt.Z.ONE,e=[],s=[],i=[],n=[];let r=0;for(let o=0;o<=3;o++){const a=0===o||3===o?0:1;for(let l=0;l<=3;l++){const h=-t.x+2*t.x*(o<=1?0:3)/3,c=0,d=-(-t.y+2*t.y*(l<=1?0:3)/3),u=0===l||3===l?0:1;e.push(-h,c,d),s.push(0,1,0),i.push(a,u),o<3&&l<3&&(n.push(r+3+1,r+1,r),n.push(r+3+1,r+3+2,r+1)),r++}}const a=new Rn;return a.positions=e,a.normals=s,a.uvs=i,a.indices=n,Us.fromGeometry(this._device,a)}_onSetFrames(t){this._updatingProperties?this._meshesDirty=!0:this._createMeshes()}_onFrameChanged(t,e){const s=this._frameKeys.indexOf(t);s<0||(e?this.renderMode===F.hA3&&(this._meshes[s]=this._createSimpleMesh(e)):this._meshes[s]=null,this.fire("set:meshes"))}_onFrameRemoved(t){const e=this._frameKeys.indexOf(t);e<0||(this._meshes[e]=null,this.fire("set:meshes"))}startUpdate(){this._updatingProperties=!0,this._meshesDirty=!1}endUpdate(){this._updatingProperties=!1,this._meshesDirty&&this._atlas&&this._frameKeys&&this._createMeshes(),this._meshesDirty=!1}destroy(){for(const t of this._meshes)t&&t.destroy();this._meshes.length=0}}function t_(t){const e=this;e.resource&&(e.resource.atlas=t.resource)}function e_(t){this.registry.load(t)}class s_ extends ir{constructor(t){super(t,"sprite"),this._assets=t.assets,this._device=t.graphicsDevice}load(t,e){"string"==typeof t&&(t={load:t,original:t}),".json"===Qs.A.getExtension(t.original)&&Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(t,s)=>{t?e(t):e(null,s)})}open(t,e){const s=new Jm(this._device);return t&&(s.__data=e),s}patch(t,e){const s=t.resource;if(s.__data&&(t.data.pixelsPerUnit=s.__data.pixelsPerUnit,t.data.renderMode=s.__data.renderMode,t.data.frameKeys=s.__data.frameKeys,s.__data.textureAtlasAsset)){const i=e.getByUrl(s.__data.textureAtlasAsset);i?t.data.textureAtlasAsset=i.id:console.warn(`Could not find textureatlas with url: ${s.__data.textureAtlasAsset}`)}s.startUpdate(),s.renderMode=t.data.renderMode,s.pixelsPerUnit=t.data.pixelsPerUnit,s.frameKeys=t.data.frameKeys,this._updateAtlas(t),s.endUpdate(),t.off("change",this._onAssetChange,this),t.on("change",this._onAssetChange,this)}_updateAtlas(t){const e=t.resource;if(!t.data.textureAtlasAsset)return void(e.atlas=null);this._assets.off(`load:${t.data.textureAtlasAsset}`,t_,t),this._assets.on(`load:${t.data.textureAtlasAsset}`,t_,t);const s=this._assets.get(t.data.textureAtlasAsset);s&&s.resource?e.atlas=s.resource:s?this._assets.load(s):(this._assets.off(`add:${t.data.textureAtlasAsset}`,e_,t),this._assets.on(`add:${t.data.textureAtlasAsset}`,e_,t))}_onAssetChange(t,e,s,i){"data"===e&&s&&s.textureAtlasAsset&&i&&s.textureAtlasAsset!==i.textureAtlasAsset&&(this._assets.off(`load:${i.textureAtlasAsset}`,t_,t),this._assets.off(`add:${i.textureAtlasAsset}`,e_,t))}}class i_{constructor(t,e){this._templateRoot=null,this._app=t,this._data=e}instantiate(){return this._templateRoot||this._parseTemplate(),this._templateRoot.clone()}_parseTemplate(){const t=new Pm(this._app,!0);this._templateRoot=t.parse(this._data)}}class n_ extends ir{constructor(t){super(t,"template"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};Js.L.get(t.load,s,(s,i)=>{s?e(`Error requesting template: ${t.original}`):e(s,i)})}open(t,e){return new i_(this._app,e)}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),new i_(this._app,JSON.parse(this.decoder.decode(t)))}}class r_ extends ir{constructor(t){super(t,"text"),this.decoder=null}load(t,e){"string"==typeof t&&(t={load:t,original:t}),Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(s,i)=>{s?e(`Error loading text resource: ${t.original} [${s}]`):e(null,i)})}openBinary(t){return this.decoder??=new TextDecoder("utf-8"),this.decoder.decode(t)}}class a_ extends r.J{constructor(){super(),this._texture=null,this._frames=null}set texture(t){this._texture=t,this.fire("set:texture",t)}get texture(){return this._texture}set frames(t){this._frames=t,this.fire("set:frames",t)}get frames(){return this._frames}setFrame(t,e){let s=this._frames[t];s?(s.rect.copy(e.rect),s.pivot.copy(e.pivot),s.border.copy(e.border)):(s={rect:e.rect.clone(),pivot:e.pivot.clone(),border:e.border.clone()},this._frames[t]=s),this.fire("set:frame",t.toString(),s)}removeFrame(t){const e=this._frames[t];e&&(delete this._frames[t],this.fire("remove:frame",t.toString(),e))}destroy(){this._texture&&this._texture.destroy()}}const o_={repeat:x.x3I,clamp:x.vq6,mirror:x.qoY},l_={nearest:x.uhC,linear:x.DrA,nearest_mip_nearest:x.GLw,linear_mip_nearest:x.reG,nearest_mip_linear:x.hs2,linear_mip_linear:x.qn_},h_=/^data\.frames\.(\d+)$/;class c_ extends ir{constructor(t){super(t,"textureatlas"),this._loader=t.loader}load(t,e){"string"==typeof t&&(t={load:t,original:t});const s=this,i=this._loader.getHandler("texture");".json"===Qs.A.getExtension(t.original)?Js.L.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},(i,n)=>{if(i)e(i);else{const i=t.original.replace(".json",".png");s._loader.load(i,"texture",(t,s)=>{t?e(t):e(null,{data:n,texture:s})})}}):i.load(t,e)}open(t,e,s){const i=new a_;if(e.texture&&e.data)i.texture=e.texture,i.__data=e.data;else{const n=this._loader.getHandler("texture").open(t,e,s);if(!n)return null;i.texture=n}return i}patch(t,e){if(!t.resource)return;t.resource.__data&&(void 0!==t.resource.__data.minfilter&&(t.data.minfilter=t.resource.__data.minfilter),void 0!==t.resource.__data.magfilter&&(t.data.magfilter=t.resource.__data.magfilter),void 0!==t.resource.__data.addressu&&(t.data.addressu=t.resource.__data.addressu),void 0!==t.resource.__data.addressv&&(t.data.addressv=t.resource.__data.addressv),void 0!==t.resource.__data.mipmaps&&(t.data.mipmaps=t.resource.__data.mipmaps),void 0!==t.resource.__data.anisotropy&&(t.data.anisotropy=t.resource.__data.anisotropy),void 0!==t.resource.__data.rgbm&&(t.data.rgbm=!!t.resource.__data.rgbm),t.data.frames=t.resource.__data.frames,delete t.resource.__data);const s=t.resource.texture;if(s&&(s.name=t.name,t.data.hasOwnProperty("minfilter")&&s.minFilter!==l_[t.data.minfilter]&&(s.minFilter=l_[t.data.minfilter]),t.data.hasOwnProperty("magfilter")&&s.magFilter!==l_[t.data.magfilter]&&(s.magFilter=l_[t.data.magfilter]),t.data.hasOwnProperty("addressu")&&s.addressU!==o_[t.data.addressu]&&(s.addressU=o_[t.data.addressu]),t.data.hasOwnProperty("addressv")&&s.addressV!==o_[t.data.addressv]&&(s.addressV=o_[t.data.addressv]),t.data.hasOwnProperty("mipmaps")&&s.mipmaps!==t.data.mipmaps&&(s.mipmaps=t.data.mipmaps),t.data.hasOwnProperty("anisotropy")&&s.anisotropy!==t.data.anisotropy&&(s.anisotropy=t.data.anisotropy),t.data.hasOwnProperty("rgbm"))){const e=t.data.rgbm?x.fW0:x.s64;s.type!==e&&(s.type=e)}t.resource.texture=s;const i={};for(const n in t.data.frames){const e=t.data.frames[n];i[n]={rect:new w.Z(e.rect),pivot:new Jt.Z(e.pivot),border:new w.Z(e.border)}}t.resource.frames=i,t.off("change",this._onAssetChange,this),t.on("change",this._onAssetChange,this)}_onAssetChange(t,e,s){let i;if("data"===e||"data.frames"===e){const e={};for(const t in s.frames)i=s.frames[t],e[t]={rect:new w.Z(i.rect),pivot:new Jt.Z(i.pivot),border:new w.Z(i.border)};t.resource.frames=e}else{const n=e.match(h_);if(n){const e=n[1];s?(t.resource.frames[e]?(i=t.resource.frames[e],i.rect.set(s.rect[0],s.rect[1],s.rect[2],s.rect[3]),i.pivot.set(s.pivot[0],s.pivot[1]),i.border.set(s.border[0],s.border[1],s.border[2],s.border[3])):t.resource.frames[e]={rect:new w.Z(s.rect),pivot:new Jt.Z(s.pivot),border:new w.Z(s.border)},t.resource.fire("set:frame",e,t.resource.frames[e])):t.resource.frames[e]&&(delete t.resource.frames[e],t.resource.fire("remove:frame",e))}}}}var d_=s(39964),u_=s(4914);function f_(){const t=0,e=1,s=2,i=3,n=8,r=9,a=10,o=11,l=12,h=13,c=14,d=16,u={astc:a,dxt:s,etc1:t,etc2:t,pvr:n,atc:o,none:c},f={astc:a,dxt:i,etc1:d,etc2:e,pvr:r,atc:l,none:d},p=21,m=22,_=23,g=8,v=10,S=26,y=27,x=28,T=29,w=30,b=7,E=3,A=5,C=(u,f)=>{switch(u){case t:return f.formats.etc2?m:p;case e:return _;case s:return g;case i:return v;case n:return S;case r:return y;case a:return x;case o:return T;case l:return w;case h:return b;case c:return E;case d:return A}},P=t=>{const e=function(t,e){const s=t*(2/255)-1,i=e*(2/255)-1,n=Math.sqrt(1-Math.min(1,s*s+i*i));return Math.max(0,Math.min(255,Math.floor(.5*(n+1)*255)))};for(let s=0;s<t.length;s+=4){const i=t[s+3],n=t[s+1];t[s+0]=i,t[s+2]=e(i,n),t[s+3]=255}return t},D=t=>{const e=new Uint16Array(t.length/4);for(let s=0;s<t.length;s+=4){const i=t[s+0],n=t[s+1],r=t[s+2];e[s/4]=(248&i)<<8|(252&n)<<3|r>>3}return e},L=()=>"undefined"!=typeof performance?performance.now():0;let M,I,R;const F=(t,e,s)=>{if(s){if(t.formats.astc)return"astc"}else if(e){if(t.formats.etc2)return"etc2"}else{if(t.formats.etc2)return"etc2";if(t.formats.etc1)return"etc1"}return(e=>{for(let s=0;s<e.length;++s){const i=e[s];if(t.formats[i])return i}return"none"})(e?R:I)},O=(h,c,d)=>{switch(d){case t:case e:return!0;case s:case i:return!(3&h||3&c);case n:case r:return((t,e)=>!(t&t-1||e&e-1))(h,c);case a:case o:case l:return!0}return!1},N=(t,e,s)=>s.isKTX2?((t,e,s)=>{if(!M.KTX2File)throw new Error("Basis transcoder module does not include support for KTX2.");const i=L(),n=new M.KTX2File(new Uint8Array(e)),r=n.getWidth(),a=n.getHeight(),o=n.getLevels(),l=!!n.getHasAlpha(),p=n.isUASTC&&n.isUASTC();if(!r||!a||!o)throw n.close(),n.delete(),new Error(`Invalid image dimensions url=${t} width=${r} height=${a} levels=${o}`);const m=F(s.deviceDetails,l,p),_=!!s.isGGGR&&"pvr"===m;let g,v;if(_?g=h:(g=l?f[m]:u[m],O(r,a,g)||(g=l?h:c)),!n.startTranscoding())throw n.close(),n.delete(),new Error(`Failed to start transcoding url=${t}`);const S=[];for(let h=0;h<o;++h){const e=n.getImageTranscodedSizeInBytes(h,0,0,g),s=new Uint8Array(e);if(!n.transcodeImage(s,h,0,0,g,0,-1,-1))throw n.close(),n.delete(),new Error(`Failed to transcode image url=${t}`);const i=g===c||g===d;S.push(i?new Uint16Array(s.buffer):s)}if(n.close(),n.delete(),_)for(g=c,v=0;v<S.length;++v)S[v]=D(P(S[v]));return{format:C(g,s.deviceDetails),width:r,height:a,levels:S,cubemap:!1,transcodeTime:L()-i,url:t,unswizzledGGGR:_}})(t,e,s):((t,e,s)=>{const i=L(),n=new M.BasisFile(new Uint8Array(e)),r=n.getImageWidth(0,0),a=n.getImageHeight(0,0),o=n.getNumImages(),l=n.getNumLevels(0),p=!!n.getHasAlpha(),m=n.isUASTC&&n.isUASTC();if(!(r&&a&&o&&l))throw n.close(),n.delete(),new Error(`Invalid image dimensions url=${t} width=${r} height=${a} images=${o} levels=${l}`);const _=F(s.deviceDetails,p,m),g=!!s.isGGGR&&"pvr"===_;let v,S;if(g?v=h:(v=p?f[_]:u[_],O(r,a,v)||(v=p?h:c)),!n.startTranscoding())throw n.close(),n.delete(),new Error(`Failed to start transcoding url=${t}`);const y=[];for(let h=0;h<l;++h){const e=n.getImageTranscodedSizeInBytes(0,h,v),s=new Uint8Array(e);if(!n.transcodeImage(s,0,h,v,0,0)){if(h!==l-1||e!==y[h-1].buffer.byteLength)throw n.close(),n.delete(),new Error(`Failed to transcode image url=${t}`);s.set(new Uint8Array(y[h-1].buffer)),console.warn(`Failed to transcode last mipmap level, using previous level instead url=${t}`)}const i=v===c||v===d;y.push(i?new Uint16Array(s.buffer):s)}if(n.close(),n.delete(),g)for(v=c,S=0;S<y.length;++S)y[S]=D(P(y[S]));return{format:C(v,s.deviceDetails),width:r,height:a,levels:y,cubemap:!1,transcodeTime:L()-i,url:t,unswizzledGGGR:g}})(t,e,s),k=(t,e,s)=>{try{const i=N(t,e,s);i.levels=i.levels.map(t=>t.buffer),self.postMessage({url:t,data:i},i.levels)}catch(i){self.postMessage({url:t,err:i},null)}},B=[];self.onmessage=t=>{const e=t.data;switch(e.type){case"init":s=e.config,i=()=>{for(let t=0;t<B.length;++t)k(B[t].url,B[t].data,B[t].options);B.length=0},self.BASIS(s.module?{instantiateWasm:(t,e)=>(WebAssembly.instantiate(s.module,t).then(t=>{e(t)}).catch(t=>{console.error(`instantiate failed + ${t}`)}),{})}:null).then(t=>{t.initializeBasis(),M=t,I=s.rgbPriority,R=s.rgbaPriority,i(null)});break;case"transcode":M?k(e.url,e.data,e.options):B.push(e)}var s,i}}const p_=t=>({astc:!!t.extCompressedTextureASTC,atc:!!t.extCompressedTextureATC,dxt:!!t.extCompressedTextureS3TC,etc1:!!t.extCompressedTextureETC1,etc2:!!t.extCompressedTextureETC,pvr:!!t.extCompressedTexturePVRTC});class m_{constructor(t,e,s){this.queue=t,this.worker=new Worker(e.workerUrl),this.worker.addEventListener("message",t=>{const e=t.data;this.queue.handleResponse(e.url,e.err,e.data),this.eager||this.queue.enqueueClient(this)}),this.worker.postMessage({type:"init",config:e}),this.eager=s}run(t){const e=[];t.data instanceof ArrayBuffer&&e.push(t.data),this.worker.postMessage({type:"transcode",url:t.url,format:t.format,data:t.data,options:t.options},e),this.eager&&this.queue.enqueueClient(this)}}const __=["etc2","etc1","astc","dxt","pvr","atc"],g_=["astc","dxt","etc2","pvr","atc"],v_=new class{constructor(){this.callbacks={},this.queue=[],this.clients=[]}enqueueJob(t,e,s,i){if(this.callbacks.hasOwnProperty(t))this.callbacks[t].push(s);else{this.callbacks[t]=[s];const n={url:t,data:e,options:i};this.clients.length>0?this.clients.shift().run(n):this.queue.push(n)}}enqueueClient(t){this.queue.length>0?t.run(this.queue.shift()):this.clients.push(t)}handleResponse(t,e,s){const i=this.callbacks[t];if(e)for(let n=0;n<i.length;++n)i[n](e);else{s.format===x.kqw||s.format===x.LDn?s.levels=s.levels.map(t=>new Uint16Array(t)):s.levels=s.levels.map(t=>new Uint8Array(t));for(let t=0;t<i.length;++t)i[t](null,s)}delete this.callbacks[t]}};let S_=null,y_=!1;function x_(t){if(!y_){if(t){if(t.lazyInit)return void(S_=t)}else t=S_||{};if(!t.glueUrl||!t.wasmUrl||!t.fallbackUrl){const e=u_.F.getConfig("BASIS");e&&(t={glueUrl:e.glueUrl,wasmUrl:e.wasmUrl,fallbackUrl:e.fallbackUrl,numWorkers:e.numWorkers})}if(t.glueUrl||t.wasmUrl||t.fallbackUrl){y_=!0;const e=Math.max(1,Math.min(16,t.numWorkers||1)),s=1===t.numWorkers||!t.hasOwnProperty("eagerWorkers")||t.eagerWorkers;t.rgbPriority=t.rgbPriority||__,t.rgbaPriority=t.rgbaPriority||g_,t.maxRetries=t.hasOwnProperty("maxRetries")?t.maxRetries:5,((t,e)=>{const s=t=>{const e=["/* basis */",t,"",`(${f_.toString()})()\n\n`].join("\n");return new Blob([e],{type:"application/javascript"})},i=(i,n)=>{e(null,{workerUrl:URL.createObjectURL(s(i)),module:n,rgbPriority:t.rgbPriority,rgbaPriority:t.rgbaPriority})},n={cache:!0,responseType:"text",retry:t.maxRetries>0,maxRetries:t.maxRetries};if(t.glueUrl&&t.wasmUrl&&(()=>{try{if("object"==typeof WebAssembly&&"function"==typeof WebAssembly.instantiate){const t=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(t instanceof WebAssembly.Module)return new WebAssembly.Instance(t)instanceof WebAssembly.Instance}}catch(t){}return!1})()){let s=null,r=null;Js.L.get(t.glueUrl,n,(t,n)=>{t?e(t):r?i(n,r):s=n});const a=fetch(t.wasmUrl),o=()=>{a.then(t=>t.arrayBuffer()).then(t=>WebAssembly.compile(t)).then(t=>{s?i(s,t):r=t}).catch(t=>{e(t,null)})};WebAssembly.compileStreaming?WebAssembly.compileStreaming(a).then(t=>{s?i(s,t):r=t}).catch(t=>{o()}):o()}else Js.L.get(t.fallbackUrl,n,(t,s)=>{t?e(t,null):i(s,null)})})(t,(t,i)=>{if(t)console.error(`failed to initialize basis worker: ${t}`);else for(let n=0;n<e;++n)v_.enqueueClient(new m_(v_,i,s))})}}}let T_=null;function w_(t,e,s,i,n){return x_(),T_||(T_={formats:p_(t)}),v_.enqueueJob(e,s,i,{deviceDetails:T_,isGGGR:!!n?.isGGGR,isKTX2:!!n?.isKTX2}),y_}class b_{load(t,e,s){throw new Error("not implemented")}open(t,e,s){throw new Error("not implemented")}}class E_ extends b_{constructor(t,e){super(),this.device=e,this.maxRetries=0}load(t,e,s){const i=this.device;Kn.V.fetchArrayBuffer(t.load,(n,r)=>{n?e(n):(n=>{w_(i,t.load,n,e,{isGGGR:!!(8&s?.file?.variants?.basis?.opt)})||e(`Basis module not found. Asset [${s.name}](${s.getFileUrl()}) basis texture variant will not be loaded.`)})(r)},s,this.maxRetries)}open(t,e,s,i={}){const n=i.srgb?(0,x.d0G)(e.format):e.format,r=new Q.g(s,{name:t,addressU:e.cubemap?x.vq6:x.x3I,addressV:e.cubemap?x.vq6:x.x3I,width:e.width,height:e.height,format:n,cubemap:e.cubemap,levels:e.levels,...i});return r.upload(),r}}class A_ extends b_{constructor(t,e){super(),this.crossOrigin=t.prefix?"anonymous":null,this.maxRetries=0,this.device=e}load(t,e,s){const i=!!s?.file?.contents;if(i){if(this.device.supportsImageBitmap)return void this._loadImageBitmapFromBlob(new Blob([s.file.contents]),e);t={load:URL.createObjectURL(new Blob([s.file.contents])),original:t.original}}const n=(s,n)=>{i&&URL.revokeObjectURL(t.load),e(s,n)};let r;s&&s.options&&s.options.hasOwnProperty("crossOrigin")?r=s.options.crossOrigin:dr._3.test(t.load)&&(r=this.crossOrigin),this.device.supportsImageBitmap?this._loadImageBitmap(t.load,t.original,r,n,s):this._loadImage(t.load,t.original,r,n,s)}open(t,e,s,i={}){const n=new Q.g(s,{name:t,width:e.width,height:e.height,format:i.srgb?x.Mb4:x.Lxj,...i});return n.setSource(e),n}_loadImage(t,e,s,i,n){const r=new Image;s&&(r.crossOrigin=s);let a=0;const o=this.maxRetries;let l;const h=1048576;n?.fire("progress",0,h),r.onload=function(){n?.fire("progress",h,h),i(null,r)},r.onerror=function(){if(!l)if(o>0&&++a<=o){const s=100*Math.pow(2,a);console.log(`Error loading Texture from: '${e}' - Retrying in ${s}ms...`);const i=t.indexOf("?")>=0?"&":"?";l=setTimeout(()=>{r.src=`${t+i}retry=${Date.now()}`,l=null},s)}else i(`Error loading Texture from: '${e}'`)},r.src=t}_loadImageBitmap(t,e,s,i,n){const r={cache:!0,responseType:"blob",retry:this.maxRetries>0,maxRetries:this.maxRetries,progress:n};Js.L.get(t,r,(t,e)=>{t?i(t):this._loadImageBitmapFromBlob(e,i)})}_loadImageBitmapFromBlob(t,e){createImageBitmap(t,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then(t=>e(null,t)).catch(t=>e(t))}}const C_=[1481919403,3140563232,169478669],P_={33776:x.S$n,33778:x.EPU,33779:x.E_6,36196:x.G24,37492:x.ZyS,37496:x.ArW,35840:x.xyx,35841:x.TyC,35842:x.Ijy,35843:x.apD,32849:x.akF,32856:x.Lxj,35905:x.FTO,35907:x.Mb4,35898:x.s_z,34843:x.Nnq,34842:x.WBN};function D_(t,e,s,i){return t===x.s_z?new Uint32Array(e,s,i/4):new Uint8Array(e,s,i)}class L_ extends b_{constructor(t){super(),this.maxRetries=0}load(t,e,s){Kn.V.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const n=this.parse(e);if(!n)return null;const r=i.srgb?(0,x.d0G)(n.format):n.format,a=new Q.g(s,{name:t,addressU:n.cubemap?x.vq6:x.x3I,addressV:n.cubemap?x.vq6:x.x3I,width:n.width,height:n.height,format:r,cubemap:n.cubemap,levels:n.levels,...i});return a.upload(),a}parse(t){const e=new Uint32Array(t);if(C_[0]!==e[0]||C_[1]!==e[1]||C_[2]!==e[2])return null;const s={endianness:e[3],glType:e[4],glTypeSize:e[5],glFormat:e[6],glInternalFormat:e[7],glBaseInternalFormat:e[8],pixelWidth:e[9],pixelHeight:e[10],pixelDepth:e[11],numberOfArrayElements:e[12],numberOfFaces:e[13],numberOfMipmapLevels:e[14],bytesOfKeyValueData:e[15]};if(s.pixelDepth>1)return null;if(0!==s.numberOfArrayElements)return null;const i=P_[s.glInternalFormat];if(void 0===i)return null;let n=16+s.bytesOfKeyValueData/4;const r=s.numberOfFaces>1,a=[];for(let o=0;o<(s.numberOfMipmapLevels||1);o++){const s=e[n++];r&&a.push([]);const l=r?a[o]:a;for(let e=0;e<(r?6:1);++e)l.push(D_(i,t,4*n,s)),n+=s+3>>2}return{format:i,width:s.pixelWidth,height:s.pixelHeight,levels:a,cubemap:r}}}class M_{constructor(t){this.offset=0,this.arraybuffer=t,this.dataView=new DataView(t)}get remainingBytes(){return this.dataView.byteLength-this.offset}reset(t=0){this.offset=t}skip(t){this.offset+=t}align(t){this.offset=this.offset+t-1&~(t-1)}_inc(t){return this.offset+=t,this.offset-t}readChar(){return String.fromCharCode(this.dataView.getUint8(this.offset++))}readChars(t){let e="";for(let s=0;s<t;++s)e+=this.readChar();return e}readU8(){return this.dataView.getUint8(this.offset++)}readU16(){return this.dataView.getUint16(this._inc(2),!0)}readU32(){return this.dataView.getUint32(this._inc(4),!0)}readU64(){return this.readU32()+2**32*this.readU32()}readU32be(){return this.dataView.getUint32(this._inc(4),!1)}readArray(t){for(let e=0;e<t.length;++e)t[e]=this.readU8()}readLine(){const t=this.dataView;let e="";for(;!(this.offset>=t.byteLength);){const t=String.fromCharCode(this.readU8());if("\n"===t)break;e+=t}return e}}const I_=166;class R_ extends b_{constructor(t,e){super(),this.maxRetries=0,this.device=e}load(t,e,s){Kn.V.fetchArrayBuffer(t.load,(i,n)=>{i?e(i,n):this.parse(n,t,e,s)},s,this.maxRetries)}open(t,e,s,i={}){const n=i.srgb?(0,x.d0G)(e.format):e.format,r=new Q.g(s,{name:t,addressU:e.cubemap?x.vq6:x.x3I,addressV:e.cubemap?x.vq6:x.x3I,width:e.width,height:e.height,format:n,cubemap:e.cubemap,levels:e.levels,...i});return r.upload(),r}parse(t,e,s,i){const n=new M_(t),r=[n.readU32be(),n.readU32be(),n.readU32be()];if(2873840728!==r[0]||540160187!==r[1]||218765834!==r[2])return null;const a={vkFormat:n.readU32(),typeSize:n.readU32(),pixelWidth:n.readU32(),pixelHeight:n.readU32(),pixelDepth:n.readU32(),layerCount:n.readU32(),faceCount:n.readU32(),levelCount:n.readU32(),supercompressionScheme:n.readU32()},o={dfdByteOffset:n.readU32(),dfdByteLength:n.readU32(),kvdByteOffset:n.readU32(),kvdByteLength:n.readU32(),sgdByteOffset:n.readU64(),sgdByteLength:n.readU64()},l=[];for(let c=0;c<Math.max(1,a.levelCount);++c)l.push({byteOffset:n.readU64(),byteLength:n.readU64(),uncompressedByteLength:n.readU64()});if(n.readU32()!==o.kvdByteOffset-o.dfdByteOffset)return null;n.skip(8);const h=n.readU8();if(n.skip(o.dfdByteLength-9),n.skip(o.kvdByteLength),1===a.supercompressionScheme||h===I_){w_(this.device,e.load,t,s,{isGGGR:!!(8&i?.file?.variants?.basis?.opt),isKTX2:!0})||s(`Basis module not found. Asset [${i.name}](${i.getFileUrl()}) basis texture variant will not be loaded.`)}else s("unsupported KTX2 pixel format")}}class F_ extends b_{constructor(t){super(),this.maxRetries=0}load(t,e,s){Kn.V.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const n=new Uint32Array(e,0,32),r=n[4],a=n[3],o=Math.max(n[7],1),l=4===n[20],h=n[21],c=n[22],d=65024===n[28],u=827611204,f=825438800,p=825439312;let m,_=!1,g=!1,v=!1,S=!1,y=null,T=1;if(l?h===u?(y=x.S$n,_=!0):894720068===h?(y=x.E_6,_=!0):113===h?(y=x.WBN,T=2):116===h?(y=x.s7h,T=4):826496069===h?(y=x.G24,_=!0,g=!0):h===f||825504336===h?(y=h===f?x.TyC:x.apD,_=!0,v=!0):h!==p&&825504848!==h||(y=h===p?x.xyx:x.Ijy,_=!0,S=!0):32===c&&(y=x.Lxj),!y)return m=new Q.g(s,{width:4,height:4,format:x.akF,name:"dds-legacy-empty"}),m;m=new Q.g(s,{name:t,addressU:d?x.vq6:x.x3I,addressV:d?x.vq6:x.x3I,width:r,height:a,format:y,cubemap:d,mipmaps:o>1,...i});let w=128;const b=d?6:1;let E;const A=h===u?8:16;let C,P,D;for(let L=0;L<b;L++){let t=r,s=a;for(let i=0;i<o;i++){_?g?E=Math.floor((t+3)/4)*Math.floor((s+3)/4)*8:v?E=Math.max(t,16)*Math.max(s,8)/4:S?E=Math.max(t,8)*Math.max(s,8)/2:(C=Math.floor((t+4-1)/4),P=Math.floor((s+4-1)/4),D=C*P,E=D*A):E=t*s*4;const n=y===x.s7h?new Float32Array(e,w,E):y===x.WBN?new Uint16Array(e,w,E):new Uint8Array(e,w,E);d?(m._levels[i]||(m._levels[i]=[]),m._levels[i][L]=n):m._levels[i]=n,w+=E*T,t=Math.max(.5*t,1),s=Math.max(.5*s,1)}}return m.upload(),m}}class O_ extends b_{constructor(t){super(),this.maxRetries=0}load(t,e,s){Kn.V.fetchArrayBuffer(t.load,e,s,this.maxRetries),s.data&&!s.data.type&&(s.data.type=x.TOD)}open(t,e,s,i={}){const n=this.parse(e);if(!n)return null;const r=new Q.g(s,{name:t,addressU:x.x3I,addressV:x.vq6,minFilter:x.uhC,magFilter:x.uhC,width:n.width,height:n.height,levels:n.levels,format:x.Lxj,type:x.TOD,mipmaps:!1,...i});return r.upload(),r}parse(t){const e=new M_(t);if(!e.readLine().startsWith("#?RADIANCE"))return null;const s={};for(;;){const t=e.readLine();if(0===t.length)break;{const e=t.split("=");2===e.length&&(s[e[0]]=e[1])}}if(!s.hasOwnProperty("FORMAT"))return null;const i=e.readLine().split(" ");if(4!==i.length)return null;const n=parseInt(i[1],10),r=parseInt(i[3],10),a=this._readPixels(e,r,n,"-Y"===i[0]);return a?{width:r,height:n,levels:[a]}:null}_readPixels(t,e,s,i){if(e<8||e>32767)return this._readPixelsFlat(t,e,s);const n=[0,0,0,0];if(t.readArray(n),2!==n[0]||2!==n[1]||128&n[2])return t.skip(-4),this._readPixelsFlat(t,e,s);const r=new ArrayBuffer(e*s*4),a=new Uint8Array(r);let o,l,h,c,d,u,f=i?0:4*e*(s-1);for(l=0;l<s;++l){if(l&&t.readArray(n),(n[2]<<8)+n[3]!==e)return null;for(c=0;c<4;++c)for(o=0;o<e;)if(d=t.readU8(),d>128){if(d-=128,o+d>e)return null;for(u=t.readU8(),h=0;h<d;++h)a[f+c+4*o++]=u}else{if(0===d||o+d>e)return null;for(h=0;h<d;++h)a[f+c+4*o++]=t.readU8()}f+=4*e*(i?1:-1)}return a}_readPixelsFlat(t,e,s){return t.remainingBytes===e*s*4?new Uint8Array(t.arraybuffer,t.offset):null}}const N_={repeat:x.x3I,clamp:x.vq6,mirror:x.qoY},k_={nearest:x.uhC,linear:x.DrA,nearest_mip_nearest:x.GLw,linear_mip_nearest:x.reG,nearest_mip_linear:x.hs2,linear_mip_linear:x.qn_},B_={default:x.s64,rgbm:x.fW0,rgbe:x.TOD,rgbp:x.mEg,swizzleGGGR:x.wmq};class U_ extends ir{constructor(t){super(t,"texture");const e=t.assets,s=t.graphicsDevice;this._device=s,this._assets=e,this.imgParser=new A_(e,s),this.parsers={dds:new F_(e),ktx:new L_(e),ktx2:new R_(e,s),basis:new E_(e,s),hdr:new O_(e)}}set crossOrigin(t){this.imgParser.crossOrigin=t}get crossOrigin(){return this.imgParser.crossOrigin}set maxRetries(t){this.imgParser.maxRetries=t;for(const e in this.parsers)this.parsers.hasOwnProperty(e)&&(this.parsers[e].maxRetries=t)}get maxRetries(){return this.imgParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=Qs.A.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".","");return this.parsers[e]||this.imgParser}_getTextureOptions(t){const e={};if(t){t.name?.length>0&&(e.name=t.name);const s=t.data;s.hasOwnProperty("minfilter")&&(e.minFilter=k_[s.minfilter]),s.hasOwnProperty("magfilter")&&(e.magFilter=k_[s.magfilter]),s.hasOwnProperty("addressu")&&(e.addressU=N_[s.addressu]),s.hasOwnProperty("addressv")&&(e.addressV=N_[s.addressv]),s.hasOwnProperty("mipmaps")&&(e.mipmaps=s.mipmaps),s.hasOwnProperty("anisotropy")&&(e.anisotropy=s.anisotropy),s.hasOwnProperty("flipY")&&(e.flipY=!!s.flipY),s.hasOwnProperty("srgb")&&(e.srgb=!!s.srgb),e.type=x.s64,s.hasOwnProperty("type")?e.type=B_[s.type]:s.hasOwnProperty("rgbm")&&s.rgbm?e.type=x.fW0:t.file&&8&t.file.opt&&(e.type=x.wmq)}return e}load(t,e,s){"string"==typeof t&&(t={load:t,original:t}),this._getParser(t.original).load(t,e,s)}open(t,e,s){if(!t)return;const i=this._getTextureOptions(s);let n=this._getParser(t).open(t,e,this._device,i);return null===n?n=new Q.g(this._device,{width:4,height:4,format:x.akF}):(!function(t){const e=d_.V.calcMipLevelsCount(t._width,t._height);if(t._format!==x.Lxj&&t._format!==x.s7h||t._volume||t._compressed||1===t._levels.length||t._levels.length===e||(s=t._cubemap?t._levels[0][0]:t._levels[0])instanceof HTMLCanvasElement||s instanceof HTMLImageElement||s instanceof HTMLVideoElement)return;var s;const i=function(t,e,s){const i=Math.max(1,t>>1),n=Math.max(1,e>>1),r=new s.constructor(i*n*4),a=Math.floor(t/i),o=Math.floor(e/n),l=a*o;for(let h=0;h<n;++h)for(let e=0;e<i;++e)for(let n=0;n<4;++n){let c=0;for(let i=0;i<o;++i)for(let r=0;r<a;++r)c+=s[4*(e*a+r+(h*o+i)*t)+n];r[4*(e+h*i)+n]=c/l}return r};for(let n=t._levels.length;n<e;++n){const e=Math.max(1,t._width>>n-1),s=Math.max(1,t._height>>n-1);if(t._cubemap){const r=[];for(let a=0;a<6;++a)r.push(i(e,s,t._levels[n-1][a]));t._levels.push(r)}else t._levels.push(i(e,s,t._levels[n-1]))}t._levelsUpdated=t._cubemap?[[!0,!0,!0,!0,!0,!0]]:[!0]}(n),e.unswizzledGGGR&&(s.file.variants.basis.opt&=-9)),n}patch(t,e){const s=t.resource;if(!s)return;const i=this._getTextureOptions(t);for(const n of Object.keys(i))s[n]=i[n]}}const z_="immersive-ar",V_="viewer",G_="gpu-optimized",H_="luminance-alpha",W_="unsigned-short",X_="float32";class $_{constructor(t){this._supported=i.i.browser&&!!window.XRDOMOverlayState,this._root=null,this._manager=t}get supported(){return this._supported}get available(){return this._supported&&this._manager.active&&null!==this._manager._session.domOverlayState}get state(){return this._supported&&this._manager.active&&this._manager._session.domOverlayState?this._manager._session.domOverlayState.type:null}set root(t){this._supported&&!this._manager.active&&(this._root=t)}get root(){return this._root}}const q_=[],j_=[];class Y_ extends r.J{static{this.EVENT_REMOVE="remove"}static{this.EVENT_RESULT="result"}constructor(t,e,s,i=null){super(),this.manager=t,this._xrHitTestSource=e,this._transient=s,this._inputSource=i}remove(){if(!this._xrHitTestSource)return;const t=this.manager.hitTest.sources,e=t.indexOf(this);-1!==e&&t.splice(e,1),this.onStop()}onStop(){this._xrHitTestSource.cancel(),this._xrHitTestSource=null,this.fire("remove"),this.manager.hitTest.fire("remove",this)}update(t){if(this._transient){const e=t.getHitTestResultsForTransientInput(this._xrHitTestSource);for(let t=0;t<e.length;t++){const s=e[t];if(!s.results.length)continue;let i;s.inputSource&&(i=this.manager.input._getByInputSource(s.inputSource)),this.updateHitResults(s.results,i)}}else{const e=t.getHitTestResults(this._xrHitTestSource);if(!e.length)return;this.updateHitResults(e)}}updateHitResults(t,e){if(this._inputSource&&this._inputSource!==e)return;const s=q_.pop()??new l.e;e?s.copy(e.getOrigin()):s.copy(this.manager.camera.getPosition());let i=1/0,n=null;const r=q_.pop()??new l.e,a=j_.pop()??new St.k;for(let o=0;o<t.length;o++){const e=t[o].getPose(this.manager._referenceSpace),l=s.distance(e.transform.position);l>=i||(i=l,n=t[o],r.copy(e.transform.position),a.copy(e.transform.orientation))}this.fire("result",r,a,e||this._inputSource,n),this.manager.hitTest.fire("result",this,r,a,e||this._inputSource,n),q_.push(s),q_.push(r),j_.push(a)}}class K_ extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_RESULT="result"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=i.i.browser&&!(!window.XRSession||!window.XRSession.prototype.requestHitTestSource),this._available=!1,this._checkingAvailability=!1,this.sources=[],this.manager=t,this._supported&&(this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this))}_onSessionStart(){if(this.manager.session.enabledFeatures){const t=-1!==this.manager.session.enabledFeatures.indexOf("hit-test");if(!t)return;this._available=t,this.fire("available")}else this._checkingAvailability||(this._checkingAvailability=!0,this.manager.session.requestReferenceSpace(V_).then(t=>{this.manager.session.requestHitTestSource({space:t}).then(t=>{t.cancel(),this.manager.active&&(this._available=!0,this.fire("available"))}).catch(()=>{})}).catch(()=>{}))}_onSessionEnd(){if(this._available){this._available=!1;for(let t=0;t<this.sources.length;t++)this.sources[t].onStop();this.sources=[],this.fire("unavailable")}}start(t={}){if(!this._supported)return void t.callback?.(new Error("XR HitTest is not supported"),null);if(!this._available)return void t.callback?.(new Error("XR HitTest is not available"),null);let e;t.profile||t.spaceType||(t.spaceType=V_);const s=t.offsetRay;if(s){const t=new DOMPoint(s.origin.x,s.origin.y,s.origin.z,1),i=new DOMPoint(s.direction.x,s.direction.y,s.direction.z,0);e=new XRRay(t,i)}const i=t.callback;t.spaceType?this.manager.session.requestReferenceSpace(t.spaceType).then(s=>{if(!this.manager.session){const t=new Error("XR Session is not started (2)");return i&&i(t),void this.fire("error",t)}this.manager.session.requestHitTestSource({space:s,entityTypes:t.entityTypes||void 0,offsetRay:e}).then(e=>{this._onHitTestSource(e,!1,t.inputSource,i)}).catch(t=>{i&&i(t),this.fire("error",t)})}).catch(t=>{i&&i(t),this.fire("error",t)}):this.manager.session.requestHitTestSourceForTransientInput({profile:t.profile,entityTypes:t.entityTypes||void 0,offsetRay:e}).then(e=>{this._onHitTestSource(e,!0,t.inputSource,i)}).catch(t=>{i&&i(t),this.fire("error",t)})}_onHitTestSource(t,e,s,i){if(!this.manager.session){t.cancel();const e=new Error("XR Session is not started (3)");return i&&i(e),void this.fire("error",e)}const n=new Y_(this.manager,t,e,s??null);this.sources.push(n),i&&i(null,n),this.fire("add",n)}update(t){if(this._available)for(let e=0;e<this.sources.length;e++)this.sources[e].update(t)}get supported(){return this._supported}get available(){return this._available}}class Z_ extends r.J{static{this.EVENT_TRACKED="tracked"}static{this.EVENT_UNTRACKED="untracked"}constructor(t,e){super(),this._bitmap=null,this._measuredWidth=0,this._trackable=!1,this._tracking=!1,this._emulated=!1,this._pose=null,this._position=new l.e,this._rotation=new St.k,this._image=t,this._width=e}get image(){return this._image}set width(t){this._width=t}get width(){return this._width}get trackable(){return this._trackable}get tracking(){return this._tracking}get emulated(){return this._emulated}prepare(){return this._bitmap?{image:this._bitmap,widthInMeters:this._width}:createImageBitmap(this._image).then(t=>(this._bitmap=t,{image:this._bitmap,widthInMeters:this._width}))}destroy(){this._image=null,this._pose=null,this._bitmap&&(this._bitmap.close(),this._bitmap=null)}getPosition(){return this._pose&&this._position.copy(this._pose.transform.position),this._position}getRotation(){return this._pose&&this._rotation.copy(this._pose.transform.orientation),this._rotation}}class Q_ extends r.J{static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=i.i.browser&&!!window.XRImageTrackingResult,this._available=!1,this._images=[],this._manager=t,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}add(t,e){if(!this._supported||this._manager.active)return null;const s=new Z_(t,e);return this._images.push(s),s}remove(t){if(this._manager.active)return;const e=this._images.indexOf(t);-1!==e&&(t.destroy(),this._images.splice(e,1))}_onSessionStart(){this._manager.session.getTrackedImageScores().then(t=>{this._available=!0;for(let e=0;e<t.length;e++)this._images[e]._trackable="trackable"===t[e]}).catch(t=>{this._available=!1,this.fire("error",t)})}_onSessionEnd(){this._available=!1;for(let t=0;t<this._images.length;t++){const e=this._images[t];e._pose=null,e._measuredWidth=0,e._tracking&&(e._tracking=!1,e.fire("untracked"))}}prepareImages(t){this._images.length?Promise.all(this._images.map(t=>t.prepare())).then(e=>{t(null,e)}).catch(e=>{t(e,null)}):t(null,null)}update(t){if(!this._available)return;const e=t.getImageTrackingResults(),s={};for(let i=0;i<e.length;i++){s[e[i].index]=e[i];const n=this._images[e[i].index];n._emulated="emulated"===e[i].trackingState,n._measuredWidth=e[i].measuredWidthInMeters,n._pose=t.getPose(e[i].imageSpace,this._manager._referenceSpace)}for(let i=0;i<this._images.length;i++)this._images[i]._tracking&&!s[i]?(this._images[i]._tracking=!1,this._images[i].fire("untracked")):!this._images[i]._tracking&&s[i]&&(this._images[i]._tracking=!0,this._images[i].fire("tracked"))}get supported(){return this._supported}get available(){return this._available}get images(){return this._images}}class J_{constructor(t,e){this._joints=[],this._tip=null,this._index=t,this._hand=e,this._hand._fingers.push(this)}get index(){return this._index}get hand(){return this._hand}get joints(){return this._joints}get tip(){return this._tip}}const tg=i.i.browser&&window.XRHand?["thumb-tip","index-finger-tip","middle-finger-tip","ring-finger-tip","pinky-finger-tip"]:[],eg={};for(let Dg=0;Dg<tg.length;Dg++)eg[tg[Dg]]=!0;class sg{constructor(t,e,s,i=null){this._radius=null,this._localTransform=new o.$,this._worldTransform=new o.$,this._localPosition=new l.e,this._localRotation=new St.k,this._position=new l.e,this._rotation=new St.k,this._dirtyLocal=!0,this._index=t,this._id=e,this._hand=s,this._finger=i,this._wrist="wrist"===e,this._tip=this._finger&&!!eg[e]}update(t){this._dirtyLocal=!0,this._radius=t.radius,this._localPosition.copy(t.transform.position),this._localRotation.copy(t.transform.orientation)}_updateTransforms(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,l.e.ONE));const t=this._hand._manager.camera.parent;t?this._worldTransform.mul2(t.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)}getPosition(){return this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position}getRotation(){return this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation}get id(){return this._id}get index(){return this._index}get hand(){return this._hand}get finger(){return this._finger}get wrist(){return this._wrist}get tip(){return this._tip}get radius(){return this._radius||.005}}let ig=[];const ng=new l.e,rg=new l.e,ag=new l.e;i.i.browser&&window.XRHand&&(ig=[["thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip"],["index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip"],["middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip"],["ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip"],["pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]]);class og extends r.J{static{this.EVENT_TRACKING="tracking"}static{this.EVENT_TRACKINGLOST="trackinglost"}constructor(t){super(),this._tracking=!1,this._fingers=[],this._joints=[],this._jointsById={},this._tips=[],this._wrist=null;const e=t._xrInputSource.hand;if(this._manager=t._manager,this._inputSource=t,e.get("wrist")){const t=new sg(0,"wrist",this,null);this._wrist=t,this._joints.push(t),this._jointsById.wrist=t}for(let s=0;s<ig.length;s++){const t=new J_(s,this);for(let i=0;i<ig[s].length;i++){const n=ig[s][i];if(!e.get(n))continue;const r=new sg(i,n,this,t);this._joints.push(r),this._jointsById[n]=r,r.tip&&(this._tips.push(r),t._tip=r),t._joints.push(r)}}}update(t){const e=this._inputSource._xrInputSource;for(let l=0;l<this._joints.length;l++){const s=this._joints[l],i=e.hand.get(s._id);if(i){let e;if("hidden"!==t.session.visibilityState&&(e=t.getJointPose(i,this._manager._referenceSpace)),e)s.update(e),s.wrist&&!this._tracking&&(this._tracking=!0,this.fire("tracking"));else if(s.wrist){this._tracking&&(this._tracking=!1,this.fire("trackinglost"));break}}}const s=this._jointsById["thumb-metacarpal"],i=this._jointsById["thumb-tip"],n=this._jointsById["index-finger-phalanx-proximal"],r=this._jointsById["index-finger-tip"],a=this._jointsById["ring-finger-phalanx-proximal"],o=this._jointsById["pinky-finger-phalanx-proximal"];if(s&&i&&n&&r&&a&&o){this._inputSource._dirtyRay=!0,this._inputSource._rayLocal.origin.lerp(i._localPosition,r._localPosition,.5);let t=s,e=o;if("left"===this._inputSource.handedness){const s=t;t=e,e=s}ng.sub2(t._localPosition,this._wrist._localPosition),rg.sub2(e._localPosition,this._wrist._localPosition),ag.cross(ng,rg).normalize(),ng.lerp(n._localPosition,a._localPosition,.5),ng.sub(this._wrist._localPosition).normalize(),this._inputSource._rayLocal.direction.lerp(ag,ng,.5).normalize()}this._fingerIsClosed(1)&&this._fingerIsClosed(2)&&this._fingerIsClosed(3)&&this._fingerIsClosed(4)?this._inputSource._squeezing||(this._inputSource._squeezing=!0,this._inputSource.fire("squeezestart"),this._manager.input.fire("squeezestart",this._inputSource)):this._inputSource._squeezing&&(this._inputSource._squeezing=!1,this._inputSource.fire("squeeze"),this._manager.input.fire("squeeze",this._inputSource),this._inputSource.fire("squeezeend"),this._manager.input.fire("squeezeend",this._inputSource))}_fingerIsClosed(t){const e=this._fingers[t];return ng.sub2(e.joints[0]._localPosition,e.joints[1]._localPosition).normalize(),rg.sub2(e.joints[2]._localPosition,e.joints[3]._localPosition).normalize(),ng.dot(rg)<-.8}getJointById(t){return this._jointsById[t]||null}get fingers(){return this._fingers}get joints(){return this._joints}get tips(){return this._tips}get wrist(){return this._wrist}get tracking(){return this._tracking}}const lg=new l.e,hg=new St.k;let cg=0;class dg extends r.J{static{this.EVENT_REMOVE="remove"}static{this.EVENT_SELECT="select"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SQUEEZE="squeeze"}static{this.EVENT_SQUEEZESTART="squeezestart"}static{this.EVENT_SQUEEZEEND="squeezeend"}static{this.EVENT_HITTESTADD="hittest:add"}static{this.EVENT_HITTESTREMOVE="hittest:remove"}static{this.EVENT_HITTESTRESULT="hittest:result"}constructor(t,e){super(),this._ray=new sd,this._rayLocal=new sd,this._grip=!1,this._hand=null,this._velocitiesAvailable=!1,this._velocitiesTimestamp=(0,f.t)(),this._localTransform=null,this._worldTransform=null,this._position=new l.e,this._rotation=new St.k,this._localPosition=null,this._localPositionLast=null,this._localRotation=null,this._linearVelocity=null,this._dirtyLocal=!0,this._dirtyRay=!1,this._selecting=!1,this._squeezing=!1,this._elementInput=!0,this._elementEntity=null,this._hitTestSources=[],this._id=++cg,this._manager=t,this._xrInputSource=e,e.hand&&(this._hand=new og(this))}get id(){return this._id}get inputSource(){return this._xrInputSource}get targetRayMode(){return this._xrInputSource.targetRayMode}get handedness(){return this._xrInputSource.handedness}get profiles(){return this._xrInputSource.profiles}get grip(){return this._grip}get hand(){return this._hand}get gamepad(){return this._xrInputSource.gamepad||null}get selecting(){return this._selecting}get squeezing(){return this._squeezing}set elementInput(t){this._elementInput!==t&&(this._elementInput=t,this._elementInput||(this._elementEntity=null))}get elementInput(){return this._elementInput}get elementEntity(){return this._elementEntity}get hitTestSources(){return this._hitTestSources}update(t){if(this._hand)this._hand.update(t);else{const e=this._xrInputSource.gripSpace;if(e){const s=t.getPose(e,this._manager._referenceSpace);if(s){this._grip||(this._grip=!0,this._localTransform=new o.$,this._worldTransform=new o.$,this._localPositionLast=new l.e,this._localPosition=new l.e,this._localRotation=new St.k,this._linearVelocity=new l.e);const t=(0,f.t)(),e=(t-this._velocitiesTimestamp)/1e3;this._velocitiesTimestamp=t,this._dirtyLocal=!0,this._localPositionLast.copy(this._localPosition),this._localPosition.copy(s.transform.position),this._localRotation.copy(s.transform.orientation),this._velocitiesAvailable=!0,this._manager.input.velocitiesSupported&&s.linearVelocity?this._linearVelocity.copy(s.linearVelocity):e>0&&(lg.sub2(this._localPosition,this._localPositionLast).divScalar(e),this._linearVelocity.lerp(this._linearVelocity,lg,.15))}else this._velocitiesAvailable=!1}const s=t.getPose(this._xrInputSource.targetRaySpace,this._manager._referenceSpace);s&&(this._dirtyRay=!0,this._rayLocal.origin.copy(s.transform.position),this._rayLocal.direction.set(0,0,-1),hg.copy(s.transform.orientation),hg.transformVector(this._rayLocal.direction,this._rayLocal.direction))}}_updateTransforms(){this._dirtyLocal&&(this._dirtyLocal=!1,this._localTransform.setTRS(this._localPosition,this._localRotation,l.e.ONE));const t=this._manager.camera.parent;t?this._worldTransform.mul2(t.getWorldTransform(),this._localTransform):this._worldTransform.copy(this._localTransform)}_updateRayTransforms(){const t=this._dirtyRay;this._dirtyRay=!1;if(this._manager.camera.parent){const t=this._manager.camera.parent.getWorldTransform();t.getTranslation(this._position),this._rotation.setFromMat4(t),this._rotation.transformVector(this._rayLocal.origin,this._ray.origin),this._ray.origin.add(this._position),this._rotation.transformVector(this._rayLocal.direction,this._ray.direction)}else t&&(this._ray.origin.copy(this._rayLocal.origin),this._ray.direction.copy(this._rayLocal.direction))}getPosition(){return this._position?(this._updateTransforms(),this._worldTransform.getTranslation(this._position),this._position):null}getLocalPosition(){return this._localPosition}getRotation(){return this._rotation?(this._updateTransforms(),this._rotation.setFromMat4(this._worldTransform),this._rotation):null}getLocalRotation(){return this._localRotation}getLinearVelocity(){return this._velocitiesAvailable?this._linearVelocity:null}getOrigin(){return this._updateRayTransforms(),this._ray.origin}getDirection(){return this._updateRayTransforms(),this._ray.direction}hitTestStart(t={}){t.inputSource=this,t.profile=this._xrInputSource.profiles[0];const e=t.callback;t.callback=(t,s)=>{s&&this.onHitTestSourceAdd(s),e&&e(t,s)},this._manager.hitTest.start(t)}onHitTestSourceAdd(t){this._hitTestSources.push(t),this.fire("hittest:add",t),t.on("result",(e,s,i,n)=>{i===this&&this.fire("hittest:result",t,e,s,n)}),t.once("remove",()=>{this.onHitTestSourceRemove(t),this.fire("hittest:remove",t)})}onHitTestSourceRemove(t){const e=this._hitTestSources.indexOf(t);-1!==e&&this._hitTestSources.splice(e,1)}}class ug extends r.J{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_SELECT="select"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SQUEEZE="squeeze"}static{this.EVENT_SQUEEZESTART="squeezestart"}static{this.EVENT_SQUEEZEEND="squeezeend"}constructor(t){super(),this._inputSources=[],this.velocitiesSupported=!1,this.manager=t,this.velocitiesSupported=!(!i.i.browser||!window.XRPose?.prototype?.hasOwnProperty("linearVelocity")),this._onInputSourcesChangeEvt=t=>{this._onInputSourcesChange(t)},this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this)}_onSessionStart(){const t=this.manager.session;t.addEventListener("inputsourceschange",this._onInputSourcesChangeEvt),t.addEventListener("select",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e.fire("select",t),this.fire("select",e,t)}),t.addEventListener("selectstart",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e._selecting=!0,e.fire("selectstart",t),this.fire("selectstart",e,t)}),t.addEventListener("selectend",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e._selecting=!1,e.fire("selectend",t),this.fire("selectend",e,t)}),t.addEventListener("squeeze",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e.fire("squeeze",t),this.fire("squeeze",e,t)}),t.addEventListener("squeezestart",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e._squeezing=!0,e.fire("squeezestart",t),this.fire("squeezestart",e,t)}),t.addEventListener("squeezeend",t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame),e._squeezing=!1,e.fire("squeezeend",t),this.fire("squeezeend",e,t)});const e=t.inputSources;for(let s=0;s<e.length;s++)this._addInputSource(e[s])}_onSessionEnd(){let t=this._inputSources.length;for(;t--;){const e=this._inputSources[t];this._inputSources.splice(t,1),e.fire("remove"),this.fire("remove",e)}this.manager.session.removeEventListener("inputsourceschange",this._onInputSourcesChangeEvt)}_onInputSourcesChange(t){for(let e=0;e<t.removed.length;e++)this._removeInputSource(t.removed[e]);for(let e=0;e<t.added.length;e++)this._addInputSource(t.added[e])}_getByInputSource(t){for(let e=0;e<this._inputSources.length;e++)if(this._inputSources[e].inputSource===t)return this._inputSources[e];return null}_addInputSource(t){if(this._getByInputSource(t))return;const e=new dg(this.manager,t);this._inputSources.push(e),this.fire("add",e)}_removeInputSource(t){for(let e=0;e<this._inputSources.length;e++){if(this._inputSources[e].inputSource!==t)continue;const s=this._inputSources[e];this._inputSources.splice(e,1);let i=s.hitTestSources.length;for(;i--;)s.hitTestSources[i].remove();return s.fire("remove"),void this.fire("remove",s)}}update(t){for(let e=0;e<this._inputSources.length;e++)this._inputSources[e].update(t)}get inputSources(){return this._inputSources}}const fg=new l.e,pg=new l.e,mg=new o.$,_g=new o.$;class gg extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=!1,this._available=!1,this._lightProbeRequested=!1,this._lightProbe=null,this._intensity=0,this._rotation=new St.k,this._color=new p.Q,this._sphericalHarmonics=new Float32Array(27),this._manager=t,this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this)}_onSessionStart(){!!this._manager.session.requestLightProbe&&(this._supported=!0)}_onSessionEnd(){this._supported=!1,this._available=!1,this._lightProbeRequested=!1,this._lightProbe=null}start(){let t;this._manager.session||(t=new Error("XR session is not running")),t||this._manager.type===z_||(t=new Error("XR session type is not AR")),t||this._supported||(t=new Error("light-estimation is not supported")),(!t&&this._lightProbe||this._lightProbeRequested)&&(t=new Error("light estimation is already requested")),t?this.fire("error",t):(this._lightProbeRequested=!0,this._manager.session.requestLightProbe().then(t=>{const e=this._lightProbeRequested;this._lightProbeRequested=!1,this._manager.active?e&&(this._lightProbe=t):this.fire("error",new Error("XR session is not active"))}).catch(t=>{this._lightProbeRequested=!1,this.fire("error",t)}))}end(){this._lightProbeRequested=!1,this._lightProbe=null,this._available=!1}update(t){if(!this._lightProbe)return;const e=t.getLightEstimate(this._lightProbe);if(!e)return;this._available||(this._available=!0,this.fire("available"));const s=e.primaryLightIntensity;this._intensity=Math.max(1,Math.max(s.x,Math.max(s.y,s.z))),fg.copy(s).mulScalar(1/this._intensity),this._color.set(fg.x,fg.y,fg.z),fg.set(0,0,0),pg.copy(e.primaryLightDirection),mg.setLookAt(pg,fg,l.e.UP),_g.setFromAxisAngle(l.e.RIGHT,90),mg.mul(_g),this._rotation.setFromMat4(mg),this._sphericalHarmonics.set(e.sphericalHarmonicsCoefficients)}get supported(){return this._supported}get available(){return this._available}get intensity(){return this._available?this._intensity:null}get color(){return this._available?this._color:null}get rotation(){return this._available?this._rotation:null}get sphericalHarmonics(){return this._available?this._sphericalHarmonics:null}}let vg=0;class Sg extends r.J{static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t,e){super(),this._position=new l.e,this._rotation=new St.k,this._id=++vg,this._planeDetection=t,this._xrPlane=e,this._lastChangedTime=e.lastChangedTime,this._orientation=e.orientation}destroy(){this._xrPlane&&(this._xrPlane=null,this.fire("remove"))}update(t){const e=this._planeDetection._manager,s=t.getPose(this._xrPlane.planeSpace,e._referenceSpace);s&&(this._position.copy(s.transform.position),this._rotation.copy(s.transform.orientation)),this._lastChangedTime!==this._xrPlane.lastChangedTime&&(this._lastChangedTime=this._xrPlane.lastChangedTime,this.fire("change"))}getPosition(){return this._position}getRotation(){return this._rotation}get id(){return this._id}get orientation(){return this._orientation}get points(){return this._xrPlane.polygon}get label(){return this._xrPlane.semanticLabel||""}}class yg extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._supported=i.i.browser&&!!window.XRPlane,this._available=!1,this._planesIndex=new Map,this._planes=[],this._manager=t,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}_onSessionStart(){if(this._manager.session.enabledFeatures){-1!==this._manager.session.enabledFeatures.indexOf("plane-detection")&&(this._available=!0,this.fire("available"))}}_onSessionEnd(){for(let t=0;t<this._planes.length;t++)this._planes[t].destroy(),this.fire("remove",this._planes[t]);this._planesIndex.clear(),this._planes.length=0,this._available&&(this._available=!1,this.fire("unavailable"))}update(t){if(!this._available){if(this._manager.session.enabledFeatures||!t.detectedPlanes.size)return;this._available=!0,this.fire("available")}const e=t.detectedPlanes;for(const[s,i]of this._planesIndex)e.has(s)||(this._planesIndex.delete(s),this._planes.splice(this._planes.indexOf(i),1),i.destroy(),this.fire("remove",i));for(const s of e){let e=this._planesIndex.get(s);e?e.update(t):(e=new Sg(this,s),this._planesIndex.set(s,e),this._planes.push(e),e.update(t),this.fire("add",e))}}get supported(){return this._supported}get available(){return this._available}get planes(){return this._planes}}class xg extends r.J{static{this.EVENT_DESTROY="destroy"}static{this.EVENT_CHANGE="change"}static{this.EVENT_PERSIST="persist"}static{this.EVENT_FORGET="forget"}constructor(t,e,s=null){super(),this._position=new l.e,this._rotation=new St.k,this._uuid=null,this._uuidRequests=null,this._anchors=t,this._xrAnchor=e,this._uuid=s}destroy(){if(!this._xrAnchor)return;const t=this._xrAnchor;this._xrAnchor.delete(),this._xrAnchor=null,this.fire("destroy",t,this)}update(t){if(!this._xrAnchor)return;const e=t.getPose(this._xrAnchor.anchorSpace,this._anchors.manager._referenceSpace);if(e){if(this._position.equals(e.transform.position)&&this._rotation.equals(e.transform.orientation))return;this._position.copy(e.transform.position),this._rotation.copy(e.transform.orientation),this.fire("change")}}getPosition(){return this._position}getRotation(){return this._rotation}persist(t){this._anchors.persistence?this._uuid?t?.(null,this._uuid):this._uuidRequests?t&&this._uuidRequests.push(t):(this._uuidRequests=[],this._xrAnchor.requestPersistentHandle().then(e=>{this._uuid=e,this._anchors._indexByUuid.set(this._uuid,this),t?.(null,e);for(const t of this._uuidRequests)t(null,e);this._uuidRequests=null,this.fire("persist",e)}).catch(e=>{t?.(e,null);for(const t of this._uuidRequests)t(e,null);this._uuidRequests=null})):t?.(new Error("Persistent Anchors are not supported"),null)}forget(t){this._uuid?this._anchors.forget(this._uuid,e=>{this._uuid=null,t?.(e),this.fire("forget")}):t?.(new Error("Anchor is not persistent"))}get uuid(){return this._uuid}get persistent(){return!!this._uuid}}class Tg extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ERROR="error"}static{this.EVENT_ADD="add"}static{this.EVENT_DESTROY="destroy"}constructor(t){super(),this._supported=i.i.browser&&!!window.XRAnchor,this._available=!1,this._checkingAvailability=!1,this._persistence=i.i.browser&&!!window?.XRSession?.prototype.restorePersistentAnchor,this._creationQueue=[],this._index=new Map,this._indexByUuid=new Map,this._list=[],this._callbacksAnchors=new Map,this.manager=t,this._supported&&(this.manager.on("start",this._onSessionStart,this),this.manager.on("end",this._onSessionEnd,this))}_onSessionStart(){const t=this.manager.session.enabledFeatures?.indexOf("anchors")>=0;t&&(this._available=t,this.fire("available"))}_onSessionEnd(){if(!this._available)return;this._available=!1;for(let e=0;e<this._creationQueue.length;e++)this._creationQueue[e].callback&&this._creationQueue[e].callback(new Error("session ended"),null);this._creationQueue.length=0,this._index.clear(),this._indexByUuid.clear();let t=this._list.length;for(;t--;)this._list[t].destroy();this._list.length=0,this.fire("unavailable")}_createAnchor(t,e=null){const s=new xg(this,t,e);return this._index.set(t,s),e&&this._indexByUuid.set(e,s),this._list.push(s),s.once("destroy",this._onAnchorDestroy,this),s}_onAnchorDestroy(t,e){this._index.delete(t),e.uuid&&this._indexByUuid.delete(e.uuid);const s=this._list.indexOf(e);-1!==s&&this._list.splice(s,1),this.fire("destroy",e)}create(t,e,s){if(this._available)if(window.XRHitTestResult&&t instanceof XRHitTestResult){const i=t;if(s=e,!this._supported)return void s?.(new Error("Anchors API is not supported"),null);if(!i.createAnchor)return void s?.(new Error("Creating Anchor from Hit Test is not supported"),null);i.createAnchor().then(t=>{const e=this._createAnchor(t);s?.(null,e),this.fire("add",e)}).catch(t=>{s?.(t,null),this.fire("error",t)})}else this._creationQueue.push({transform:new XRRigidTransform(t,e),callback:s});else s?.(new Error("Anchors API is not available"),null)}restore(t,e){this._available?this._persistence?this.manager.active?this.manager.session.restorePersistentAnchor(t).then(s=>{const i=this._createAnchor(s,t);e?.(null,i),this.fire("add",i)}).catch(t=>{e?.(t,null),this.fire("error",t)}):e?.(new Error("WebXR session is not active"),null):e?.(new Error("Anchor Persistence is not supported"),null):e?.(new Error("Anchors API is not available"),null)}forget(t,e){this._available?this._persistence?this.manager.active?this.manager.session.deletePersistentAnchor(t).then(()=>{e?.(null)}).catch(t=>{e?.(t),this.fire("error",t)}):e?.(new Error("WebXR session is not active")):e?.(new Error("Anchor Persistence is not supported")):e?.(new Error("Anchors API is not available"))}update(t){if(this._available){if(this._creationQueue.length){for(let e=0;e<this._creationQueue.length;e++){const s=this._creationQueue[e];t.createAnchor(s.transform,this.manager._referenceSpace).then(t=>{s.callback&&this._callbacksAnchors.set(t,s.callback)}).catch(t=>{s.callback&&s.callback(t,null),this.fire("error",t)})}this._creationQueue.length=0}for(const[e,s]of this._index)t.trackedAnchors.has(e)||(this._index.delete(e),s.destroy());for(let e=0;e<this._list.length;e++)this._list[e].update(t);for(const s of t.trackedAnchors){if(this._index.has(s))continue;try{s.anchorSpace}catch(e){continue}const i=this._createAnchor(s);i.update(t);const n=this._callbacksAnchors.get(s);n&&(this._callbacksAnchors.delete(s),n(null,i)),this.fire("add",i)}}else this.manager.session.enabledFeatures||this._checkingAvailability||(this._checkingAvailability=!0,t.createAnchor(new XRRigidTransform,this.manager._referenceSpace).then(t=>{t.delete(),this.manager.active&&(this._available=!0,this.fire("available"))}).catch(()=>{}))}get supported(){return this._supported}get available(){return this._available}get persistence(){return this._persistence}get uuids(){return this._available&&this._persistence&&this.manager.active?this.manager.session.persistentAnchors:null}get list(){return this._list}}class wg extends r.J{static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t,e){super(),this._lastChanged=0,this._position=new l.e,this._rotation=new St.k,this._meshDetection=t,this._xrMesh=e,this._lastChanged=this._xrMesh.lastChangedTime}get xrMesh(){return this._xrMesh}get label(){return this._xrMesh.semanticLabel||""}get vertices(){return this._xrMesh.vertices}get indices(){return this._xrMesh.indices}destroy(){this._xrMesh&&(this._xrMesh=null,this.fire("remove"))}update(t){const e=this._meshDetection._manager,s=t.getPose(this._xrMesh.meshSpace,e._referenceSpace);s&&(this._position.copy(s.transform.position),this._rotation.copy(s.transform.orientation)),this._lastChanged!==this._xrMesh.lastChangedTime&&(this._lastChanged=this._xrMesh.lastChangedTime,this.fire("change"))}getPosition(){return this._position}getRotation(){return this._rotation}}class bg extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._supported=i.i.browser&&!!window.XRMesh,this._available=!1,this._index=new Map,this._list=[],this._manager=t,this._supported&&(this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this))}update(t){if(!this._available){if(this._manager.session.enabledFeatures||!t.detectedMeshes.size)return;this._available=!0,this.fire("available")}for(const e of t.detectedMeshes){let s=this._index.get(e);s?s.update(t):(s=new wg(this,e),this._index.set(e,s),this._list.push(s),s.update(t),this.fire("add",s))}for(const e of this._index.values())t.detectedMeshes.has(e.xrMesh)||this._removeMesh(e)}_removeMesh(t){this._index.delete(t.xrMesh),this._list.splice(this._list.indexOf(t),1),t.destroy(),this.fire("remove",t)}_onSessionStart(){if(this._manager.session.enabledFeatures){const t=-1!==this._manager.session.enabledFeatures.indexOf("mesh-detection");if(!t)return;this._available=t,this.fire("available")}}_onSessionEnd(){if(this._available){this._available=!1;for(const t of this._index.values())this._removeMesh(t);this.fire("unavailable")}}get supported(){return this._supported}get available(){return this._available}get meshes(){return this._list}}class Eg extends r.J{static{this.EVENT_DEPTHRESIZE="depth:resize"}constructor(t,e,s){super(),this._positionData=new Float32Array(3),this._viewport=new w.Z,this._projMat=new o.$,this._projViewOffMat=new o.$,this._viewMat=new o.$,this._viewOffMat=new o.$,this._viewMat3=new _s.U,this._viewInvMat=new o.$,this._viewInvOffMat=new o.$,this._xrCamera=null,this._textureColor=null,this._textureDepth=null,this._depthInfo=null,this._emptyDepthBuffer=new Uint8Array(32),this._depthMatrix=new o.$,this._manager=t,this._xrView=e;const i=this._manager.app.graphicsDevice;if(this._manager.views.supportedColor&&(this._xrCamera=this._xrView.camera,this._manager.views.availableColor&&this._xrCamera&&(this._textureColor=new Q.g(i,{format:x.akF,mipmaps:!1,addressU:x.vq6,addressV:x.vq6,minFilter:x.DrA,magFilter:x.DrA,width:this._xrCamera.width,height:this._xrCamera.height,name:`XrView-${this._xrView.eye}-Color`}))),this._manager.views.supportedDepth&&this._manager.views.availableDepth){const t=this._manager.views.depthGpuOptimized?x.uhC:x.DrA;this._textureDepth=new Q.g(i,{format:this._manager.views.depthPixelFormat,arrayLength:1===s?0:s,mipmaps:!1,addressU:x.vq6,addressV:x.vq6,minFilter:t,magFilter:t,width:4,height:4,name:`XrView-${this._xrView.eye}-Depth`});for(let e=0;e<this._textureDepth._levels.length;e++)this._textureDepth._levels[e]=this._emptyDepthBuffer;this._textureDepth.upload()}(this._textureColor||this._textureDepth)&&i.on("devicelost",this._onDeviceLost,this)}get textureColor(){return this._textureColor}get textureDepth(){return this._textureDepth}get depthUvMatrix(){return this._depthMatrix}get depthValueToMeters(){return this._depthInfo?.rawValueToMeters||0}get eye(){return this._xrView.eye}get viewport(){return this._viewport}get projMat(){return this._projMat}get projViewOffMat(){return this._projViewOffMat}get viewOffMat(){return this._viewOffMat}get viewInvOffMat(){return this._viewInvOffMat}get viewMat3(){return this._viewMat3}get positionData(){return this._positionData}update(t,e){this._xrView=e,this._manager.views.availableColor&&(this._xrCamera=this._xrView.camera);const s=t.session.renderState.baseLayer.getViewport(this._xrView);this._viewport.x=s.x,this._viewport.y=s.y,this._viewport.z=s.width,this._viewport.w=s.height,this._projMat.set(this._xrView.projectionMatrix),this._viewMat.set(this._xrView.transform.inverse.matrix),this._viewInvMat.set(this._xrView.transform.matrix),this._updateTextureColor(),this._updateDepth(t)}_updateTextureColor(){if(!this._manager.views.availableColor||!this._xrCamera||!this._textureColor)return;const t=this._manager.webglBinding;if(!t)return;const e=t.getCameraImage(this._xrCamera);if(!e)return;const s=this._manager.app.graphicsDevice,i=s.gl;if(this._frameBufferSource){const t=i.COLOR_ATTACHMENT0,n=this._xrCamera.width,r=this._xrCamera.height;s.setFramebuffer(this._frameBufferSource),i.framebufferTexture2D(i.FRAMEBUFFER,t,i.TEXTURE_2D,e,0),s.setFramebuffer(this._frameBuffer),i.framebufferTexture2D(i.FRAMEBUFFER,t,i.TEXTURE_2D,this._textureColor.impl._glTexture,0),i.bindFramebuffer(i.READ_FRAMEBUFFER,this._frameBufferSource),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,this._frameBuffer),i.blitFramebuffer(0,r,n,0,0,0,n,r,i.COLOR_BUFFER_BIT,i.NEAREST)}else this._frameBufferSource=i.createFramebuffer(),this._frameBuffer=i.createFramebuffer()}_updateDepth(t){if(!this._manager.views.availableDepth||!this._textureDepth)return;const e=this._manager.views.depthGpuOptimized,s=e?this._manager.webglBinding:t;if(!s)return void(this._depthInfo=null);const i=s.getDepthInformation(this._xrView);if(!i)return void(this._depthInfo=null);let n=!this._depthInfo!=!i;this._depthInfo=i;const r=this._depthInfo?.width||4,a=this._depthInfo?.height||4;let o=!1;if(this._textureDepth.width===r&&this._textureDepth.height===a||(this._textureDepth._width=r,this._textureDepth._height=a,n=!0,o=!0),n&&(this._depthInfo?this._depthMatrix.data.set(this._depthInfo.normDepthBufferFromNormView.matrix):this._depthMatrix.setIdentity()),this._depthInfo)if(e){if(this._depthInfo.texture){const t=this._manager.app.graphicsDevice.gl;switch(this._textureDepth.impl._glTexture=this._depthInfo.texture,"texture-array"===this._depthInfo.textureType?this._textureDepth.impl._glTarget=t.TEXTURE_2D_ARRAY:this._textureDepth.impl._glTarget=t.TEXTURE_2D,this._manager.views.depthPixelFormat){case x.IQA:this._textureDepth.impl._glInternalFormat=t.R32F,this._textureDepth.impl._glPixelType=t.FLOAT,this._textureDepth.impl._glFormat=t.RED;break;case x.Wbd:this._textureDepth.impl._glInternalFormat=t.DEPTH_COMPONENT16,this._textureDepth.impl._glPixelType=t.UNSIGNED_SHORT,this._textureDepth.impl._glFormat=t.DEPTH_COMPONENT}this._textureDepth.impl._glCreated=!0}}else this._textureDepth._levels[0]=new Uint8Array(this._depthInfo.data),this._textureDepth.upload();else this._textureDepth._levels[0]=this._emptyDepthBuffer,this._textureDepth.upload();o&&this.fire("depth:resize",r,a)}updateTransforms(t){t?(this._viewInvOffMat.mul2(t,this._viewInvMat),this.viewOffMat.copy(this._viewInvOffMat).invert()):(this._viewInvOffMat.copy(this._viewInvMat),this.viewOffMat.copy(this._viewMat)),this._viewMat3.setFromMat4(this._viewOffMat),this._projViewOffMat.mul2(this._projMat,this._viewOffMat),this._positionData[0]=this._viewInvOffMat.data[12],this._positionData[1]=this._viewInvOffMat.data[13],this._positionData[2]=this._viewInvOffMat.data[14]}_onDeviceLost(){this._frameBufferSource=null,this._frameBuffer=null,this._depthInfo=null}getDepth(t,e){return this._manager.views.depthGpuOptimized?null:this._depthInfo?.getDepthInMeters(t,e)??null}destroy(){if(this._depthInfo=null,this._textureColor&&(this._textureColor.destroy(),this._textureColor=null),this._textureDepth&&(this._textureDepth.destroy(),this._textureDepth=null),this._frameBufferSource){const t=this._manager.app.graphicsDevice.gl;t.deleteFramebuffer(this._frameBufferSource),this._frameBufferSource=null,t.deleteFramebuffer(this._frameBuffer),this._frameBuffer=null}}}class Ag extends r.J{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._index=new Map,this._indexTmp=new Map,this._list=[],this._supportedColor=i.i.browser&&!!window.XRCamera&&!!window.XRWebGLBinding,this._supportedDepth=i.i.browser&&!!window.XRDepthInformation,this._availableColor=!1,this._availableDepth=!1,this._depthUsage="",this._depthFormat="",this._depthFormats={[H_]:x._3,[W_]:x.Wbd,[X_]:x.IQA},this._manager=t,this._manager.on("start",this._onSessionStart,this),this._manager.on("end",this._onSessionEnd,this)}get list(){return this._list}get supportedColor(){return this._supportedColor}get supportedDepth(){return this._supportedDepth}get availableColor(){return this._availableColor}get availableDepth(){return this._availableDepth}get depthUsage(){return this._depthUsage}get depthGpuOptimized(){return this._depthUsage===G_}get depthFormat(){return this._depthFormat}get depthPixelFormat(){return this._depthFormats[this._depthFormat]??null}update(t,e){for(let s=0;s<e.length;s++)this._indexTmp.set(e[s].eye,e[s]);for(const[s,i]of this._indexTmp){let n=this._index.get(s);n?n.update(t,i):(n=new Eg(this._manager,i,e.length),this._index.set(s,n),this._list.push(n),n.update(t,i),this.fire("add",n))}for(const[s,i]of this._index){if(this._indexTmp.has(s))continue;i.destroy(),this._index.delete(s);const t=this._list.indexOf(i);-1!==t&&this._list.splice(t,1),this.fire("remove",i)}this._indexTmp.clear()}get(t){return this._index.get(t)||null}_onSessionStart(){if(this._manager.type===z_&&this._manager.session.enabledFeatures&&(this._availableColor=-1!==this._manager.session.enabledFeatures.indexOf("camera-access"),this._availableDepth=-1!==this._manager.session.enabledFeatures.indexOf("depth-sensing"),this._availableDepth)){const t=this._manager.session;this._depthUsage=t.depthUsage,this._depthFormat=t.depthDataFormat}}_onSessionEnd(){for(const t of this._index.values())t.destroy();this._index.clear(),this._availableColor=!1,this._availableDepth=!1,this._depthUsage="",this._depthFormat="",this._list.length=0}}class Cg extends r.J{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_START="start"}static{this.EVENT_END="end"}static{this.EVENT_UPDATE="update"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=i.i.browser&&!!navigator.xr,this._available={},this._type=null,this._spaceType=null,this._session=null,this._baseLayer=null,this.webglBinding=null,this._referenceSpace=null,this._camera=null,this._localPosition=new l.e,this._localRotation=new St.k,this._depthNear=.1,this._depthFar=1e3,this._supportedFrameRates=null,this._width=0,this._height=0,this._framebufferScaleFactor=1,this.app=t,this._available.inline=!1,this._available["immersive-vr"]=!1,this._available[z_]=!1,this.views=new Ag(this),this.domOverlay=new $_(this),this.hitTest=new K_(this),this.imageTracking=new Q_(this),this.planeDetection=new yg(this),this.meshDetection=new bg(this),this.input=new ug(this),this.lightEstimation=new gg(this),this.anchors=new Tg(this),this.views=new Ag(this),this._supported&&(navigator.xr.addEventListener("devicechange",()=>{this._deviceAvailabilityCheck()}),this._deviceAvailabilityCheck(),this.app.graphicsDevice.on("devicelost",this._onDeviceLost,this),this.app.graphicsDevice.on("devicerestored",this._onDeviceRestored,this))}destroy(){}start(t,e,s,i){let n=i;if("object"==typeof i&&(n=i.callback),!this._available[e])return void(n&&n(new Error("XR is not available")));if(this._session)return void(n&&n(new Error("XR session is already started")));this._camera=t,this._camera.camera.xr=this,this._type=e,this._spaceType=s,this._framebufferScaleFactor=i?.framebufferScaleFactor??1,this._setClipPlanes(t.nearClip,t.farClip);const r={requiredFeatures:[s],optionalFeatures:[]},a=this.app.graphicsDevice;a?.isWebGPU&&r.requiredFeatures.push("webgpu");const o=a?.isWebGL2;if(e===z_){if(r.optionalFeatures.push("light-estimation"),r.optionalFeatures.push("hit-test"),i&&(i.imageTracking&&this.imageTracking.supported&&r.optionalFeatures.push("image-tracking"),i.planeDetection&&r.optionalFeatures.push("plane-detection"),i.meshDetection&&r.optionalFeatures.push("mesh-detection")),this.domOverlay.supported&&this.domOverlay.root&&(r.optionalFeatures.push("dom-overlay"),r.domOverlay={root:this.domOverlay.root}),i&&i.anchors&&this.anchors.supported&&r.optionalFeatures.push("anchors"),i&&i.depthSensing&&this.views.supportedDepth){r.optionalFeatures.push("depth-sensing");const t=[],e=[];if(t.push(G_,"cpu-optimized"),e.push(X_,H_,W_),i.depthSensing.usagePreference){const e=t.indexOf(i.depthSensing.usagePreference);-1!==e&&t.splice(e,1),t.unshift(i.depthSensing.usagePreference)}if(i.depthSensing.dataFormatPreference){const t=e.indexOf(i.depthSensing.dataFormatPreference);-1!==t&&e.splice(t,1),e.unshift(i.depthSensing.dataFormatPreference)}r.depthSensing={usagePreference:t,dataFormatPreference:e}}o&&i&&i.cameraColor&&this.views.supportedColor&&r.optionalFeatures.push("camera-access")}r.optionalFeatures.push("hand-tracking"),i&&i.optionalFeatures&&(r.optionalFeatures=r.optionalFeatures.concat(i.optionalFeatures)),this.imageTracking.supported&&this.imageTracking.images.length?this.imageTracking.prepareImages((t,i)=>{if(t)return n&&n(t),void this.fire("error",t);null!==i&&(r.trackedImages=i),this._onStartOptionsReady(e,s,r,n)}):this._onStartOptionsReady(e,s,r,n)}_onStartOptionsReady(t,e,s,i){navigator.xr.requestSession(t,s).then(t=>{this._onSessionStart(t,e,i)}).catch(t=>{this._camera.camera.xr=null,this._camera=null,this._type=null,this._spaceType=null,i&&i(t),this.fire("error",t)})}end(t){this._session?(this.webglBinding=null,t&&this.once("end",t),this._session.end()):t&&t(new Error("XR Session is not initialized"))}isAvailable(t){return this._available[t]}_deviceAvailabilityCheck(){for(const t in this._available)this._sessionSupportCheck(t)}initiateRoomCapture(t){this._session?this._session.initiateRoomCapture?this._session.initiateRoomCapture().then(()=>{t&&t(null)}).catch(e=>{t&&t(e)}):t(new Error("Session does not support manual room capture")):t(new Error("Session is not active"))}updateTargetFrameRate(t,e){this._session?.updateTargetFrameRate?this._session.updateTargetFrameRate(t).then(()=>{e?.()}).catch(t=>{e?.(t)}):e?.(new Error("unable to update frameRate"))}_sessionSupportCheck(t){navigator.xr.isSessionSupported(t).then(e=>{this._available[t]!==e&&(this._available[t]=e,this.fire("available",t,e),this.fire(`available:${t}`,e))}).catch(t=>{this.fire("error",t)})}_onSessionStart(t,e,s){let i=!1;this._session=t;const n=()=>{this.fire("visibility:change",t.visibilityState)},r=()=>{this._setClipPlanes(this._camera.nearClip,this._camera.farClip)},a=()=>{this._camera&&(this._camera.off("set_nearClip",r),this._camera.off("set_farClip",r),this._camera.camera.xr=null,this._camera=null),t.removeEventListener("end",a),t.removeEventListener("visibilitychange",n),i||this.fire("end"),this._session=null,this._referenceSpace=null,this._width=0,this._height=0,this._type=null,this._spaceType=null,this.app.systems&&this.app.tick()};t.addEventListener("end",a),t.addEventListener("visibilitychange",n),this._camera.on("set_nearClip",r),this._camera.on("set_farClip",r),this._createBaseLayer(),this.session.supportedFrameRates?this._supportedFrameRates=Array.from(this.session.supportedFrameRates):this._supportedFrameRates=null,this._session.addEventListener("frameratechange",()=>{this.fire("frameratechange",this._session?.frameRate)}),t.requestReferenceSpace(e).then(t=>{this._referenceSpace=t,this.app.tick(),s&&s(null),this.fire("start")}).catch(e=>{i=!0,t.end(),s&&s(e),this.fire("error",e)})}_setClipPlanes(t,e){this._depthNear===t&&this._depthFar===e||(this._depthNear=t,this._depthFar=e,this._session&&this._session.updateRenderState({depthNear:this._depthNear,depthFar:this._depthFar}))}_createBaseLayer(){const t=this.app.graphicsDevice,e=t.maxPixelRatio/window.devicePixelRatio*this._framebufferScaleFactor;if(this._baseLayer=new XRWebGLLayer(this._session,t.gl,{alpha:!0,depth:!0,stencil:!0,framebufferScaleFactor:e,antialias:!1}),t?.isWebGL2&&window.XRWebGLBinding)try{this.webglBinding=new XRWebGLBinding(this._session,t.gl)}catch(s){this.fire("error",s)}this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar})}_onDeviceLost(){this._session&&(this.webglBinding&&(this.webglBinding=null),this._baseLayer=null,this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar}))}_onDeviceRestored(){this._session&&setTimeout(()=>{this.app.graphicsDevice.gl.makeXRCompatible().then(()=>{this._createBaseLayer()}).catch(t=>{this.fire("error",t)})},0)}update(t){if(!this._session)return!1;const e=t.session.renderState.baseLayer.framebufferWidth,s=t.session.renderState.baseLayer.framebufferHeight;this._width===e&&this._height===s||(this._width=e,this._height=s,this.app.graphicsDevice.setResolution(e,s));const i=t.getViewerPose(this._referenceSpace);if(!i)return!1;const n=this.views.list.length;this.views.update(t,i.views);const r=i.transform.position,a=i.transform.orientation;if(this._localPosition.set(r.x,r.y,r.z),this._localRotation.set(a.x,a.y,a.z,a.w),0===n&&this.views.list.length>0){const t=new o.$,e=this.views.list[0];t.copy(e.projMat);const s=t.data,i=2*Math.atan(1/s[5])*180/Math.PI,n=s[5]/s[0],r=s[14]/(s[10]+1),a=s[14]/(s[10]-1),l=!1;this._camera.camera.setXrProperties({aspectRatio:n,farClip:r,fov:i,horizontalFov:l,nearClip:a})}return this._camera.camera._node.setLocalPosition(this._localPosition),this._camera.camera._node.setLocalRotation(this._localRotation),this.input.update(t),this._type===z_&&(this.hitTest.supported&&this.hitTest.update(t),this.lightEstimation.supported&&this.lightEstimation.update(t),this.imageTracking.supported&&this.imageTracking.update(t),this.anchors.supported&&this.anchors.update(t),this.planeDetection.supported&&this.planeDetection.update(t),this.meshDetection.supported&&this.meshDetection.update(t)),this.fire("update",t),!0}get supported(){return this._supported}get active(){return!!this._session}get type(){return this._type}get spaceType(){return this._spaceType}get session(){return this._session}get frameRate(){return this._session?.frameRate??null}get supportedFrameRates(){return this._supportedFrameRates}get framebufferScaleFactor(){return this._framebufferScaleFactor}set fixedFoveation(t){null!==(this._baseLayer?.fixedFoveation??null)&&(this.app.graphicsDevice.samples,this._baseLayer.fixedFoveation=t)}get fixedFoveation(){return this._baseLayer?.fixedFoveation??null}get camera(){return this._camera?this._camera.entity:null}get visibilityState(){return this._session?this._session.visibilityState:null}}class Pg extends Dr{constructor(t,e={}){super(t);const s=new Mr;s.graphicsDevice=e.graphicsDevice??this.createDevice(t,e),this.addComponentSystems(s),this.addResourceHandles(s),s.elementInput=e.elementInput,s.keyboard=e.keyboard,s.mouse=e.mouse,s.touch=e.touch,s.gamepads=e.gamepads,s.scriptPrefix=e.scriptPrefix,s.assetPrefix=e.assetPrefix,s.scriptsOrder=e.scriptsOrder,s.soundManager=new u,s.lightmapper=ms,s.batchManager=Zs,s.xr=Cg,this.init(s)}createDevice(t,e){return e.graphicsDeviceOptions||(e.graphicsDeviceOptions={}),i.i.browser&&navigator.xr&&(e.graphicsDeviceOptions.xrCompatible=!0),e.graphicsDeviceOptions.alpha=e.graphicsDeviceOptions.alpha||!1,new n.z(t,e.graphicsDeviceOptions)}addComponentSystems(t){t.componentSystems=[jc,bo,Ll,oa,Pa,dh,Lc,Qd,uu,Au,Md,Ia,Tc,ed,xl,ja,_d,yd,Gd,Kl,Fl,$d,zf]}addResourceHandles(t){t.resourceHandlers=[Xf,Wp,Xp,$p,Gm,km,U_,r_,Im,Kp,Ym,Hm,sm,Mm,em,Km,Lm,im,am,Zp,c_,s_,n_,tm,Em]}}},82549:(t,e,s)=>{s.d(e,{p:()=>i});const i={set:(t,e,s,i=1)=>t&~(i<<s)|e<<s,get:(t,e,s=1)=>t>>e&s,all(t,e,s=1){const i=s<<e;return(t&i)===i},any:(t,e,s=1)=>0!==(t&s<<e)}},84140:(t,e,s)=>{s.d(e,{t:()=>a});var i=s(82549),n=s(91622);const r=15;class a{constructor(t=!1,e=n.KLp,s=n.qa5,i=n.seI,r,a,o,l=!0,h=!0,c=!0,d=!0){this.target0=0,this.setColorBlend(e,s,i),this.setAlphaBlend(r??e,a??s,o??i),this.setColorWrite(l,h,c,d),this.blend=t}set blend(t){this.target0=i.p.set(this.target0,t?1:0,26)}get blend(){return i.p.all(this.target0,26)}setColorBlend(t,e,s){this.target0=i.p.set(this.target0,t,0,7),this.target0=i.p.set(this.target0,e,3,r),this.target0=i.p.set(this.target0,s,7,r)}setAlphaBlend(t,e,s){this.target0=i.p.set(this.target0,t,11,7),this.target0=i.p.set(this.target0,e,14,r),this.target0=i.p.set(this.target0,s,18,r)}setColorWrite(t,e,s,i){this.redWrite=t,this.greenWrite=e,this.blueWrite=s,this.alphaWrite=i}get colorOp(){return i.p.get(this.target0,0,7)}get colorSrcFactor(){return i.p.get(this.target0,3,r)}get colorDstFactor(){return i.p.get(this.target0,7,r)}get alphaOp(){return i.p.get(this.target0,11,7)}get alphaSrcFactor(){return i.p.get(this.target0,14,r)}get alphaDstFactor(){return i.p.get(this.target0,18,r)}set redWrite(t){this.target0=i.p.set(this.target0,t?1:0,22)}get redWrite(){return i.p.all(this.target0,22)}set greenWrite(t){this.target0=i.p.set(this.target0,t?1:0,23)}get greenWrite(){return i.p.all(this.target0,23)}set blueWrite(t){this.target0=i.p.set(this.target0,t?1:0,24)}get blueWrite(){return i.p.all(this.target0,24)}set alphaWrite(t){this.target0=i.p.set(this.target0,t?1:0,25)}get alphaWrite(){return i.p.all(this.target0,25)}get allWrite(){return i.p.get(this.target0,22,15)}copy(t){return this.target0=t.target0,this}clone(){return(new this.constructor).copy(this)}get key(){return this.target0}equals(t){return this.target0===t.target0}static{this.NOBLEND=Object.freeze(new a)}static{this.NOWRITE=Object.freeze(new a(void 0,void 0,void 0,void 0,void 0,void 0,void 0,!1,!1,!1,!1))}static{this.ALPHABLEND=Object.freeze(new a(!0,n.KLp,n.LDz,n.dIP))}static{this.ADDBLEND=Object.freeze(new a(!0,n.KLp,n.qa5,n.qa5))}}},84636:(t,e,s)=>{s.d(e,{R:()=>r});var i=s(91622);let n=0;class r{constructor(t,e,s,r){this.usage=i.y1K,this.usage=r?.usage??i.y1K,this.device=t,this.format=e,this.numVertices=s,this.id=n++,this.impl=t.createVertexBufferImpl(this,e,r),this.numBytes=e.verticesByteSize?e.verticesByteSize:e.size*s,this.adjustVramSizeTracking(t._vram,this.numBytes);const a=r?.data;a?this.setData(a):this.storage=new ArrayBuffer(this.numBytes),this.device.buffers.push(this)}destroy(){const t=this.device,e=t.buffers.indexOf(this);-1!==e&&t.buffers.splice(e,1),this.impl.initialized&&(this.impl.destroy(t),this.adjustVramSizeTracking(t._vram,-this.storage.byteLength))}adjustVramSizeTracking(t,e){t.vb+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getUsage(){return this.usage}getNumVertices(){return this.numVertices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){return t.byteLength===this.numBytes&&(this.storage=t,this.unlock(),!0)}}},85169:(t,e,s)=>{s.d(e,{e:()=>r,t:()=>o});var i=s(97213),n=s(73273);class r extends i.J{static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_STATE="state"}static{this.EVENT_DESTROY="destroy"}static{this.EVENT_ATTR="attr"}static{this.EVENT_ERROR="error"}constructor(t){super(),this.initScript(t)}set enabled(t){this._enabled=!!t,this.enabled!==this._enabledOld&&(this._enabledOld=this.enabled,this.fire(this.enabled?"enable":"disable"),this.fire("state",this.enabled),!this._initialized&&this.enabled&&(this._initialized=!0,this.fire("preInitialize"),this.initialize&&this.entity.script._scriptMethod(this,n.$x)),this._initialized&&!this._postInitialized&&this.enabled&&!this.entity.script._beingEnabled&&(this._postInitialized=!0,this.postInitialize&&this.entity.script._scriptMethod(this,n.k5)))}get enabled(){return this._enabled&&!this._destroyed&&this.entity.script.enabled&&this.entity.enabled}initScript(t){const e=this.constructor;this.app=t.app,this.entity=t.entity,this._enabled="boolean"!=typeof t.enabled||t.enabled,this._enabledOld=this.enabled,this.__destroyed=!1,this.__scriptType=e,this.__executionOrder=-1}static{this.__name=null}static{this.__getScriptName=o}static get scriptName(){return this.__name}}const a=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s\/]*)\s*/;function o(t){if("function"!=typeof t)return;if(t.scriptName)return t.scriptName;if("name"in Function.prototype)return t.name;if(t===Function||t===Function.prototype.constructor)return"Function";const e=`${t}`.match(a);return e?e[1]:void 0}},85450:(t,e,s)=>{s.d(e,{i:()=>d});var i=s(91622),n=s(84140),r=s(47422),a=s(27351),o=s(48786),l=s(80290);const h=[];h[a.Nit]={src:i.qa5,dst:i.qa5,op:i.OgC},h[a.RjB]={src:i.qa5,dst:i.seI,op:i.KLp},h[a.i96]={src:i.LDz,dst:i.dIP,op:i.KLp,alphaSrc:i.qa5},h[a.bYZ]={src:i.qa5,dst:i.dIP,op:i.KLp},h[a.dcX]={src:i.qa5,dst:i.qa5,op:i.KLp},h[a.HGq]={src:i.LDz,dst:i.qa5,op:i.KLp},h[a.LLJ]={src:i.FHY,dst:i.iRx,op:i.KLp},h[a.rZI]={src:i.$Qt,dst:i.qa5,op:i.KLp},h[a.$M5]={src:i.FHY,dst:i.seI,op:i.KLp},h[a.Z7c]={src:i.qa5,dst:i.qa5,op:i.tAf},h[a.HVe]={src:i.qa5,dst:i.qa5,op:i.pJd};let c=0;class d{constructor(){this.meshInstances=[],this.name="Untitled",this.userId="",this.id=c++,this.variants=new Map,this.defines=new Map,this._definesDirty=!1,this.parameters={},this.alphaTest=0,this.alphaToCoverage=!1,this._blendState=new n.t,this._depthState=new r.H,this.cull=i.K1r,this.stencilFront=null,this.stencilBack=null,this._shaderChunks=null,this._oldChunks={},this._dirtyShader=!0,this._shaderVersion=0,this._scene=null,this.dirty=!0}get hasShaderChunks(){return null!=this._shaderChunks}get shaderChunks(){return this._shaderChunks||(this._shaderChunks=new l.W),this._shaderChunks}getShaderChunks(t=i.BzK){const e=this.shaderChunks;return t===i.BzK?e.glsl:e.wgsl}set shaderChunksVersion(t){this.shaderChunks.version=t}get shaderChunksVersion(){return this.shaderChunks.version}set chunks(t){this._oldChunks=t}get chunks(){return Object.assign(this._oldChunks,Object.fromEntries(this.shaderChunks.glsl)),this._oldChunks}set depthBias(t){this._depthState.depthBias=t}get depthBias(){return this._depthState.depthBias}set slopeDepthBias(t){this._depthState.depthBiasSlope=t}get slopeDepthBias(){return this._depthState.depthBiasSlope}set redWrite(t){this._blendState.redWrite=t}get redWrite(){return this._blendState.redWrite}set greenWrite(t){this._blendState.greenWrite=t}get greenWrite(){return this._blendState.greenWrite}set blueWrite(t){this._blendState.blueWrite=t}get blueWrite(){return this._blendState.blueWrite}set alphaWrite(t){this._blendState.alphaWrite=t}get alphaWrite(){return this._blendState.alphaWrite}get transparent(){return this._blendState.blend}_updateTransparency(){const t=this.transparent,e=this.meshInstances;for(let s=0;s<e.length;s++)e[s].transparent=t}set blendState(t){this._blendState.copy(t),this._updateTransparency()}get blendState(){return this._blendState}set blendType(t){const e=h[t];this._blendState.setColorBlend(e.op,e.src,e.dst),this._blendState.setAlphaBlend(e.alphaOp??e.op,e.alphaSrc??e.src,e.alphaDst??e.dst);const s=t!==a.RjB;this._blendState.blend!==s&&(this._blendState.blend=s,this._updateTransparency()),this._updateMeshInstanceKeys()}get blendType(){if(!this.transparent)return a.RjB;const{colorOp:t,colorSrcFactor:e,colorDstFactor:s,alphaOp:i,alphaSrcFactor:n,alphaDstFactor:r}=this._blendState;for(let a=0;a<h.length;a++){const o=h[a];if(o.src===e&&o.dst===s&&o.op===t&&o.src===n&&o.dst===r&&o.op===i)return a}return a.i96}set depthState(t){this._depthState.copy(t)}get depthState(){return this._depthState}set depthTest(t){this._depthState.test=t}get depthTest(){return this._depthState.test}set depthFunc(t){this._depthState.func=t}get depthFunc(){return this._depthState.func}set depthWrite(t){this._depthState.write=t}get depthWrite(){return this._depthState.write}copy(t){this.name=t.name,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this._blendState.copy(t._blendState),this._depthState.copy(t._depthState),this.cull=t.cull,this.stencilFront=t.stencilFront?.clone(),t.stencilBack&&(this.stencilBack=t.stencilFront===t.stencilBack?this.stencilFront:t.stencilBack.clone()),this.clearParameters();for(const e in t.parameters)t.parameters.hasOwnProperty(e)&&this._setParameterSimple(e,t.parameters[e].data);return this.defines.clear(),t.defines.forEach((t,e)=>this.defines.set(e,t)),this._shaderChunks=t.hasShaderChunks?new l.W:null,this._shaderChunks?.copy(t._shaderChunks),this}clone(){return(new this.constructor).copy(this)}_updateMeshInstanceKeys(){const t=this.meshInstances;for(let e=0;e<t.length;e++)t[e].updateKey()}updateUniforms(t,e){this._dirtyShader&&this.clearVariants()}getShaderVariant(t){}update(){if(Object.keys(this._oldChunks).length>0)for(const[t,e]of Object.entries(this._oldChunks))this.shaderChunks.glsl.set(t,e),delete this._oldChunks[t];(this._definesDirty||this._shaderChunks?.isDirty())&&(this._definesDirty=!1,this._shaderChunks?.resetDirty(),this.clearVariants()),this.dirty=!0}clearParameters(){this.parameters={}}getParameters(){return this.parameters}clearVariants(){this.variants.clear();const t=this.meshInstances,e=t.length;for(let s=0;s<e;s++)t[s].clearShaders()}getParameter(t){return this.parameters[t]}_setParameterSimple(t,e){const s=this.parameters[t];s?s.data=e:this.parameters[t]={scopeId:null,data:e}}setParameter(t,e){if(void 0===e&&"object"==typeof t){const s=t;if(s.length){for(let t=0;t<s.length;t++)this.setParameter(s[t]);return}t=s.name,e=s.value}this._setParameterSimple(t,e)}deleteParameter(t){this.parameters[t]&&delete this.parameters[t]}setParameters(t,e){const s=this.parameters;void 0===e&&(e=s);for(const i in e){const e=s[i];e&&(e.scopeId||(e.scopeId=t.scope.resolve(i)),e.scopeId.setValue(e.data))}}setDefine(t,e){let s=!1;const{defines:i}=this;void 0!==e&&!1!==e?(s=!i.has(t)||i.get(t)!==e,i.set(t,e)):(s=i.has(t),i.delete(t)),this._definesDirty||=s}getDefine(t){return this.defines.has(t)}destroy(){this.variants.clear();for(let t=0;t<this.meshInstances.length;t++){const e=this.meshInstances[t];if(e.clearShaders(),e._material=null,e.mesh){const t=(0,o.h)(e.mesh.device);this!==t&&(e.material=t)}}this.meshInstances.length=0}addMeshInstanceRef(t){this.meshInstances.push(t)}removeMeshInstanceRef(t){const e=this.meshInstances,s=e.indexOf(t);-1!==s&&e.splice(s,1)}}},87513:(t,e,s)=>{s.d(e,{M:()=>n});class i{static{this._traceChannels=new Set}static{this.stack=!1}static set(t,e=!0){}static get(t){return i._traceChannels.has(t)}}class n{loseContext(){this.pastFrameAllocations.clear()}set enabled(t){this._enableRequest=t}get enabled(){return this._enableRequest}processEnableRequest(){this._enableRequest!==this._enabled&&(this._enabled=this._enableRequest,this._enabled||(this._frameTime=0))}request(t){this.pastFrameAllocations.set(t,this.frameAllocations),this.frameAllocations=[]}report(t,e){if(e){const s=this.pastFrameAllocations.get(t);if(e.length>0&&(this._frameTime=e.reduce((t,e)=>t+e,0)),i.get("GpuTimings")){let t=0;for(let i=0;i<s.length;++i)s[i],t+=e[i]}}this.pastFrameAllocations.delete(t)}getSlot(t){const e=this.frameAllocations.length;return this.frameAllocations.push(t),e}get slotCount(){return this.frameAllocations.length}constructor(){this.frameAllocations=[],this.pastFrameAllocations=new Map,this._enabled=!1,this._enableRequest=!1,this._frameTime=0}}},88004:(t,e,s)=>{s.d(e,{t:()=>i});const i="undefined"!=typeof window&&window.performance&&window.performance.now?performance.now.bind(performance):Date.now},88525:(t,e,s)=>{function i(t){if(null==t)return 0;let e=0;for(let s=0,i=t.length;s<i;s++)e=(e<<5)-e+t.charCodeAt(s),e|=0;return e}function n(t){let e=2166136261;for(let s=0;s<t.length;s++)e^=t[s],e*=16777619;return e>>>0}s.d(e,{m:()=>n,s:()=>i})},90393:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n"},91622:(t,e,s)=>{s.d(e,{$$M:()=>Dt,$1R:()=>Ge,$AA:()=>oi,$Cd:()=>ri,$Q8:()=>rs,$Qt:()=>c,$_V:()=>Xe,$mg:()=>ws,AQ1:()=>F,Amt:()=>re,ArW:()=>xt,B8J:()=>an,Bz3:()=>Rs,BzK:()=>As,CG0:()=>bs,COi:()=>Ri,CPw:()=>Ks,CWw:()=>R,CWz:()=>Me,CZm:()=>gs,CiQ:()=>_i,Cyu:()=>Gt,DLt:()=>Pi,DrA:()=>N,EB8:()=>Qe,EEU:()=>Se,EPU:()=>ot,EUX:()=>Ds,EYT:()=>Vt,EYZ:()=>Li,E_6:()=>lt,Eb5:()=>js,EuA:()=>_s,F0N:()=>he,F1y:()=>gi,F8$:()=>Le,FEO:()=>ii,FHY:()=>h,FHg:()=>Ze,FQW:()=>dt,FTO:()=>gt,FfR:()=>Kt,FxX:()=>ge,G1V:()=>es,G24:()=>St,G3_:()=>He,GAt:()=>li,GBD:()=>Be,GF5:()=>Bs,GGM:()=>ps,GHH:()=>Fe,GLw:()=>k,GU6:()=>Je,GWP:()=>Ne,Gie:()=>xs,HZv:()=>Nt,HaE:()=>Hi,HeG:()=>us,HfE:()=>kt,Hn_:()=>Pe,HsS:()=>ye,I1V:()=>Jt,IQA:()=>ft,Ijy:()=>Et,ImV:()=>te,JYe:()=>Ee,Jm2:()=>Si,Jnj:()=>Ui,K1r:()=>I,KLp:()=>f,KP3:()=>xi,KT$:()=>Xi,Kod:()=>ds,KpZ:()=>Qs,L4b:()=>ts,LCL:()=>Qt,LDn:()=>it,LDz:()=>d,Lxj:()=>rt,MX7:()=>Ns,Mb4:()=>vt,Mg$:()=>mt,MqB:()=>Zt,NFm:()=>ze,NLq:()=>We,NcO:()=>y,NdR:()=>ke,Ndk:()=>Ft,Nnq:()=>ht,Nv2:()=>Js,Nvm:()=>de,Nwc:()=>Oi,OTs:()=>Lt,OgC:()=>p,PQv:()=>Wt,PTM:()=>xe,PdW:()=>x,PyI:()=>Ji,PyV:()=>g,QUq:()=>Ki,Qhq:()=>Us,Qj:()=>Ht,Qpk:()=>Te,QyC:()=>Mt,RSt:()=>J,RUv:()=>Yt,RaA:()=>ki,RsJ:()=>Ws,S$i:()=>zt,S$n:()=>at,S8r:()=>qs,SF$:()=>we,SGA:()=>ln,SQ0:()=>Fi,SWx:()=>Q,Srv:()=>ss,Sue:()=>P,T00:()=>oe,TNX:()=>w,TOD:()=>ls,TWL:()=>ai,TyC:()=>Tt,ULN:()=>zi,URU:()=>$e,UhA:()=>Ve,UpR:()=>ie,V$W:()=>Os,VPo:()=>Vi,VSW:()=>Ps,WBN:()=>ct,Wbd:()=>pt,WhW:()=>ms,XAr:()=>zs,XF6:()=>Ae,XjN:()=>It,XpR:()=>Rt,YKI:()=>D,Ybx:()=>Bt,Ych:()=>Ti,YdP:()=>Zi,YfE:()=>fe,Yj5:()=>Hs,YtF:()=>Ut,ZFf:()=>ae,ZKF:()=>$s,ZLq:()=>Ai,ZsA:()=>S,ZyS:()=>yt,_3:()=>tt,_AA:()=>ve,_Rt:()=>v,aJo:()=>ui,aVd:()=>De,akF:()=>nt,apD:()=>wt,bSO:()=>Xt,bjN:()=>se,c02:()=>K,cRA:()=>vs,cme:()=>ee,cyR:()=>Vs,d0F:()=>me,d0G:()=>pe,dD6:()=>Gs,dIP:()=>u,enT:()=>Xs,erz:()=>is,fW0:()=>os,fsA:()=>W,g80:()=>Cs,gaK:()=>V,gpl:()=>Z,h3u:()=>Ce,hOr:()=>Di,hs2:()=>B,hwK:()=>fs,iHB:()=>rn,iRx:()=>l,iUf:()=>cn,iYc:()=>ni,jDC:()=>qi,jFk:()=>di,jK8:()=>sn,jVv:()=>ys,jYy:()=>At,jk_:()=>hi,kF:()=>Ls,kqw:()=>et,kur:()=>Yi,kzn:()=>mi,lBd:()=>hn,lGY:()=>pi,lW3:()=>fi,mEg:()=>hs,mMQ:()=>ue,n$B:()=>Fs,n7d:()=>vi,nJN:()=>Ii,nml:()=>Ci,oDV:()=>A,odD:()=>ns,olY:()=>bi,pCO:()=>E,pG9:()=>ks,pJd:()=>_,pLF:()=>M,pNk:()=>tn,pPX:()=>Qi,pTl:()=>Wi,pov:()=>Ye,pqC:()=>Ss,q3J:()=>X,q8s:()=>si,qA2:()=>$i,qEN:()=>Pt,qGG:()=>jt,qYl:()=>ci,qa5:()=>o,qfQ:()=>ji,qn_:()=>z,qoY:()=>r,rGZ:()=>qe,rXb:()=>Bi,rb7:()=>nn,reG:()=>U,rlY:()=>Zs,rlo:()=>wi,rvO:()=>Ms,s5o:()=>_e,s64:()=>as,s7S:()=>ce,s7h:()=>ut,sTv:()=>H,sYG:()=>on,s_z:()=>_t,seI:()=>a,slc:()=>Ie,sxV:()=>Ei,tAf:()=>m,tJj:()=>dn,uCe:()=>T,uVS:()=>Mi,uVx:()=>Is,uhC:()=>O,v1A:()=>G,vI2:()=>le,v_N:()=>$,vct:()=>Es,vpx:()=>j,vq6:()=>n,w7A:()=>Ts,wGs:()=>q,wmq:()=>cs,wzA:()=>ne,x3I:()=>i,x8T:()=>Ct,xBw:()=>en,xHx:()=>C,xyx:()=>bt,xzR:()=>Ys,y1K:()=>b,yD7:()=>yi,yK5:()=>Ni,yLH:()=>ti,yZ0:()=>je,yam:()=>Gi,yof:()=>Ke,z5t:()=>Oe,zEd:()=>Re,zIz:()=>st,zVD:()=>$t,zYo:()=>ei,zYw:()=>Y,zZp:()=>Ue,zbM:()=>qt,zc3:()=>Ot,zl$:()=>be,zwO:()=>L});const i=0,n=1,r=2,a=0,o=1,l=2,h=4,c=5,d=6,u=8,f=0,p=2,m=3,_=4,g=1,v=8,S=16,y=32,x=64,T=128,w=256,b=0,E=1,A=2,C=3,P=1,D=2,L=4,M=0,I=1,R=2,F=3,O=0,N=1,k=2,B=3,U=4,z=5,V=0,G=1,H=2,W=3,X=4,$=5,q=6,j=7,Y=0,K=1,Z=2,Q=0,J=1,tt=2,et=3,st=4,it=5,nt=6,rt=7,at=8,ot=9,lt=10,ht=11,ct=12,dt=13,ut=14,ft=15,pt=16,mt=17,_t=18,gt=19,vt=20,St=21,yt=22,xt=23,Tt=24,wt=25,bt=26,Et=27,At=28,Ct=29,Pt=30,Dt=31,Lt=32,Mt=33,It=34,Rt=35,Ft=36,Ot=37,Nt=38,kt=39,Bt=40,Ut=41,zt=42,Vt=43,Gt=44,Ht=45,Wt=46,Xt=47,$t=48,qt=49,jt=50,Yt=51,Kt=52,Zt=53,Qt=54,Jt=55,te=56,ee=61,se=62,ie=63,ne=64,re=65,ae=66,oe=67,le=68,he=69,ce=new Map([[Q,{name:"A8",size:1,ldr:!0}],[Kt,{name:"R8",size:1,ldr:!0}],[J,{name:"L8",size:1,ldr:!0}],[tt,{name:"LA8",size:2,ldr:!0}],[Zt,{name:"RG8",size:2,ldr:!0}],[et,{name:"RGB565",size:2,ldr:!0}],[st,{name:"RGBA5551",size:2,ldr:!0}],[it,{name:"RGBA4",size:2,ldr:!0}],[nt,{name:"RGB8",size:4,ldr:!0}],[rt,{name:"RGBA8",size:4,ldr:!0,srgbFormat:vt}],[jt,{name:"R16F",size:2}],[Yt,{name:"RG16F",size:4}],[ht,{name:"RGB16F",size:8}],[ct,{name:"RGBA16F",size:8}],[dt,{name:"RGB32F",size:16}],[ut,{name:"RGBA32F",size:16}],[ft,{name:"R32F",size:4}],[pt,{name:"DEPTH",size:4}],[he,{name:"DEPTH16",size:2}],[mt,{name:"DEPTHSTENCIL",size:4}],[_t,{name:"111110F",size:4}],[gt,{name:"SRGB8",size:4,ldr:!0,srgb:!0}],[vt,{name:"SRGBA8",size:4,ldr:!0,srgb:!0}],[Dt,{name:"BGRA8",size:4,ldr:!0}],[ne,{name:"SBGRA8",size:4,ldr:!0,srgb:!0}],[at,{name:"DXT1",blockSize:8,ldr:!0,srgbFormat:Qt}],[ot,{name:"DXT3",blockSize:16,ldr:!0,srgbFormat:Jt}],[lt,{name:"DXT5",blockSize:16,ldr:!0,srgbFormat:te}],[St,{name:"ETC1",blockSize:8,ldr:!0}],[yt,{name:"ETC2_RGB",blockSize:8,ldr:!0,srgbFormat:ee}],[xt,{name:"ETC2_RGBA",blockSize:16,ldr:!0,srgbFormat:se}],[Tt,{name:"PVRTC_2BPP_RGB_1",ldr:!0,blockSize:8}],[wt,{name:"PVRTC_2BPP_RGBA_1",ldr:!0,blockSize:8}],[bt,{name:"PVRTC_4BPP_RGB_1",ldr:!0,blockSize:8}],[Et,{name:"PVRTC_4BPP_RGBA_1",ldr:!0,blockSize:8}],[At,{name:"ASTC_4x4",blockSize:16,ldr:!0,srgbFormat:ie}],[Ct,{name:"ATC_RGB",blockSize:8,ldr:!0}],[Pt,{name:"ATC_RGBA",blockSize:16,ldr:!0}],[re,{name:"BC6H_RGBF",blockSize:16}],[ae,{name:"BC6H_RGBUF",blockSize:16}],[oe,{name:"BC7_RGBA",blockSize:16,ldr:!0,srgbFormat:le}],[Qt,{name:"DXT1_SRGB",blockSize:8,ldr:!0,srgb:!0}],[Jt,{name:"DXT3_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[te,{name:"DXT5_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[ee,{name:"ETC2_SRGB",blockSize:8,ldr:!0,srgb:!0}],[se,{name:"ETC2_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[ie,{name:"ASTC_4x4_SRGB",blockSize:16,ldr:!0,srgb:!0}],[le,{name:"BC7_SRGBA",blockSize:16,ldr:!0,srgb:!0}],[Lt,{name:"R8I",size:1,isInt:!0}],[Mt,{name:"R8U",size:1,isInt:!0}],[It,{name:"R16I",size:2,isInt:!0}],[Rt,{name:"R16U",size:2,isInt:!0}],[Ft,{name:"R32I",size:4,isInt:!0}],[Ot,{name:"R32U",size:4,isInt:!0}],[Nt,{name:"RG8I",size:2,isInt:!0}],[kt,{name:"RG8U",size:2,isInt:!0}],[Bt,{name:"RG16I",size:4,isInt:!0}],[Ut,{name:"RG16U",size:4,isInt:!0}],[zt,{name:"RG32I",size:8,isInt:!0}],[Vt,{name:"RG32U",size:8,isInt:!0}],[Gt,{name:"RGBA8I",size:4,isInt:!0}],[Ht,{name:"RGBA8U",size:4,isInt:!0}],[Wt,{name:"RGBA16I",size:8,isInt:!0}],[Xt,{name:"RGBA16U",size:8,isInt:!0}],[$t,{name:"RGBA32I",size:16,isInt:!0}],[qt,{name:"RGBA32U",size:16,isInt:!0}]]),de=t=>void 0!==ce.get(t)?.blockSize,ue=t=>!0===ce.get(t)?.srgb,fe=t=>!0===ce.get(t)?.isInt,pe=t=>ce.get(t)?.srgbFormat||t,me=t=>{for(const[e,s]of ce)if(s.srgbFormat===t)return e;return t},_e=t=>{const e=ce.get(t);return!(!e?.ldr||e?.srgb)},ge=t=>{switch(t){case ft:case dt:case ut:return Float32Array;case Ft:case zt:case $t:return Int32Array;case Ot:case Vt:case qt:return Uint32Array;case It:case Bt:case Wt:return Int16Array;case Zt:case Rt:case Ut:case Xt:case et:case st:case it:case jt:case Yt:case ht:case ct:return Uint16Array;case Lt:case Nt:case Gt:return Int8Array;default:return Uint8Array}},ve=0,Se=1,ye=2,xe=3,Te=4,we=5,be=6,Ee="POSITION",Ae="NORMAL",Ce="TANGENT",Pe="BLENDWEIGHT",De="BLENDINDICES",Le="COLOR",Me="TEXCOORD",Ie="TEXCOORD0",Re="TEXCOORD1",Fe="TEXCOORD2",Oe="TEXCOORD3",Ne="TEXCOORD4",ke="TEXCOORD5",Be="TEXCOORD6",Ue="TEXCOORD7",ze="ATTR0",Ve="ATTR1",Ge="ATTR2",He="ATTR3",We="ATTR4",Xe="ATTR8",$e="ATTR9",qe="ATTR11",je="ATTR12",Ye="ATTR13",Ke="ATTR14",Ze="ATTR15",Qe=1,Je=0,ts=2,es=3,ss=5,is=0,ns=1,rs=2,as="default",os="rgbm",ls="rgbe",hs="rgbp",cs="swizzleGGGR",ds="1d",us="2d",fs="2d-array",ps="cube",ms="cube-array",_s="3d",gs=0,vs=1,Ss=2,ys=3,xs=4,Ts="none",ws="cube",bs="equirect",Es="octahedral",As="glsl",Cs="wgsl",Ps=0,Ds=1,Ls=2,Ms=3,Is=4,Rs=5,Fs=6,Os=7,Ns=0,ks=1,Bs=2,Us=3,zs=4,Vs=5,Gs=6,Hs=7,Ws=8,Xs=9,$s=10,qs=11,js=12,Ys=13,Ks=14,Zs=15,Qs=16,Js=17,ti=18,ei=19,si=20,ii=21,ni=22,ri=23,ai=24,oi=25,li=26,hi=27,ci=28,di=29,ui=30,fi=31,pi=32,mi=33,_i=34,gi=35,vi=36,Si=37,yi=38,xi=39,Ti=40,wi=41,bi=42,Ei=43,Ai=44,Ci=45,Pi=46,Di=47,Li=48,Mi=49,Ii=["bool","int","float","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","samplerCube","","sampler2DShadow","samplerCubeShadow","sampler3D","","","","","sampler2DArray","uint","uvec2","uvec3","uvec4","","","","","","","","","","","","","isampler2D","usampler2D","isamplerCube","usamplerCube","isampler3D","usampler3D","isampler2DArray","usampler2DArray"],Ri=[["bool"],["i32"],["f32"],["vec2f","vec2<f32>"],["vec3f","vec3<f32>"],["vec4f","vec4<f32>"],["vec2i","vec2<i32>"],["vec3i","vec3<i32>"],["vec4i","vec4<i32>"],["vec2<bool>"],["vec3<bool>"],["vec4<bool>"],["mat2x2f","mat2x2<f32>"],["mat3x3f","mat3x3<f32>"],["mat4x4f","mat4x4<f32>"],["texture_2d<f32>"],["texture_cube<f32>"],["array<f32>"],["texture_depth_2d"],["texture_depth_cube"],["texture_3d<f32>"],["array<vec2<f32>>"],["array<vec3<f32>>"],["array<vec4<f32>>"],["array<mat4x4<f32>>"],["texture_2d_array<f32>"],["u32"],["vec2u","vec2<u32>"],["vec3u","vec3<u32>"],["vec4u","vec4<u32>"],["array<i32>"],["array<u32>"],["array<bool>"],["array<vec2i>","array<vec2<i32>>"],["array<vec2u>","array<vec2<u32>>"],["array<vec2b>","array<vec2<bool>>"],["array<vec3i>","array<vec3<i32>>"],["array<vec3u>","array<vec3<u32>>"],["array<vec3b>","array<vec3<bool>>"],["array<vec4i>","array<vec4<i32>>"],["array<vec4u>","array<vec4<u32>>"],["array<vec4b>","array<vec4<bool>>"],["texture_2d<i32>"],["texture_2d<u32>"],["texture_cube<i32>"],["texture_cube<u32>"],["texture_3d<i32>"],["texture_3d<u32>"],["texture_2d_array<i32>"],["texture_2d_array<u32>"]],Fi=new Map;Ri.forEach((t,e)=>{t.forEach(t=>Fi.set(t,e))});new Uint8Array([Is,Is,Fs,Fs,Fs,Fs,Is,Is,Is,Is,Is,Is,Fs,Fs,Fs,Is,Is,Fs,Is,Is,Is,Fs,Fs,Fs,Fs,Is,Rs,Rs,Rs,Rs,Is,Rs,Is,Is,Rs,Is,Is,Rs,Is,Is,Rs,Is,Is,Rs,Is,Rs,Is,Rs,Is,Rs]);const Oi="webgl2",Ni="webgpu",ki="null",Bi=1,Ui=2,zi=4,Vi="ldr",Gi="ldr_srgb",Hi="hdr",Wi=1,Xi=2,$i=4,qi=8,ji=16,Yi=32,Ki=64,Zi=128,Qi=255,Ji=0,tn=1,en=2,sn=["view","mesh","mesh_ub"],nn="default",rn="_unused_float_uniform",an=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Uint16Array],on=[1,1,2,2,4,4,4,2],ln=[Uint8Array,Uint16Array,Uint32Array],hn=[1,2,4],cn=new Map([["float","f32"],["vec2","vec2f"],["vec3","vec3f"],["vec4","vec4f"],["int","i32"],["ivec2","vec2i"],["ivec3","vec3i"],["ivec4","vec4i"],["uint","u32"],["uvec2","vec2u"],["uvec3","vec3u"],["uvec4","vec4u"]]),dn={};dn[Ee]=0,dn[Ae]=1,dn[Pe]=2,dn[De]=3,dn[Le]=4,dn[Ie]=5,dn[Re]=6,dn[Fe]=7,dn[Oe]=8,dn[Ne]=9,dn[ke]=10,dn[Be]=11,dn[Ue]=12,dn[Ce]=13,dn[ze]=0,dn[Ve]=1,dn[Ge]=2,dn[He]=3,dn[We]=4,dn.ATTR5=5,dn.ATTR6=6,dn.ATTR7=7,dn[Xe]=8,dn[$e]=9,dn.ATTR10=10,dn[qe]=11,dn[je]=12,dn[Ye]=13,dn[Ke]=14,dn[Ze]=15},93953:(t,e,s)=>{s.d(e,{e:()=>i});class i{constructor(t=0,e=0,s=0){3===t.length?(this.x=t[0],this.y=t[1],this.z=t[2]):(this.x=t,this.y=e,this.z=s)}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}add2(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addScaled(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}clone(){return new(0,this.constructor)(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}cross(t,e){const s=t.x,i=t.y,n=t.z,r=e.x,a=e.y,o=e.z;return this.x=i*o-a*n,this.y=n*r-o*s,this.z=s*a-r*i,this}distance(t){const e=this.x-t.x,s=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+s*s+i*i)}div(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}div2(t,e){return this.x=t.x/e.x,this.y=t.y/e.y,this.z=t.z/e.z,this}divScalar(t){return this.x/=t,this.y/=t,this.z/=t,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}lerp(t,e,s){return this.x=t.x+s*(e.x-t.x),this.y=t.y+s*(e.y-t.y),this.z=t.z+s*(e.z-t.z),this}mul(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}mul2(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}mulScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s,this.y=t.y*s,this.z=t.z*s}return this}floor(t=this){return this.x=Math.floor(t.x),this.y=Math.floor(t.y),this.z=Math.floor(t.z),this}ceil(t=this){return this.x=Math.ceil(t.x),this.y=Math.ceil(t.y),this.z=Math.ceil(t.z),this}round(t=this){return this.x=Math.round(t.x),this.y=Math.round(t.y),this.z=Math.round(t.z),this}min(t){return t.x<this.x&&(this.x=t.x),t.y<this.y&&(this.y=t.y),t.z<this.z&&(this.z=t.z),this}max(t){return t.x>this.x&&(this.x=t.x),t.y>this.y&&(this.y=t.y),t.z>this.z&&(this.z=t.z),this}project(t){const e=(this.x*t.x+this.y*t.y+this.z*t.z)/(t.x*t.x+t.y*t.y+t.z*t.z);return this.x=t.x*e,this.y=t.y*e,this.z=t.z*e,this}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}sub2(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}fromArray(t,e=0){return this.x=t[e]??this.x,this.y=t[e+1]??this.y,this.z=t[e+2]??this.z,this}toString(){return`[${this.x}, ${this.y}, ${this.z}]`}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}static{this.ZERO=Object.freeze(new i(0,0,0))}static{this.HALF=Object.freeze(new i(.5,.5,.5))}static{this.ONE=Object.freeze(new i(1,1,1))}static{this.UP=Object.freeze(new i(0,1,0))}static{this.DOWN=Object.freeze(new i(0,-1,0))}static{this.RIGHT=Object.freeze(new i(1,0,0))}static{this.LEFT=Object.freeze(new i(-1,0,0))}static{this.FORWARD=Object.freeze(new i(0,0,-1))}static{this.BACK=Object.freeze(new i(0,0,1))}}},94441:(t,e,s)=>{s.d(e,{U:()=>n});var i=s(93953);class n{constructor(){this.data=new Float32Array(9),this.data[0]=this.data[4]=this.data[8]=1}clone(){return(new(0,this.constructor)).copy(this)}copy(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[3],s[4]=e[4],s[5]=e[5],s[6]=e[6],s[7]=e[7],s[8]=e[8],this}set(t){const e=this.data;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],this}getX(t=new i.e){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new i.e){return t.set(this.data[3],this.data[4],this.data[5])}getZ(t=new i.e){return t.set(this.data[6],this.data[7],this.data[8])}equals(t){const e=this.data,s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]}isIdentity(){const t=this.data;return 1===t[0]&&0===t[1]&&0===t[2]&&0===t[3]&&1===t[4]&&0===t[5]&&0===t[6]&&0===t[7]&&1===t[8]}setIdentity(){const t=this.data;return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,this}toString(){return`[${this.data.join(", ")}]`}transpose(t=this){const e=t.data,s=this.data;if(e===s){let t;t=e[1],s[1]=e[3],s[3]=t,t=e[2],s[2]=e[6],s[6]=t,t=e[5],s[5]=e[7],s[7]=t}else s[0]=e[0],s[1]=e[3],s[2]=e[6],s[3]=e[1],s[4]=e[4],s[5]=e[7],s[6]=e[2],s[7]=e[5],s[8]=e[8];return this}setFromMat4(t){const e=t.data,s=this.data;return s[0]=e[0],s[1]=e[1],s[2]=e[2],s[3]=e[4],s[4]=e[5],s[5]=e[6],s[6]=e[8],s[7]=e[9],s[8]=e[10],this}setFromQuat(t){const e=t.x,s=t.y,i=t.z,n=t.w,r=e+e,a=s+s,o=i+i,l=e*r,h=e*a,c=e*o,d=s*a,u=s*o,f=i*o,p=n*r,m=n*a,_=n*o,g=this.data;return g[0]=1-(d+f),g[1]=h+_,g[2]=c-m,g[3]=h-_,g[4]=1-(l+f),g[5]=u+p,g[6]=c+m,g[7]=u-p,g[8]=1-(l+d),this}invertMat4(t){const e=t.data,s=e[0],i=e[1],n=e[2],r=e[4],a=e[5],o=e[6],l=e[8],h=e[9],c=e[10],d=c*a-o*h,u=-c*i+n*h,f=o*i-n*a,p=-c*r+o*l,m=c*s-n*l,_=-o*s+n*r,g=h*r-a*l,v=-h*s+i*l,S=a*s-i*r,y=s*d+i*p+n*g;if(0===y)this.setIdentity();else{const t=1/y,e=this.data;e[0]=d*t,e[1]=u*t,e[2]=f*t,e[3]=p*t,e[4]=m*t,e[5]=_*t,e[6]=g*t,e[7]=v*t,e[8]=S*t}return this}transformVector(t,e=new i.e){const s=this.data,{x:n,y:r,z:a}=t;return e.x=n*s[0]+r*s[3]+a*s[6],e.y=n*s[1]+r*s[4]+a*s[7],e.z=n*s[2]+r*s[5]+a*s[8],e}static{this.IDENTITY=Object.freeze(new n)}static{this.ZERO=Object.freeze((new n).set([0,0,0,0,0,0,0,0,0]))}}},97213:(t,e,s)=>{s.d(e,{J:()=>n});class i{constructor(t,e,s,i,n=!1){this._removed=!1,this.handler=t,this.name=e,this.callback=s,this.scope=i,this._once=n}off(){this._removed||this.handler.offByHandle(this)}on(t,e,s=this){return this.handler._addCallback(t,e,s,!1)}once(t,e,s=this){return this.handler._addCallback(t,e,s,!0)}set removed(t){t&&(this._removed=!0)}get removed(){return this._removed}toJSON(t){}}class n{initEventHandler(){this._callbacks=new Map,this._callbackActive=new Map}_addCallback(t,e,s,n){if(this._callbacks.has(t)||this._callbacks.set(t,[]),this._callbackActive.has(t)){const e=this._callbackActive.get(t);e&&e===this._callbacks.get(t)&&this._callbackActive.set(t,e.slice())}const r=new i(this,t,e,s,n);return this._callbacks.get(t).push(r),r}on(t,e,s=this){return this._addCallback(t,e,s,!1)}once(t,e,s=this){return this._addCallback(t,e,s,!0)}off(t,e,s){if(t)this._callbackActive.has(t)&&this._callbackActive.get(t)===this._callbacks.get(t)&&this._callbackActive.set(t,this._callbackActive.get(t).slice());else for(const[i,n]of this._callbackActive)this._callbacks.has(i)&&this._callbacks.get(i)===n&&this._callbackActive.set(i,n.slice());if(t)if(e){const i=this._callbacks.get(t);if(!i)return this;for(let t=0;t<i.length;t++)i[t].callback===e&&(s&&i[t].scope!==s||(i[t].removed=!0,i.splice(t,1),t--));0===i.length&&this._callbacks.delete(t)}else{const e=this._callbacks.get(t);if(e){for(let t=0;t<e.length;t++)e[t].removed=!0;this._callbacks.delete(t)}}else{for(const t of this._callbacks.values())for(let e=0;e<t.length;e++)t[e].removed=!0;this._callbacks.clear()}return this}offByHandle(t){const e=t.name;t.removed=!0,this._callbackActive.has(e)&&this._callbackActive.get(e)===this._callbacks.get(e)&&this._callbackActive.set(e,this._callbackActive.get(e).slice());const s=this._callbacks.get(e);if(!s)return this;const i=s.indexOf(t);return-1!==i&&(s.splice(i,1),0===s.length&&this._callbacks.delete(e)),this}fire(t,e,s,i,n,r,a,o,l){if(!t)return this;const h=this._callbacks.get(t);if(!h)return this;let c;this._callbackActive.has(t)?this._callbackActive.get(t)!==h&&(c=h.slice()):this._callbackActive.set(t,h);for(let d=0;(c||this._callbackActive.get(t))&&d<(c||this._callbackActive.get(t)).length;d++){const h=(c||this._callbackActive.get(t))[d];if(h.callback&&(h.callback.call(h.scope,e,s,i,n,r,a,o,l),h._once)){const e=this._callbacks.get(t),s=e?e.indexOf(h):-1;if(-1!==s){this._callbackActive.get(t)===e&&this._callbackActive.set(t,this._callbackActive.get(t).slice());const i=this._callbacks.get(t);if(!i)continue;i[s].removed=!0,i.splice(s,1),0===i.length&&this._callbacks.delete(t)}}}return c||this._callbackActive.delete(t),this}hasEvent(t){return!!this._callbacks.get(t)?.length}constructor(){this._callbacks=new Map,this._callbackActive=new Map}}},97275:(t,e,s)=>{s.d(e,{A:()=>i});var i="\n#extension GL_EXT_samplerless_texture_functions : require\n#ifndef outType_0\n#define outType_0 vec4\n#endif\n#ifndef outType_1\n#define outType_1 vec4\n#endif\n#ifndef outType_2\n#define outType_2 vec4\n#endif\n#ifndef outType_3\n#define outType_3 vec4\n#endif\n#ifndef outType_4\n#define outType_4 vec4\n#endif\n#ifndef outType_5\n#define outType_5 vec4\n#endif\n#ifndef outType_6\n#define outType_6 vec4\n#endif\n#ifndef outType_7\n#define outType_7 vec4\n#endif\nlayout(location = 0) out highp outType_0 pcFragColor0;\nlayout(location = 1) out highp outType_1 pcFragColor1;\nlayout(location = 2) out highp outType_2 pcFragColor2;\nlayout(location = 3) out highp outType_3 pcFragColor3;\nlayout(location = 4) out highp outType_4 pcFragColor4;\nlayout(location = 5) out highp outType_5 pcFragColor5;\nlayout(location = 6) out highp outType_6 pcFragColor6;\nlayout(location = 7) out highp outType_7 pcFragColor7;\n#define gl_FragColor pcFragColor0\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define texture2DBias(res, uv, bias) texture(sampler2D(res, res ## _sampler), uv, bias)\n#define texture2DLod(res, uv, lod) textureLod(sampler2D(res, res ## _sampler), uv, lod)\n#define textureCube(res, uv) texture(samplerCube(res, res ## _sampler), uv)\n#define textureCubeLod(res, uv, lod) textureLod(samplerCube(res, res ## _sampler), uv, lod)\n#define textureShadow(res, uv) textureLod(sampler2DShadow(res, res ## _sampler), uv, 0.0)\n#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)\n#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)\n#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead\n#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod\n#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead\n#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead\n#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead\n#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead\n#define SHADOWMAP_PASS(name) name, name ## _sampler\n#define SHADOWMAP_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_PASS(name) name, name ## _sampler\n#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT\n#define GL2\n#define WEBGPU\n"},98647:(t,e,s)=>{s.d(e,{W:()=>d});var i=s(88525),n=s(27351),r=s(85450);let a=0;const o=[],l=new Set;const h=[null,function(t,e){return t.drawOrder-e.drawOrder},function(t,e){const s=t._sortKeyForward,i=e._sortKeyForward;return s===i?e.mesh.id-t.mesh.id:i-s},function(t,e){return e._sortKeyDynamic-t._sortKeyDynamic},function(t,e){return t._sortKeyDynamic-e._sortKeyDynamic}];class c{constructor(){this.opaque=[],this.transparent=[]}}class d{constructor(t={}){this.meshInstances=[],this.meshInstancesSet=new Set,this.shadowCasters=[],this.shadowCastersSet=new Set,this._visibleInstances=new WeakMap,this._lights=[],this._lightsSet=new Set,this._clusteredLightsSet=new Set,this._splitLights=[[],[],[]],this._splitLightsDirty=!0,this.requiresLightCube=!1,this.cameras=[],this.camerasSet=new Set,this.gsplatPlacements=[],this.gsplatPlacementsDirty=!0,this._dirtyComposition=!1,void 0!==t.id?(this.id=t.id,a=Math.max(this.id+1,a)):this.id=a++,this.name=t.name,this._enabled=t.enabled??!0,this._refCounter=this._enabled?1:0,this.opaqueSortMode=t.opaqueSortMode??n.R9U,this.transparentSortMode=t.transparentSortMode??n.PDy,t.renderTarget&&(this.renderTarget=t.renderTarget),this._clearColorBuffer=!!t.clearColorBuffer,this._clearDepthBuffer=!!t.clearDepthBuffer,this._clearStencilBuffer=!!t.clearStencilBuffer,this.onEnable=t.onEnable,this.onDisable=t.onDisable,this._enabled&&this.onEnable&&this.onEnable(),this.customSortCallback=null,this.customCalculateSortValues=null,this._lightHash=0,this._lightHashDirty=!1,this._lightIdHash=0,this._lightIdHashDirty=!1,this._shaderVersion=-1}set enabled(t){t!==this._enabled&&(this._dirtyComposition=!0,this.gsplatPlacementsDirty=!0,this._enabled=t,t?(this.incrementCounter(),this.onEnable&&this.onEnable()):(this.decrementCounter(),this.onDisable&&this.onDisable()))}get enabled(){return this._enabled}set clearColorBuffer(t){this._clearColorBuffer=t,this._dirtyComposition=!0}get clearColorBuffer(){return this._clearColorBuffer}set clearDepthBuffer(t){this._clearDepthBuffer=t,this._dirtyComposition=!0}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencilBuffer(t){this._clearStencilBuffer=t,this._dirtyComposition=!0}get clearStencilBuffer(){return this._clearStencilBuffer}get hasClusteredLights(){return this._clusteredLightsSet.size>0}get clusteredLightsSet(){return this._clusteredLightsSet}incrementCounter(){0===this._refCounter&&(this._enabled=!0,this.onEnable&&this.onEnable()),this._refCounter++}decrementCounter(){if(1===this._refCounter)this._enabled=!1,this.onDisable&&this.onDisable();else if(0===this._refCounter)return;this._refCounter--}addGSplatPlacement(t){this.gsplatPlacements.includes(t)||(this.gsplatPlacements.push(t),this.gsplatPlacementsDirty=!0)}removeGSplatPlacement(t){const e=this.gsplatPlacements.indexOf(t);e>=0&&(this.gsplatPlacements.splice(e,1),this.gsplatPlacementsDirty=!0)}addMeshInstances(t,e){const s=this.meshInstances,i=this.meshInstancesSet;for(let n=0;n<t.length;n++){const e=t[n];i.has(e)||(s.push(e),i.add(e),l.add(e.material))}if(e||this.addShadowCasters(t),l.size>0){const t=this._shaderVersion;l.forEach(e=>{t>=0&&e._shaderVersion!==t&&(e.getShaderVariant!==r.i.prototype.getShaderVariant&&e.clearVariants(),e._shaderVersion=t)}),l.clear()}}removeMeshInstances(t,e){const s=this.meshInstances,i=this.meshInstancesSet;for(let n=0;n<t.length;n++){const e=t[n];if(i.has(e)){i.delete(e);const t=s.indexOf(e);t>=0&&s.splice(t,1)}}e||this.removeShadowCasters(t)}addShadowCasters(t){const e=this.shadowCasters,s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const n=t[i];n.castShadow&&!s.has(n)&&(s.add(n),e.push(n))}}removeShadowCasters(t){const e=this.shadowCasters,s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const n=t[i];if(s.has(n)){s.delete(n);const t=e.indexOf(n);t>=0&&e.splice(t,1)}}}clearMeshInstances(t=!1){this.meshInstances.length=0,this.meshInstancesSet.clear(),t||(this.shadowCasters.length=0,this.shadowCastersSet.clear())}markLightsDirty(){this._lightHashDirty=!0,this._lightIdHashDirty=!0,this._splitLightsDirty=!0}hasLight(t){return this._lightsSet.has(t)}addLight(t){const e=t.light;this._lightsSet.has(e)||(this._lightsSet.add(e),this._lights.push(e),this.markLightsDirty()),e.type!==n.kxh&&this._clusteredLightsSet.add(e)}removeLight(t){const e=t.light;this._lightsSet.has(e)&&(this._lightsSet.delete(e),this._lights.splice(this._lights.indexOf(e),1),this.markLightsDirty()),e.type!==n.kxh&&this._clusteredLightsSet.delete(e)}clearLights(){this._lightsSet.forEach(t=>t.removeLayer(this)),this._lightsSet.clear(),this._clusteredLightsSet.clear(),this._lights.length=0,this.markLightsDirty()}get splitLights(){if(this._splitLightsDirty){this._splitLightsDirty=!1;const t=this._splitLights;for(let s=0;s<t.length;s++)t[s].length=0;const e=this._lights;for(let s=0;s<e.length;s++){const i=e[s];i.enabled&&t[i._type].push(i)}for(let s=0;s<t.length;s++)t[s].sort((t,e)=>t.key-e.key)}return this._splitLights}evaluateLightHash(t,e,s){let r=0;const a=this._lights;for(let i=0;i<a.length;i++){const r=a[i].type!==n.kxh;(t&&r||e&&!r)&&o.push(s?a[i].id:a[i].key)}return o.length>0&&(o.sort(),r=(0,i.m)(o),o.length=0),r}getLightHash(t){return this._lightHashDirty&&(this._lightHashDirty=!1,this._lightHash=this.evaluateLightHash(!t,!0,!1)),this._lightHash}getLightIdHash(){return this._lightIdHashDirty&&(this._lightIdHashDirty=!1,this._lightIdHash=this.evaluateLightHash(!0,!1,!0)),this._lightIdHash}addCamera(t){this.camerasSet.has(t.camera)||(this.camerasSet.add(t.camera),this.cameras.push(t),this._dirtyComposition=!0)}removeCamera(t){if(this.camerasSet.has(t.camera)){this.camerasSet.delete(t.camera);const e=this.cameras.indexOf(t);this.cameras.splice(e,1),this._dirtyComposition=!0}}clearCameras(){this.cameras.length=0,this.camerasSet.clear(),this._dirtyComposition=!0}_calculateSortDistances(t,e,s){const i=t.length,{x:n,y:r,z:a}=e,{x:o,y:l,z:h}=s;for(let c=0;c<i;c++){const i=t[c];let d;if(i.calculateSortDistance)d=i.calculateSortDistance(i,e,s);else{const t=i.aabb.center;d=(t.x-n)*o+(t.y-r)*l+(t.z-a)*h}const u=1e9*i._drawBucket;i._sortKeyDynamic=u+d}}getCulledInstances(t){let e=this._visibleInstances.get(t);return e||(e=new c,this._visibleInstances.set(t,e)),e}sortVisible(t,e){const s=e?this.transparentSortMode:this.opaqueSortMode;if(s===n.lUT)return;const i=this.getCulledInstances(t),r=e?i.transparent:i.opaque,a=t.node;if(s===n.eQO){const t=a.getPosition(),e=a.forward;this.customCalculateSortValues&&this.customCalculateSortValues(r,r.length,t,e),this.customSortCallback&&r.sort(this.customSortCallback)}else{if(s===n.PDy||s===n.rGA){const t=a.getPosition(),e=a.forward;this._calculateSortDistances(r,t,e)}r.sort(h[s])}}}}}]);