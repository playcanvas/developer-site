"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[51639],{11470:(e,a,t)=>{t.d(a,{A:()=>N});var n=t(96540),r=t(34164),s=t(17559),o=t(23104),c=t(56347),l=t(205),i=t(57485),d=t(31682),u=t(70679);function h(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:a,children:t}=e;return(0,n.useMemo)(()=>{const e=a??function(e){return h(e).map(({props:{value:e,label:a,attributes:t,default:n}})=>({value:e,label:a,attributes:t,default:n}))}(t);return function(e){const a=(0,d.XI)(e,(e,a)=>e.value===a.value);if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[a,t])}function m({value:e,tabValues:a}){return a.some(a=>a.value===e)}function f({queryString:e=!1,groupId:a}){const t=(0,c.W6)(),r=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,i.aZ)(r),(0,n.useCallback)(e=>{if(!r)return;const a=new URLSearchParams(t.location.search);a.set(r,e),t.replace({...t.location,search:a.toString()})},[r,t])]}function v(e){const{defaultValue:a,queryString:t=!1,groupId:r}=e,s=p(e),[o,c]=(0,n.useState)(()=>function({defaultValue:e,tabValues:a}){if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=a.find(e=>e.default)??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:a,tabValues:s})),[i,d]=f({queryString:t,groupId:r}),[h,v]=function({groupId:e}){const a=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,r]=(0,u.Dv)(a);return[t,(0,n.useCallback)(e=>{a&&r.set(e)},[a,r])]}({groupId:r}),b=(()=>{const e=i??h;return m({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{b&&c(b)},[b]);return{selectedValue:o,selectValue:(0,n.useCallback)(e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),v(e)},[d,v,s]),tabValues:s}}var b=t(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function j({className:e,block:a,selectedValue:t,selectValue:n,tabValues:s}){const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),i=e=>{const a=e.currentTarget,r=c.indexOf(a),o=s[r].value;o!==t&&(l(a),n(o))},d=e=>{let a=null;switch(e.key){case"Enter":i(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},e),children:s.map(({value:e,label:a,attributes:n})=>(0,g.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{c.push(e)},onKeyDown:d,onClick:i,...n,className:(0,r.A)("tabs__item",y.tabItem,n?.className,{"tabs__item--active":t===e}),children:a??e},e))})}function x({lazy:e,children:a,selectedValue:t}){const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:s.map((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==t}))})}function S(e){const a=v(e);return(0,g.jsxs)("div",{className:(0,r.A)(s.G.tabs.container,"tabs-container",y.tabList),children:[(0,g.jsx)(j,{...a,...e}),(0,g.jsx)(x,{...a,...e})]})}function N(e){const a=(0,b.A)();return(0,g.jsx)(S,{...e,children:h(e.children)},String(a))}},19365:(e,a,t)=>{t.d(a,{A:()=>o});t(96540);var n=t(34164);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function o({children:e,hidden:a,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,t),hidden:a,children:e})}},28453:(e,a,t)=>{t.d(a,{R:()=>o,x:()=>c});var n=t(96540);const r={},s=n.createContext(r);function o(e){const a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:a},e.children)}},48198:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"tutorials/loading-json","title":"Loading JSON Data","description":"This project shows you how to load JSON data in two ways. First, from an asset in the project. Second, over HTTP from a remote server.","source":"@site/docs/tutorials/loading-json.md","sourceDirName":"tutorials","slug":"/tutorials/loading-json","permalink":"/tutorials/loading-json","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/tutorials/loading-json.md","tags":[{"inline":true,"label":"loading","permalink":"/tags/loading"}],"version":"current","frontMatter":{"title":"Loading JSON Data","tags":["loading"],"thumb":"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405827/G8YF23-image-75.jpg"},"sidebar":"tutorialsSidebar","previous":{"title":"Loading glTF GLBs","permalink":"/tutorials/loading-gltf-glbs"},"next":{"title":"Locking the mouse","permalink":"/tutorials/locking-the-mouse"}}');var r=t(74848),s=t(28453),o=t(11470),c=t(19365);const l={title:"Loading JSON Data",tags:["loading"],thumb:"https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/405827/G8YF23-image-75.jpg"},i=void 0,d={},u=[{value:"Loading JSON from an asset",id:"loading-json-from-an-asset",level:2},{value:"Loading JSON from a remote server",id:"loading-json-from-a-remote-server",level:2}];function h(e){const a={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:"iframe-container",children:(0,r.jsx)("iframe",{src:"https://playcanv.as/p/cHnXIXoN/",title:"Loading JSON Data",allow:"camera; microphone; xr-spatial-tracking; fullscreen",allowfullscreen:!0})}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://playcanvas.com/project/405827",children:"This project"})," shows you how to load JSON data in two ways. First, from an asset in the project. Second, over HTTP from a remote server."]}),"\n",(0,r.jsx)(a.h2,{id:"loading-json-from-an-asset",children:"Loading JSON from an asset"}),"\n",(0,r.jsxs)(o.A,{defaultValue:"classic",groupId:"script-code",children:[(0,r.jsx)(c.A,{value:"esm",label:"ESM",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"\n/**\n * @attribute\n * @title Character Data\n * @type {Asset}\n * @resource json\n */\ncharacterData = null;\n\nparseCharacterData(data) {\n    const names = [];\n\n    // Read the character data from the JSON asset and return a list of names\n    const characters = data.characters;\n    for (let character of characters) {\n        names.push(character.firstName + ' ' + character.lastName);\n    }\n\n    return names;\n}\n\n//...\n\n// Get JSON data from a project asset\nconst characterData = this.characterData.resource;\n\n// Parse JSON data\nconst names = this.parseCharacterData(characterData);\n"})})}),(0,r.jsx)(c.A,{value:"classic",label:"Classic",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"Game.attributes.add('characterData', {\n    type: 'asset',\n    assetType: 'json'\n});\n\n//...\n\nGame.prototype.parseCharacterData = function (data) {\n    var names = [];\n\n    // Read the character data from the JSON asset return a list of names\n    var characters = data.characters;\n    for (var i = 0; i < characters.length; i++) {\n        var character = characters[i];\n        names.push(character.firstName + ' ' + character.lastName);\n    }\n\n    return names;\n};\n\n//...\n\n// Get JSON data from a project asset\nvar characterData = this.characterData.resource;\n\n// Parse JSON data\nvar names = this.parseCharacterData(characterData);\n"})})})]}),"\n",(0,r.jsxs)(a.p,{children:["You can see in the code above that all you need to do to load JSON data from an asset in your project is to use a Script Attribute of type 'asset' or to retrieve the asset from the asset registry, then access the ",(0,r.jsx)(a.code,{children:"resource"})," property. For an asset of type ",(0,r.jsx)(a.code,{children:"json"})," the data will already be parsed into a standard javascript object when you access the ",(0,r.jsx)(a.code,{children:"resource"})," property."]}),"\n",(0,r.jsxs)(a.p,{children:["Once you have the javascript object you can access the data as normal. For example, looping through properties as in ",(0,r.jsx)(a.code,{children:"parseCharacterData"}),"."]}),"\n",(0,r.jsx)(a.h2,{id:"loading-json-from-a-remote-server",children:"Loading JSON from a remote server"}),"\n",(0,r.jsxs)(o.A,{defaultValue:"classic",groupId:"script-code",children:[(0,r.jsx)(c.A,{value:"esm",label:"ESM",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'async function loadJsonFromRemote(url, callback) {\n    const res = await fetch(url);\n    const json = await res.json();\n    callback(json);\n}\n\n//...\n\n// load JSON from a remote server\nloadJsonFromRemote("https://api.github.com/", (data) => {\n    // display JSON data from remote server\n    el = document.querySelector("#xhr-json");\n    el.textContent = JSON.stringify(data, null, 4);\n});\n'})})}),(0,r.jsx)(c.A,{value:"classic",label:"Classic",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'Game.prototype.loadJsonFromRemote = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener("load", function () {\n        callback(JSON.parse(this.response));\n    });\n    xhr.open("GET", url);\n    xhr.send();\n};\n\n//...\n\n// load JSON from a remote server\nthis.loadJsonFromRemote("https://api.github.com/", function (data) {\n    // display JSON data from remote server\n    el = document.querySelector("#xhr-json");\n    el.textContent = JSON.stringify(data, null, 4);\n});\n'})})})]}),"\n",(0,r.jsx)(a.p,{children:"In this code we are using the XMLHttpRequest object (which is part of the standard web browser API) to request JSON data from a URL, in this case the Github API."}),"\n",(0,r.jsxs)(a.p,{children:["After receiving the ",(0,r.jsx)(a.code,{children:'"load"'})," event we parse the JSON data using ",(0,r.jsx)(a.code,{children:"JSON.parse"})," (another part of the standard web browser API) and return the data via the ",(0,r.jsx)(a.code,{children:"callback"})," function."]}),"\n",(0,r.jsxs)(a.p,{children:["Note, that the call to ",(0,r.jsx)(a.code,{children:"loadJsonFromRemote"})," is ",(0,r.jsx)(a.strong,{children:"asynchronous"}),"."]}),"\n",(0,r.jsx)(a.p,{children:"Here is the full code listing:"}),"\n",(0,r.jsxs)(o.A,{defaultValue:"classic",groupId:"script-code",children:[(0,r.jsx)(c.A,{value:"esm",label:"ESM",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:'import { Script, createStyle } from \'playcanvas\';\n\nexport class Game extends Script {\n    static scriptName = "game";\n\n    /**\n     * @attribute\n     * @title Display\n     * @type {Asset}\n     * @resource html\n     */\n    display = null;\n\n    /**\n     * @attribute\n     * @title Style\n     * @type {Asset}\n     * @resource css\n     */\n    style = null;\n\n    /**\n     * @attribute\n     * @title Character Data\n     * @type {Asset}\n     * @resource json\n     */\n    characterData = null;\n\n    // initialize code called once per entity\n    initialize() {\n        this.initDisplay();\n\n        // Get JSON data from a project asset\n        const characterData = this.characterData.resource;\n\n        // Parse JSON data\n        const names = this.parseCharacterData(characterData);\n\n        // display character names\n        let el = document.querySelector("#character-name");\n        if (el) el.textContent = names.join(", ");\n\n        // display JSON data from asset\n        el = document.querySelector("#asset-json");\n        if (el) el.textContent = JSON.stringify(characterData, null, 4);\n\n        // load JSON from a remote server\n        this.loadJsonFromRemote("https://api.github.com/", (data) => {\n            // display JSON data from remote server\n            el = document.querySelector("#xhr-json");\n            if (el) el.textContent = JSON.stringify(data, null, 4);\n        });\n    }\n\n    initDisplay() {\n        const el = createStyle(this.style.resource);\n        document.head.appendChild(el);\n\n        const div = document.createElement("div");\n        div.setAttribute("id", "container");\n        div.innerHTML = this.display.resource;\n        document.body.appendChild(div);\n    }\n\n    parseCharacterData(data) {\n        const names = [];\n\n        // Read the character data from the JSON asset and return a list of names\n        const characters = data.characters;\n        for (let character of characters) {\n            names.push(character.firstName + \' \' + character.lastName);\n        }\n\n        return names;\n    }\n\n    loadJsonFromRemote(url, callback) {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener("load", function() {\n            callback(JSON.parse(this.responseText));\n        });\n        xhr.open("GET", url);\n        xhr.send();\n    }\n}\n'})})}),(0,r.jsx)(c.A,{value:"classic",label:"Classic",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",children:"var Game = pc.createScript('game');\n\nGame.attributes.add('display', {\n    type: 'asset',\n    assetType: 'html'\n});\n\nGame.attributes.add('style', {\n    type: 'asset',\n    assetType: 'css'\n});\n\n// Create a script attribute to enable the drag and drop of a JSON asset containing character data\nGame.attributes.add('characterData', {\n    type: 'asset',\n    assetType: 'json'\n});\n\n// initialize code called once per entity\nGame.prototype.initialize = function() {\n    this.initDisplay();\n\n    var el;\n\n    // Get JSON data from a project asset\n    var characterData = this.characterData.resource;\n\n    // Parse JSON data\n    var names = this.parseCharacterData(characterData);\n\n    // display character names\n    el = document.querySelector(\"#character-name\");\n    el.textContent = names.join(\", \");\n\n    // display JSON data from asset\n    el = document.querySelector(\"#asset-json\");\n    el.textContent = JSON.stringify(characterData, null, 4);\n\n    // load JSON from a remote server\n    this.loadJsonFromRemote(\"https://api.github.com/\", function (data) {\n        // display JSON data from remote server\n        el = document.querySelector(\"#xhr-json\");\n        el.textContent = JSON.stringify(data, null, 4);\n    });\n};\n\nGame.prototype.initDisplay = function () {\n    var el = pc.createStyle(this.style.resource);\n    document.head.appendChild(el);\n\n    var div = document.createElement(\"div\");\n    div.setAttribute(\"id\", \"container\");\n    div.innerHTML = this.display.resource;\n    document.body.appendChild(div);\n};\n\nGame.prototype.parseCharacterData = function (data) {\n    var names = [];\n\n    // Read the character data from the JSON asset return a list of names\n    var characters = data.characters;\n    for (var i = 0; i < characters.length; i++) {\n        var character = characters[i];\n        names.push(character.firstName + ' ' + character.lastName);\n    }\n\n    return names;\n};\n\nGame.prototype.loadJsonFromRemote = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener(\"load\", function () {\n        callback(JSON.parse(this.response));\n    });\n    xhr.open(\"GET\", url);\n    xhr.send();\n};\n"})})})]}),"\n",(0,r.jsxs)(a.p,{children:["Try ",(0,r.jsx)(a.a,{href:"https://playcanvas.com/project/405827",children:"the project"})," for yourself."]})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);