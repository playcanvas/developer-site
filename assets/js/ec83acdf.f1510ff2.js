"use strict";(globalThis.webpackChunkdeveloper_playcanvas_com=globalThis.webpackChunkdeveloper_playcanvas_com||[]).push([[16794],{7184:(e,s,n)=>{n.d(s,{C:()=>S,G:()=>P});var i=n(11470),a=n(19365),t=n(59849),o=n(96540),r=n(95293),c=n(9764),l=n(18676),d=n(58817),h=n(19748),p=n(83395),u=n(43025),y=n(10977),m=n(7306),x=n(68869),g=n(78692),j=n(8939),f=n(40050),v=n(93953),b=n(27351),w=n(74848);const C="// \u2191 imports hidden",P=({code:e,label:s,filename:n,language:r="jsx",showDemo:l=!1,showViewSourceButton:d=!0,showControls:h=!0,children:p})=>{const[u,y]=(0,o.useState)(0);if(!p||!e)return console.error("CodeExample: code and children are required"),null;return(0,w.jsxs)(i.A,{defaultValue:u>0?"Code":l?"Demo":"Code",children:[(0,w.jsx)(a.A,{value:"Demo",children:(0,w.jsxs)("div",{className:"code-example-demo",children:[p,d&&(0,w.jsxs)("div",{className:"code-example-demo-footer",children:[s," - ",(0,w.jsx)("a",{href:"#",onClick:e=>{e.preventDefault(),y(e=>e+1)},children:"View Code"})]}),(0,w.jsx)("div",{className:"code-example-controls",children:(0,w.jsx)(c.XA,{fill:!0,hidden:!1===h})})]})}),(0,w.jsx)(a.A,{value:"Code",children:(0,w.jsx)(t.A,{language:r,title:n,children:e.includes(C)?C+e.split(C)[1]:e})})]},u)},k=e=>{const{width:s=8,depth:n=8,intensity:i=.75}=e,a=(0,o.useMemo)(()=>new v.e(s,1,n),[s,n]);return(0,w.jsxs)(l.w,{children:[(0,w.jsx)(h.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:b.au1,shadowUpdateMode:b.M5l,vsmBlurSize:8,shadowIntensity:i,intensity:0}),(0,w.jsx)(p.e,{script:j.X,intensity:i,scale:a})]})},S=({children:e,useLight:s=!0,useControls:n=!1,useGrid:i=!1,useShadow:a=!1,camera:t=[0,0,10],sceneOffset:c=[0,-.501,0],exposure:h=1})=>{const{colorMode:j}=(0,r.G)(),v=(0,y.n)(),{asset:b}=(0,m.yj)("/assets/helipad.png"),C="dark"===j?"#2a2a2a":"#e4e0e0",[P,S]=(0,o.useState)(!1),[A,M]=(0,o.useState)(!1),R=(0,o.useCallback)(()=>S(!0),[]),D=(0,o.useCallback)(()=>S(!1),[]),E=(0,o.useCallback)(()=>M(!0),[]),B=(0,o.useCallback)(()=>M(!1),[]);return(0,o.useEffect)(()=>{const e=v.graphicsDevice.canvas;e.style.cursor=P?"grabbing":A?"grab":"default"},[P,A,v]),(0,o.useEffect)(()=>{const e=()=>S(!1);return v.graphicsDevice.canvas.addEventListener("pointerup",e),()=>v.graphicsDevice?.canvas.removeEventListener("pointerup",e)},[v]),(0,w.jsxs)(l.w,{children:[(0,w.jsxs)(l.w,{name:"camera",position:t,children:[(0,w.jsx)(d.i,{clearColor:C,renderSceneColorMap:!0}),n&&(0,w.jsx)(p.e,{script:x.a,enableFly:!1,pitchRange:new f.Z(-90,-5)})]}),s&&(0,w.jsx)(u.O,{envAtlas:b,showSkybox:!1,exposure:h}),i&&(0,w.jsx)(l.w,{name:"grid",scale:[1e3,1,1e3],position:[0,-.5,0],children:(0,w.jsx)(p.e,{script:g.x})}),a&&(0,w.jsx)(l.w,{position:c,children:(0,w.jsx)(k,{})}),(0,w.jsx)(l.w,{onPointerOver:E,onPointerOut:B,onPointerDown:R,onPointerUp:D,children:e})]})}},24421:(e,s,n)=>{n.d(s,{A:()=>h});var i=n(18676),a=n(19748),t=n(83395),o=n(93953),r=n(27351),c=n(8939),l=n(96540),d=n(74848);const h=e=>{const{width:s=2,depth:n=2,intensity:h=.75}=e,p=(0,l.useMemo)(()=>new o.e(s,1,n),[s,n]);return(0,d.jsxs)(i.w,{position:[0,.001,0],children:[(0,d.jsx)(a.v,{type:"directional",castShadows:!0,normalOffsetBias:0,shadowBias:0,shadowDistance:16,shadowResolution:1024,shadowType:r.au1,shadowUpdateMode:r.M5l,vsmBlurSize:8,shadowIntensity:h,intensity:0}),(0,d.jsx)(t.e,{script:c.X,intensity:h,scale:p})]})}},39944:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>j,contentTitle:()=>g,default:()=>b,frontMatter:()=>x,metadata:()=>i,toc:()=>f});const i=JSON.parse('{"id":"user-manual/playcanvas-react/guide/physics","title":"Physics","description":"PlayCanvas ships with a robust physics system. This enables realistic simulations of objects in 3D space, including gravity, collisions, forces and constraints. The physics system is powered by the ammo.js physics engine.","source":"@site/docs/user-manual/playcanvas-react/guide/physics.mdx","sourceDirName":"user-manual/playcanvas-react/guide","slug":"/user-manual/playcanvas-react/guide/physics","permalink":"/user-manual/playcanvas-react/guide/physics","draft":false,"unlisted":false,"editUrl":"https://github.com/playcanvas/developer.playcanvas.com/tree/dev/docs/user-manual/playcanvas-react/guide/physics.mdx","tags":[],"version":"current","frontMatter":{"title":"Physics"},"sidebar":"userManualSidebar","previous":{"title":"Loading Assets","permalink":"/user-manual/playcanvas-react/guide/loading-assets"},"next":{"title":"Materials","permalink":"/user-manual/playcanvas-react/guide/materials"}}');var a=n(74848),t=n(28453),o=n(7184),r=n(78264),c=n(18676),l=n(8615),d=n(22084),h=n(16230),p=n(30885),u=n(59752);const y=()=>{const e=(0,p.R)({diffuse:"red"}),s=(0,p.R)({diffuse:"#4ecdc4"});return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(c.w,{name:"ground",position:[0,-.6,0],scale:[100,.1,100],children:[(0,a.jsx)(l.U,{type:"static",friction:.5}),(0,a.jsx)(d.F,{type:"box",halfExtents:[50,.1,50]})]}),(0,a.jsxs)(c.w,{name:"sphere",position:[0,6,0],children:[(0,a.jsx)(l.U,{type:"dynamic",mass:1}),(0,a.jsx)(d.F,{type:"sphere"}),(0,a.jsx)(h.d,{type:"sphere",material:e})]}),(0,a.jsxs)(c.w,{name:"box",position:[.1,8,0],rotation:[u.D.random(0,360),u.D.random(0,360),u.D.random(0,360)],children:[(0,a.jsx)(l.U,{type:"dynamic",mass:2}),(0,a.jsx)(d.F,{type:"box"}),(0,a.jsx)(h.d,{type:"box",material:s})]})]})},m='import { Entity } from \'@playcanvas/react\';\nimport { RigidBody, Collision, Render } from \'@playcanvas/react/components\';\nimport { useMaterial } from \'@playcanvas/react/hooks\';\nimport { math } from \'playcanvas\';\n\n// \u2191 imports hidden\nexport const BasicPhysics = () => {\n\n  const sphereMaterial = useMaterial({ diffuse: \'red\' });\n  const boxMaterial = useMaterial({ diffuse: \'#4ecdc4\' });\n\n  return (<>\n    {/* Ground (static) */}\n    <Entity name="ground" position={[0, -0.6, 0]} scale={[100, 0.1, 100]}>\n      <RigidBody type="static" friction={0.5} />\n      <Collision type="box" halfExtents={[50, 0.1, 50]} />\n    </Entity>\n\n    {/* Falling sphere */}\n    <Entity name="sphere" position={[0, 6, 0]}>\n      <RigidBody type="dynamic" mass={1} />\n      <Collision type="sphere" />\n      <Render type="sphere" material={sphereMaterial} />\n    </Entity>\n\n    {/* Falling box */}\n    <Entity name="box" \n      position={[0.1, 8, 0]} \n      rotation={[math.random(0, 360), math.random(0, 360), math.random(0, 360)]}\n    >\n      <RigidBody type="dynamic" mass={2} />\n      <Collision type="box" />\n      <Render type="box" material={boxMaterial} />\n    </Entity>\n  </>);\n};\n',x={title:"Physics"},g=void 0,j={},f=[{value:"Getting started",id:"getting-started",level:2},{value:"Usage",id:"usage",level:2},{value:"Physics Properties",id:"physics-properties",level:3},{value:"The <code>usePhysics</code> Hook",id:"the-usephysics-hook",level:2}];function v(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:["PlayCanvas ships with a robust ",(0,a.jsx)(s.a,{href:"/user-manual/physics/",children:"physics system"}),". This enables realistic simulations of objects in 3D space, including gravity, collisions, forces and constraints. The physics system is powered by the ",(0,a.jsx)(s.a,{href:"https://github.com/kripken/ammo.js",children:"ammo.js"})," physics engine."]}),"\n",(0,a.jsx)(s.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,a.jsx)(s.p,{children:"PlayCanvas uses ammo.js as the physics engine. ammo.js is a WASM library and in React it's lazy loaded. This means you're only shipping ammo.js when you need it, helping you keep your bundle size down. It also means you can render something before ammo.js has loaded, or maybe you only need physics as a result of some user interaction. In any case, lazy loading ammo.js means you can get your content rendering fast."}),"\n",(0,a.jsxs)(s.p,{children:["To use the physics system, you'll need to install the ",(0,a.jsx)(s.code,{children:"sync-ammo"})," dependency."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"npm install sync-ammo\n"})}),"\n",(0,a.jsxs)(s.p,{children:["You'll also need to add the ",(0,a.jsx)(s.code,{children:"<Application usePhysics/>"})," prop to your root ",(0,a.jsx)(s.code,{children:"<Application/>"})," component."]}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["PlayCanvas React will only load ammo.js when you have the ",(0,a.jsx)(s.code,{children:"<Application usePhysics/>"})," prop set."]})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:'<Application usePhysics>\n  <Entity>\n    <Rigidbody type="box" />\n  </Entity>\n</Application>\n'})}),"\n",(0,a.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(s.p,{children:["You allow entities to participate in physics simulation by adding a ",(0,a.jsx)(s.code,{children:"RigidBody"})," and ",(0,a.jsx)(s.code,{children:"Collision"})," component to them. In the example below, we're creating a static ground, a falling sphere and a falling box."]}),"\n",(0,a.jsx)(o.G,{label:"Objects falling under gravity",filename:"basic-physics.jsx",code:m,showDemo:!0,children:(0,a.jsx)(r.l,{usePhysics:!0,children:(0,a.jsx)(o.C,{camera:[4,3,4],useGrid:!0,useControls:!0,useShadow:!0,children:(0,a.jsx)(y,{})})})}),"\n",(0,a.jsx)(s.h3,{id:"physics-properties",children:"Physics Properties"}),"\n",(0,a.jsxs)(s.p,{children:["You can customize physics behavior by changing the various properties of the ",(0,a.jsx)(s.a,{href:"../../api/rigidbody",children:(0,a.jsx)(s.code,{children:"<RigidBody/>"})})," and ",(0,a.jsx)(s.a,{href:"../../api/collision",children:(0,a.jsx)(s.code,{children:"<Collision/>"})})," components. Check out the ",(0,a.jsx)(s.a,{href:"/user-manual/physics/",children:"Physics documentation"})," for more information."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:'<RigidBody \n  type="dynamic"\n  mass={1}                // Object mass\n  linearDamping={0.1}     // Air resistance for movement\n  angularDamping={0.1}    // Air resistance for rotation\n  friction={0.5}          // Surface friction\n  restitution={0.3}       // Bounciness (0 = no bounce, 1 = perfect bounce)\n/>\n'})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:'<Collision \n  type="box"\n  halfExtents={[1, 1, 1]} // Size for box collision\n  radius={0.5}            // Radius for sphere/cylinder collision\n  height={2}              // Height for capsule/cylinder collision\n/>\n'})}),"\n",(0,a.jsxs)(s.h2,{id:"the-usephysics-hook",children:["The ",(0,a.jsx)(s.code,{children:"usePhysics"})," Hook"]}),"\n",(0,a.jsxs)(s.p,{children:["Because the physics engine is lazily instantiated you'll want to handle this in a reactive way. This is where the ",(0,a.jsx)(s.code,{children:"usePhysics"})," hook comes in."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-jsx",children:"import { usePhysics } from '@playcanvas/react/hooks';\n\nconst PhysicsStatus = () => {\n  const { isPhysicsEnabled, isPhysicsLoaded, physicsError } = usePhysics();\n  // ...\n};\n"})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"usePhysics"})," hook provides information about the physics engine state. You can read more about the ",(0,a.jsx)(s.a,{href:"../../api/hooks/use-physics",children:(0,a.jsx)(s.code,{children:"usePhysics"})})," hook in the API reference."]}),"\n",(0,a.jsxs)(s.p,{children:["For more detailed information about PlayCanvas physics, see the ",(0,a.jsx)(s.a,{href:"/user-manual/physics/",children:"PlayCanvas physics"})," docs."]})]})}function b(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(v,{...e})}):v(e)}},49801:(e,s,n)=>{n.d(s,{A:()=>r});var i=n(18676),a=n(83395),t=n(78692),o=n(74848);const r=({...e})=>(0,o.jsx)(i.w,{scale:[1e3,1,1e3],children:(0,o.jsx)(a.e,{script:t.x,...e})})},53558:(e,s,n)=>{n.d(s,{A:()=>j});var i=n(96540),a=n(68869),t=n(8939),o=n(78692),r=n(14007),c=n(25303),l=n(34363),d=n(53512),h=n(49801),p=n(24421),u=n(85593),y=n(83395),m=n(83171),x=n(74848);const g=e=>(0,x.jsx)(y.e,{script:m.d,...e}),j={React:i,...i,...r,...c,...l,...d,Grid:h.A,ShadowCatcher:p.A,GridScript:o.x,ShadowCatcherScript:t.X,StaticPostEffects:u.A,AutoRotate:g,CameraControls:a.a}},85593:(e,s,n)=>{n.d(s,{A:()=>o});var i=n(83395),a=n(15817),t=n(74848);const o=e=>{const s={lighting:{exposure:1.21,skyBoxIntensity:1.02},rendering:{renderFormat:18,renderTargetScale:1,sharpness:0,samples:4,toneMapping:4,fog:"none",fogColor:{r:0,g:0,b:0,a:1},fogRange:[0,100],fogDensity:.01,renderFormatFallback0:12,renderFormatFallback1:14,sceneColorMap:!1,sceneDepthMap:!1,fogStart:0,fogEnd:100},bloom:{enabled:!0,intensity:.1,lastMipLevel:1},grading:{enabled:!0,brightness:.83,contrast:1.1,saturation:1.2,tint:{r:1,g:.9333333333333333,b:.8666666666666667,a:1}},vignette:{enabled:!0,intensity:1,inner:.25,outer:1.52,curvature:.78},fringing:{enabled:!0,intensity:10},...e};return(0,t.jsx)(i.e,{script:a.P,...s})}}}]);